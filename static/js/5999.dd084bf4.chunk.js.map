{"version":3,"file":"static/js/5999.dd084bf4.chunk.js","mappings":"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","sources":["app/Display/analytics-new/content/components/leaderBoard.js"],"sourcesContent":["import React, { Suspense, useState } from \"react\";\r\nimport { Card, CardBody, Table } from \"react-bootstrap\";\r\nimport ConnectButton from \"../../layout/common/connectButton\";\r\nimport AuthorInfo from \"./authorInfo\";\r\nimport NoData from \"../../layout/common/noData\";\r\nimport { getwallRecordMostActiveUsersMore } from \"../../../../../actions/analyticsNew\";\r\nimport SectionHeading from \"../../layout/common/sectionHeading\";\r\nimport MultiPostMedia from \"../../layout/common/multiPostMedia\";\r\nimport PopupModal from \"../../layout/common/popup/popupModal\";\r\nimport { getwallRecordMostActiveUsersMoreDashboad } from \"../../../../../actions/display/dashboardActions\";\r\nimport { kFormatter } from \"../../../../../utils\";\r\nconst LeaderbordSkeleton = React.lazy(() =>\r\n  import(\"../../layout/skeleton/leaderbordSkeleton\")\r\n);\r\n\r\nconst AuthorpostsPopup = React.lazy(() =>\r\n  import(\"../../layout/popup/authorpostsPopup\")\r\n);\r\n\r\n const LeaderBoard = (props) => {\r\n\r\n  const { leaderBoard, loader, selectedWallFeed, isDashboard } = props;\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handlePopup = event => {  \r\n    setShow(event)\r\n  }\r\n\r\n\r\n  return (\r\n   <>\r\n    <Card className={`sw-card-custom gutter-b card-shadow mb-5 ${isDashboard ? 'h-100' : 'an-leaderBoard-height'} mb-0`}>\r\n      <SectionHeading title={'Leaderboard'} total={leaderBoard && Object.keys(leaderBoard).length ? leaderBoard.total : 0} selectedWallFeed={selectedWallFeed} handlePopup={handlePopup} />\r\n      <CardBody className=\"py-5 px-0\">\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: \"10%\" }}>\r\n                S No.\r\n              </th>\r\n              <th style={{ width: \"25%\" }}>\r\n                Name\r\n              </th>\r\n              <th style={{ width: \"15%\" }}>\r\n                Posts\r\n              </th>\r\n              <th style={{ width: \"20%\" }}>\r\n                Recent Posts\r\n              </th>\r\n              <th style={{ width: \"15%\" }}></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n\r\n            { loader ? <Suspense fallback={<></>}> <LeaderbordSkeleton isDashboard={isDashboard}/> </Suspense> : leaderBoard && Object.keys(leaderBoard).length\r\n              ? leaderBoard.data.map((data,index) => {\r\n                  return (\r\n                    <tr className=\"border-top\">\r\n                      <td>\r\n                        <strong>{index+1}.</strong>\r\n                      </td>\r\n                      <td> \r\n                        <AuthorInfo \r\n                            picture={data.image} \r\n                            authorUsername={data.author.username} \r\n                            authorName={data.author.name} \r\n                            isIcon={data.network.icon} \r\n                            link={data.links}  \r\n                            networkId={data.network.id} \r\n                          />\r\n                      </td>\r\n                      <td>\r\n                        <strong>{kFormatter(Math.round(data.postCount))}</strong>\r\n                      </td>\r\n                      <td>\r\n                        <MultiPostMedia isDashboard={isDashboard} postsData={data.postsData} /> \r\n                      </td>\r\n                      <td>\r\n                        <ConnectButton link={data.links} network={data.network.id}/>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : \r\n              <>\r\n              <NoData status={1} col={5}/>\r\n              </>\r\n             }\r\n          </tbody>\r\n        </Table>\r\n      </CardBody>\r\n     </Card>\r\n\r\n   {leaderBoard && Object.keys(leaderBoard).length && leaderBoard.total>5 ? \r\n    <PopupModal size={'xl'} showHide={show} handlePopup={handlePopup} title={'Leader Board'}>\r\n      <Suspense fallback={<></>}>\r\n         <AuthorpostsPopup total={leaderBoard.total}  hideFollwers={1} moreData={isDashboard ? getwallRecordMostActiveUsersMoreDashboad : getwallRecordMostActiveUsersMore} {...props} />\r\n       </Suspense>  \r\n    </PopupModal> : null }\r\n    </>    \r\n  );\r\n};\r\n\r\nexport default React.memo(LeaderBoard);"],"names":["LeaderbordSkeleton","React","AuthorpostsPopup","LeaderBoard","props","leaderBoard","loader","selectedWallFeed","isDashboard","show","setShow","useState","handlePopup","event","_jsxs","_Fragment","children","Card","className","_jsx","SectionHeading","title","total","Object","keys","length","CardBody","Table","responsive","style","width","Suspense","fallback","data","map","index","AuthorInfo","picture","image","authorUsername","author","username","authorName","name","isIcon","network","icon","link","links","networkId","id","kFormatter","Math","round","postCount","MultiPostMedia","postsData","ConnectButton","NoData","status","col","PopupModal","size","showHide","hideFollwers","moreData","getwallRecordMostActiveUsersMoreDashboad","getwallRecordMostActiveUsersMore"],"sourceRoot":""}