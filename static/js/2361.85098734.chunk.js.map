{"version":3,"file":"static/js/2361.85098734.chunk.js","mappings":"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","sources":["app/Layouts/Main/Moderation/ContentModal/Elements/ModalMedia.js","app/Layouts/Main/Moderation/UgcRights/Elements/CopyUrl.js","actions/tinyUrlAction.js","app/Layouts/Main/Moderation/UgcRights/Elements/CreateTemplate.js","app/Layouts/Main/Moderation/UgcRights/Elements/GeneralRequest.js","app/Layouts/Main/Moderation/UgcRights/Elements/SocialAccounts.js","app/Layouts/Main/Moderation/UgcRights/Elements/ChooseMethod.js","app/Layouts/Main/Moderation/UgcRights/index.js","app/CommonComponents/ShowMoreContent.js","app/Layouts/Main/Moderation/UgcRights/Elements/CardPreview.js"],"sourcesContent":["import React, { Component } from 'react';\nimport TextType from '../../../../../CommonComponents/MediaType/TextType';\nimport ImageType from '../../../../../CommonComponents/MediaType/ImageType';\nimport VideoType from '../../../../../CommonComponents/MediaType/VideoType';\nimport { getImageSize } from '../../../../../../utils';\n\n\nclass ModalMedia extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 1,\n            winWidth: window.innerWidth,\n            winHeight: window.innerHeight,\n            mediaSize: { height: 400, width: 400 },\n        };\n    }\n    componentDidMount() {\n\n        window.addEventListener('resize', this.handleResize);\n        this.onMediaLoad(this.props.modalData);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.modalData !== prevProps.modalData) {\n            this.onMediaLoad(this.props.modalData);\n        }\n    }\n\n    handleResize = () => {\n        this.setState({\n            winWidth: window.innerWidth,\n            winHeight: window.innerHeight,\n        });\n    };\n\n    onMediaLoad = async (modalData) => {\n        if (modalData.mediaHeight && modalData.mediaWidth) {\n            this.setState({ mediaSize: { height: modalData.mediaHeight, width: modalData.mediaWidth } })\n        } else {\n            try {\n                const { width, height } = await getImageSize(modalData.newMedia);\n                this.setState({ mediaSize: { height: height, width: width } })\n            } catch (error) {\n                this.setState({ mediaSize: { height: 100, width: 100 } })\n            }\n        }\n    }\n    render() {\n        const { modalData, handleAllImageError,autoPlay,movePost } = this.props\n        const { winWidth, winHeight, mediaSize } = this.state\n        const scale = Math.min((winWidth - (winWidth > 1400 ? 850 : 650)) / mediaSize.width, (winHeight - 130) / mediaSize.height);\n        const height = mediaSize.height * scale\n        const width = mediaSize.width * scale\n        const paddingBottom = (height * 100) / width\n\n        return (\n            modalData.type == 1 ?\n                <div className='mx-auto w-100 p-4'>\n                    <TextType mediaClass=\"bg-gray-200\" size={120} content={modalData.postcontent} rating={modalData.rating} socialNetworkId={modalData.networkId} fontSize={'calc(14px + .3vw + .3vh)'} lineCount={10} />\n                </div>\n                :\n                <div className='w-100 m-auto' style={{ maxWidth: winWidth > 991 ? width : null }}>\n                    <div className=\"position-relative\">\n\n                        {(modalData.type == 2 || modalData.type == 4) ?\n                            <ImageType mediaClass={'content_img_'} size={paddingBottom} url={modalData.postFile} height={height} width={width} icon={modalData.networkId} rating={modalData.rating} alt={''} handleAllImageError={handleAllImageError} item={modalData} isCover={true} />\n                        :\n                        (modalData.type == 3 || modalData.type == 5) ?\n                            <VideoType key={movePost} item={modalData} mediaClass={'content_video'} size={paddingBottom} url={modalData.mediaUrl || modalData.mediaFile || modalData.mediaClip || modalData.postFile} poster={modalData.postFile} height={height} width={width} autoPlay={autoPlay ? autoPlay : true} muted={false} isCover={true} controls={true} loop={false} isupdate={1} />\n                            : null}\n                    </div>\n                </div>\n);\n    }\n}\n\nexport default ModalMedia;","import React, { Component } from 'react'\nimport { HOST_URL } from '../../../../../../actions/api'\nimport { TOAST_ERROR } from '../../../../../../utils'\nimport { tinyRequest } from '../../../../../../actions/tinyUrlAction';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '../../../../../CommonComponents/AssetsHelper';\nimport { logRoles } from '@testing-library/react';\n\nexport default class copyUrl extends Component {\n\n    state = { openSteps: false, copied: false, hash: 'yes', accountDetails: {}, postUrl: '' }\n    componentDidMount() {\n        this.copyText();\n    }\n\n    sendRequest = () => {\n        const { onRaiseRequest, setUserName } = this.props\n        // setUserName(this.state.accountDetails.username)\n        onRaiseRequest(this.state.hash)\n    }\n\n    copyText = () => {\n        const { ugcData, custom_msg, requestMode } = this.props\n        const postLink = ugcData?.data && ugcData?.data[0] ? ugcData?.data[0].link : ''\n        tinyRequest(postLink).then((response) => {\n            const { data } = response.data\n            this.setState({ postUrl: data?.tiny_url })\n        }).catch((ex) => {\n            this.setState({ postUrl: postLink })\n        })\n\n        if (requestMode == 0) navigator.clipboard.writeText(custom_msg + ' ' + ugcData.bitlyurl)\n        else if(localStorage.getItem('ownerId') == '142546') navigator.clipboard.writeText(custom_msg)\n        else navigator.clipboard.writeText(`${custom_msg}. Just reply with #${this.state.hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!`)\n    }\n\n    raiseReq = () => {\n        const { ugcData, custom_msg, requestMode } = this.props\n\n        if (this.state.hash == '' || !this.state.hash) { TOAST_ERROR('Hashtag for UGC Rights is required!'); return; }\n        this.sendRequest()\n        if (requestMode == 0) navigator.clipboard.writeText(custom_msg + ' Post : ' + this.state.postUrl + ' . Form Link : ' + ugcData.bitlyurl);\n        else if(localStorage.getItem('ownerId') == '142546') navigator.clipboard.writeText(custom_msg)\n        else navigator.clipboard.writeText(`${custom_msg} Just reply with #${this.state.hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!`)\n        if ((ugcData.data[0].networkId == 18 || ugcData.data[0].networkId == 2) && requestMode == 0) setTimeout(() => window.open(`https://ig.me/m/${ugcData.data[0].username}`, '_blank'), 400)\n        else setTimeout(() => window.open(ugcData.data[0].link, '_blank'), 400)\n        setTimeout(() => {\n            window.location.replace(`${HOST_URL}/moderation/index/${localStorage.getItem('wallId')}`)\n        }, 400);\n    }\n\n\n    render() {\n        const { ugcData, custom_msg, setStep, requestMode, isRequesting } = this.props\n        const { openSteps, copied, hash } = this.state;\n        return <>\n        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\n           \n            <h3 className='mb-3'>Your UGC Request is Ready</h3>\n\n            <div className=\"form-group ugc_right_col\">\n                <Form.Group className=\"mb-3\">\n                    <Form.Control as={'textarea'} id=\"r_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={requestMode == 0 ? custom_msg : localStorage.getItem('ownerId') == '142546' ? `${custom_msg}` : `${custom_msg} Just reply with #${hash}  if you're up for it, and you can find all the nitty-gritty details in our bio. Thanks a bunch!` || \"\"} disabled />\n                </Form.Group>\n            </div>\n\n            {requestMode == 1 ? <>\n\n                <div className=\"form-group ugc_right_col\">\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label htmlFor=\"ugc_rights_hash_value\">Enter Hashtag for UGC Rights <span className=\"text-danger\">*</span> </Form.Label>\n                        <Form.Control as={'textarea'} id=\"ugc_rights_hash_value\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={hash} onChange={e => this.setState({ hash: e.target.value })} >\n                        </Form.Control>\n                    </Form.Group>\n                </div>\n            </> : null}\n            {requestMode == 0 ? <>\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Text className=\"cursor-pointer\">\n                        <FontAwesomeIcon type={'solid'} icon={'link'}/>\n                    </InputGroup.Text>\n                    <Form.Control className=\"p-2\"  size='lg' value={ugcData.bitlyurl ? String(ugcData.bitlyurl):'---'} />\n                </InputGroup>\n                <Button variant='primary' className='w-100 mb-4' onClick={() => this.setState({ copied: true }, () => this.copyText())}>\n                    {!copied ? \"Copy URL\" : \"Copied..\"}\n                </Button>\n            </> : null}\n\n                   \n            <h5> Steps to proceed </h5>\n            <ul className={`list-unstyled list-points fs-8`}>\n                <li className='mb-1'>You have successfully generated a \"UGC Request\" for this post.</li>\n                <li className='mb-1'>Quickly review your Request before sending it to the owner.</li>\n                <li className='mb-1'>Click on the \"Raise Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\n                <li className='mb-1'>Paste the link of \"UGC Request\" in the comments section of the original post.</li>\n                <li className='mb-1'>You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\n            </ul>\n                    \n        </div>\n\n        <div className=\"d-flex justify-content-end p-4 border-top\">\n                <Button variant=\"secondary\" className=\"me-2\" onClick={() => setStep(2)}>Back</Button>\n            <Button className={isRequesting ? 'spinner' : ''} onClick={() => this.raiseReq()}>Raise Request</Button>\n        </div>\n        \n        </>\n    }\n}\n\n","import axios from \"axios\"; \nimport { TINY_URL } from \"./api\";\nconst apiToken = `YhhvoiyS1HLShf3CsiZAUsUZK2qTY1JGrJ045Z12sipRKGeEbM1FVHnQVd4f`\nexport const tinyRequest = (url) => {\n    var data = JSON.stringify({\n        \"url\": url\n    });\n    var config = {\n        method: 'post',\n        url: `${TINY_URL}?api_token=${apiToken}`,\n        headers: {\n            'accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        data: data\n    };\n    return axios(config)\n}","import { Component } from \"react\";\nimport { Modal, Button, InputGroup, Form, Image, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"../../../../../CommonComponents/AssetsHelper\";\nimport ImageUploader from \"../../../../../CommonComponents/ImageUploader\";\nimport { ADD_UGC_TEMPLATE } from \"../../../../../../actions/moderationActions\";\nimport { connect } from \"react-redux\";\n\nclass CreateTemplate extends Component {\n  state = { brandFilename: this.props.editData.client_logo, selectedBrand: this.props.editData.client_logo_name, selectedBrandFile: this.props.editData.client_logo, tncFilename: this.props.editData.custom_terms, selectedtnc: this.props.editData.custom_terms_name, selectedtncFile: this.props.editData.custom_terms, selectedTemplate: null, acceptTnc: false, logoError: false, tncError: false, templateName: this.props.editData.name, custom_msg: this.props.editData.custom_message, tncerrorMsg: false, nameerrorMsg: false, msgerrorMsg: false, };\n\n  setBrandLogo = (imgUrl, mediaData) => this.setState({ selectedBrandFile: imgUrl, brandFilename: mediaData.fileName, selectedBrand: mediaData.fileName })\n  setTnc = (imgUrl, mediaData) => this.setState({ tncFilename: mediaData.fileName, selectedtnc: mediaData.fileName, selectedtncFile: imgUrl, })\n\n  removeBrandLogo = () => this.setState({ selectedBrand: \"\", selectedBrandFile: null, brandFilename: null })\n  removeTnc = () => this.setState({ tncFilename: null, selectedtnc: \"\", selectedtncFile: null, })\n\n\n  onSaveTemplate = () => {\n    const { tncFilename, brandFilename, selectedtncFile, templateName, selectedBrandFile, custom_msg } = this.state;\n\n    if (!custom_msg || !templateName || !tncFilename || !brandFilename) {\n      if (!custom_msg) this.setState({ msgerrorMsg: true })\n      if (!templateName) this.setState({ nameerrorMsg: true })\n      if (!tncFilename) this.setState({ tncerrorMsg: true })\n      if (!brandFilename) this.setState({ logoError: true })\n    }\n    else {\n      var obj = { ownerId: localStorage.getItem('ownerId'), name: templateName, custom_message: custom_msg, custom_terms: selectedtncFile, custom_terms_name: tncFilename, client_logo: selectedBrandFile, client_logo_name: brandFilename, ugcterms: '' }\n      if (this.props.edit) obj = { ...obj, id: this.props.editData.id }\n      this.props.ADD_UGC_TEMPLATE(obj, this.props.onAddNewTemplate)\n    }\n  }\n\n\n\n  render() {\n    const { show, onHide, edit } = this.props;\n    const { tncFilename, logoError, selectedtncFile, selectedBrandFile, templateName, custom_msg, tncerrorMsg, nameerrorMsg, msgerrorMsg } = this.state;\n\n\n    return (\n      <>\n        <Modal size=\"lg\" show={show} onHide={onHide} centered>\n          <Modal.Header closeButton>\n            <Modal.Title>{edit ? 'Edit' : `Create New`} Template</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form.Group className=\"mb-3\">\n              <Form.Label htmlFor=\"t_name\">Template Name <span className=\"text-danger\">*</span> </Form.Label>\n              <Form.Control placeholder=\"enter your template name\" autoComplete=\"off\" id=\"t_name\" className={`${nameerrorMsg ? `is-invalid` : ``}`} value={templateName} onChange={(e) => this.setState({ templateName: e.target.value, nameerrorMsg: false })} maxLength=\"255\" />\n              <span id=\"t_nameerror\" className=\"invalid-feedback\" >{nameerrorMsg ? \"Name is required\" : ''}</span>\n            </Form.Group>\n            <Form.Group className=\"mb-3\">\n              <Form.Label htmlFor=\"t_msg\">Custom Message <span className=\"text-danger\">*</span> </Form.Label>\n              <Form.Control as={'textarea'} className={`${msgerrorMsg ? `is-invalid` : ``}`} id=\"t_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={custom_msg} onChange={(e) => this.setState({ custom_msg: e.target.value, msgerrorMsg: false })} />\n              <span id=\"t_msgerror\" className=\"invalid-feedback\" >{msgerrorMsg ? \"Custom message is required\" : ''}</span>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label htmlFor=\"t_logo\">Brand Logo <span className=\"text-danger\">*</span></Form.Label>\n              {!selectedBrandFile ? <ImageUploader uploadPath={'media/tmpimages/'} uploadAgents={[\"GoogleDrive\", \"Url\"]} allowedFile={['image/*']} onImgUpload={this.setBrandLogo} >\n                <div className={`p-5 border border-dashed rounded-2 cursor-pointer ${logoError ? `is-invalid border-danger` : ``}`} style={{ maxWidth: 300 }}>\n                  <p className=\"mb-0 text-center text-muted fw-medium\">Upload Logo</p>\n                </div> </ImageUploader> :\n                <div className=\"d-flex align-items-center\">\n                  <div className=\"me-3 me-xxl-4\">\n                    <div className=\"symbol h-90px w-90px position-relative rounded-2 overflow-hidden\">\n                      <Image src={selectedBrandFile} alt={''} height={90} width={90} className=\"object-center-cover\" load=\"lazy\" fluid />\n                    </div>\n                  </div>\n                  <div className=\"d-flex align-items-center flex-wrap\">\n                    <div className=\"d-flex flex-column align-items-center flex-nowrap mb-0\">\n                      <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                        <Button variant=\"icon\" className=\"btn-active-danger\" onClick={this.removeBrandLogo}> <FontAwesomeIcon type={'solid'} icon={'trash-can'} /> </Button>\n                      </OverlayTrigger>\n                    </div>\n                  </div>\n                </div>\n              }\n              <span id=\"t_logoerror\" className=\"invalid-feedback\">Brand Logo is required</span>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label htmlFor=\"t_msg\">Terms and Conditions<span className=\"text-danger\">*</span></Form.Label>\n              <InputGroup className={`${tncerrorMsg ? `is-invalid` : ``}`}>\n                <div className=\"form-control form-control-lg\">\n                  {selectedtncFile ?\n                    <div className=\"overflow-hidden d-flex align-items-center\">\n                      <span className=\"text-ellipsis fs-8 p-1 rounded-1\">{tncFilename}</span>\n                      <span className=\"cursor-pointer p-1 mx-1 rounded-1 f-center text-center text-danger\" onClick={this.removeTnc}>\n                        <FontAwesomeIcon type={'solid'} icon={'xmark'} />\n                      </span>\n                    </div> : ''}\n                </div>\n                <ImageUploader uploadPath={'media/tmpimages/'} uploadAgents={[\"GoogleDrive\", \"Url\"]} allowedFile={['application/pdf/*']} onImgUpload={this.setTnc}>\n                  <InputGroup.Text className=\"cursor-pointer h-100\"  >Attach File</InputGroup.Text>\n                </ImageUploader>\n              </InputGroup>\n              <span id=\"tcError\" className=\"invalid-feedback\" >{tncerrorMsg ? \"Terms & Conditions is required\" : ''}</span>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' className='ms-3 btn-min-w' onClick={onHide}>Cancel</Button>\n            <Button className='ms-3 btn-min-w' onClick={this.onSaveTemplate}>Save Template</Button>\n          </Modal.Footer>\n\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // ugcData: state.moderation.ugcData,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    ADD_UGC_TEMPLATE: (data, callback) => dispatch(ADD_UGC_TEMPLATE(data, callback))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTemplate);\n","\nimport { Component } from \"react\";\nimport { Dropdown, Form, InputGroup, Button, OverlayTrigger, Tooltip, Image } from \"react-bootstrap\";\nimport CreateTemplate from \"./CreateTemplate\";\nimport { connect } from \"react-redux\";\nimport { DELETE_UGC_TEMPLATE } from \"../../../../../../actions/moderationActions\";\nimport { UGC_UPLOAD_URL, WASABI_PATH } from \"../../../../../../actions/api\";\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../CommonComponents/AssetsHelper\";\nimport { Link } from \"react-router-dom\";\nimport ImageUploader from \"../../../../../CommonComponents/ImageUploader\";\nclass GeneralRequest extends Component {\n    state = { postauthor: null, posthandle: null, authorpicture: null, postcarousel: false, content: null, data: null, modalOpen: false, createTemplate: false, brandFilename: null, selectedBrand: \"\", selectedBrandFile: null, tncFilename: null, selectedtnc: \"\", selectedtncFile: null, selectedTemplate: this.props.selectedTemplate, tncError: this.props.tncError, custom_message: this.props.custom_msg, isEdit: false, editData: {} };\n\n    componentDidMount() {\n        const { ugcData, brand_link } = this.props\n        this.onTemplateChange(this.props.selectedTemplate)\n        setTimeout(() => {\n            if (ugcData && ugcData.template && ugcData.template.length && !this.state.selectedTemplate) {\n                this.setState({ tncFilename: ugcData.template[0].custom_terms_name, selectedtnc: ugcData.template[0].custom_terms, selectedtncFile: ugcData.template[0].custom_terms })\n            }\n            if (brand_link) this.setState({ selectedBrandFile: brand_link })\n        }, 500);\n    }\n\n    setBrandLogo = (imgUrl, mediaData) => this.setState({ selectedBrandFile: imgUrl, brandFilename: mediaData.fileName, selectedBrand: imgUrl }, () => this.props.setBrand_link(imgUrl))\n    setTnc = (imgUrl, mediaData) => this.setState({ tncFilename: mediaData.fileName, selectedtnc: mediaData.fileName, selectedtncFile: imgUrl, tncError: false }, () => { this.props.setTermslink(imgUrl); this.props.setTermstype(mediaData.fileName) })\n\n    onCreateTemplate = () => this.setState({ createTemplate: true })\n    onHideTemplate = () => this.setState({ createTemplate: false, isEdit: false, editData: {} })\n\n    onAddNewTemplate = (id) => {\n        const tmp = this.getSelectedTemplate(id)\n        if (tmp) this.onTemplateChange(id)\n        this.setState({ createTemplate: false, isEdit: false, editData: {} })\n    }\n\n    getSelectedTemplate = (value) => {\n        const { ugcData } = this.props\n        const { selectedTemplate } = this.state\n        const id = value ? value : selectedTemplate\n        localStorage.setItem('selectedTemplate', id)\n        if (ugcData && ugcData.template && ugcData.template.length) {\n            if (!id) { return ugcData.template[0] }\n            const template = ugcData.template.filter(t => t.id == id)[0]\n            return template\n        }\n        else return null\n    }\n\n    onNextStep = () => {\n        const { acceptTnc, requestMode, onUpdateTemplate } = this.props\n        if(acceptTnc){\n        onUpdateTemplate()\n        if (requestMode == 1) this.props.setStep(2)\n        else if (acceptTnc && requestMode == 0) this.props.setStep(2)\n        }\n        else this.setState({ tncError: true }, () => this.props.setTncError(true))\n\n    }\n\n    onTemplateChange = (e) => {\n        const tmp = this.getSelectedTemplate(e)\n        if (tmp) {\n            this.setState({ selectedTemplate: e }, () => {\n                this.setState({ custom_message: tmp.custom_message, tncFilename: tmp.custom_terms_name, selectedtnc: tmp.custom_terms, selectedtncFile: tmp.custom_terms, brandFilename: tmp.client_logo_name, selectedBrand: tmp.client_logo, selectedBrandFile: tmp.client_logo, });\n                this.props.setCustom_msg(tmp?.custom_message);\n                this.props.setSelectedTemplate(e);\n            });\n\n        }\n    }\n\n    onTemplateRemove = (data) => this.props.deleteTemplate({ ownerId: data.owner, id: data.id }, () => this.onTemplateChange(1))\n    removeBrandLogo = () => this.setState({ selectedBrand: \"\", selectedBrandFile: null, brandFilename: null })\n    removeTnc = () => this.setState({ tncFilename: null, selectedtnc: null, selectedtncFile: null })\n\n    onTemplateEdit = (data) => {\n        this.onCreateTemplate()\n        this.setState({ isEdit: true, editData: data })\n    }\n\n\n\n    render() {\n        const { createTemplate, selectedBrand, selectedBrandFile, tncFilename, selectedtncFile, selectedTemplate, tncError, custom_message, isEdit, editData, } = this.state;\n        const { ugcData, setCustom_msg, setAcceptTnc, acceptTnc, brand_link, termstype } = this.props\n        return (<>\n            {ugcData && ugcData.template && ugcData.template.length ?\n                <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\n                    <div className=\"form-group ugc_right_col\">\n                        <div className=\"d-flex f-between mb-3\">\n                            <Form.Label className=\"mb-0\">Choose From Templates</Form.Label>\n                            <Button variant=\"link\" className=\"p-0 f-center\" onClick={this.onCreateTemplate}> <FontAwesomeIcon icon={'plus'} iconClass={'me-1 fs-6'} /> <span>Create Template</span> </Button>\n                        </div>\n                        <Dropdown className=\"ugc-templates mb-3\" onSelect={(e) => this.onTemplateChange(e)}>\n                            <Dropdown.Toggle variant=\"secondary\" className=\"w-100 d-flex f-between\"> {this.getSelectedTemplate()?.name} </Dropdown.Toggle>\n                            <Dropdown.Menu className=\"w-100 dropdown-height\">\n                                {ugcData.template && ugcData.template.map(t => (\n                                    <Dropdown.Item eventKey={t.id} className=\"f-between\" key={`drp_${t.id}`}>\n                                        <span className=\"text-ellipsis\">{t.name}</span>\n                                        {t.owner != 0 ?\n                                            <span className=\"dropdown-option\">\n                                                <Button variant='icon' size=\"sm\" className='ms-2 p-1 border-0 h-24px w-24px' onClick={() => this.onTemplateEdit(t)}> <FontAwesomeIcon type={'solid'} icon={'pen'} /> </Button>\n                                                <Button variant='icon' size=\"sm\" className='ms-2 p-1 border-0 h-24px w-24px' onClick={() => this.onTemplateRemove(t)}> <FontAwesomeIcon type={'solid'} icon={'trash-can'} /> </Button>\n                                            </span>\n                                            : null\n                                        } </Dropdown.Item>\n                                ))}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                    <div className=\"form-group ugc_right_col\">\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label htmlFor=\"r_msg\">Message <span className=\"text-danger\">*</span> </Form.Label>\n                            <Form.Control as={'textarea'} id=\"r_msg\" maxLength=\"255\" cols=\"30\" rows=\"6\" value={custom_message} onChange={(e) => this.setState({ custom_message: e.target.value }, () => setCustom_msg(e.target.value))} >\n                                {this.getSelectedTemplate()?.custom_message ? this.getSelectedTemplate()?.custom_message : `We loved your creative brilliance! Can we showcase your incredible work and give you the recognition you deserve? ✨📸🙌. \n                                Please approve our request so we can use your content in our marketing campaign.`}\n                            </Form.Control>\n                        </Form.Group>\n                    </div>\n\n\n                    <>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label htmlFor=\"t_logo\">Brand Logo</Form.Label>\n                            {!selectedBrandFile ?\n                                <ImageUploader uploadPath={'media/tmpimages/'} uploadAgents={[\"GoogleDrive\", \"Url\"]} allowedFile={['image/*']} onImgUpload={this.setBrandLogo}>\n                                    <div className={`p-5 border border-2 border-dashed rounded-2 cursor-pointer`} style={{ maxWidth: 300 }}>\n                                        <p className=\"mb-0 text-center text-muted fw-medium\">Upload Logo</p>\n                                    </div>\n                                </ImageUploader>\n                                :\n                                <div className=\"d-flex align-items-center\">\n                                    <div className=\"me-3 me-xxl-4\">\n                                        <div className=\"symbol h-90px w-90px position-relative rounded-2 bg-light overflow-hidden\">\n                                            <Image src={this.getSelectedTemplate()?.client_logo || selectedBrand || brand_link} alt={''} height={90} width={90} className=\"object-center-cover\" load=\"lazy\" fluid />\n                                        </div>\n                                    </div>\n                                    <div className=\"d-flex align-items-center flex-wrap\">\n                                        <div className=\"d-flex flex-column align-items-center flex-nowrap mb-0\">\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                                <Button variant=\"icon\" className=\"btn-active-danger\" onClick={this.removeBrandLogo}> <FontAwesomeIcon type={'solid'} icon={'trash-can'} /> </Button>\n                                            </OverlayTrigger>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label htmlFor=\"t_msg\">Terms and Conditions</Form.Label>\n                            <InputGroup className=\"mb-1\">\n                                <div className=\"form-control p-2\">\n                                    {selectedtncFile ?\n                                        <div className=\"overflow-hidden d-flex align-items-center\">\n                                            <span className=\"text-ellipsis fs-8 bg-light p-1 rounded-1\">{termstype || tncFilename}</span>\n                                            <span className=\"cursor-pointer p-1 mx-1 rounded-1 f-center text-center text-danger\" onClick={this.removeTnc}>\n                                                <FontAwesomeIcon icon={'xmark'} />\n                                            </span>\n                                        </div> : ''}\n                                </div>\n\n                                <InputGroup.Text className=\"cursor-pointer\"><ImageUploader uploadPath={'media/tmpimages/'} uploadAgents={[]} allowedFile={['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']} onImgUpload={this.setTnc}>Attach File </ImageUploader></InputGroup.Text>\n\n                            </InputGroup>\n                            <div className=\"d-flex justify-content-end\">\n                                <Link to={baseUrl('downloads/Terms&ConditionsforuseofUGC.docx')} target=\"_blank\" className=\"btn btn-link p-0 text-nowrap btn-sm\" download={true}> Use our predefined content <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'} /> </Link>\n                            </div>\n                        </Form.Group>\n                        <Form.Group className=\"mb-1 d-flex\">\n                            <Form.Check type=\"checkbox\" id=\"ugc-tc\" className=\"form-check mt-1 p-0 me-2 border-0 position-relative\" value={acceptTnc} onChange={(e) => setAcceptTnc(e.target.checked)} checked={acceptTnc ? true : false} />\n                            <Form.Label htmlFor=\"ugc-tc\">Accept our <a href=\"https://socialwalls.com/terms-of-service/\" rel=\"noreferrer\" className=\"fw-bold btn btn-link p-0\" target=\"_blank\">Terms & Conditions</a> Click on Generate Request to proceed to next step.</Form.Label>\n                        </Form.Group>\n                        {tncError && !acceptTnc ? <span id=\"term_error\" className=\"text-danger\">Please accept Terms and Conditions</span> : null}\n                    </>\n                </div> : null}\n            <div className=\"d-flex justify-content-end p-4 border-top\">\n                <Button variant=\"secondary\" className=\"me-2\" onClick={() => { this.props.setStep(4); this.setState({ tncError: false }) }}>Back</Button>\n                <Button onClick={() => this.onNextStep()} >Next Step</Button>\n            </div>\n\n            {createTemplate ? <CreateTemplate show={true} edit={isEdit} editData={editData} onHide={this.onHideTemplate} onAddNewTemplate={this.onAddNewTemplate} /> : null}\n\n\n        </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // ugcData: state.moderation.ugcData,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteTemplate: (data, callback) => dispatch(DELETE_UGC_TEMPLATE(data, callback))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralRequest);\n","import React, { Component, use, useEffect } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useCookies, withCookies } from 'react-cookie';\nimport { Dropdown, Button } from \"react-bootstrap\";\nimport { useNavigate } from 'react-router';\nimport Author from '../../../../../CommonComponents/Author/Author';\nimport { FontAwesomeIcon } from '../../../../../CommonComponents/AssetsHelper';\nimport { GET_NETWORK_ICON, networksMap, showAddAccountAlertNew } from '../../../../../../utils';\nimport { addUserAccount} from '../../../../../Authorization/SocialAuth/connectSocialAcc';\nimport { GET_SOCIAL_ACCOUNT_DATA } from '../../../../../../actions/accountsActions';\n\n\nconst channel = new BroadcastChannel('connect');\n\nconst SocialAccounts = (props) => {\n  const [cookies, setCookie] = useCookies([]);\n  const navigation = useNavigate()\n  const dispatch = useDispatch()\n  const socialAccountsData = useSelector(state => state.userAccountData.socialAccounts)\n  const userData = useSelector(state => state.authenticated.userData, shallowEqual);\n  useEffect(() => {\n    dispatch(GET_SOCIAL_ACCOUNT_DATA(userData?.user?.userhashId))\n  }, [])\n  return <SAccounts {...props} cookies={cookies} navigation={navigation} dispatch={dispatch} socialAccountsData={socialAccountsData} userData={userData} />\n}\nclass SAccounts extends Component {\n  state = { socialAccount: 0, authorName: null, authorAvatar: null, errorMsg: false, otherAc: false, accountDetails: {}, accountList: [], selectedPersonalAccount: null }\n\n  handleMessage = async (event) => {\n    try {\n      const response = JSON.parse(event.data);\n      const { data, networkId, type } = response;\n      if (type == \"ugc-rights\") {\n        addUserAccount(networkId, data, () => this.props.dispatch(GET_SOCIAL_ACCOUNT_DATA(this.props.userData?.user?.userhashId)), localStorage.getItem('ownerId'));\n      }\n    } catch (error) {\n\n    }\n  };\n\n  componentDidMount() {\n    this.filterAccountData(2, null);\n    document.cookie = \"callBackUrl=React\";\n    window.addEventListener(\"message\", this.handleMessage);\n    channel.addEventListener(\"message\", this.handleMessage);\n    if (window.Application) window.Application.reInit()\n    if (this.props.networkId == parseInt(JSON.parse(localStorage.getItem('instagram_ugc'))?.networkId)) {\n      this.setState({ accountDetails: JSON.parse(localStorage.getItem('instagram_ugc')) })\n    }\n    else this.setState({ accountDetails: null })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.socialAccountsData !== this.props.socialAccountsData) {\n      this.filterAccountData(this.props.networkId, null);\n    }\n  }\n  \n  filterAccountData = (id, data) => {\n    const { socialAccountsData, setUserName } = this.props\n    let allAcc = []\n    socialAccountsData?.accountInformations?.forEach(acc => {\n      if (acc.Network.id == id && acc.ConnectedAccounts) {\n        acc.ConnectedAccounts.value2 = acc.ConnectedAccounts.accountName;\n        allAcc.push(acc);\n      }\n    });\n    if (id == 1 && data) {\n      allAcc.unshift({ ConnectedAccounts: { id: data.id_str, value2: data.name, profilePicture: data.picture }, Network: { color: \"#0F1419\", description: \"Twitter\", icon: \"fa-twitter\", id: 1, name: \"Twitter\", status: 1 } });\n    }\n\n    this.setState({ accountList: allAcc, selectedPersonalAccount: allAcc[0] || '' }, () => setUserName(allAcc[0]?.ConnectedAccounts.value2 || ''));\n  };\n\n\n  sendRequest = () => {\n    const { setStep, setUserName } = this.props\n    if (this.state.accountDetails) {\n      setUserName(this.state.accountDetails.username)\n      setStep(3)\n    }\n    else { this.setState({ errorMsg: true }) }\n  }\n\n  nextStep = () => {\n    const { setStep } = this.props\n    if (this.state.selectedPersonalAccount) setStep(3)\n    else { this.setState({ errorMsg: true }) }\n  }\n\n  componentWillUnmount() {\n    localStorage.removeItem(\"networkId\")\n    window.removeEventListener(\"message\", this.handleMessage);\n    channel.removeEventListener(\"message\", this.handleMessage);\n  }\n\n  onClickToConnectAccount = (networkId) => {\n    let item = networksMap[networkId]\n    if (item.networkId == 18) {\n      item['networkId'] = 2;\n      item['networkname'] = 'instagram';\n    }\n    showAddAccountAlertNew({ id: item.networkId, name: item.networkname }, \"ugc-rights\");\n  }\n\n  render() {\n    const { setStep, networkId, setUserName } = this.props\n    const { errorMsg, accountList, selectedPersonalAccount } = this.state\n    \n    return (\n      <>\n        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap\">\n          <div className=\"ugc_steps ugc-logged-ac modal-body\">\n            <>\n              {selectedPersonalAccount ?\n                <Dropdown style={{ minWidth: 220 }} id=\"connectedAll\">\n                  <Dropdown.Toggle variant=\"\" size={'sm'} className={`p-3 d-flex align-items-center w-100 justify-content-between hover-outline-secondary shadow ${errorMsg ? 'is-invalid border-danger' : ''}`}>\n                    <div className='f-between w-100'>\n                      <div className=\"d-flex align-items-center flex-grow-1\">\n                        <Author className={'symbol-34 rounded-circle flex-shrink-0 me-2'}\n                          imageSize={30}\n                          symbolClass={'symbol-34 f-center text-white fs-6'}\n                          name={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.accountName : ''}\n                          profileUrl={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.profilePicture : ''} networkId={selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.networkId : ''} />\n                        <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\n                          <p className=\"fw-medium mb-0 text-ellipsis fs-8\"><strong>{selectedPersonalAccount ? selectedPersonalAccount?.ConnectedAccounts?.accountName : ''}</strong></p>\n                        </div>\n                      </div>\n                      <FontAwesomeIcon type={'brands'} icon={GET_NETWORK_ICON(networkId)} iconClass={'fs-3 me-2'} />\n                    </div>\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className=\"w-100\">\n                    <div className=\"navi flex-column navi-hover py-2 px-3 connectedAllAccounts\"><strong>Select Account:</strong></div>\n                    {accountList.map(acc => {\n                      return <Dropdown.Item key={acc.ConnectedAccounts.id} onClick={() => { this.setState({ selectedPersonalAccount: acc }, () => setUserName(acc.ConnectedAccounts.value2)) }}>\n                        <div className=\"d-flex align-items-center\">\n                          <Author className={'symbol-28 flex-shrink-0 me-2'}\n                            imageSize={30}\n                            symbolClass={'symbol-28 rounded-circle f-center text-white fs-6'}\n                            name={acc.ConnectedAccounts.value2} profileUrl={acc.ConnectedAccounts?.profilePicture} networkId={acc.ConnectedAccounts?.networkId} />\n                          <div className=\"overflow-hidden\" style={{ maxWidth: 130 }}>\n                            <p className=\"fw-medium mb-0 text-ellipsis fs-8\">{acc.ConnectedAccounts.value2}</p>\n                          </div>\n                        </div>\n                      </Dropdown.Item>\n                    })}\n                    <Dropdown.Item onClick={() => this.onClickToConnectAccount(networkId)}>\n                      <div className=\"d-flex align-items-center\">\n                        <span className='symbol-28 f-center me-2'>\n                          <FontAwesomeIcon type={'brands'} icon={GET_NETWORK_ICON(networkId)} iconClass={'fs-3'} />\n                        </span>\n                        <div className=\"overflow-hidden\">\n                          <p className=\"fw-medium mb-0 text-ellipsis fs-8\">Add Another Account</p>\n                        </div>\n                      </div>\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown> :\n\n                <Button variant=\"secondary\" size={'sm'} className={`d-flex align-items-center w-100 justify-content-between ${errorMsg ? 'is-invalid border-danger' : ''}`} onClick={() => this.onClickToConnectAccount(networkId)}>\n                  <div className=\"d-flex align-items-center flex-grow-1\">\n                    <FontAwesomeIcon type={'brands'} icon={GET_NETWORK_ICON(networkId)}  iconClass={'fs-4 me-2'} />\n                    <div className=\"overflow-hidden f-between w-100 pe-3\" >\n                      <p className=\"fw-medium mb-0 text-ellipsis fs-8\">Add Account</p>\n                      <FontAwesomeIcon icon={'plus'} />\n                    </div>\n                  </div>\n                </Button>\n              }\n              {errorMsg ? <span id=\"social_account_error\" className=\"invalid-feedback\">\n                Please connect account\n              </span> : null}\n            </>\n          </div>\n          <span id=\"reSearch_cookies\" onClick={() => this.getCookieData()}></span>\n        </div>\n        <div className=\"d-flex justify-content-end p-4 border-top\">\n          <Button variant=\"secondary\" className=\"me-2\" onClick={() => setStep(1)}>Back</Button>\n          <Button onClick={() => this.nextStep()}>Next Step</Button>\n        </div>\n      </>\n    )\n  }\n}\nexport default withCookies(SocialAccounts)","import { Component } from \"react\";  \nimport { connect } from \"react-redux\";\nimport { Button, Form} from \"react-bootstrap\";\nimport { TOAST_ERROR } from \"../../../../../../utils\";\nimport { FontAwesomeIcon } from \"../../../../../CommonComponents/AssetsHelper\";\n\nclass ChooseMethod extends Component {\n\n    state = {\n    };\n\n    componentDidMount() {\n        \n    }\n\n    onNextStep = () => {\n        const { requestMode } = this.props\n        if (requestMode != null) {\n            this.props.setStep(1)\n        }\n        else TOAST_ERROR('Please select the mode for Right Request')\n    }\n\n\n    render() {\n        const { setRequestMode, requestMode, ugcData } = this.props\n\n        return (\n                <>\n                    <div className=\"p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\n                        <h3 className=\"mb-1 h5\">Select the mode for Right Request</h3>\n                        <p className=\"text-muted\">Socialwalls offers two distinct modes to request rights. Comment Request and DM Request. </p>\n\n                        <div>\n                            <div value={'viaComments'} className={`cursor-pointer mb-4 f-between border p-3 rounded-1 ${requestMode == 1 ? 'border-success' : ''}`} onClick={() => setRequestMode(1)}>\n                                <div className=\"d-flex align-items-center me-3 fw-normal\">\n                                    <FontAwesomeIcon icon={'comment'} iconClass={'fs-2'}/>\n                                    <span className=\"text-start ps-3\">\n                                        <p className=\"h6 mb-0\">Comment Request</p>\n                                        <span className=\"fs-9\">Request creators consent as a comment on their post.</span>\n                                    </span>\n                                </div>\n                                <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\n                                <span className={`w-20px fs-6 ${requestMode == 1 ? 'text-success' : 'text-muted'}`}>\n                                    <FontAwesomeIcon type={requestMode == 1 ? 'solid' : ''} icon={'check-circle'} />\n                                </span>\n                            </div>\n                            <div className={`cursor-pointer mb-4 f-between border p-3 rounded-1 ${requestMode == 0 ? 'border-success' : ''}`} onClick={() => setRequestMode(0)}>\n                                <div className=\"d-flex align-items-center me-3 fw-normal\">\n                                    <FontAwesomeIcon icon={'message'} iconClass={'fs-2'}/>\n                                    <span className=\"text-start ps-3\">\n                                        <p className=\"h6 mb-0\">DM Request</p>\n                                        <span className=\"fs-9\">Send a Rights request directly into the DM of the creators!</span>\n                                    </span>\n                                </div>\n                                <Form.Check.Input type={'radio'} name={'rights-via'} className=\"d-none\" />\n                                <span className={`w-20px fs-6 ${requestMode == 0 ? 'text-success' : 'text-muted'}`}>\n                                    <FontAwesomeIcon type={requestMode == 0 ? 'solid' : ''} icon={'check-circle'} />\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"d-flex justify-content-end p-4 border-top\">\n                        <Button variant=\"secondary\" className=\"me-2\" onClick={() => this.props.hideUgc()}>Cancel</Button>\n                        <Button onClick={() => this.onNextStep()} style={{pointerEvents:ugcData?.data?.length ? '':'none'}}>Next Step</Button>\n                    </div>\n                </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        // ugcData: state.moderation.ugcData,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseMethod);\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Modal, Button, Nav } from \"react-bootstrap\";\nimport { ADD_UGC_TEMPLATE, SEND_UGC } from \"../../../../../actions/moderationActions\";\nimport CardPreview from \"./Elements/CardPreview\";\nimport CopyUrl from \"./Elements/CopyUrl\";\nimport GeneralRequest from \"./Elements/GeneralRequest\";\nimport SocialAccounts from \"./Elements/SocialAccounts\";\nimport './rights.scss'\nimport ChooseMethod from \"./Elements/ChooseMethod\";\nimport { useDispatch } from \"react-redux\";\n// import { TAGGSHOP_SOCIAL_ACCOUNT_DATA } from \"../../../../../actions/sceneActions\";\nimport { FontAwesomeIcon } from \"../../../../CommonComponents/AssetsHelper\";\nimport { TOAST_ERROR } from \"../../../../../utils\";\nimport ErrorFound from \"../../../../CommonComponents/ErrorFound\";\nimport { Link } from \"react-router-dom\";\n\n\nconst UgcModal = (props) => {\n  const { hideUgc, ugcData } = props\n  const [ugcTabKey, setUgcTabKey] = useState('general')\n  const [custom_msg, setCustom_msg] = useState(\"\")\n  const [selectedTemplate, setSelectedTemplate] = useState(localStorage.getItem('selectedTemplate') || '')\n  const [acceptTnc, setAcceptTnc] = useState(false)\n  const [tncError, setTncError] = useState(false)\n  const [step, setStep] = useState(4)\n  const [isAccount, setIsAccount] = useState('')\n  const [userName, setUserName] = useState('')\n  const [brand_link, setBrand_link] = useState('')\n  const [termslink, setTermslink] = useState('')\n  const [termstype, setTermstype] = useState('')\n  const [requestMode, setRequestMode] = useState()\n  const [isRequesting, setIsRequesting] = useState(false)\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    // dispatch(TAGGSHOP_SOCIAL_ACCOUNT_DATA())\n  }, [])\n\n  const sendRequest = () => {\n    if (isAccount) {\n      setStep(3)\n      onRaiseRequest()\n    }\n  }\n\n  const getPostIds = () => {\n    const { data } = ugcData\n    let postIds = []\n    if (data?.length > 0) {\n      data?.map((item, index) => {\n        postIds.push(item.referenceId)\n      })\n    }\n    return postIds.join(',')\n  }\n\n\n  const onRaiseRequest = (hash) => {\n    const { template, data, unique_code, bitlyurl } = ugcData\n    setIsRequesting(true)\n    const index = template?.findIndex(t => t.id == selectedTemplate)\n    let tempSelected = template[index]\n    if (!tempSelected) tempSelected = template[0]\n    var obj = {\n      custom_message: custom_msg,\n      feedId: data[0].feedId,\n      networkId: data[0].networkId,\n      selectedImage: data[0].postFile,\n      selectedVideo: '',\n      selectedUsername: data[0].username,\n      handle: userName,\n      postId: data.length > 1 ? getPostIds() : data[0].referenceId,\n      brand_link: brand_link ? brand_link : tempSelected?.client_logo,\n      termslink: termslink ? termslink : tempSelected?.custom_terms,\n      termstype: termstype ? termstype : tempSelected?.custom_terms_name,\n      bitlylink: bitlyurl,\n      unique_code: unique_code,\n      rightsVia: requestMode,\n      hashtag: hash,\n      networkPostId: data[0].postId,\n      wallId: localStorage.getItem('wallId'),\n      client: localStorage.getItem('ownerId')\n    }\n    SEND_UGC(obj, () => setIsRequesting(false))\n  }\n\n\n\n  const onUpdateTemplate = () => {\n    const { template } = ugcData\n    const index = template?.findIndex(t => t.id == selectedTemplate)\n    let tempSelected = template[index]\n    if (!tempSelected) tempSelected = template[0]\n    var obj = {\n      client_logo: brand_link ? brand_link : tempSelected?.client_logo,\n      custom_terms: termslink ? termslink : tempSelected?.custom_terms,\n      custom_terms_name: termstype ? termstype : tempSelected?.custom_terms_name,\n      custom_message: custom_msg,\n      name: tempSelected?.name,\n      owner: localStorage.getItem('ownerId'),\n      id: tempSelected?.id\n    }\n    if (![1, 2, 3].includes(tempSelected?.id)) {\n      if (!custom_msg) {\n        TOAST_ERROR('Message field is required')\n      }\n      else {\n        dispatch(ADD_UGC_TEMPLATE(obj, ''))\n      }\n    }\n    else { }\n  }\n\n  return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\n    <Modal.Header className=\"justify-content-between py-0 ps-0\">\n      <div className='d-flex align-items-center'>\n        <Link to={``} className=\"btn me-3 border-end border-0 py-3 rounded-0\" onClick={() => hideUgc()}>\n          <FontAwesomeIcon icon={'chevron-left p-0'} />\n        </Link>\n        <span className='text-dark fw-medium'>UGC Rights</span>\n      </div>\n      <div className='d-flex align-items-center h-100'>\n        <Button variant='link' className=\"me-0 p-0 border-0 moderation_back\" onClick={() => hideUgc()}>\n          <FontAwesomeIcon type={'regular'} icon={'xmark'} iconClass={'fs-5 me-1'} />\n        </Button>\n      </div>\n    </Modal.Header>\n    <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\n      <div className=\"rights_modal_inner f-center flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\n        <CardPreview ugcData={ugcData} />\n      </div>\n      <div className=\"rights_modal_sidebar position-relative\">\n\n        {step != 4 ? <div className=\"ugc-wizard-nav\">\n          <Nav variant=\"nav\" className=\"bg-gray-200 justify-content-between row gx-0\">\n            <Nav.Item className=\"col-4\">\n              <Nav.Link className={`py-3 py-xl-4 f-center ${[1, 2, 3].includes(step) ? `active` : ``}`} onClick={() => setStep(1)}>\n                <span className={`d-flex flex-shrink-0 me-1 ${[1, 2, 3].includes(step) ? 'text-success' : 'text-muted'}`}>\n                  <FontAwesomeIcon type={[1, 2, 3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\" />\n                </span>\n                <span className=\"fw-bold text-nowrap text-body\">General Request</span>\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item className=\"col-4\">\n              <Nav.Link className={`py-3 py-xl-4 f-center ${step == 2 || step == 3 ? `active` : `disabled`}`} onClick={() => acceptTnc ? setStep(2) : ''}>\n                <span className={`d-flex flex-shrink-0 me-1 ${((acceptTnc && requestMode == 0) || requestMode == 1) && [2, 3].includes(step) ? 'text-success' : 'text-muted'}`}>\n                  <FontAwesomeIcon type={((acceptTnc && requestMode == 0) || requestMode == 1) && [2, 3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\" />\n                </span>\n                <span className=\"fw-bold text-nowrap text-body\">Social Account</span>\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item className=\"col-4\">\n              <Nav.Link className={`py-3 py-xl-4 f-center ${step == 3 ? `active` : `disabled`}`} eventKey=\"ugc-copyUrl\">\n                <span className={`d-flex flex-shrink-0 me-1 ${[3].includes(step) ? 'text-success' : 'text-muted'}`}>\n                  <FontAwesomeIcon type={[3].includes(step) ? 'solid' : 'regular'} icon=\"circle-check\" />\n                </span>\n                <span className=\"fw-bold text-nowrap text-body\">Preview</span>\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </div>\n          : <></>}\n\n\n\n        {ugcData && step == 4 ? <ErrorFound><ChooseMethod ugcData={ugcData} requestMode={requestMode} setStep={setStep} setRequestMode={setRequestMode} hideUgc={hideUgc} /></ErrorFound> : null}\n\n        {ugcData && step == 1 ? <ErrorFound><GeneralRequest ugcData={ugcData} requestMode={requestMode} setStep={setStep} setAcceptTnc={setAcceptTnc} acceptTnc={acceptTnc} tncError={tncError} setTncError={setTncError} selectedTemplate={selectedTemplate} setSelectedTemplate={setSelectedTemplate} setCustom_msg={setCustom_msg} custom_msg={custom_msg} setBrand_link={setBrand_link} brand_link={brand_link} setTermslink={setTermslink} setTermstype={setTermstype} termstype={termstype} hideUgc={hideUgc} onUpdateTemplate={onUpdateTemplate} /></ErrorFound> : null}\n\n        {((acceptTnc && requestMode == 0) || requestMode == 1) && step == 2 ? <ErrorFound><SocialAccounts setStep={setStep} setUserName={setUserName} setIsAccount={setIsAccount} networkId={ugcData?.data[0].networkId != 18 ? ugcData?.data[0].networkId : 2} /></ErrorFound> : \"\"}\n\n        {custom_msg && ugcData && step == 3 ? <ErrorFound><CopyUrl requestMode={requestMode} onRaiseRequest={onRaiseRequest} setUserName={setUserName} networkId={ugcData?.data[0].networkId} setUgcTabKey={setUgcTabKey} setStep={setStep} ugcData={ugcData} custom_msg={custom_msg} isRequesting={isRequesting} /></ErrorFound> : null}\n\n      </div>\n\n    </Modal.Body>\n  </Modal>\n};\n\nexport default (UgcModal);\n","import React, { Component } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass ShowMoreContent extends Component {\n       state = { readMore: false, lines: 0 }\n\n       readMoreTxt = () => {\n              this.setState({ readMore: !this.state.readMore })\n       }\n\n       countLines = (id) => {\n              setTimeout(() => {\n                     var el = document.getElementById(id);\n                     var divHeight = el ? el.offsetHeight : 40\n                     var lines = divHeight / 22;\n                     this.setState({ lines: lines });\n              }, 100);\n       }\n       render() {\n              const { content, idIndex, line, classes } = this.props;\n              const { readMore, lines } = this.state;\n\n              if (content && content.length > 0) {\n                     this.countLines(`constent-${idIndex}`)\n              }\n\n              return <div className={classes}>\n                     <Collapse in={readMore} className={`d-block pb-0 mb-0 overflow-hidden position-relative ${lines > line ? !readMore ? 'show_more_content' : '' : ''}`}>\n                            <div className=\"w-100\">\n                                   <p id={`constent-${idIndex}`} className=\"pb-1 mb-0 text-break\">{ReactHtmlParser(content)}</p>\n                            </div>\n                     </Collapse>\n                     {lines > line ?\n                            <button type=\"button\" className=\"btn btn-sm btn-link text-decoration-underline fw-semibold p-0\" onClick={()=>this.readMoreTxt()}>\n                                   {readMore ? 'Show Less' : 'Show More'}\n                            </button>\n                            : null}\n              </div>\n       }\n}\n\nexport default ShowMoreContent;","import React, { Component } from 'react'\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\nimport '@splidejs/splide/css';\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\nimport ShowMoreContent from '../../../../../CommonComponents/ShowMoreContent';\nimport ImageType from '../../../../../CommonComponents/MediaType/ImageType';\nimport Author from '../../../../../CommonComponents/Author/Author';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../CommonComponents/AssetsHelper';\nimport ReactHtmlParser from 'react-html-parser';\nimport ModalMedia from '../../ContentModal/Elements/ModalMedia';\n\n\n\nexport default class CardPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.mainRef = React.createRef();\n  }\n\n  handleThumbs = (id) => {\n    if (this.mainRef.current) {\n      this.mainRef.current.go(id);\n    }\n  };\n\n  render() {\n\n    const {ugcData, handleAllImageError} = this.props\n\n    const mainOptions = {\n      type      : 'loop',\n      perPage   : 1,\n      perMove   : 1,\n      pagination: false,\n      navigation: false,\n      arrows    : ugcData?.data?.length > 1\n    };\n\n    return <div className='mx-auto w-100' style={{maxWidth:450}}>\n              <Splide hasTrack={ false } options={mainOptions}>\n                <SplideTrack>\n                {ugcData.data && ugcData.data.length ? ugcData.data.map((item,index)=>{ \n                  return <SplideSlide key={index}>\n                      <div className={'d-flex flex-column w-100'}>\n                        {/* <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={item.postFile} alt={\"\"} isCover={true} /> */}\n                        <div style={{maxHeight:450}}>\n                        <ModalMedia modalData={item} handleAllImageError={handleAllImageError} />\n                        </div>\n                        <div className='p-3'>\n                          <div className=\"d-flex align-items-center mb-2\">\n                              <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\n                                  <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                      imageSize={40}\n                                      symbolClass={'symbol-label fw-bolder fs-5'}\n                                      name={item.name} profileUrl={item.picture} networkId={item.networkId} />\n                                  <div className=\"pe-2 w-100 overflow-hidden\">\n                                      <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{item.name}</strong></p>\n                                      <p className=\"mb-1 text-gray-500 text-break fs-9\">@{item.username}</p>\n                                  </div>\n                              </div>  \n                              <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\n                                  <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(item.networkId)}</Tooltip>}>\n                                      <FontAwesomeIcon type='brands' icon={GET_NETWORK_ICON(item.networkId)} iconClass={'fs-3'} />\n                                  </OverlayTrigger>\n                              </span>\n                          </div>\n                        </div>\n                        <div>{ReactHtmlParser(item.postcontent.slice(0, 150))} {item.postcontent?.length > 150 ? '...' : '' }</div>\n                      </div>\n                  </SplideSlide>\n                    }): <SplideSlide>\n                    <div className={'d-flex flex-column w-100'}>\n                      <div style={{maxHeight:450}}>\n                      <div class=\"pb-0\"><div class=\"sk_img rounded-0 w-100 flex-shrink-0 overflow-hidden\" style={{paddingBottom: '100%'}}></div></div>\n                      </div>\n                      <div>\n                      <div class=\"d-flex align-items-center p-3\"><div class=\"d-flex align-items-center me-2 flex-grow-1 overflow-hidden\"><div class=\"sk_img symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div><div class=\"overflow-hidden w-100\" style={{maxWidth: '130px'}}><p class=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p><span class=\"sk_line sk_line_50 sk_line_height_8 mb-0 d-block\"></span></div></div><span class=\"d-flex align-items-end flex-column flex-shrink-0\" style={{width: '100px'}}><div class=\"sk_img symbol symbol-28 rounded-1 flex-shrink-0 me-2 overflow-hidden\"></div></span></div>\n                      <div className='pt-4'><p class=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p> <p class=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p> <p class=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p></div>\n                      \n                      </div>\n                      <div></div>\n                    </div>\n                </SplideSlide>}\n                </SplideTrack>\n\n                {/* <div className=\"splide__arrows\" style={{display:ugcData?.data?.length > 1 ? 'block' : 'none'}}>\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--prev start-0\">\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-left'}/>\n                  </Button>\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--next end-0\">\n                      <FontAwesomeIcon type={'solid'} icon={'arrow-right'}/>\n                  </Button>\n                </div> */}\n              </Splide>\n            </div>\n\n  }\n}\n"],"names":["ModalMedia","Component","constructor","props","super","handleResize","this","setState","winWidth","window","innerWidth","winHeight","innerHeight","onMediaLoad","async","modalData","mediaHeight","mediaWidth","mediaSize","height","width","getImageSize","newMedia","error","state","count","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","handleAllImageError","autoPlay","movePost","scale","Math","min","paddingBottom","type","_jsx","className","children","TextType","mediaClass","size","content","postcontent","rating","socialNetworkId","networkId","fontSize","lineCount","style","maxWidth","ImageType","url","postFile","icon","alt","item","isCover","VideoType","mediaUrl","mediaFile","mediaClip","poster","muted","controls","loop","isupdate","copyUrl","arguments","openSteps","copied","hash","accountDetails","postUrl","sendRequest","onRaiseRequest","setUserName","copyText","ugcData","custom_msg","requestMode","postLink","data","link","JSON","stringify","config","method","TINY_URL","headers","axios","tinyRequest","then","response","tiny_url","catch","ex","navigator","clipboard","writeText","bitlyurl","localStorage","getItem","raiseReq","setTimeout","open","username","location","replace","HOST_URL","TOAST_ERROR","setStep","isRequesting","_jsxs","_Fragment","Form","Group","Control","as","id","maxLength","cols","rows","value","disabled","Label","htmlFor","onChange","e","target","InputGroup","Text","FontAwesomeIcon","String","Button","variant","onClick","CreateTemplate","brandFilename","editData","client_logo","selectedBrand","client_logo_name","selectedBrandFile","tncFilename","custom_terms","selectedtnc","custom_terms_name","selectedtncFile","selectedTemplate","acceptTnc","logoError","tncError","templateName","name","custom_message","tncerrorMsg","nameerrorMsg","msgerrorMsg","setBrandLogo","imgUrl","mediaData","fileName","setTnc","removeBrandLogo","removeTnc","onSaveTemplate","obj","ownerId","ugcterms","edit","ADD_UGC_TEMPLATE","onAddNewTemplate","show","onHide","Modal","centered","Header","closeButton","Title","Body","placeholder","autoComplete","Image","src","load","fluid","OverlayTrigger","placement","overlay","Tooltip","ImageUploader","uploadPath","uploadAgents","allowedFile","onImgUpload","Footer","connect","dispatch","callback","GeneralRequest","postauthor","posthandle","authorpicture","postcarousel","modalOpen","createTemplate","isEdit","setBrand_link","setTermslink","setTermstype","onCreateTemplate","onHideTemplate","getSelectedTemplate","onTemplateChange","setItem","template","length","filter","t","onNextStep","onUpdateTemplate","setTncError","tmp","setCustom_msg","setSelectedTemplate","onTemplateRemove","deleteTemplate","owner","onTemplateEdit","brand_link","_this$getSelectedTemp","_this$getSelectedTemp2","_this$getSelectedTemp3","_this$getSelectedTemp4","setAcceptTnc","termstype","iconClass","Dropdown","onSelect","Toggle","Menu","map","Item","eventKey","Link","to","baseUrl","download","Check","checked","href","rel","DELETE_UGC_TEMPLATE","channel","BroadcastChannel","SAccounts","socialAccount","authorName","authorAvatar","errorMsg","otherAc","accountList","selectedPersonalAccount","handleMessage","parse","event","addUserAccount","_this$props$userData","_this$props$userData$","GET_SOCIAL_ACCOUNT_DATA","userData","user","userhashId","filterAccountData","_socialAccountsData$a","socialAccountsData","allAcc","accountInformations","forEach","acc","Network","ConnectedAccounts","value2","accountName","push","unshift","id_str","profilePicture","picture","color","description","status","_allAcc$","nextStep","onClickToConnectAccount","networksMap","showAddAccountAlertNew","networkname","_JSON$parse","document","cookie","Application","reInit","parseInt","removeItem","_selectedPersonalAcco","_selectedPersonalAcco2","_selectedPersonalAcco3","_selectedPersonalAcco4","minWidth","Author","imageSize","symbolClass","profileUrl","GET_NETWORK_ICON","_acc$ConnectedAccount","_acc$ConnectedAccount2","getCookieData","withCookies","cookies","setCookie","useCookies","navigation","useNavigate","useDispatch","useSelector","userAccountData","socialAccounts","authenticated","shallowEqual","useEffect","_userData$user","ChooseMethod","_ugcData$data","setRequestMode","Input","hideUgc","pointerEvents","ugcTabKey","setUgcTabKey","useState","step","isAccount","setIsAccount","userName","termslink","setIsRequesting","getPostIds","postIds","index","referenceId","join","_tempSelected","_tempSelected2","_tempSelected3","unique_code","findIndex","tempSelected","feedId","selectedImage","selectedVideo","selectedUsername","handle","postId","bitlylink","rightsVia","hashtag","networkPostId","wallId","client","SEND_UGC","backdrop","CardPreview","Nav","includes","ErrorFound","_tempSelected4","_tempSelected5","_tempSelected6","_tempSelected7","_tempSelected8","_tempSelected9","SocialAccounts","CopyUrl","ShowMoreContent","readMore","lines","readMoreTxt","countLines","el","getElementById","offsetHeight","idIndex","line","classes","Collapse","in","ReactHtmlParser","handleThumbs","mainRef","current","go","React","mainOptions","perPage","perMove","pagination","arrows","Splide","hasTrack","options","SplideTrack","_item$postcontent","SplideSlide","maxHeight","GET_NETWORK_NAME","slice","class"],"sourceRoot":""}