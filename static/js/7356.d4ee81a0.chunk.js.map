{"version":3,"file":"static/js/7356.d4ee81a0.chunk.js","mappings":"kOAQA,MAAMA,EAAUC,EAAAA,MAAW,IACzB,iCAEIC,EAAYD,EAAAA,MAAW,IAC3B,kCAEIE,EAAsBF,EAAAA,MAAW,IACrC,iCAEIG,EAAkBH,EAAAA,MAAW,IACjC,iCAGF,MAAMI,UAAgBC,EAAAA,UACpBC,iBAAAA,GACE,MAAM,mBAAEC,EAAkB,gBAAEC,EAAe,iBAACC,GAAsBC,KAAKC,MACrEJ,GAAoBE,EAAiBG,mBAAmBC,QAAgBL,EAC1E,CAEFM,MAAAA,GACE,MAAM,yBACJC,EAAwB,gCACxBC,EAA+B,0BAC/BC,EAAyB,4BACzBC,GACER,KAAKC,MAAMF,iBAGf,OACEU,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEMC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEF,SAAA,EACfF,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CAACC,UAAUN,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,UACxBF,EAAAA,EAAAA,KAAClB,EAAS,OAEZkB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,MAAKF,UAClBF,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CAACC,UAAUN,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,UACxBF,EAAAA,EAAAA,KAACpB,EAAO,CAAC2B,OAAQR,EAA6BS,KAAMV,EAA2BW,IAAK,EAAGC,IAAK,SAIhGV,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CAACC,UAAUN,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,UACxBF,EAAAA,EAAAA,KAAChB,EAAe,CACduB,OAAQV,KACJD,OAIRO,EAAAA,EAAAA,MAACQ,EAAAA,EAAI,CAACP,UAAU,0CAAyCF,SAAA,EACvDF,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACR,UAAU,WAAUF,UAC9BF,EAAAA,EAAAA,KAAA,MAAIa,MAAM,gCAA+BX,SAAC,yBAK5CF,EAAAA,EAAAA,KAACc,EAAAA,EAAQ,CAACV,UAAU,MAAKF,SACrBL,GAAmCG,EAAAA,EAAAA,KAACe,EAAAA,EAAa,CAACC,IAAK,KACvDhB,EAAAA,EAAAA,KAACK,EAAAA,SAAQ,CAACC,UAAUN,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAAMC,UACtBF,EAAAA,EAAAA,KAACjB,EAAmB,IAEhBa,EACJqB,KAAM,OAFDpB,cAW3B,EAIF,MAcA,GAAeqB,EAAAA,EAAAA,KAdWC,IACjB,CACL7B,iBAAkB6B,EAAM7B,iBACxB8B,OAAQD,EAAME,SAASD,OACvB/B,gBAAkB8B,EAAM9B,gBAAgBiC,mBAIfC,IACpB,CACLnC,mBAAqBoC,GAAYD,GAASE,EAAAA,EAAAA,IAAuBD,OAIrE,CAA8DvC,E,uEC7F9D,MAAM8B,EAAiBvB,IAEnBQ,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mBAAkBF,UAC/BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,YAAYsB,KAAKC,EAAAA,EAAAA,IAAQ,uCAAuCnC,EAAMwB,WAAYY,MAAO,OAAQC,OAAQ,YAK9H,EAAehD,EAAAA,KAAWkC,E","sources":["app/Display/analytics-new/activityHub/Display.js","app/Display/analytics-new/layout/skeleton/imageSkeleton.js"],"sourcesContent":["import React, { Component, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getScreenAnalyticsData,\r\n} from \"../../../../actions/analyticsNew\";\r\nimport { Card, CardBody, CardHeader } from \"react-bootstrap\";\r\nimport ImageSkeleton from \"../layout/skeleton/imageSkeleton\";\r\n\r\nconst TopCard = React.lazy(() =>\r\n  import(\"../layout/common/topCard\")\r\n)\r\nconst Tabheader = React.lazy(() =>\r\n  import(\"../layout/common/tabheader\")\r\n)\r\nconst AssetsTypeAreaChart = React.lazy(() =>\r\n  import(\"../layout/common/assetsTypeAreaChart\")\r\n);\r\nconst ScreensOverview = React.lazy(() =>\r\n  import(\"../components/activityHub/screensOverview\")\r\n);\r\n\r\nclass Display extends Component { //selected_feed_data\r\n  componentDidMount() {\r\n    const { getScreenAnalytics, analyticsStatus,analyticsRecords  } = this.props;\r\n      getScreenAnalytics(!analyticsRecords.selected_feed_data.length ? true : analyticsStatus)\r\n    }\r\n\r\n  render() {\r\n    const {\r\n      get_screen_overview_data,\r\n      get_screen_overview_data_loader,\r\n      get_screen_analytics_data,\r\n      get_screen_analytics_loader\r\n    } = this.props.analyticsRecords;\r\n\r\n\r\n    return (\r\n      <>\r\n          \r\n            <div className=\"\">\r\n              <Suspense fallback={<></>}>\r\n                <Tabheader />\r\n               </Suspense>  \r\n              <div className=\"row\">\r\n                <Suspense fallback={<></>}>\r\n                  <TopCard loader={get_screen_analytics_loader} data={get_screen_analytics_data} col={2} res={6}  />\r\n                </Suspense>  \r\n              </div>\r\n\r\n              <Suspense fallback={<></>}>\r\n                <ScreensOverview\r\n                  loader={get_screen_overview_data_loader}\r\n                  {...get_screen_overview_data}\r\n                />\r\n              </Suspense>\r\n\r\n              <Card className=\"sw-card-custom gutter-b p-5 card-shadow\">\r\n                <CardHeader className=\"p-0 pb-3\">\r\n                  <h6 class=\"card-label font-weight-bolder\">\r\n                    Content Analytics\r\n                  </h6>\r\n                </CardHeader>\r\n\r\n                <CardBody className=\"p-0\">\r\n                  { get_screen_overview_data_loader ? (<ImageSkeleton img={3} />) : (\r\n                    <Suspense fallback={<></>}>\r\n                        <AssetsTypeAreaChart\r\n                        key={get_screen_overview_data_loader}\r\n                        {...get_screen_overview_data}\r\n                        type={\"bar\"}\r\n                      />\r\n                    </Suspense>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst widgetstateProps = (state) => {  \r\n  return {\r\n    analyticsRecords: state.analyticsRecords,\r\n    detail: state.appsMore.detail,\r\n    analyticsStatus : state.analyticsStatus.trialAccessAPI\r\n  };\r\n};\r\n\r\nconst widgetDispatchProps = (dispatch) => {\r\n  return {\r\n    getScreenAnalytics: (isTrial) => dispatch(getScreenAnalyticsData(isTrial)),\r\n  };\r\n};\r\n\r\nexport default connect(widgetstateProps, widgetDispatchProps)(Display);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst ImageSkeleton = (props) => {\r\n  return (\r\n    <div className=\"py-1 text-center\">\r\n      <img className=\"img-fluid\" src={baseUrl(`dashboard/analytic/content-analytis-${props.img}.svg`)} width={\"100%\"} height={\"403px\"}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImageSkeleton)"],"names":["TopCard","React","Tabheader","AssetsTypeAreaChart","ScreensOverview","Display","Component","componentDidMount","getScreenAnalytics","analyticsStatus","analyticsRecords","this","props","selected_feed_data","length","render","get_screen_overview_data","get_screen_overview_data_loader","get_screen_analytics_data","get_screen_analytics_loader","_jsx","_Fragment","children","_jsxs","className","Suspense","fallback","loader","data","col","res","Card","CardHeader","class","CardBody","ImageSkeleton","img","type","connect","state","detail","appsMore","trialAccessAPI","dispatch","isTrial","getScreenAnalyticsData","src","baseUrl","width","height"],"sourceRoot":""}