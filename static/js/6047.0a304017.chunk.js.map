{"version":3,"file":"static/js/6047.0a304017.chunk.js","mappings":"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","sources":["app/Layouts/Main/Analytics/layout/common/filterModeration.js","app/Layouts/Main/Analytics/layout/common/sectionHeading.js","app/Layouts/Main/Analytics/layout/skeleton/trueSenseSkeleton.js","app/Layouts/Main/Analytics/content/components/trueSense.js"],"sourcesContent":["import moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst FilterModeration = (props) => {\n\n  const { children, dateFilter, selectedWallFeed, link, isClass } = props  \n\n  return (\n     <Link className={`${isClass ? isClass : `mb-4 last-child-mb-0 d-block`}`} to={selectedWallFeed?.length ? `/moderation/index/${localStorage.getItem('wallId')}?${link}${dateFilter ? `/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}` : ''}${dateFilter ? `/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}` : ``}` : `#`}>\n        {children}\n    </Link>\n  );\n}\n\nexport default FilterModeration\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\nimport { baseUrl } from \"../../../../../../utils\";\n\nconst SectionHeading = (props) => {\n\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin, isDashboard,isTrial } = props\n\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\n\n  return (\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-3' : section==3 ? 'p-0 pb-3' : 'px-3 pt-3 border-0 pb-0'}`}>\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\n        <h6 className={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : 'm-0'} `}>\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\n         { !isTrial && ((total > 5) || moreData) ? ( <Button variant=\"link\" className=\"p-0\" onClick={() => handlePopup(true)} > See More </Button> ) : null\n        }\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nexport default SectionHeading;\n","import React from \"react\";\n\nconst List = () => {\n  return (\n    <div className=\"col-sm-6 col-md-6 col-xxl-12 mb-5\">\n      <div className=\"card card-custom card-stretch home-widget-section p-6\">\n        <div className=\"sk_loader_\">\n          <div className=\"wall_progress\">\n            <p className=\"sk_line sk_line_height_10 sk_line_80 mb-7\"></p>\n            <h3 className=\"sk_line sk_line_40 sk_line_height_26 mb-5\"></h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst TrueSenseSkeleton = () => {\n  return (\n    <div className=\"row\">\n      <List />\n      <List />\n      <List />\n    </div>\n  );\n};\n\nexport default React.memo(TrueSenseSkeleton);\n","  import React from \"react\";\n  import { Card, CardBody } from \"react-bootstrap\";\n  import TrueSenseSkeleton from \"../../layout/skeleton/trueSenseSkeleton\";\n  import FilterModeration from \"../../layout/common/filterModeration\";\n  import SectionHeading from \"../../layout/common/sectionHeading\";\nimport { kFormatter } from \"../../../../../../utils\";\n\n  const TrueSense = (props) => {\n  const { truSense, loader, dateFilter, selectedWallFeed } = props;\n\n  return (\n    <>\n      <Card className=\"sw-card-custom gutter-b card-shadow mb-4\">\n        <SectionHeading  section={2} icon={'ai'} title={'TruSense Recommendation'} />\n        <CardBody className=\"p-3\">\n           {loader ? <TrueSenseSkeleton/>\n            : truSense && Object.keys(truSense).length\n            ? truSense.map((data,key) => { \n                return (\n                  <FilterModeration dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`recommendation=${data.name}`}>\n                    <div className=\"p-3 border rounded\">\n                      <div className=\"d-flex align-items-center\">\n                        <div className=\"d-flex align-items-start me-2 w-100\">\n                          <div className=\"border rounded p-2 me-4\">\n                            <span className={`bulits ${key==0 ? 'bg-success' : key==1 ? 'bg-warning' : 'bg-danger' }  d-block rounded-circle`}></span>\n                          </div>\n                          <div className=\"\">\n                            <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name font-size-lg\">\n                              { data.name }\n                            </p>\n                            <p className=\"text-dark mb-0\">\n                              {data.details}\n                            </p>\n                          </div>\n                        </div>\n                        <p className=\"font-weight-boldest text-dark fs-2 m-0\">\n                          { loader ? 0 :  kFormatter(data.count)}\n                        </p>\n                      </div>\n                   </div>\n                 </FilterModeration>  \n                );\n              })\n            : null}\n            \n        </CardBody>\n      </Card>\n    </>\n  );\n};\n\n  export default React.memo(TrueSense);\n"],"names":["props","children","dateFilter","selectedWallFeed","link","isClass","_jsx","Link","className","to","length","localStorage","getItem","moment","startDate","format","endDate","title","section","cardTitleCss","icon","iconFull","moreData","total","handlePopup","headingMargin","isDashboard","isTrial","CardHeader","_jsxs","CardTitle","src","baseUrl","height","width","Button","variant","onClick","List","TrueSenseSkeleton","React","TrueSense","truSense","loader","_Fragment","Card","SectionHeading","CardBody","Object","keys","map","data","key","FilterModeration","name","details","kFormatter","count"],"sourceRoot":""}