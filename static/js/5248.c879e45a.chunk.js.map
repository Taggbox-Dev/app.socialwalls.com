{"version":3,"file":"static/js/5248.c879e45a.chunk.js","mappings":"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","sources":["../node_modules/react-from-dom/src/helpers.ts","../node_modules/react-from-dom/src/index.ts","../node_modules/react-inlinesvg/src/helpers.ts","../node_modules/react-inlinesvg/src/index.tsx","../node_modules/exenv/index.js"],"sourcesContent":["export const styleToObject = (input: string): Record<string, any> => {\n  const attributes = input.split(/ ?; ?/);\n\n  return attributes.reduce((acc: Record<string, any>, d: string) => {\n    const [key, value] = d.split(/ ?: ?/);\n\n    if (key && value) {\n      acc[key.replace(/-(\\w)/g, (_$0, $1) => $1.toUpperCase())] = Number.isNaN(Number(value))\n        ? value\n        : Number(value);\n    }\n\n    return acc;\n  }, {});\n};\n\n/* istanbul ignore next */\nexport function randomString(length = 6): string {\n  const characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let result = '';\n\n  for (let index = length; index > 0; --index) {\n    result += characters[Math.round(Math.random() * (characters.length - 1))];\n  }\n\n  return result;\n}\n\nexport const noTextChildNodes = [\n  'br',\n  'col',\n  'colgroup',\n  'dl',\n  'hr',\n  'iframe',\n  'img',\n  'input',\n  'link',\n  'menuitem',\n  'meta',\n  'ol',\n  'param',\n  'select',\n  'table',\n  'tbody',\n  'tfoot',\n  'thead',\n  'tr',\n  'ul',\n  'wbr',\n];\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Taken from https://raw.githubusercontent.com/facebook/react/baff5cc2f69d30589a5dc65b089e47765437294b/packages/react-dom/src/shared/possibleStandardNames.js\n// tslint:disable:object-literal-sort-keys\nexport const possibleStandardNames: Record<string, any> = {\n  // HTML\n  'accept-charset': 'acceptCharset',\n  acceptcharset: 'acceptCharset',\n  accesskey: 'accessKey',\n  allowfullscreen: 'allowFullScreen',\n  autocapitalize: 'autoCapitalize',\n  autocomplete: 'autoComplete',\n  autocorrect: 'autoCorrect',\n  autofocus: 'autoFocus',\n  autoplay: 'autoPlay',\n  autosave: 'autoSave',\n  cellpadding: 'cellPadding',\n  cellspacing: 'cellSpacing',\n  charset: 'charSet',\n  class: 'className',\n  classid: 'classID',\n  classname: 'className',\n  colspan: 'colSpan',\n  contenteditable: 'contentEditable',\n  contextmenu: 'contextMenu',\n  controlslist: 'controlsList',\n  crossorigin: 'crossOrigin',\n  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',\n  datetime: 'dateTime',\n  defaultchecked: 'defaultChecked',\n  defaultvalue: 'defaultValue',\n  enctype: 'encType',\n  for: 'htmlFor',\n  formmethod: 'formMethod',\n  formaction: 'formAction',\n  formenctype: 'formEncType',\n  formnovalidate: 'formNoValidate',\n  formtarget: 'formTarget',\n  frameborder: 'frameBorder',\n  hreflang: 'hrefLang',\n  htmlfor: 'htmlFor',\n  httpequiv: 'httpEquiv',\n  'http-equiv': 'httpEquiv',\n  icon: 'icon',\n  innerhtml: 'innerHTML',\n  inputmode: 'inputMode',\n  itemid: 'itemID',\n  itemprop: 'itemProp',\n  itemref: 'itemRef',\n  itemscope: 'itemScope',\n  itemtype: 'itemType',\n  keyparams: 'keyParams',\n  keytype: 'keyType',\n  marginwidth: 'marginWidth',\n  marginheight: 'marginHeight',\n  maxlength: 'maxLength',\n  mediagroup: 'mediaGroup',\n  minlength: 'minLength',\n  nomodule: 'noModule',\n  novalidate: 'noValidate',\n  playsinline: 'playsInline',\n  radiogroup: 'radioGroup',\n  readonly: 'readOnly',\n  referrerpolicy: 'referrerPolicy',\n  rowspan: 'rowSpan',\n  spellcheck: 'spellCheck',\n  srcdoc: 'srcDoc',\n  srclang: 'srcLang',\n  srcset: 'srcSet',\n  tabindex: 'tabIndex',\n  typemustmatch: 'typeMustMatch',\n  usemap: 'useMap',\n\n  // SVG\n  accentheight: 'accentHeight',\n  'accent-height': 'accentHeight',\n  alignmentbaseline: 'alignmentBaseline',\n  'alignment-baseline': 'alignmentBaseline',\n  allowreorder: 'allowReorder',\n  arabicform: 'arabicForm',\n  'arabic-form': 'arabicForm',\n  attributename: 'attributeName',\n  attributetype: 'attributeType',\n  autoreverse: 'autoReverse',\n  basefrequency: 'baseFrequency',\n  baselineshift: 'baselineShift',\n  'baseline-shift': 'baselineShift',\n  baseprofile: 'baseProfile',\n  calcmode: 'calcMode',\n  capheight: 'capHeight',\n  'cap-height': 'capHeight',\n  clippath: 'clipPath',\n  'clip-path': 'clipPath',\n  clippathunits: 'clipPathUnits',\n  cliprule: 'clipRule',\n  'clip-rule': 'clipRule',\n  colorinterpolation: 'colorInterpolation',\n  'color-interpolation': 'colorInterpolation',\n  colorinterpolationfilters: 'colorInterpolationFilters',\n  'color-interpolation-filters': 'colorInterpolationFilters',\n  colorprofile: 'colorProfile',\n  'color-profile': 'colorProfile',\n  colorrendering: 'colorRendering',\n  'color-rendering': 'colorRendering',\n  contentscripttype: 'contentScriptType',\n  contentstyletype: 'contentStyleType',\n  diffuseconstant: 'diffuseConstant',\n  dominantbaseline: 'dominantBaseline',\n  'dominant-baseline': 'dominantBaseline',\n  edgemode: 'edgeMode',\n  enablebackground: 'enableBackground',\n  'enable-background': 'enableBackground',\n  externalresourcesrequired: 'externalResourcesRequired',\n  fillopacity: 'fillOpacity',\n  'fill-opacity': 'fillOpacity',\n  fillrule: 'fillRule',\n  'fill-rule': 'fillRule',\n  filterres: 'filterRes',\n  filterunits: 'filterUnits',\n  floodopacity: 'floodOpacity',\n  'flood-opacity': 'floodOpacity',\n  floodcolor: 'floodColor',\n  'flood-color': 'floodColor',\n  fontfamily: 'fontFamily',\n  'font-family': 'fontFamily',\n  fontsize: 'fontSize',\n  'font-size': 'fontSize',\n  fontsizeadjust: 'fontSizeAdjust',\n  'font-size-adjust': 'fontSizeAdjust',\n  fontstretch: 'fontStretch',\n  'font-stretch': 'fontStretch',\n  fontstyle: 'fontStyle',\n  'font-style': 'fontStyle',\n  fontvariant: 'fontVariant',\n  'font-variant': 'fontVariant',\n  fontweight: 'fontWeight',\n  'font-weight': 'fontWeight',\n  glyphname: 'glyphName',\n  'glyph-name': 'glyphName',\n  glyphorientationhorizontal: 'glyphOrientationHorizontal',\n  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',\n  glyphorientationvertical: 'glyphOrientationVertical',\n  'glyph-orientation-vertical': 'glyphOrientationVertical',\n  glyphref: 'glyphRef',\n  gradienttransform: 'gradientTransform',\n  gradientunits: 'gradientUnits',\n  horizadvx: 'horizAdvX',\n  'horiz-adv-x': 'horizAdvX',\n  horizoriginx: 'horizOriginX',\n  'horiz-origin-x': 'horizOriginX',\n  imagerendering: 'imageRendering',\n  'image-rendering': 'imageRendering',\n  kernelmatrix: 'kernelMatrix',\n  kernelunitlength: 'kernelUnitLength',\n  keypoints: 'keyPoints',\n  keysplines: 'keySplines',\n  keytimes: 'keyTimes',\n  lengthadjust: 'lengthAdjust',\n  letterspacing: 'letterSpacing',\n  'letter-spacing': 'letterSpacing',\n  lightingcolor: 'lightingColor',\n  'lighting-color': 'lightingColor',\n  limitingconeangle: 'limitingConeAngle',\n  markerend: 'markerEnd',\n  'marker-end': 'markerEnd',\n  markerheight: 'markerHeight',\n  markermid: 'markerMid',\n  'marker-mid': 'markerMid',\n  markerstart: 'markerStart',\n  'marker-start': 'markerStart',\n  markerunits: 'markerUnits',\n  markerwidth: 'markerWidth',\n  maskcontentunits: 'maskContentUnits',\n  maskunits: 'maskUnits',\n  numoctaves: 'numOctaves',\n  overlineposition: 'overlinePosition',\n  'overline-position': 'overlinePosition',\n  overlinethickness: 'overlineThickness',\n  'overline-thickness': 'overlineThickness',\n  paintorder: 'paintOrder',\n  'paint-order': 'paintOrder',\n  'panose-1': 'panose1',\n  pathlength: 'pathLength',\n  patterncontentunits: 'patternContentUnits',\n  patterntransform: 'patternTransform',\n  patternunits: 'patternUnits',\n  pointerevents: 'pointerEvents',\n  'pointer-events': 'pointerEvents',\n  pointsatx: 'pointsAtX',\n  pointsaty: 'pointsAtY',\n  pointsatz: 'pointsAtZ',\n  preservealpha: 'preserveAlpha',\n  preserveaspectratio: 'preserveAspectRatio',\n  primitiveunits: 'primitiveUnits',\n  refx: 'refX',\n  refy: 'refY',\n  renderingintent: 'renderingIntent',\n  'rendering-intent': 'renderingIntent',\n  repeatcount: 'repeatCount',\n  repeatdur: 'repeatDur',\n  requiredextensions: 'requiredExtensions',\n  requiredfeatures: 'requiredFeatures',\n  shaperendering: 'shapeRendering',\n  'shape-rendering': 'shapeRendering',\n  specularconstant: 'specularConstant',\n  specularexponent: 'specularExponent',\n  spreadmethod: 'spreadMethod',\n  startoffset: 'startOffset',\n  stddeviation: 'stdDeviation',\n  stitchtiles: 'stitchTiles',\n  stopcolor: 'stopColor',\n  'stop-color': 'stopColor',\n  stopopacity: 'stopOpacity',\n  'stop-opacity': 'stopOpacity',\n  strikethroughposition: 'strikethroughPosition',\n  'strikethrough-position': 'strikethroughPosition',\n  strikethroughthickness: 'strikethroughThickness',\n  'strikethrough-thickness': 'strikethroughThickness',\n  strokedasharray: 'strokeDasharray',\n  'stroke-dasharray': 'strokeDasharray',\n  strokedashoffset: 'strokeDashoffset',\n  'stroke-dashoffset': 'strokeDashoffset',\n  strokelinecap: 'strokeLinecap',\n  'stroke-linecap': 'strokeLinecap',\n  strokelinejoin: 'strokeLinejoin',\n  'stroke-linejoin': 'strokeLinejoin',\n  strokemiterlimit: 'strokeMiterlimit',\n  'stroke-miterlimit': 'strokeMiterlimit',\n  strokewidth: 'strokeWidth',\n  'stroke-width': 'strokeWidth',\n  strokeopacity: 'strokeOpacity',\n  'stroke-opacity': 'strokeOpacity',\n  suppresscontenteditablewarning: 'suppressContentEditableWarning',\n  suppresshydrationwarning: 'suppressHydrationWarning',\n  surfacescale: 'surfaceScale',\n  systemlanguage: 'systemLanguage',\n  tablevalues: 'tableValues',\n  targetx: 'targetX',\n  targety: 'targetY',\n  textanchor: 'textAnchor',\n  'text-anchor': 'textAnchor',\n  textdecoration: 'textDecoration',\n  'text-decoration': 'textDecoration',\n  textlength: 'textLength',\n  textrendering: 'textRendering',\n  'text-rendering': 'textRendering',\n  underlineposition: 'underlinePosition',\n  'underline-position': 'underlinePosition',\n  underlinethickness: 'underlineThickness',\n  'underline-thickness': 'underlineThickness',\n  unicodebidi: 'unicodeBidi',\n  'unicode-bidi': 'unicodeBidi',\n  unicoderange: 'unicodeRange',\n  'unicode-range': 'unicodeRange',\n  unitsperem: 'unitsPerEm',\n  'units-per-em': 'unitsPerEm',\n  unselectable: 'unselectable',\n  valphabetic: 'vAlphabetic',\n  'v-alphabetic': 'vAlphabetic',\n  vectoreffect: 'vectorEffect',\n  'vector-effect': 'vectorEffect',\n  vertadvy: 'vertAdvY',\n  'vert-adv-y': 'vertAdvY',\n  vertoriginx: 'vertOriginX',\n  'vert-origin-x': 'vertOriginX',\n  vertoriginy: 'vertOriginY',\n  'vert-origin-y': 'vertOriginY',\n  vhanging: 'vHanging',\n  'v-hanging': 'vHanging',\n  videographic: 'vIdeographic',\n  'v-ideographic': 'vIdeographic',\n  viewbox: 'viewBox',\n  viewtarget: 'viewTarget',\n  vmathematical: 'vMathematical',\n  'v-mathematical': 'vMathematical',\n  wordspacing: 'wordSpacing',\n  'word-spacing': 'wordSpacing',\n  writingmode: 'writingMode',\n  'writing-mode': 'writingMode',\n  xchannelselector: 'xChannelSelector',\n  xheight: 'xHeight',\n  'x-height': 'xHeight',\n  xlinkactuate: 'xlinkActuate',\n  'xlink:actuate': 'xlinkActuate',\n  xlinkarcrole: 'xlinkArcrole',\n  'xlink:arcrole': 'xlinkArcrole',\n  xlinkhref: 'xlinkHref',\n  'xlink:href': 'xlinkHref',\n  xlinkrole: 'xlinkRole',\n  'xlink:role': 'xlinkRole',\n  xlinkshow: 'xlinkShow',\n  'xlink:show': 'xlinkShow',\n  xlinktitle: 'xlinkTitle',\n  'xlink:title': 'xlinkTitle',\n  xlinktype: 'xlinkType',\n  'xlink:type': 'xlinkType',\n  xmlbase: 'xmlBase',\n  'xml:base': 'xmlBase',\n  xmllang: 'xmlLang',\n  'xml:lang': 'xmlLang',\n  'xml:space': 'xmlSpace',\n  xmlnsxlink: 'xmlnsXlink',\n  'xmlns:xlink': 'xmlnsXlink',\n  xmlspace: 'xmlSpace',\n  ychannelselector: 'yChannelSelector',\n  zoomandpan: 'zoomAndPan',\n\n  // event handlers\n  onblur: 'onBlur',\n  onchange: 'onChange',\n  onclick: 'onClick',\n  oncontextmenu: 'onContextMenu',\n  ondoubleclick: 'onDoubleClick',\n  ondrag: 'onDrag',\n  ondragend: 'onDragEnd',\n  ondragenter: 'onDragEnter',\n  ondragexit: 'onDragExit',\n  ondragleave: 'onDragLeave',\n  ondragover: 'onDragOver',\n  ondragstart: 'onDragStart',\n  ondrop: 'onDrop',\n  onerror: 'onError',\n  onfocus: 'onFocus',\n  oninput: 'onInput',\n  oninvalid: 'onInvalid',\n  onkeydown: 'onKeyDown',\n  onkeypress: 'onKeyPress',\n  onkeyup: 'onKeyUp',\n  onload: 'onLoad',\n  onmousedown: 'onMouseDown',\n  onmouseenter: 'onMouseEnter',\n  onmouseleave: 'onMouseLeave',\n  onmousemove: 'onMouseMove',\n  onmouseout: 'onMouseOut',\n  onmouseover: 'onMouseOver',\n  onmouseup: 'onMouseUp',\n  onscroll: 'onScroll',\n  onsubmit: 'onSubmit',\n  ontouchcancel: 'onTouchCancel',\n  ontouchend: 'onTouchEnd',\n  ontouchmove: 'onTouchMove',\n  ontouchstart: 'onTouchStart',\n  onwheel: 'onWheel',\n};\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\n\nimport { noTextChildNodes, possibleStandardNames, randomString, styleToObject } from './helpers';\n\nexport interface Options {\n  actions?: Action[];\n  index?: number;\n  level?: number;\n  nodeOnly?: boolean;\n  randomKey?: boolean;\n  selector?: string;\n  type?: string;\n}\n\ninterface Attributes {\n  [index: string]: any;\n\n  key: string;\n}\n\nexport interface Action {\n  // If this returns true, the two following functions are called if they are defined\n  condition: (node: Node, key: string, level: number) => boolean;\n\n  // Use this to inject a component or remove the node\n  // It must return something that can be rendered by React\n  post?: (node: Node, key: string, level: number) => React.ReactNode;\n\n  // Use this to update or replace the node\n  // e.g. for removing or adding attributes, changing the node type\n  pre?: (node: Node, key: string, level: number) => Node;\n}\n\nfunction parseAttributes(node: Node, reactKey: string): Attributes {\n  const attributes: Attributes = {\n    key: reactKey,\n  };\n\n  /* istanbul ignore else */\n  if (node instanceof Element) {\n    const nodeClassNames = node.getAttribute('class');\n\n    if (nodeClassNames) {\n      attributes.className = nodeClassNames;\n    }\n\n    [...node.attributes].forEach(d => {\n      switch (d.name) {\n        // this is manually handled above, so break;\n        case 'class':\n          break;\n        case 'style':\n          attributes[d.name] = styleToObject(d.value);\n          break;\n        case 'allowfullscreen':\n        case 'allowpaymentrequest':\n        case 'async':\n        case 'autofocus':\n        case 'autoplay':\n        case 'checked':\n        case 'controls':\n        case 'default':\n        case 'defer':\n        case 'disabled':\n        case 'formnovalidate':\n        case 'hidden':\n        case 'ismap':\n        case 'itemscope':\n        case 'loop':\n        case 'multiple':\n        case 'muted':\n        case 'nomodule':\n        case 'novalidate':\n        case 'open':\n        case 'readonly':\n        case 'required':\n        case 'reversed':\n        case 'selected':\n        case 'typemustmatch':\n          attributes[possibleStandardNames[d.name] || d.name] = true;\n          break;\n        default:\n          attributes[possibleStandardNames[d.name] || d.name] = d.value;\n      }\n    });\n  }\n\n  return attributes;\n}\n\nfunction parseChildren(childNodeList: NodeList, level: number, options: Options) {\n  const children: React.ReactNode[] = [...childNodeList]\n    .map((node, index) =>\n      convertFromNode(node, {\n        ...options,\n        index,\n        level: level + 1,\n      }),\n    )\n    .filter(Boolean);\n\n  if (!children.length) {\n    return null;\n  }\n\n  return children;\n}\n\nfunction parseName(nodeName: string) {\n  if (/[a-z]+[A-Z]+[a-z]+/.test(nodeName)) {\n    return nodeName;\n  }\n\n  return nodeName.toLowerCase();\n}\n\nexport function convertFromNode(input: Node, options: Options = {}): React.ReactNode {\n  if (!input || !(input instanceof Node)) {\n    return null;\n  }\n\n  const { actions = [], index = 0, level = 0, randomKey } = options;\n\n  let node = input;\n  let key = `${level}-${index}`;\n  const result: React.ReactNode[] = [];\n\n  if (randomKey && level === 0) {\n    key = `${randomString()}-${key}`;\n  }\n\n  /* istanbul ignore else */\n  if (Array.isArray(actions)) {\n    actions.forEach((action: Action) => {\n      if (action.condition(node, key, level)) {\n        if (typeof action.pre === 'function') {\n          node = action.pre(node, key, level);\n\n          if (!(node instanceof Node)) {\n            node = input;\n\n            /* istanbul ignore else */\n            if (process.env.NODE_ENV !== 'production') {\n              // eslint-disable-next-line no-console\n              console.warn(\n                'The `pre` method always must return a valid DomNode (instanceof Node) - your modification will be ignored (Hint: if you want to render a React-component, use the `post` method instead)',\n              );\n            }\n          }\n        }\n\n        if (typeof action.post === 'function') {\n          result.push(action.post(node, key, level));\n        }\n      }\n    });\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  switch (node.nodeType) {\n    case 1: {\n      // regular dom-node\n      return React.createElement(\n        parseName(node.nodeName),\n        parseAttributes(node, key),\n        parseChildren(node.childNodes, level, options),\n      );\n    }\n    case 3: {\n      // textnode\n      const nodeText = node.nodeValue?.toString() || '';\n\n      /* istanbul ignore else */\n      if (/^\\s+$/.test(nodeText) && !/[\\u00A0\\u202F]/.test(nodeText)) {\n        return null;\n      }\n\n      /* istanbul ignore next */\n      if (!node.parentNode) {\n        return nodeText;\n      }\n\n      const parentNodeName = node.parentNode.nodeName.toLowerCase();\n\n      if (noTextChildNodes.includes(parentNodeName)) {\n        /* istanbul ignore else */\n        if (/\\S/.test(nodeText)) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            `A textNode is not allowed inside '${parentNodeName}'. Your text \"${nodeText}\" will be ignored`,\n          );\n        }\n\n        return null;\n      }\n\n      return nodeText;\n    }\n    case 8: {\n      // html-comment\n      return null;\n    }\n    /* istanbul ignore next */\n    default: {\n      return null;\n    }\n  }\n}\n\nexport function convertFromString(input: string, options: Options = {}): React.ReactNode | Node {\n  if (!input || typeof input !== 'string') {\n    return null;\n  }\n\n  const { nodeOnly = false, selector = 'body > *', type = 'text/html' } = options;\n\n  try {\n    const parser = new DOMParser();\n    const document = parser.parseFromString(input, type as DOMParserSupportedType);\n    const node = document.querySelector(selector);\n\n    if (!(node instanceof Node)) {\n      throw new TypeError('Error parsing input');\n    }\n\n    if (nodeOnly) {\n      return node;\n    }\n\n    return convertFromNode(node, options);\n  } catch (error) {\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n\n  return null;\n}\n\nexport default function convert(\n  input: Node | string,\n  options: Options = {},\n): React.ReactNode | Node {\n  if (typeof input === 'string') {\n    return convertFromString(input, options);\n  }\n\n  if (input instanceof Node) {\n    return convertFromNode(input, options);\n  }\n\n  return null;\n}\n","import { canUseDOM as canUseDOMFlag } from 'exenv';\n\nimport type { PlainObject } from './types';\n\nexport const STATUS = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  FAILED: 'failed',\n  READY: 'ready',\n  UNSUPPORTED: 'unsupported',\n} as const;\n\nexport function canUseDOM(): boolean {\n  return canUseDOMFlag;\n}\n\nexport function isSupportedEnvironment(): boolean {\n  return supportsInlineSVG() && typeof window !== 'undefined' && window !== null;\n}\n\nexport function supportsInlineSVG(): boolean {\n  /* istanbul ignore next */\n  if (!document) {\n    return false;\n  }\n\n  const div = document.createElement('div');\n\n  div.innerHTML = '<svg />';\n  const svg = div.firstChild as SVGSVGElement;\n\n  return !!svg && svg.namespaceURI === 'http://www.w3.org/2000/svg';\n}\n\nfunction randomCharacter(character: string) {\n  return character[Math.floor(Math.random() * character.length)];\n}\n\nexport function randomString(length: number): string {\n  const letters = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '1234567890';\n  const charset = `${letters}${letters.toUpperCase()}${numbers}`;\n\n  let R = '';\n\n  for (let index = 0; index < length; index++) {\n    R += randomCharacter(charset);\n  }\n\n  return R;\n}\n\n/**\n *  Remove properties from an object\n */\nexport function omit<T extends PlainObject, K extends keyof T>(\n  input: T,\n  ...filter: K[]\n): Omit<T, K> {\n  const output: any = {};\n\n  for (const key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key as unknown as K)) {\n        output[key] = input[key];\n      }\n    }\n  }\n\n  return output as Omit<T, K>;\n}\n","import * as React from 'react';\nimport convert from 'react-from-dom';\n\nimport { canUseDOM, isSupportedEnvironment, omit, randomString, STATUS } from './helpers';\nimport { FetchError, Props, State, Status, StorageItem } from './types';\n\nexport const cacheStore: { [key: string]: StorageItem } = Object.create(null);\n\nexport default class InlineSVG extends React.PureComponent<Props, State> {\n  private readonly hash: string;\n  private isActive = false;\n  private isInitialized = false;\n\n  public static defaultProps = {\n    cacheRequests: true,\n    uniquifyIDs: false,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      content: '',\n      element: null,\n      hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n      status: STATUS.IDLE,\n    };\n\n    this.hash = props.uniqueHash || randomString(8);\n  }\n\n  public componentDidMount(): void {\n    this.isActive = true;\n\n    if (!canUseDOM() || this.isInitialized) {\n      return;\n    }\n\n    const { status } = this.state;\n    const { src } = this.props;\n\n    try {\n      /* istanbul ignore else */\n      if (status === STATUS.IDLE) {\n        /* istanbul ignore else */\n        if (!isSupportedEnvironment()) {\n          throw new Error('Browser does not support SVG');\n        }\n\n        /* istanbul ignore else */\n        if (!src) {\n          throw new Error('Missing src');\n        }\n\n        this.load();\n      }\n    } catch (error: any) {\n      this.handleError(error);\n    }\n\n    this.isInitialized = true;\n  }\n\n  public componentDidUpdate(previousProps: Props, previousState: State): void {\n    if (!canUseDOM()) {\n      return;\n    }\n\n    const { hasCache, status } = this.state;\n    const { onLoad, src } = this.props;\n\n    if (previousState.status !== STATUS.READY && status === STATUS.READY) {\n      /* istanbul ignore else */\n      if (onLoad) {\n        onLoad(src, hasCache);\n      }\n    }\n\n    if (previousProps.src !== src) {\n      if (!src) {\n        this.handleError(new Error('Missing src'));\n\n        return;\n      }\n\n      this.load();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.isActive = false;\n  }\n\n  private getElement() {\n    try {\n      const node = this.getNode() as Node;\n      const element = convert(node);\n\n      if (!element || !React.isValidElement(element)) {\n        throw new Error('Could not convert the src to a React element');\n      }\n\n      this.setState({\n        element,\n        status: STATUS.READY,\n      });\n    } catch (error: any) {\n      this.handleError(new Error(error.message));\n    }\n  }\n\n  private getNode() {\n    const { description, title } = this.props;\n\n    try {\n      const svgText = this.processSVG();\n      const node = convert(svgText, { nodeOnly: true });\n\n      if (!node || !(node instanceof SVGSVGElement)) {\n        throw new Error('Could not convert the src to a DOM Node');\n      }\n\n      const svg = this.updateSVGAttributes(node);\n\n      if (description) {\n        const originalDesc = svg.querySelector('desc');\n\n        if (originalDesc && originalDesc.parentNode) {\n          originalDesc.parentNode.removeChild(originalDesc);\n        }\n\n        const descElement = document.createElementNS('http://www.w3.org/2000/svg', 'desc');\n\n        descElement.innerHTML = description;\n        svg.prepend(descElement);\n      }\n\n      if (typeof title !== 'undefined') {\n        const originalTitle = svg.querySelector('title');\n\n        if (originalTitle && originalTitle.parentNode) {\n          originalTitle.parentNode.removeChild(originalTitle);\n        }\n\n        if (title) {\n          const titleElement = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n\n          titleElement.innerHTML = title;\n          svg.prepend(titleElement);\n        }\n      }\n\n      return svg;\n    } catch (error: any) {\n      return this.handleError(error);\n    }\n  }\n\n  private handleError = (error: Error | FetchError) => {\n    const { onError } = this.props;\n    const status =\n      error.message === 'Browser does not support SVG' ? STATUS.UNSUPPORTED : STATUS.FAILED;\n\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState({ status }, () => {\n        /* istanbul ignore else */\n        if (typeof onError === 'function') {\n          onError(error);\n        }\n      });\n    }\n  };\n\n  private handleLoad = (content: string, hasCache = false) => {\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState(\n        {\n          content,\n          hasCache,\n          status: STATUS.LOADED,\n        },\n        this.getElement,\n      );\n    }\n  };\n\n  private load() {\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState(\n        {\n          content: '',\n          element: null,\n          hasCache: false,\n          status: STATUS.LOADING,\n        },\n        () => {\n          const { cacheRequests, src } = this.props;\n          const cache = cacheRequests && cacheStore[src];\n\n          if (cache && cache.status === STATUS.LOADED) {\n            this.handleLoad(cache.content, true);\n\n            return;\n          }\n\n          const dataURI = src.match(/^data:image\\/svg[^,]*?(;base64)?,(.*)/u);\n          let inlineSrc;\n\n          if (dataURI) {\n            inlineSrc = dataURI[1] ? window.atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n          } else if (src.includes('<svg')) {\n            inlineSrc = src;\n          }\n\n          if (inlineSrc) {\n            this.handleLoad(inlineSrc);\n\n            return;\n          }\n\n          this.request();\n        },\n      );\n    }\n  }\n\n  private processSVG() {\n    const { content } = this.state;\n    const { preProcessor } = this.props;\n\n    if (preProcessor) {\n      return preProcessor(content);\n    }\n\n    return content;\n  }\n\n  private request = async () => {\n    const { cacheRequests, fetchOptions, src } = this.props;\n\n    if (cacheRequests) {\n      cacheStore[src] = { content: '', status: STATUS.LOADING };\n    }\n\n    try {\n      const response = await fetch(src, fetchOptions);\n      const contentType = response.headers.get('content-type');\n      const [fileType] = (contentType || '').split(/ ?; ?/);\n\n      if (response.status > 299) {\n        throw new Error('Not found');\n      }\n\n      if (!['image/svg+xml', 'text/plain'].some(d => fileType.includes(d))) {\n        throw new Error(`Content type isn't valid: ${fileType}`);\n      }\n\n      const content: string = await response.text();\n      const { src: currentSrc } = this.props;\n\n      // the current src don't match the previous one, skipping...\n      if (src !== currentSrc) {\n        if (cacheStore[src].status === STATUS.LOADING) {\n          delete cacheStore[src];\n        }\n\n        return;\n      }\n\n      this.handleLoad(content);\n\n      /* istanbul ignore else */\n      if (cacheRequests) {\n        const cache = cacheStore[src];\n\n        /* istanbul ignore else */\n        if (cache) {\n          cache.content = content;\n          cache.status = STATUS.LOADED;\n        }\n      }\n    } catch (error: any) {\n      this.handleError(error);\n\n      /* istanbul ignore else */\n      if (cacheRequests) {\n        const cache = cacheStore[src];\n\n        /* istanbul ignore else */\n        if (cache) {\n          delete cacheStore[src];\n        }\n      }\n    }\n  };\n\n  private updateSVGAttributes(node: SVGSVGElement): SVGSVGElement {\n    const { baseURL = '', uniquifyIDs } = this.props;\n    const replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n    const linkAttributes = ['href', 'xlink:href'];\n    const isDataValue = (name: string, value: string) =>\n      linkAttributes.includes(name) && (value ? !value.includes('#') : false);\n\n    if (!uniquifyIDs) {\n      return node;\n    }\n\n    [...node.children].forEach(d => {\n      if (d.attributes && d.attributes.length) {\n        const attributes = Object.values(d.attributes).map(a => {\n          const attribute = a;\n          const match = a.value.match(/url\\((.*?)\\)/);\n\n          if (match && match[1]) {\n            attribute.value = a.value.replace(match[0], `url(${baseURL}${match[1]}__${this.hash})`);\n          }\n\n          return attribute;\n        });\n\n        replaceableAttributes.forEach(r => {\n          const attribute = attributes.find(a => a.name === r);\n\n          if (attribute && !isDataValue(r, attribute.value)) {\n            attribute.value = `${attribute.value}__${this.hash}`;\n          }\n        });\n      }\n\n      if (d.children.length) {\n        return this.updateSVGAttributes(d as SVGSVGElement);\n      }\n\n      return d;\n    });\n\n    return node;\n  }\n\n  public render(): React.ReactNode {\n    const { element, status } = this.state;\n    const { children = null, innerRef, loader = null } = this.props;\n    const elementProps = omit(\n      this.props,\n      'baseURL',\n      'cacheRequests',\n      'children',\n      'description',\n      'fetchOptions',\n      'innerRef',\n      'loader',\n      'onError',\n      'onLoad',\n      'preProcessor',\n      'src',\n      'title',\n      'uniqueHash',\n      'uniquifyIDs',\n    );\n\n    if (!canUseDOM()) {\n      return loader;\n    }\n\n    if (element) {\n      return React.cloneElement(element as React.ReactElement, { ref: innerRef, ...elementProps });\n    }\n\n    if (([STATUS.UNSUPPORTED, STATUS.FAILED] as Status[]).includes(status)) {\n      return children;\n    }\n\n    return loader;\n  }\n}\n\nexport * from './types';\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n"],"names":["noTextChildNodes","possibleStandardNames","acceptcharset","accesskey","allowfullscreen","autocapitalize","autocomplete","autocorrect","autofocus","autoplay","autosave","cellpadding","cellspacing","charset","class","classid","classname","colspan","contenteditable","contextmenu","controlslist","crossorigin","dangerouslysetinnerhtml","datetime","defaultchecked","defaultvalue","enctype","for","formmethod","formaction","formenctype","formnovalidate","formtarget","frameborder","hreflang","htmlfor","httpequiv","icon","innerhtml","inputmode","itemid","itemprop","itemref","itemscope","itemtype","keyparams","keytype","marginwidth","marginheight","maxlength","mediagroup","minlength","nomodule","novalidate","playsinline","radiogroup","readonly","referrerpolicy","rowspan","spellcheck","srcdoc","srclang","srcset","tabindex","typemustmatch","usemap","accentheight","alignmentbaseline","allowreorder","arabicform","attributename","attributetype","autoreverse","basefrequency","baselineshift","baseprofile","calcmode","capheight","clippath","clippathunits","cliprule","colorinterpolation","colorinterpolationfilters","colorprofile","colorrendering","contentscripttype","contentstyletype","diffuseconstant","dominantbaseline","edgemode","enablebackground","externalresourcesrequired","fillopacity","fillrule","filterres","filterunits","floodopacity","floodcolor","fontfamily","fontsize","fontsizeadjust","fontstretch","fontstyle","fontvariant","fontweight","glyphname","glyphorientationhorizontal","glyphorientationvertical","glyphref","gradienttransform","gradientunits","horizadvx","horizoriginx","imagerendering","kernelmatrix","kernelunitlength","keypoints","keysplines","keytimes","lengthadjust","letterspacing","lightingcolor","limitingconeangle","markerend","markerheight","markermid","markerstart","markerunits","markerwidth","maskcontentunits","maskunits","numoctaves","overlineposition","overlinethickness","paintorder","pathlength","patterncontentunits","patterntransform","patternunits","pointerevents","pointsatx","pointsaty","pointsatz","preservealpha","preserveaspectratio","primitiveunits","refx","refy","renderingintent","repeatcount","repeatdur","requiredextensions","requiredfeatures","shaperendering","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stopcolor","stopopacity","strikethroughposition","strikethroughthickness","strokedasharray","strokedashoffset","strokelinecap","strokelinejoin","strokemiterlimit","strokewidth","strokeopacity","suppresscontenteditablewarning","suppresshydrationwarning","surfacescale","systemlanguage","tablevalues","targetx","targety","textanchor","textdecoration","textlength","textrendering","underlineposition","underlinethickness","unicodebidi","unicoderange","unitsperem","unselectable","valphabetic","vectoreffect","vertadvy","vertoriginx","vertoriginy","vhanging","videographic","viewbox","viewtarget","vmathematical","wordspacing","writingmode","xchannelselector","xheight","xlinkactuate","xlinkarcrole","xlinkhref","xlinkrole","xlinkshow","xlinktitle","xlinktype","xmlbase","xmllang","xmlnsxlink","xmlspace","ychannelselector","zoomandpan","onblur","onchange","onclick","oncontextmenu","ondoubleclick","ondrag","ondragend","ondragenter","ondragexit","ondragleave","ondragover","ondragstart","ondrop","onerror","onfocus","oninput","oninvalid","onkeydown","onkeypress","onkeyup","onload","onmousedown","onmouseenter","onmouseleave","onmousemove","onmouseout","onmouseover","onmouseup","onscroll","onsubmit","ontouchcancel","ontouchend","ontouchmove","ontouchstart","onwheel","parseAttributes","node","reactKey","attributes","key","Element","nodeClassNames","getAttribute","className","__spreadArray","__read","forEach","d","name","value","split","reduce","acc","_a","replace","_$0","$1","toUpperCase","Number","isNaN","convertFromNode","input","options","Node","nodeName","_b","actions","_c","index","_d","level","randomKey","concat","result","length","characters","Math","round","random","randomString","Array","isArray","action","condition","pre","post","push","nodeType","React","test","toLowerCase","childNodeList","children","map","__assign","filter","Boolean","parseChildren","childNodes","nodeText","nodeValue","toString","parentNode","parentNodeName","includes","console","warn","convert","nodeOnly","selector","type","DOMParser","parseFromString","querySelector","TypeError","error","convertFromString","STATUS","IDLE","LOADING","LOADED","FAILED","READY","UNSUPPORTED","canUseDOM","canUseDOMFlag","isSupportedEnvironment","document","div","createElement","innerHTML","svg","firstChild","namespaceURI","supportsInlineSVG","window","randomCharacter","character","floor","cacheStore","Object","create","_super","InlineSVG","props","_this","call","defineProperty","onError","status","message","isActive","setState","content","hasCache","getElement","__awaiter","this","cacheRequests","fetchOptions","src","fetch","response","sent","contentType","headers","get","fileType_1","Error","some","text","currentSrc","handleLoad","cache","handleError","error_1","state","element","hash","uniqueHash","letters","R","__extends","isInitialized","load","previousProps","previousState","onLoad","getNode","description","title","processSVG","SVGSVGElement","updateSVGAttributes","originalDesc","removeChild","descElement","createElementNS","prepend","originalTitle","titleElement","inlineSrc","dataURI","match","atob","decodeURIComponent","request","preProcessor","baseURL","uniquifyIDs","replaceableAttributes","linkAttributes","attributes_1","values","a","attribute","r","find","innerRef","loader","elementProps","_i","arguments","output","hasOwnProperty","omit","ref","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","define"],"sourceRoot":""}