{"version":3,"file":"static/js/6382.884cf010.chunk.js","mappings":"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","sources":["app/Layouts/Main/Dashboard/components/common/sentiment.js","app/Layouts/Main/Analytics/layout/common/popup/popupModal.js","app/Layouts/Main/Analytics/content/components/authorInfo.js","app/Layouts/Main/Analytics/layout/common/networkIcon.js","app/Layouts/Main/Analytics/layout/common/noData.js","app/Layouts/Main/Analytics/layout/common/postMedia.js","app/Layouts/Main/Analytics/layout/skeleton/topPerfomingSkeleton.js","app/Layouts/Main/Analytics/activityHub/widget/components/perfomingPost.js"],"sourcesContent":["    import React from \"react\";\n    import { SENTIMENTS_CALC } from \"../../../../../../utils\";\n    import { MediaBaseUrl } from \"../../../../../../actions/api\";\n\n    const Sentiment = (props) => {\n    const { sentiment } = props;\n\n    return (\n        <>\n        {sentiment > 0 ? (\n            <div className=\"d-inline-flex post-status bg-position\">\n            <img className=\"img-fluid me-2\" src={`${MediaBaseUrl}icons/emoji/emoji${ SENTIMENTS_CALC(sentiment).item }.svg`} width={\"16px\"} height={\"16px\"} />\n            <span className=\"overflow-hidden text-nowrap text-ellipsis\"> {SENTIMENTS_CALC(sentiment).label} </span>\n            </div>\n        ) : ( \"-\" )}\n        </>\n    );\n    };\n\n    export default React.memo(Sentiment);\n","import React from \"react\";\nimport {\n    Modal,\n} from \"react-bootstrap\";\n\n\nexport default class PopupModal extends React.Component {\n    render() {\n        const { showHide, handlePopup, title, children, size } = this.props;\n        return (\n            <Modal\n                show={showHide}\n                onHide={()=>handlePopup(false)}\n                backdrop=\"static\"\n                keyboard={false}\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                size={size}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"p-2\">\n                    <div className=\"more_container\">\n                        {children}\n                    </div>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","import React, { useState } from \"react\";\nimport { getFirstLetterOfString, manageSpace } from \"../../../../../../utils\";\nimport moment from \"moment\";\nimport NetworkIcon from \"../../layout/common/networkIcon\";\n\nconst AuthorInfo = (props) => {\n\n  const { isSplide,link,networkId,topperfoming,picture,authorUsername,authorName }  =props\n  const [imageError, setImageError] = useState(false);\n\n  const redirectTo=(id,username,link)=> {\n\n     if(![7].includes(id) && link && username){\n\n       let redirectLink = ``\n\n        if(props.link.includes('tiktok')){\n           redirectLink = `/search?q=${manageSpace(username)}`\n          }else if(props.link.includes('linkedin')){\n            redirectLink = `/search/results/all/?keywords=${manageSpace(username)}`\n           }\n          else{\n          redirectLink = `/${manageSpace(username)}`\n        }\n        window.open(`https://${new URL(props.link).hostname}${redirectLink}`)\n     }\n  }\n\n \n  return (\n    props && props!=undefined  ?  \n    <div onClick={() => redirectTo(props.networkId,props.authorUsername,props.link) } className={`d-flex align-items-center ${!props.topperfoming ? 'w-50' : 'me-10'}`}>\n   \n      <div  className=\"position-relative\">\n        <div className=\"symbol symbol-35 symbol-light me-3 con_user_img cursor-pointer rounded-circle overflow-hidden\">\n          {imageError ? (\n            <div className=\"symbol-image\">{getFirstLetterOfString(props.authorName)}</div>\n          ) : (\n            <img\n              onError={() => setImageError(true)}\n              src={props.picture}\n              className=\"img-fluid symbol-image\"\n              width={\"20px\"}\n              height={\"20px\"}\n            />\n          )}\n        </div>\n\n     \n        {props.isIcon && !props.nIcon ? (\n          <div className=\"m_social_icon_new card-shadow position-absolute bg-white rounded-circle d-flex align-items-center justify-content-center\">\n              <NetworkIcon icon={props.isIcon}/>\n          </div>\n        ) : null}\n      </div>\n      <div className=\"d-flex text-left flex-column conn_user_info cursor-pointer\">\n        <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\n          {props.authorName}\n        </p>\n        <p className=\"m-0 d-flex conn_auther_info\">\n          <small className=\"overflow-hidden text-nowrap text-ellipsis post_count me-2 \">\n            {props.authorUsername ? `@${props.authorUsername}` : props.authorName}\n          </small>\n         { props.date ? \n         <><small className=\"overflow-hidden text-nowrap text-ellipsis saprator-dot me-2 \"></small>\n         <small className=\"overflow-hidden text-nowrap text-ellipsis \">\n           {moment(new Date(props.date * 1000)).fromNow()}\n         </small></> : null }\n        </p>\n      </div>\n    </div> : null\n  );\n};\n\nexport default React.memo(AuthorInfo);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"../../../../../CommonComponents/AssetsHelper\";\n\nconst NetworkIcon = (props) => { \n  return (\n    <> \n    <FontAwesomeIcon icon={props?.icon.includes(\"twitter\") ? 'x-twitter' : props?.icon?.replace('fa-','')} iconClass={`${props?.icon == 'fa-rss' ? \"\" : 'fa-brands fab'} ${props.isDashboard ? props.isDashboard : ''}`} /> \n    </>\n  );\n};\n\nexport default React.memo(NetworkIcon);\n","import React from \"react\";\nimport { baseUrl } from \"../../../../../../utils\";\n\nconst GetData = () => {\n  return (\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\n      <div className=\"mb-3 text-center\">\n        <img\n          className=\"img-fluid graph-bg\"\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\n          width={\"80px\"}\n          height={\"80px\"}\n        />\n      </div>\n      <div className=\"\">\n        <h5 className=\"text-gray-dark text-center\">No Data Available</h5>\n      </div>\n    </div>\n  );\n};\n\nconst NoData = (props) => {\n\n  return props.status ? (\n    <tr>\n      <td colSpan={props.col}>\n        <GetData />\n      </td>\n    </tr>\n  ) : (\n    <GetData />\n  );\n};\n\nexport default React.memo(NoData);\n","import React from \"react\";\nimport { NoCameraImgPost } from \"../../../../../../actions/api\";\nimport { FontAwesomeIcon } from \"../../../../../CommonComponents/AssetsHelper\";\nimport { Image } from \"react-bootstrap\";\n\nconst PostMedia = (props) => {\n\n  const { postId,content,mediaType,className,isSplide,postFile,multiPost } = props\n\n  return (\n    <div className=\"position-relative d-inline-block w-100 h-100\">\n      \n\n      { mediaType==1 ?\n         <div className=\"no-image-dis\"> <span>{content}</span> </div>\n          : (\n        <>\n          <Image\n            id={`post_${postId}`}\n            onError={(e) => (e.target.src = NoCameraImgPost)}\n            src={!isSplide ? postFile : null}\n            data-splide-lazy={isSplide ? postFile : null}\n            className={`${className} ${multiPost ? \"img-45\" : \"\"}`}\n          />\n\n          {[3, 5].includes(mediaType) ? (\n            <div className=\"play-media\">\n                <FontAwesomeIcon type={'solid'} icon={'circle-play'} iconClass={'text-white fs-2'} />\n            </div>\n          ) : null}\n        </> \n      )}\n    </div>\n  );\n};\n\nexport default React.memo(PostMedia);\n","    import React from \"react\";\n\n    const List = () => {\n    return (\n        <div className=\"d-flex align-items-center justify-content-between py-2\">\n        <p className=\"sk_line sk_line_height_10 sk_line_40 m-0\"></p>\n        <h6 className=\"sk_line sk_line_height_16 sk_line_20 m-0\"></h6>\n        </div>\n    );\n    };\n\n    const TopPerfomingSkeleton = () => {\n    return [1, 2, 3, 4, 5].map(() => {\n        return (\n        <div className=\"top_posts top_posts_new\">\n            <div className=\"card-shadow rounded mb-1\">\n            <div className=\"m_card_cont\">\n                <div className=\"sk_list_view\">\n                <div className=\"sk_line sk_img_thumb rounded w-100 m-0 me-5\"></div>\n                </div>\n                <div className=\"text-center position-relative m_user_info\">\n                <div className=\"m_grid_author d-flex justify-content-center mb-3\">\n                    <div className=\"sk_line sk_img m-0 me-3\"></div>\n                </div>\n                <div className=\"w-100 d-flex flex-column align-items-center\">\n                    <h3 className=\"sk_line sk_line_height_16 sk_line_70 m-0 mb-3\"></h3>\n                    <p className=\"sk_line sk_line_height_10 sk_line_40 m-0\"></p>\n                </div>\n                <div className=\"mt-4\">\n                    <List />\n                    <List />\n                    <List />\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n        );\n    });\n    };\n\n    export default React.memo(TopPerfomingSkeleton);\n","    import React, { Suspense, useEffect, useState } from \"react\";\n    import { Card, CardBody } from \"react-bootstrap\";\n    import TopPerfomingSkeleton from \"../../../layout/skeleton/topPerfomingSkeleton\";\n    import NoData from \"../../../layout/common/noData\";\n    import { kFormatter } from \"../../../../../../../utils\";\n    import {\n    getPrfomingPostMore,\n    getreactedpostsMore,\n    } from \"../../../../../../../actions/analyticsAction\";\n    import SectionHeading from \"../../../layout/common/sectionHeading\";\n    import { Splide, SplideSlide, SplideTrack } from \"@splidejs/react-splide\";\n    import PercentDifference from \"../../../layout/common/percentDifference\";\n    import AuthorInfo from \"../../../content/components/authorInfo\";\n    import PopupModal from \"../../../layout/common/popup/popupModal\";\n    import PostMedia from \"../../../layout/common/postMedia\";\n    import Sentiment from \"../../../../Dashboard/components/common/sentiment\";\nimport { FontAwesomeIcon } from \"../../../../../../CommonComponents/AssetsHelper\";\n    const PostPopup = React.lazy(() => import(\"../../../layout/popup/postPopup\"));\n    const PostdetailPopup = React.lazy(() =>\n    import(\"../../../layout/popup/postdetailPopup\")\n    );\n\n    const PerfomingPost = (props) => {\n    const { type, title, postData, loader, totalCount, selectedWallFeed, isTrial  } = props;\n\n    const [show, setShow] = useState(false);\n    const [showPost, setshowPost] = useState(false);\n    const [postInfo, setpostInfo] = useState(false);\n    const [updateSlider, setupdateSlider] = useState(0);\n\n    const handlePopup = (event) => {\n        setShow(event);\n    };\n\n    const handlePostpopup = (event) => {\n        setshowPost(event);\n    };\n\n    const handleResize = () => setupdateSlider(Math.random())\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", handleResize);\n  \n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n      }, []);\n  \n\n\n    const GetPostdata = (value, valueIndex) => {\n        const e = value.data;\n        const index = valueIndex.indexValue;\n\n        return (\n        <div className=\"top_posts top_posts_new\">\n            <div className=\"card-shadow rounded mb-1\">\n            <div className=\"m_card_cont\">\n\n             <div className=\"post_img1 cursor-pointer position-relative\" onClick={() => { setpostInfo(e); handlePostpopup(true); }} >\n                <PostMedia key={index} content={e.content} mediaType={e.type} postFile={e.postFile} postId={e.id} className={\"img-fluid rounded-1\"} />\n                </div>  \n\n                <div className=\"text-center position-relative m_user_info\">\n                <div className=\"top-perfom-post m_grid_author d-flex justify-content-center mb-3\">\n                    <AuthorInfo picture={e.authorImage} authorUsername={e.authorName} authorName={e.authorName} date={e.created} link={e.link} networkId={e.networkId} />\n                </div>\n                </div>\n\n                <div className=\"p-3\" onClick={() => { setpostInfo(e); handlePostpopup(true); }} >\n                {type == 1 ? (\n                    <div className=\"d-flex align-items-center justify-content-between py-2\">\n                    <span className=\"text-dark font-weight-bold font-size-md\"> Impressions </span>\n                    <p className=\"text-dark fw-bold mb-0 d-flex align-items-center\"> {e.postPerformance ? kFormatter(Math.round(e.postPerformance)) : 0} <PercentDifference difference={e.difference} flag={e.flag} /> </p>\n                    </div>\n                ) : null}\n\n                <div className=\"d-flex align-items-center justify-content-between py-2\">\n                    <span className=\"text-dark font-weight-bold font-size-md\"> Post {type == 1 ? \"Clicks\" : \"Likes\"} </span>\n                    <p className=\"text-dark fw-bold mb-0 d-flex align-items-center\">\n                    {type != 1 ? (\n                        <FontAwesomeIcon type={'solid'} icon={'circle-info'} iconClass={'text-gray-500 fs-6 me-2'} />\n                    ) : null}\n                    {type != 1 ? kFormatter(e.reactions) : kFormatter(e.postClicks)}\n                    {type == 1 ? ( <PercentDifference difference={e.difference} flag={e.flag} /> ) : null}\n                    </p>\n                </div>\n\n                <div className=\"d-flex align-items-center justify-content-between pt-2\">\n                    <span className=\"text-dark font-weight-bold font-size-md me-5\">\n                    Sentiment\n                    </span>\n                    <div className=\"text-end\">\n                      <Sentiment sentiment={e.sentiment} />\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n        );\n    };\n   \n      \n      \n\n    const totalPost = postData?.length || 0;\n    const canSlide = totalPost > 5;\n    const perPagePost = canSlide ? 5 : totalPost;\n\n    const createBreakpointSettings = (perPage,clones,postCount) => ({\n    perPage,\n    clones: clones,\n    autoplay: postCount > perPage,\n    drag: postCount > perPage,\n    loop: postCount > perPage,\n    arrows: postCount > perPage,\n    });\n\n    const settings = {\n    type: \"slide\",\n    rewind: false,\n    speed: 1000,\n    //clones: canSlide ? perPagePost : 0,\n    perMove: 1,\n    loop: false,\n    interval: 5000,\n    drag: totalPost>1 ? canSlide : false,\n    perPage: perPagePost,\n    gap: 0,\n    autoplay: canSlide,\n    pagination: false,\n    arrows: canSlide,\n    fixedHeight: true,\n    breakpoints: {\n        0: createBreakpointSettings(1, perPagePost, totalPost),\n        579: createBreakpointSettings(1, perPagePost, totalPost),\n        767: createBreakpointSettings(totalPost> 2 ? 2 : totalPost,0, totalPost),\n        1300: createBreakpointSettings(totalPost> 3 ? 3 : totalPost,0, totalPost),\n        2200: createBreakpointSettings(totalPost> 4 ? 4 : totalPost,0, totalPost),\n     },\n    };\n\n\n    return (\n        <div className=\"pb-5\">\n        <Card className=\"sw-card-custom card-shadow performing-post\">\n            <SectionHeading selectedWallFeed={selectedWallFeed} section={2} isTrial={isTrial} title={title} total={totalCount} handlePopup={handlePopup} />\n            <CardBody className=\"p-5\">\n            <div className=\"top_posts_row row\">\n                {loader ? ( <TopPerfomingSkeleton />\n                ) : postData && Object.keys(postData).length ? (\n               \n                    <Splide key={updateSlider} hasTrack={false} options={settings}>\n                    <SplideTrack>\n                        {postData.map((e, index) => {\n                        return (\n                            <SplideSlide key={index + type}> <GetPostdata data={e} indexValue={index} key={index} /> </SplideSlide>\n                        );\n                        })}\n                    </SplideTrack>\n                    </Splide>\n                ) : (\n                <NoData />\n                )}\n            </div>\n            </CardBody>\n        </Card>\n\n    \n          <PopupModal size={\"xl\"} showHide={show} handlePopup={handlePopup} title={`Top ${props.type == 1 ? `Perfoming` : `Reacted`} Posts`} >\n            <Suspense fallback={<></>}>\n               <PostPopup total={totalCount} moreData={ props.type == 1 ? getPrfomingPostMore : getreactedpostsMore } {...props} />\n            </Suspense>\n            </PopupModal>\n     \n\n        <PopupModal size={\"lg\"} showHide={showPost} handlePopup={handlePostpopup} title={`General Information`} >\n            <Suspense fallback={<></>}>\n            <PostdetailPopup {...postInfo} />\n            </Suspense>\n        </PopupModal>\n        </div>\n    );\n    };\n\n    export default React.memo(PerfomingPost);\n"],"names":["Sentiment","props","sentiment","_jsx","_Fragment","children","_jsxs","className","src","MediaBaseUrl","SENTIMENTS_CALC","item","width","height","label","React","PopupModal","render","showHide","handlePopup","title","size","this","Modal","show","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","AuthorInfo","isSplide","link","networkId","topperfoming","picture","authorUsername","authorName","imageError","setImageError","useState","undefined","onClick","redirectTo","id","username","includes","redirectLink","manageSpace","window","open","URL","hostname","getFirstLetterOfString","onError","isIcon","nIcon","NetworkIcon","icon","date","moment","Date","fromNow","_props$icon","FontAwesomeIcon","replace","iconClass","isDashboard","GetData","baseUrl","NoData","status","colSpan","col","PostMedia","postId","content","mediaType","postFile","multiPost","Image","e","target","NoCameraImgPost","type","List","TopPerfomingSkeleton","map","PostPopup","PostdetailPopup","PerfomingPost","postData","loader","totalCount","selectedWallFeed","isTrial","setShow","showPost","setshowPost","postInfo","setpostInfo","updateSlider","setupdateSlider","event","handlePostpopup","handleResize","Math","random","useEffect","addEventListener","removeEventListener","GetPostdata","value","valueIndex","data","index","indexValue","authorImage","created","postPerformance","kFormatter","round","PercentDifference","difference","flag","reactions","postClicks","totalPost","length","canSlide","perPagePost","createBreakpointSettings","perPage","clones","postCount","autoplay","drag","loop","arrows","settings","rewind","speed","perMove","interval","gap","pagination","fixedHeight","breakpoints","Card","SectionHeading","section","total","CardBody","Object","keys","Splide","hasTrack","options","SplideTrack","SplideSlide","Suspense","fallback","moreData","getPrfomingPostMore","getreactedpostsMore"],"sourceRoot":""}