{"version":3,"file":"static/js/2197.e1fb406a.chunk.js","mappings":"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","sources":["app/Layouts/Main/Dashboard/components/skeleton/websiteSkeleton.js","app/Layouts/Main/Dashboard/components/website.js","app/Layouts/Main/Analytics/layout/common/sectionHeading.js"],"sourcesContent":["import React from \"react\";\n\nconst List = () => {\n  return (\n    <td>\n     <div className=\"sk_line sk_line_height_12 sk_line_30\"></div>\n    </td>\n  );\n};\n\nconst WebsiteSkeleton = () => {\n  return [1, 2, 3, 4].map(() => {\n    return (\n        <tr>\n        <td>\n            <div className=\"d-flex align-items-center flex-grow-1\">\n                <div className=\"symbol symbol-45 symbol-light me-2 con_user_img\">\n                    <span className=\"sk_img rounded\"></span>\n                </div>\n                <div className=\"d-flex text-left flex-column conn_user_info\">\n                    <div className=\"sk_line sk_line_height_12 sk_line_50\"></div>\n                </div>\n            </div>\n        </td>\n        <List/>\n        <List/>\n        </tr>\n    );\n  });\n};\n\nexport default React.memo(WebsiteSkeleton);\n","import React from \"react\";\nimport { Card, Table } from \"react-bootstrap\";\nimport SectionHeading from \"../../Analytics/layout/common/sectionHeading\";\nimport WebsiteSkeleton from \"./skeleton/websiteSkeleton\";\nimport { MediaBaseUrl } from \"../../../../../actions/api\";\nimport { getthemeLayout } from \"../../../../../utils\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { shallowEqual, useDispatch } from \"react-redux\";\nimport { getWidgetWallData } from \"../../../../../actions/wallDataAction\" \nimport { useSelector } from \"react-redux\";\nimport { getWallFeeds } from \"../../../../../actions/analyticsAction\";\n\nconst Website = (props) => {\n  const { visitor, loader } = props;\n  const { userData, dashboarddata } = useSelector(state => ({ dashboarddata: state.dashboardDisplayReducer.dashboarddata, userData : state.authenticated.userData }),shallowEqual)\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const Tlist = (e) => {\n    return (\n      <td>\n        <p className=\"m-0 text-start\">{e.param}</p>\n      </td>\n    );\n  };\n\n  const displayWindowOpen = () => {\n      const { user } = userData;\n      const wallId = dashboarddata.allWalllist[0].id \n      dispatch(getWidgetWallData(user.ownerId, wallId));\n      dispatch(getWallFeeds(user.ownerId));\n      navigate(`/wall/preview/${wallId}?widget`);\n  };\n\n  return <div className=\"col-md-6 mb-3\">\n      <div className=\"widget-post-section h-100\">\n        <Card className=\"p-0 card-custom card-stretch\">\n          <SectionHeading\n            title={\"Widgets\"}\n            total={0}\n            section={2}\n            isDashboard={\"card-title h5 w-100\"}\n          />\n          <Card.Body className=\"p-3\">\n          \n            <Table responsive className=\"m-0\">\n              <thead>\n                <tr>\n                  <th style={{ width: \"50%\" }}>Widget Name</th>\n                  <th style={{ width: \"25%\" }}>Visitors</th>\n                  <th style={{ width: \"25%\" }}>Clicks</th>\n                </tr>\n              </thead>\n              { (visitor && Object.keys(visitor).length) || loader ?\n              <tbody>\n                {loader ? (\n                  <WebsiteSkeleton />\n                ) : (\n                  visitor.map((e) => {\n                    return (\n                      <tr>\n                        <td>\n                          <div className=\"\">\n                            <div className=\"d-flex align-items-center w-50\">\n                              <div className=\"position-relative\">\n                                <div className=\"symbol symbol-50 symbol-light me-3 con_user_img overflow-hidden\">\n                                  <img\n                                    src={`${MediaBaseUrl}icons/svg-icons/${getthemeLayout(e.signageTheme)}.svg`}\n                                  />\n                                </div>\n                              </div>\n                              <div className=\"d-flex text-left flex-column conn_user_info\">\n                                <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\n                                  {e.name}\n                                </p>\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n                        <Tlist param={e.totalVisitors} />\n                        <Tlist param={e.totalShowMoreCount} />\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody> : \n              <tbody>\n                <tr>\n                  <td colspan=\"3\">\n                    <div className=\"not_connected_err not_connected_err_new flex-center overlay-layer\" style={{backgroundImage: `url(${MediaBaseUrl}error/not-data-1.png)`}}>\n                    <div className=\"not_conne_overlay position-absolute h-100 d-flex flex-column align-items-center justify-content-center w-100\">\n                      <p className=\"text-dark w-70 text-center font-size-h6\">You Can Also Turn Your Website Into A Social Wall & Grab the Attention of your Site Visitors.</p>\n                        { dashboarddata && dashboarddata.allWalllist && Object.keys(dashboarddata.allWalllist).length ?\n                          <button type=\"button\" onClick={()=>displayWindowOpen()} className=\"btn btn-primary rounded\">Embed Now</button> : null }\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n              }\n            </Table> \n           \n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n};\n\nexport default React.memo(Website);\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\nimport { baseUrl } from \"../../../../../../utils\";\n\nconst SectionHeading = (props) => {\n\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin, isDashboard,isTrial } = props\n\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\n\n  return (\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-3' : section==3 ? 'p-0 pb-3' : 'px-3 pt-3 border-0 pb-0'}`}>\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\n        <h6 className={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : 'm-0'} `}>\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\n         { !isTrial && ((total > 5) || moreData) ? ( <Button variant=\"link\" className=\"p-0\" onClick={() => handlePopup(true)} > See More </Button> ) : null\n        }\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nexport default SectionHeading;\n"],"names":["List","_jsx","children","className","WebsiteSkeleton","map","_jsxs","React","Website","props","visitor","loader","userData","dashboarddata","useSelector","state","dashboardDisplayReducer","authenticated","shallowEqual","dispatch","useDispatch","navigate","useNavigate","Tlist","e","param","Card","SectionHeading","title","total","section","isDashboard","Body","Table","responsive","style","width","Object","keys","length","src","MediaBaseUrl","getthemeLayout","signageTheme","name","totalVisitors","totalShowMoreCount","colspan","backgroundImage","allWalllist","type","onClick","displayWindowOpen","user","wallId","id","getWidgetWallData","ownerId","getWallFeeds","cardTitleCss","icon","iconFull","selectedWallFeed","moreData","handlePopup","headingMargin","isTrial","CardHeader","CardTitle","baseUrl","height","Button","variant"],"sourceRoot":""}