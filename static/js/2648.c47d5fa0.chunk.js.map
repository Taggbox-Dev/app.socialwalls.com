{"version":3,"file":"static/js/2648.c47d5fa0.chunk.js","mappings":"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","sources":["app/Display/analytics-new/components/content/topAiTags.js","app/Display/analytics-new/layout/common/noData.js","app/Display/analytics-new/layout/skeleton/assetsbySkeleton.js"],"sourcesContent":["  import { Card, CardBody, CardHeader } from \"react-bootstrap\";\r\n  import { baseUrl, hideLangFilter } from \"../../../../../utils\";\r\n  import React, { useEffect, useState } from \"react\";\r\n  import AssetsbySkeleton from \"../../layout/skeleton/assetsbySkeleton\";\r\n  import NoData from \"../../layout/common/noData\";\r\n  import { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\n  const TopAiTags = (props) => {\r\n\r\n    const { topaiTags, top_ai_loader, selectedWallFeed, dateFilter } =props\r\n    const [gettagList ,setgettagList] = useState([])\r\n \r\n      const tagUpdate=()=>{\r\n\r\n          const feedList = selectedWallFeed && Object.keys(selectedWallFeed).length > 0 ? selectedWallFeed.map(item => item.id) : [];\r\n\r\n          const tagList = selectedWallFeed && Object.keys(topaiTags).length > 0 ? topaiTags.map(item => item.feedId) : [];\r\n          const tagListData = [...new Map(tagList.map(item => [item, item])).values()].join(\", \");\r\n\r\n          let getTags = topaiTags;\r\n              if(getTags && getTags.length > 0){\r\n                getTags = getTags.filter((lang) => {\r\n                  if(feedList.length){\r\n                    if(hideLangFilter(feedList, tagListData,1)) return lang;\r\n                      }else{\r\n                   return lang;\r\n                 }\r\n              });\r\n\r\n              getTags.splice(6)\r\n              setgettagList(getTags)\r\n          }\r\n     }\r\n \r\n\r\n  useEffect(() => {\r\n      topaiTags && selectedWallFeed && Object.keys(topaiTags).length && tagUpdate()\r\n  }, []);\r\n    \r\n\r\n    return (\r\n      <Card className=\"sw-card-custom gutter-b mb-5 card-shadow\">\r\n        <CardHeader className=\"p-5\">\r\n          <h6 class=\"card-label font-weight-bolder m-0\">\r\n            <img\r\n              src={baseUrl(`dashboard/analytic/ai.svg`)}\r\n              height={\"20px\"}\r\n              width={\"20px\"}\r\n            />{\" \"}\r\n            Top AI Tags\r\n          </h6>\r\n        </CardHeader>\r\n        <CardBody className=\"p-5\">\r\n\r\n         { top_ai_loader ? <AssetsbySkeleton/> : gettagList && Object.keys(gettagList).length ?\r\n           gettagList.map((data,index)=>{\r\n            return(\r\n             <Link className=\"mb-4 last-child-mb-0 d-block\" to={selectedWallFeed.length ? `/moderation/index/${localStorage.getItem('wallId')}?tags=${data.tag}/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}` : `#`}>\r\n              <div className=\"px-5 py-2 border rounded\">\r\n                <div className=\"d-flex align-items-center justify-content-between\">\r\n                  <div className=\"d-flex align-items-center me-10\">\r\n                    <div className=\"text-dark font-weight-boldest me-2\">{index+1}.</div>\r\n                    <div className=\"\">\r\n                      <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\r\n                        {data.tag}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"count-tag border font-weight-boldest m-0 text-dark\">{data.count}</p>\r\n                </div>\r\n              </div>\r\n            </Link> \r\n            )\r\n        }) :         \r\n            <NoData/>\r\n        }\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n export default React.memo(TopAiTags);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","    import React from \"react\";\r\n\r\n    const AssetsbySkeleton = () => {\r\n    return (\r\n        [1,2,3,4,5].map(()=>{\r\n            return(\r\n        <div class=\"d-flex p-6 border rounded mb-4\">\r\n        <div class=\"d-flex align-items-center m_grid_author w-100\">\r\n          <div class=\"sk_line sk_line_height_16 sk_line_10 m-0 me-3 rounded\"></div>\r\n          <div class=\"w-50\">\r\n              <h3 class=\"sk_line sk_line_height_16 sk_line_90 m-0\"></h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"sk_line sk_line_10 sk_line_height_16 m-0\"></div>\r\n    </div>)})\r\n    );\r\n    };\r\n\r\n    export default React.memo(AssetsbySkeleton);\r\n"],"names":["TopAiTags","props","topaiTags","top_ai_loader","selectedWallFeed","dateFilter","gettagList","setgettagList","useState","useEffect","Object","keys","length","tagUpdate","feedList","map","item","id","tagList","feedId","tagListData","Map","values","join","getTags","filter","lang","hideLangFilter","splice","_jsxs","Card","className","children","_jsx","CardHeader","class","src","baseUrl","height","width","CardBody","AssetsbySkeleton","data","index","Link","to","localStorage","getItem","tag","moment","startDate","format","endDate","count","NoData","React","GetData","status","colSpan","col"],"sourceRoot":""}