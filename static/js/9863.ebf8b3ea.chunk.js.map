{"version":3,"file":"static/js/9863.ebf8b3ea.chunk.js","mappings":"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","sources":["app/Layouts/Main/Moderation/ContentModal/Elements/ModalMedia.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js","app/CommonComponents/ShowMoreContent.js","app/Layouts/Main/Moderation/UgcRights/Elements/CardPreview.js","app/Layouts/Main/Moderation/UgcRights/Status/ApprovedModal.js","app/Layouts/Main/Moderation/UgcRights/Status/RadialChart.js","app/Layouts/Main/Moderation/UgcRights/Status/PendingModal.js","app/Layouts/Main/Moderation/UgcRights/Status/RejectModal.js","app/Layouts/Main/Moderation/UgcRights/Status/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport TextType from '../../../../../CommonComponents/MediaType/TextType';\nimport ImageType from '../../../../../CommonComponents/MediaType/ImageType';\nimport VideoType from '../../../../../CommonComponents/MediaType/VideoType';\nimport { getImageSize } from '../../../../../../utils';\n\n\nclass ModalMedia extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: 1,\n            winWidth: window.innerWidth,\n            winHeight: window.innerHeight,\n            mediaSize: { height: 400, width: 400 },\n        };\n    }\n    componentDidMount() {\n\n        window.addEventListener('resize', this.handleResize);\n        this.onMediaLoad(this.props.modalData);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.modalData !== prevProps.modalData) {\n            this.onMediaLoad(this.props.modalData);\n        }\n    }\n\n    handleResize = () => {\n        this.setState({\n            winWidth: window.innerWidth,\n            winHeight: window.innerHeight,\n        });\n    };\n\n    onMediaLoad = async (modalData) => {\n        if (modalData.mediaHeight && modalData.mediaWidth) {\n            this.setState({ mediaSize: { height: modalData.mediaHeight, width: modalData.mediaWidth } })\n        } else {\n            try {\n                const { width, height } = await getImageSize(modalData.newMedia);\n                this.setState({ mediaSize: { height: height, width: width } })\n            } catch (error) {\n                this.setState({ mediaSize: { height: 100, width: 100 } })\n            }\n        }\n    }\n    render() {\n        const { modalData, handleAllImageError,autoPlay,movePost } = this.props\n        const { winWidth, winHeight, mediaSize } = this.state\n        const scale = Math.min((winWidth - (winWidth > 1400 ? 850 : 650)) / mediaSize.width, (winHeight - 130) / mediaSize.height);\n        const height = mediaSize.height * scale\n        const width = mediaSize.width * scale\n        const paddingBottom = (height * 100) / width\n\n        return (\n            modalData.type == 1 ?\n                <div className='mx-auto w-100 p-4'>\n                    <TextType mediaClass=\"bg-gray-200\" size={120} content={modalData.postcontent} rating={modalData.rating} socialNetworkId={modalData.networkId} fontSize={'calc(14px + .3vw + .3vh)'} lineCount={10} />\n                </div>\n                :\n                <div className='w-100 m-auto' style={{ maxWidth: winWidth > 991 ? width : null }}>\n                    <div className=\"position-relative\">\n\n                        {(modalData.type == 2 || modalData.type == 4) ?\n                            <ImageType mediaClass={'content_img_'} size={paddingBottom} url={modalData.postFile} height={height} width={width} icon={modalData.networkId} rating={modalData.rating} alt={''} handleAllImageError={handleAllImageError} item={modalData} isCover={true} />\n                        :\n                        (modalData.type == 3 || modalData.type == 5) ?\n                            <VideoType key={movePost} item={modalData} mediaClass={'content_video'} size={paddingBottom} url={modalData.mediaUrl || modalData.mediaFile || modalData.mediaClip || modalData.postFile} poster={modalData.postFile} height={height} width={width} autoPlay={autoPlay ? autoPlay : true} muted={false} isCover={true} controls={true} loop={false} isupdate={1} />\n                            : null}\n                    </div>\n                </div>\n);\n    }\n}\n\nexport default ModalMedia;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import React, { Component } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass ShowMoreContent extends Component {\n       state = { readMore: false, lines: 0 }\n\n       readMoreTxt = () => {\n              this.setState({ readMore: !this.state.readMore })\n       }\n\n       countLines = (id) => {\n              setTimeout(() => {\n                     var el = document.getElementById(id);\n                     var divHeight = el ? el.offsetHeight : 40\n                     var lines = divHeight / 22;\n                     this.setState({ lines: lines });\n              }, 100);\n       }\n       render() {\n              const { content, idIndex, line, classes } = this.props;\n              const { readMore, lines } = this.state;\n\n              if (content && content.length > 0) {\n                     this.countLines(`constent-${idIndex}`)\n              }\n\n              return <div className={classes}>\n                     <Collapse in={readMore} className={`d-block pb-0 mb-0 overflow-hidden position-relative ${lines > line ? !readMore ? 'show_more_content' : '' : ''}`}>\n                            <div className=\"w-100\">\n                                   <p id={`constent-${idIndex}`} className=\"pb-1 mb-0 text-break\">{ReactHtmlParser(content)}</p>\n                            </div>\n                     </Collapse>\n                     {lines > line ?\n                            <button type=\"button\" className=\"btn btn-sm btn-link text-decoration-underline fw-semibold p-0\" onClick={()=>this.readMoreTxt()}>\n                                   {readMore ? 'Show Less' : 'Show More'}\n                            </button>\n                            : null}\n              </div>\n       }\n}\n\nexport default ShowMoreContent;","import React, { Component } from 'react'\nimport { Splide, SplideSlide, SplideTrack } from '@splidejs/react-splide';\nimport '@splidejs/splide/css';\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\nimport ShowMoreContent from '../../../../../CommonComponents/ShowMoreContent';\nimport ImageType from '../../../../../CommonComponents/MediaType/ImageType';\nimport Author from '../../../../../CommonComponents/Author/Author';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../CommonComponents/AssetsHelper';\nimport ReactHtmlParser from 'react-html-parser';\nimport ModalMedia from '../../ContentModal/Elements/ModalMedia';\n\n\n\nexport default class CardPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.mainRef = React.createRef();\n  }\n\n  handleThumbs = (id) => {\n    if (this.mainRef.current) {\n      this.mainRef.current.go(id);\n    }\n  };\n\n  render() {\n\n    const {ugcData, handleAllImageError} = this.props\n\n    const mainOptions = {\n      type      : 'loop',\n      perPage   : 1,\n      perMove   : 1,\n      pagination: false,\n      navigation: false,\n      arrows    : ugcData?.data?.length > 1\n    };\n\n    return <div className='mx-auto w-100' style={{maxWidth:450}}>\n              <Splide hasTrack={ false } options={mainOptions}>\n                <SplideTrack>\n                {ugcData.data && ugcData.data.length ? ugcData.data.map((item,index)=>{ \n                  return <SplideSlide key={index}>\n                      <div className={'d-flex flex-column w-100'}>\n                        {/* <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={item.postFile} alt={\"\"} isCover={true} /> */}\n                        <div style={{maxHeight:450}}>\n                        <ModalMedia modalData={item} handleAllImageError={handleAllImageError} />\n                        </div>\n                        <div className='p-3'>\n                          <div className=\"d-flex align-items-center mb-2\">\n                              <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\n                                  <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                      imageSize={40}\n                                      symbolClass={'symbol-label fw-bolder fs-5'}\n                                      name={item.name} profileUrl={item.picture} networkId={item.networkId} />\n                                  <div className=\"pe-2 w-100 overflow-hidden\">\n                                      <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{item.name}</strong></p>\n                                      <p className=\"mb-1 text-gray-500 text-break fs-9\">@{item.username}</p>\n                                  </div>\n                              </div>  \n                              <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\n                                  <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(item.networkId)}</Tooltip>}>\n                                      <FontAwesomeIcon type='brands' icon={GET_NETWORK_ICON(item.networkId)} iconClass={'fs-3'} />\n                                  </OverlayTrigger>\n                              </span>\n                          </div>\n                        </div>\n                        <div>{ReactHtmlParser(item.postcontent.slice(0, 150))} {item.postcontent?.length > 150 ? '...' : '' }</div>\n                      </div>\n                  </SplideSlide>\n                    }): <SplideSlide>\n                    <div className={'d-flex flex-column w-100'}>\n                      <div style={{maxHeight:450}}>\n                      <div class=\"pb-0\"><div class=\"sk_img rounded-0 w-100 flex-shrink-0 overflow-hidden\" style={{paddingBottom: '100%'}}></div></div>\n                      </div>\n                      <div>\n                      <div class=\"d-flex align-items-center p-3\"><div class=\"d-flex align-items-center me-2 flex-grow-1 overflow-hidden\"><div class=\"sk_img symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden\"></div><div class=\"overflow-hidden w-100\" style={{maxWidth: '130px'}}><p class=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p><span class=\"sk_line sk_line_50 sk_line_height_8 mb-0 d-block\"></span></div></div><span class=\"d-flex align-items-end flex-column flex-shrink-0\" style={{width: '100px'}}><div class=\"sk_img symbol symbol-28 rounded-1 flex-shrink-0 me-2 overflow-hidden\"></div></span></div>\n                      <div className='pt-4'><p class=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p> <p class=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p> <p class=\"sk_line sk_line_100 sk_line_height_10 mb-2\"></p></div>\n                      \n                      </div>\n                      <div></div>\n                    </div>\n                </SplideSlide>}\n                </SplideTrack>\n\n                {/* <div className=\"splide__arrows\" style={{display:ugcData?.data?.length > 1 ? 'block' : 'none'}}>\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--prev start-0\">\n                        <FontAwesomeIcon type={'solid'} icon={'arrow-left'}/>\n                  </Button>\n                  <Button variant='secondary' className=\"splide__arrow splide__arrow--next end-0\">\n                      <FontAwesomeIcon type={'solid'} icon={'arrow-right'}/>\n                  </Button>\n                </div> */}\n              </Splide>\n            </div>\n\n  }\n}\n","import React, { Component } from 'react'\nimport HTMLReactParser from 'html-react-parser';\nimport moment from 'moment'\nimport { WASABI_PATH } from '../../../../../../actions/api';\n// import { DOWNLOAD_CERTIFICATE } from '../../../../../../actions/ugcAction';\nimport { saveAs } from \"file-saver\";\nimport { Modal, Button, Form, InputGroup, OverlayTrigger, Tooltip, Image } from 'react-bootstrap';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../CommonComponents/AssetsHelper';\nimport Author from '../../../../../CommonComponents/Author/Author';\nimport ShowMoreContent from '../../../../../CommonComponents/ShowMoreContent';\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\nimport ImageType from '../../../../../CommonComponents/MediaType/ImageType';\nclass UgcModalApproved extends Component {\n    onDownloadMedia = (data) => {\n        if (data.type != 5 && data.type != 3) {\n            saveAs(data.postFile, `${data.id}`);\n        }\n        else {\n            saveAs(data.mediaUrl, `${data.id}`);\n\n        }\n\n    }\n    render() {\n        const { ugcRequestData, ugcData, onHide } = this.props;\n        return ugcRequestData ? <>\n\n            <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\n                <Modal.Header className=\"justify-content-between py-0\">\n                    <span className='text-muted fw-medium'>\n                        <FontAwesomeIcon type={'solid'} icon={'user-check'} iconClass={'me-1 text-success'} />\n                        Access Image\n                    </span>\n                    <div className='ms-5 d-flex justify-content-end'>\n                        <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\n                    </div>\n                </Modal.Header>\n                <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\n                    <div className=\"assets_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\n                        <h3 className='text-center mb-4'>Your UGC Request Approved</h3>\n                        <div className='mx-auto' style={{ maxWidth: 450 }}>\n                            <div className={'d-flex flex-column w-100'}>\n                                <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={ugcRequestData.postFile} alt={\"\"} isCover={true} />\n                                <div className='p-4'>\n                                    <div className=\"d-flex align-items-start mb-2\">\n                                        <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\n                                            <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                imageSize={40}\n                                                symbolClass={'symbol-label fw-bolder fs-5'}\n                                                name={ugcRequestData.name} profileUrl={ugcRequestData.picture} networkId={ugcRequestData.networkId} />\n                                            <div className=\"pe-2 w-100 overflow-hidden\">\n                                                <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{ugcRequestData.name}</strong></p>\n                                                <p className=\"mb-1 text-gray-500 text-break fs-9\">@{ugcRequestData.username}</p>\n                                            </div>\n                                        </div>\n                                        <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\n                                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(ugcRequestData.networkId)}</Tooltip>}>\n                                                <FontAwesomeIcon type='brands' icon={GET_NETWORK_ICON(ugcRequestData.networkId)} iconClass={'fs-3'} />\n                                            </OverlayTrigger>\n                                        </span>\n                                    </div>\n                                    <ShowMoreContent classes={'mb-3'} content={ugcRequestData.content} idIndex={ugcRequestData.id} line={4} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"full_modal_sidebar position-relative\">\n                        <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\n                            <div className=\"ugc-information\">\n                                <h2 className=\"mb-5 h3\">Information</h2>\n                                <div className=\"form-group\">\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\n                                        <span className=\"text-muted mr-2\">User handle</span><span className=\" m_grid_uername\">{`@${ugcRequestData.username}`}</span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\n                                        <span className=\"text-muted mr-2\">User name</span><span className=\" m_grid_name\">{ugcRequestData.name}</span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\n                                        <span className=\"text-muted mr-2\">Device</span>\n                                        <span className=\" ugc-deviceupdate\">\n                                            {ugcRequestData.userAgent ?\n                                                HTMLReactParser(ugcRequestData.userAgent)\n                                                : null\n                                            }\n                                        </span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\n                                        <span className=\"text-muted mr-2\">IP Address</span><span className=\" ugc-userIP\"> {\n                                            ugcRequestData.userIP\n                                        }</span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\n                                        <span className=\"text-muted mr-2\">Location</span><span className=\" ugc-userLocation\">\n                                            {\n                                                ugcRequestData.userLocation\n                                            }\n                                        </span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\n                                        <span className=\"text-muted mr-2\">Post Approval Date</span><span className=\" ugc-actionTime\">{moment(ugcRequestData.actionTime).utcOffset(0).format('YYYY-MM-DD  hh:mm:ss a')}</span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\n                                        <span className=\"text-muted mr-2\">TimeZone</span>\n                                        <span className=\" ugc-timezone\">{ugcRequestData.timezone ? HTMLReactParser(ugcRequestData.timezone) : null}</span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-bottom px-5 py-4\">\n                                        <span className=\"text-muted mr-2\">Terms &amp; Condition</span>\n                                        <span className=\" ugc-tncdownload\">\n                                            <a className='btn btn-link' href={(ugcRequestData.custom_terms) ? `${WASABI_PATH}test/${ugcRequestData.custom_terms}` : `${WASABI_PATH}test/${ugcRequestData.custom_term_type}`} target=\"_blank\"><span className=\"ugc-terms overflow-hidden text-ellipsis text-nowrap\">{ugcRequestData.custom_term_type}</span>\n                                                <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'} /></a>\n                                        </span>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between flex-wrap align-items-center border-top px-5 py-3 ugc-approved-non-insta\" style={ugcRequestData.networkId == 18 ? { display: 'none' } : {}}>\n                                        <span className=\"text-muted mb-2\">Approval Certificate</span>\n                                        <span className=\"f-between w-100\">\n                                            Rights Management\n                                            <a className='btn btn-dark ms-1'\n                                                onClick={() => { }\n                                                    // DOWNLOAD_CERTIFICATE(ugcRequestData.ugcid)\n\n                                                }>Download\n                                                <FontAwesomeIcon type={'solid'} icon={'download'} iconClass={'ms-1'} />\n                                            </a>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            {ugcRequestData.comment ? <div className=\"ugc-user-comment mt-7\">\n                                <h2 className=\"mb-5\">User Comment</h2>\n                                <div className=\"user-comment-box p-5\">\n                                    <p>{ugcRequestData.comment}</p>\n                                </div>\n                            </div> : null}\n                        </div>\n                        <div className=\"d-flex justify-content-end p-4 border-top\">\n                            <Button variant=\"secondary\" className=\"me-3 btn-min-w\" onClick={onHide} >Close</Button>\n                            <Button className=\"btn-min-w\" onClick={() => this.onDownloadMedia(ugcRequestData)}>Download</Button>\n                        </div>\n                    </div>\n                </Modal.Body>\n            </Modal>\n\n        </> : null\n\n    }\n}\n\nexport default UgcModalApproved","import React, { Component } from 'react'\nimport ReactApexChart from 'react-apexcharts'\n\n\nclass RadialChart extends React.Component {\n    constructor(props) {\n        super(props);\n        var days = (30 - props.ago) * 3.33;\n        this.state = {\n            series: [days],\n            options: {\n                chart: {\n                    height: 320,\n                    type: \"radialBar\"\n                },\n                plotOptions: {\n                    radialBar: {\n                        hollow: {\n                            margin: 0,\n                            size: \"65%\",\n                        },\n                        dataLabels: {\n                            showOn: \"always\",\n                            name: {\n                                show: true,\n                                fontWeight: '700',\n                                name: \"TEST\"\n                            },\n                            value: {\n                                color: [\"#545454\"],\n                                fontSize: \"30px\",\n                                fontWeight: '700',\n                                offsetY: 12,\n                                show: false\n                            }\n                        },\n                        track: {\n                            background: [\"#f2f6f8\"],\n                            strokeWidth: '100%'\n                        },\n                        dataLabels: {\n                            show: true,\n                            name: {\n                                show: true,\n                                fontSize: '16px',\n                                fontFamily: 'inter',\n                                fontWeight: 600,\n                                color: '#545454',\n                                offsetY: -10\n                            },\n                            value: {\n                                show: false,\n                                fontSize: '14px',\n                                fontFamily: 'inter',\n                                fontWeight: 800,\n                                color: '#545454',\n                                offsetY: 16\n                            },\n                            total: {\n                                show: true,\n                                label: props.ago + \"Days\",\n                                color: '#373d3f',\n                                fontSize: '16px',\n                                fontFamily: 'inter',\n                                fontWeight: 800\n                            }\n                        }\n                    }\n                },\n                colors: [\"#ffa800\"],\n                stroke: {\n                    lineCap: \"round\",\n                }\n            }\n\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.ago !== this.props.ago) {\n            var days = (30 - this.props.ago) * 3.33;\n            this.setState({\n                series: [days],\n                options: {\n                    chart: {\n                        height: 320,\n                        type: \"radialBar\"\n                    },\n                    plotOptions: {\n                        radialBar: {\n                            hollow: {\n                                margin: 0,\n                                size: \"65%\",\n                            },\n                            dataLabels: {\n                                showOn: \"always\",\n                                name: {\n                                    show: true,\n                                    fontWeight: '700',\n                                    name: \"TEST\"\n                                },\n                                value: {\n                                    color: [\"#545454\"],\n                                    fontSize: \"30px\",\n                                    fontWeight: '700',\n                                    offsetY: 12,\n                                    show: false\n                                }\n                            },\n                            track: {\n                                background: [\"#f2f6f8\"],\n                                strokeWidth: '100%'\n                            },\n                            dataLabels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                    fontSize: '16px',\n                                    fontFamily: 'inter',\n                                    fontWeight: 600,\n                                    color: '#545454',\n                                    offsetY: -10\n                                },\n                                value: {\n                                    show: false,\n                                    fontSize: '14px',\n                                    fontFamily: 'inter',\n                                    fontWeight: 800,\n                                    color: '#545454',\n                                    offsetY: 16\n                                },\n                                total: {\n                                    show: true,\n                                    label: this.props.ago + \"Days\",\n                                    color: '#373d3f',\n                                    fontSize: '16px',\n                                    fontFamily: 'inter',\n                                    fontWeight: 800\n                                }\n                            }\n                        }\n                    },\n                    colors: [\"#ffa800\"],\n                    stroke: {\n                        lineCap: \"round\",\n                    }\n                }\n\n\n            });\n        }\n    }\n\n\n    render() {\n        return <ReactApexChart options={this.state.options} series={this.state.series} type=\"radialBar\" height={350} />\n\n    }\n}\n\nexport default RadialChart;","\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { Modal, Button, Form, InputGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '../../../../../CommonComponents/AssetsHelper';\nimport RadialChart from './RadialChart'\nimport { Link } from 'react-router-dom';\nimport CardPreview from '../Elements/CardPreview';\nimport { copyToClipboard } from '../../../../../../utils';\n\nexport default class Pending extends Component {\n    state = { days: 0, copied: false }\n\n    componentDidMount() { this.getNewdata() }\n\n    getNewdata = () => {\n        const { ugcData, ugcRequestData, onHide } = this.props\n        var new_date = moment().diff(moment(ugcRequestData.ugccreated, \"YYYY-MM-DD\"), 'days');\n        var ago = 30 - new_date;\n        this.setState({ days: ago })\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.ugcRequestData.ugccreated !== this.props.ugcRequestData.ugccreated) {\n            this.getNewdata();\n        }\n    }\n    copyText = (id) => {\n        copyToClipboard(id)\n        this.setState({ copied: true })\n        setTimeout(() => { this.setState({ copied: false }) }, 1000)\n    }\n    render() {\n        const { ugcData, ugcRequestData, onHide } = this.props\n        const { days, copied } = this.state\n        return (<Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\n            <Modal.Header className=\"justify-content-between py-0\">\n                <span className='text-muted fw-medium'>\n                    <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'me-1 text-warning'} />\n                    Pending Request\n                </span>\n                <div className='ms-5 d-flex justify-content-end'>\n                    <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\n                </div>\n            </Modal.Header>\n            <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\n                <div className=\"rights_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\n                    <h3 className='text-center mb-4'>Oops! Your UGC Request is pending now</h3>\n                    <CardPreview ugcData={ugcData} />\n                </div>\n                <div className=\"rights_modal_sidebar position-relative\">\n                    <div className='p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard'>\n                        <div className='mb-3'>\n                            {days ? <RadialChart ago={days} /> : ''}\n                        </div>\n                        <InputGroup className=\"mb-3\">\n                            <InputGroup.Text>\n                                <FontAwesomeIcon type={'solid'} icon={'link'} />\n                            </InputGroup.Text>\n                            <Link id=\"rights_link\" className=\"form-control form-control-lg\" to={ugcRequestData.bitlyurl} target=\"_blank\">{ugcRequestData.bitlyurl}</Link>\n                        </InputGroup>\n                        <Form.Group className=\"mb-5\">\n                            <Button size='lg' onClick={() => this.copyText('rights_link')} className='w-100'>{copied ? 'Copied..' : 'Copy URL'}</Button>\n                        </Form.Group>\n                        <h5> Steps to proceed </h5>\n                        <ul className={`list-unstyled list-points fs-8`}>\n                            <li className='mb-1'>You have successfully generated a \"UGC Request\" for this post.</li>\n                            <li className='mb-1'>Quickly review your Request before sending it to the owner.</li>\n                            <li className='mb-1'>Click on the \"Raise Request\" button located in the right bottom corner of the screen and then you will be redirected to the user's original post.</li>\n                            <li className='mb-1'>Paste the link of \"UGC Request\" in the comments section of the original post.</li>\n                            <li className='mb-1'>You will get UGC Rights asap post owner accept your request and allow you to use their post.</li>\n                        </ul>\n                    </div>\n                    <div className=\"d-flex justify-content-end p-4 border-top\">\n                        <Button className=\"btn-min-w\" onClick={onHide}>Done</Button>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n        )\n    }\n}\n","import moment from 'moment';\nimport React, { Component } from 'react'\nimport { Modal, Button, Form, InputGroup, OverlayTrigger, Tooltip, Image } from 'react-bootstrap';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../CommonComponents/AssetsHelper';\nimport Author from '../../../../../CommonComponents/Author/Author';\nimport ShowMoreContent from '../../../../../CommonComponents/ShowMoreContent';\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../../utils';\nimport ImageType from '../../../../../CommonComponents/MediaType/ImageType';\nclass RejectModal extends Component {\n\n\n    render() {\n        const { ugcRequestData, ugcData, onHide, openugcModel } = this.props;\n        return <Modal size={'full'} show={true} className=\"assets_modal p-0\" backdrop={false}>\n                    <Modal.Header className=\"justify-content-between py-0\">\n                        <span className='text-muted fw-medium'>\n                            <FontAwesomeIcon type={'solid'} icon={'user-clock'} iconClass={'me-1 text-danger'}/>\n                            Rejected Post\n                        </span>\n                        <div className='ms-5 d-flex justify-content-end'>\n                            <Button variant='close' className=\"me-0 text-muted btn-active-primary\" onClick={onHide}></Button>\n                        </div>\n                    </Modal.Header>\n                    <Modal.Body className=\"p-0 d-flex border-0 flex-lg-row flex-column\">\n                        <div className=\"assets_modal_inner flex-column flex-grow-1 p-lg-4 p-xxl-5 position-relative mb-lg-0 overflow-auto\">\n                            <h3 className='text-center mb-4'>Rejected Post</h3>\n                            <div className='mx-auto' style={{maxWidth:450}}>\n                                <div className={'d-flex flex-column w-100'}>\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100'} size={100} height={64} width={64} url={ugcRequestData.postFile} alt={\"\"} isCover={true} />\n                                    <div className='p-4'>\n                                        <div className=\"d-flex align-items-start mb-2\">\n                                            <div className=\"d-flex align-items-start me-2 flex-grow-1 overflow-hidden text-decoration-none\">\n                                                <Author className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                    imageSize={40}\n                                                    symbolClass={'symbol-label fw-bolder fs-5'}\n                                                    name={ugcRequestData.name} profileUrl={ugcRequestData?.postFile} networkId={ugcRequestData.networkId} />\n                                                <div className=\"pe-2 w-100 overflow-hidden\">\n                                                    <p className=\" mb-0\"><strong className=\"text-break text-ellipsis w-100 d-block\">{ugcRequestData.name}</strong></p>\n                                                    <p className=\"mb-1 text-gray-500 text-break fs-9\">@{ugcRequestData.username}</p>\n                                                </div>\n                                            </div>  \n                                            <span className=\"d-flex align-items-center h-20px w-20px flex-shrink-0\">\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>{GET_NETWORK_NAME(ugcRequestData.networkId)}</Tooltip>}>\n                                                    <FontAwesomeIcon type='brands' icon={GET_NETWORK_ICON(ugcRequestData.networkId)} iconClass={'fs-3'} />\n                                                </OverlayTrigger>\n                                            </span>\n                                        </div>\n                                        <ShowMoreContent classes={'mb-3'} content={ugcRequestData.content} idIndex={ugcRequestData.id} line={4} />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"full_modal_sidebar position-relative\">\n                            <div className=\"p-lg-6 p-4 py-3 rights_modal_aside_wrap rights_no_wizard\">\n                                <h2 className=\"mb-5 text-center\">Sorry! Your UGC Request has been rejected</h2>\n                                <div className=\"mb-7\">\n                                    <Button size='lg' className=\"w-100\" onClick={openugcModel}>\n                                        <FontAwesomeIcon type={'solid'} icon={'user-check'}/>\n                                        UGC Rights\n                                    </Button>\n                                </div>\n                                <ul className={`list-unstyled list-points fs-8`}>\n                                    <li className='mb-1'>Keep the request personalized</li>\n                                    <li className='mb-1'>Be clear about your intentions with the post</li>\n                                    <li className='mb-1'>Appreciate the post owner's efforts</li>\n                                    <li className='mb-1'>Offer rewards to users</li>\n                                    <li className='mb-1'>Add T&C with your request</li>\n                                </ul>\n                            </div>\n                            <div className=\"d-flex justify-content-end p-4 border-top\">\n                                <Button className=\"btn-min-w\" onClick={onHide} >Close</Button>\n                            </div>\n                        </div>\n                    </Modal.Body>\n                </Modal>\n    }\n}\n\nexport default RejectModal","import ApprovedModal from '../../UgcRights/Status/ApprovedModal'\nimport Pendingng from '../../UgcRights/Status/PendingModal'\nimport RejectModal from '../../UgcRights/Status/RejectModal'\n\nconst UgcStatus = (props) => {\n    const { ugcData, statusPopup, ugcRequestData, onHide, openugcModel } = props\n    return (<>\n        {statusPopup == 1 ? <Pendingng ugcData={ugcData} ugcRequestData={ugcRequestData} onHide={onHide} /> : null}\n        {statusPopup == 3 ? <RejectModal ugcRequestData={ugcRequestData} ugcData={ugcData} onHide={onHide}  openugcModel={openugcModel} /> : null}\n        {statusPopup == 2 ? <ApprovedModal ugcRequestData={ugcRequestData} onHide={onHide} /> : null}\n    </>)\n}\nexport default UgcStatus"],"names":["ModalMedia","Component","constructor","props","super","handleResize","this","setState","winWidth","window","innerWidth","winHeight","innerHeight","onMediaLoad","async","modalData","mediaHeight","mediaWidth","mediaSize","height","width","getImageSize","newMedia","error","state","count","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","render","handleAllImageError","autoPlay","movePost","scale","Math","min","paddingBottom","type","_jsx","className","children","TextType","mediaClass","size","content","postcontent","rating","socialNetworkId","networkId","fontSize","lineCount","style","maxWidth","ImageType","url","postFile","icon","alt","item","isCover","VideoType","mediaUrl","mediaFile","mediaClip","poster","muted","controls","loop","isupdate","InputGroupText","React","_ref","ref","bsPrefix","as","useBootstrapPrefix","classNames","displayName","InputGroup","hasValidation","contextValue","useMemo","InputGroupContext","Provider","value","Object","assign","Text","Radio","FormCheckInput","Checkbox","ShowMoreContent","arguments","readMore","lines","readMoreTxt","countLines","id","setTimeout","el","document","getElementById","offsetHeight","idIndex","line","classes","length","_jsxs","Collapse","in","ReactHtmlParser","onClick","CardPreview","handleThumbs","mainRef","current","go","_ugcData$data","ugcData","mainOptions","perPage","perMove","pagination","navigation","arrows","data","Splide","hasTrack","options","SplideTrack","map","index","_item$postcontent","SplideSlide","maxHeight","Author","imageSize","symbolClass","name","profileUrl","picture","username","OverlayTrigger","placement","overlay","Tooltip","GET_NETWORK_NAME","FontAwesomeIcon","GET_NETWORK_ICON","iconClass","slice","class","UgcModalApproved","onDownloadMedia","saveAs","ugcRequestData","onHide","_Fragment","Modal","show","backdrop","Header","Button","variant","Body","display","userAgent","HTMLReactParser","userIP","userLocation","moment","actionTime","utcOffset","format","timezone","href","custom_terms","WASABI_PATH","custom_term_type","target","comment","RadialChart","days","ago","series","chart","plotOptions","radialBar","hollow","margin","dataLabels","showOn","fontWeight","color","offsetY","track","background","strokeWidth","fontFamily","total","label","colors","stroke","lineCap","ReactApexChart","Pending","copied","getNewdata","diff","ugccreated","copyText","copyToClipboard","Link","to","bitlyurl","Form","Group","RejectModal","openugcModel","statusPopup","Pendingng","ApprovedModal"],"sourceRoot":""}