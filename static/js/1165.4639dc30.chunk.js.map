{"version":3,"file":"static/js/1165.4639dc30.chunk.js","mappings":"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","sources":["app/Display/analytics-new/components/content/assetsLanguage.js","app/Display/analytics-new/layout/common/noData.js","app/Display/analytics-new/layout/skeleton/assetsbySkeleton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardBody, CardHeader } from \"react-bootstrap\";\r\nimport { getFlagCode, hideLangFilter } from \"../../../../../utils\";\r\nimport AssetsbySkeleton from \"../../layout/skeleton/assetsbySkeleton\";\r\nimport NoData from \"../../layout/common/noData\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst AssetsLanguage = (props) => {\r\n\r\n  const { getFlags, loader, selectedWallFeed, postbyLanguage, dateFilter } = props;\r\n  \r\n  const [getLanguage, setgetLanguage]= useState()\r\n\r\n    const languageTags=()=>{\r\n\r\n      const feedList = selectedWallFeed && Object.keys(selectedWallFeed).length > 0 ? selectedWallFeed.map(item => item.id) : [];\r\n          let langs = postbyLanguage;\r\n          let result = [];\r\n\r\n          if(langs && langs.length > 0){\r\n              langs = langs.filter((lang) => {\r\n                  if(hideLangFilter(feedList, lang.feedId,1)) return lang;\r\n              });\r\n              langs.splice(6).sort((a, b) => b.count - a.count).forEach(lang => {\r\n                  if(lang.language != \"\"){\r\n                      result.push(lang.language);\r\n                  }\r\n              });\r\n \r\n              setgetLanguage(langs)\r\n          }\r\n      }\r\n \r\n\r\n  useEffect(() => {\r\n    selectedWallFeed && languageTags()\r\n  }, []);\r\n\r\n  \r\n  return (\r\n    <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n      <CardHeader className=\"p-5 d-flex align-items-center justify-content-between\">\r\n        <h6 class=\"card-label font-weight-bolder m-0\">Top Languages</h6>\r\n      </CardHeader>\r\n      <CardBody className=\"p-5\">  \r\n        <div className=\"mx-height-345\">\r\n        { loader ? <AssetsbySkeleton/> : getLanguage && Object.keys(getLanguage).length\r\n          ? getLanguage.map((data,index) => {\r\n              return (\r\n              <Link className=\"mb-4 last-child-mb-0 d-block\" to={`/moderation/index/${localStorage.getItem('wallId')}?language=${data.language}/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}`}>\r\n                <div className=\"px-5 py-2 border rounded\">\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div className=\"d-flex align-items-center me-10\">\r\n                      <div className=\"rounded me-3 d-flex\">\r\n                        <div class={`iti-flag ${getFlagCode(data.language,getFlags)}`}></div> \r\n                      </div>\r\n                      <div className=\"\">\r\n                        <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\r\n                           { data.language }\r\n                        </p>\r\n                      </div>                 \r\n                    </div>\r\n                    <p className=\"text-dark count-tag border font-weight-boldest m-0\">\r\n                     { data.count }\r\n                    </p>\r\n                  </div>\r\n                  </div>\r\n                  </Link>  \r\n                );\r\n              })\r\n            : <NoData/>}\r\n        </div>\r\n         \r\n        </CardBody>\r\n      </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(AssetsLanguage);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst GetData = () => {\r\n  return (\r\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\r\n      <div className=\"mb-3 text-center\">\r\n        <img\r\n          className=\"img-fluid graph-bg\"\r\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\r\n          width={\"80px\"}\r\n          height={\"80px\"}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        <h5 class=\"text-gray-dark text-center\">No Data Available</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NoData = (props) => {\r\n\r\n  return props.status ? (\r\n    <tr>\r\n      <td colSpan={props.col}>\r\n        <GetData />\r\n      </td>\r\n    </tr>\r\n  ) : (\r\n    <GetData />\r\n  );\r\n};\r\n\r\nexport default React.memo(NoData);\r\n","    import React from \"react\";\r\n\r\n    const AssetsbySkeleton = () => {\r\n    return (\r\n        [1,2,3,4,5].map(()=>{\r\n            return(\r\n        <div class=\"d-flex p-6 border rounded mb-4\">\r\n        <div class=\"d-flex align-items-center m_grid_author w-100\">\r\n          <div class=\"sk_line sk_line_height_16 sk_line_10 m-0 me-3 rounded\"></div>\r\n          <div class=\"w-50\">\r\n              <h3 class=\"sk_line sk_line_height_16 sk_line_90 m-0\"></h3>\r\n          </div>\r\n        </div>\r\n        <div class=\"sk_line sk_line_10 sk_line_height_16 m-0\"></div>\r\n    </div>)})\r\n    );\r\n    };\r\n\r\n    export default React.memo(AssetsbySkeleton);\r\n"],"names":["AssetsLanguage","props","getFlags","loader","selectedWallFeed","postbyLanguage","dateFilter","getLanguage","setgetLanguage","useState","useEffect","languageTags","feedList","Object","keys","length","map","item","id","langs","result","filter","lang","hideLangFilter","feedId","splice","sort","a","b","count","forEach","language","push","_jsxs","Card","className","children","_jsx","CardHeader","class","CardBody","AssetsbySkeleton","data","index","Link","to","localStorage","getItem","moment","startDate","format","endDate","getFlagCode","NoData","React","GetData","src","baseUrl","width","height","status","colSpan","col"],"sourceRoot":""}