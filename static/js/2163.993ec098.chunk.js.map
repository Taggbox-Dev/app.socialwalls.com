{"version":3,"file":"static/js/2163.993ec098.chunk.js","mappings":"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","sources":["app/Display/analytics-new/activityHub/display/index.js","app/Display/analytics-new/layout/common/sectionHeading.js","app/Display/analytics-new/layout/skeleton/imageSkeleton.js"],"sourcesContent":["import React, { Component, Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getScreenAnalyticsData,\n} from \"../../../../../actions/analyticsNew\";\nimport { Card, CardBody } from \"react-bootstrap\";\nimport ImageSkeleton from \"../../layout/skeleton/imageSkeleton\";\nimport SectionHeading from \"../../layout/common/sectionHeading\";\n\nconst TopCard = React.lazy(() =>\n  import(\"../../layout/common/topCard\")\n)\nconst Tabheader = React.lazy(() =>\n  import(\"../../layout/common/subheader/tabHeader\")\n)\nconst AssetsTypeAreaChart = React.lazy(() =>\n  import(\"../../layout/common/graph/assetsTypeAreaChart\")\n);\nconst ScreensOverview = React.lazy(() =>\n  import(\"./components/screensOverview\")\n);\n\nclass Display extends Component {  \n  componentDidMount() {\n    const { getScreenAnalytics, analyticsStatus, selectedWallFeed  } = this.props;\n      getScreenAnalytics(!selectedWallFeed.length ? true : analyticsStatus)\n    }\n\n  render() {\n    const {\n      get_screen_overview_data,\n      get_screen_overview_data_loader,\n      get_screen_analytics_data,\n      get_screen_analytics_loader\n    } = this.props.analyticsRecords;\n\n\n    return (\n      <>\n            <div className=\"\">\n              <Suspense fallback={<></>}>\n                <Tabheader />\n               </Suspense>  \n              <div className=\"row\">\n                <Suspense fallback={<></>}>\n                  <TopCard loader={get_screen_analytics_loader} data={get_screen_analytics_data} col={2} res={6}  />\n                </Suspense>  \n              </div>\n\n              <Suspense fallback={<></>}>\n                <ScreensOverview\n                  loader={get_screen_overview_data_loader}\n                  {...get_screen_overview_data}\n                />\n              </Suspense>\n\n              <Card className=\"sw-card-custom gutter-b p-5 card-shadow\">\n                <SectionHeading  section={3}  title={'Content Analytics'} />\n                <CardBody className=\"p-0\">\n                  { get_screen_overview_data_loader ? (<ImageSkeleton img={3} />) : (\n                    <Suspense fallback={<></>}>\n                        <AssetsTypeAreaChart\n                        key={get_screen_overview_data_loader}\n                        get_screen_overview_data={get_screen_overview_data_loader ? null : get_screen_overview_data}\n                        type={\"bar\"}\n                      />\n                    </Suspense>\n                  )}\n                </CardBody>\n              </Card>\n            </div>\n      </>\n    );\n  }\n}\n\n\nconst widgetstateProps = (state) => {  \n  return {\n    analyticsRecords: state.analyticsRecords,\n    selectedWallFeed: state.analyticwall.selectedWallFeed.feeds,\n    detail: state.appsMore.detail,\n    analyticsStatus : state.analyticsStatus.trialAccessAPI\n  };\n};\n\nconst widgetDispatchProps = (dispatch) => {\n  return {\n    getScreenAnalytics: (isTrial) => dispatch(getScreenAnalyticsData(isTrial)),\n  };\n};\n\nexport default connect(widgetstateProps, widgetDispatchProps)(Display);\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\nimport { baseUrl } from \"../../../../../utils\";\n\nconst SectionHeading = (props) => {\n\n  const { title, section, cardTitleCss, icon, iconFull, moreData, total, handlePopup, headingMargin, isDashboard, isTrial } = props\n \n  return (\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-5' : section==3 ? 'p-0 pb-3' : 'px-5 pt-5 border-0 pb-0'}`}>\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\n        <h6 class={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : ''} `}>\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\n         { !isTrial && ((total > 5) || moreData) ? (\n          <Button\n            variant=\"link\"\n            className=\"p-0\"\n            onClick={() => handlePopup(true)}\n          >\n            See More\n          </Button>\n        ) : null\n        }\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nexport default SectionHeading;\n","import React from \"react\";\nimport { baseUrl } from \"../../../../../utils\";\n\nconst ImageSkeleton = (props) => {\n  return (\n    <div className=\"py-1 text-center\" style={{ backgroundImage: `url(${baseUrl(`dashboard/analytic/content-analytis-5.svg`)})` }}></div>\n  );\n};\n\nexport default React.memo(ImageSkeleton)"],"names":["TopCard","React","Tabheader","AssetsTypeAreaChart","ScreensOverview","Display","Component","componentDidMount","getScreenAnalytics","analyticsStatus","selectedWallFeed","this","props","length","render","get_screen_overview_data","get_screen_overview_data_loader","get_screen_analytics_data","get_screen_analytics_loader","analyticsRecords","_jsx","_Fragment","children","_jsxs","className","Suspense","fallback","loader","data","col","res","Card","SectionHeading","section","title","CardBody","ImageSkeleton","img","type","connect","state","analyticwall","feeds","detail","appsMore","trialAccessAPI","dispatch","isTrial","getScreenAnalyticsData","cardTitleCss","icon","iconFull","moreData","total","handlePopup","headingMargin","isDashboard","CardHeader","CardTitle","class","src","baseUrl","height","width","Button","variant","onClick","style","backgroundImage"],"sourceRoot":""}