{"version":3,"file":"static/js/3149.d99defd0.chunk.js","mappings":"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","sources":["../node_modules/src/.internal/core/data/DataLoader.ts","../node_modules/src/.internal/core/utils/Log.ts","../node_modules/src/.internal/core/elements/Modal.ts","../node_modules/src/.internal/core/elements/Label.ts","../node_modules/src/.internal/core/utils/InterfaceColorSet.ts","../node_modules/src/.internal/core/utils/Ease.ts","../node_modules/tslib/tslib.es6.mjs","../node_modules/src/.internal/core/utils/Strings.ts","../node_modules/src/.internal/core/utils/Dictionary.ts","../node_modules/src/.internal/core/SpriteEvents.ts","../node_modules/src/.internal/core/data/DataParser.ts","../node_modules/src/.internal/core/utils/Utils.ts","../node_modules/src/.internal/core/Base.ts","../node_modules/src/.internal/core/utils/Iterator.ts","../node_modules/src/.internal/core/defs/SVGDefaults.ts","../node_modules/src/.internal/core/rendering/AMElement.ts","../node_modules/src/.internal/core/utils/ResizeSensor.ts","../node_modules/src/.internal/core/rendering/SVGContainer.ts","../node_modules/src/.internal/core/DataItem.ts","../node_modules/src/.internal/core/utils/Animation.ts","../node_modules/src/.internal/core/utils/Browser.ts","../node_modules/src/.internal/core/utils/Validatable.ts","../node_modules/src/.internal/core/utils/Type.ts","../node_modules/src/.internal/core/formatters/TextFormatter.ts","../node_modules/src/.internal/core/utils/DOM.ts","../node_modules/src/.internal/core/elements/Circle.ts","../node_modules/src/.internal/core/elements/Ellipse.ts","../node_modules/src/.internal/core/elements/Image.ts","../node_modules/src/.internal/core/elements/Line.ts","../node_modules/src/.internal/core/elements/Polyline.ts","../node_modules/src/.internal/core/elements/Polyarc.ts","../node_modules/src/.internal/core/utils/Morpher.ts","../node_modules/src/.internal/core/elements/Polygon.ts","../node_modules/src/.internal/core/elements/Polyspline.ts","../node_modules/src/.internal/core/elements/Slice.ts","../node_modules/src/.internal/core/elements/Preloader.ts","../node_modules/src/.internal/core/elements/CloseButton.ts","../node_modules/src/.internal/core/elements/SwitchButton.ts","../node_modules/src/.internal/core/elements/Slider.ts","../node_modules/src/.internal/core/elements/TextLink.ts","../node_modules/src/.internal/core/elements/Trapezoid.ts","../node_modules/src/.internal/core/elements/Triangle.ts","../node_modules/src/.internal/core/rendering/Smoothing.ts","../node_modules/src/.internal/core/elements/WavedCircle.ts","../node_modules/src/.internal/core/elements/WavedLine.ts","../node_modules/src/.internal/core/elements/WavedRectangle.ts","../node_modules/src/.internal/core/elements/ZoomOutButton.ts","../node_modules/src/.internal/core/elements/PlayButton.ts","../node_modules/src/.internal/core/rendering/fills/ColorModifier.ts","../node_modules/src/.internal/core/rendering/fills/GradientModifier.ts","../node_modules/src/.internal/core/rendering/fills/LinearGradientModifier.ts","../node_modules/src/.internal/core/elements/3d/Cone.ts","../node_modules/src/.internal/core/rendering/filters/LightenFilter.ts","../node_modules/src/.internal/core/elements/3d/Rectangle3D.ts","../node_modules/src/.internal/core/elements/3d/Slice3D.ts","../node_modules/src/.internal/core/rendering/fills/RadialGradientModifier.ts","../node_modules/src/.internal/core/rendering/fills/LinePattern.ts","../node_modules/src/.internal/core/rendering/fills/CirclePattern.ts","../node_modules/src/.internal/core/rendering/fills/RectPattern.ts","../node_modules/src/.internal/core/rendering/filters/ColorizeFilter.ts","../node_modules/src/.internal/core/rendering/filters/DesaturateFilter.ts","../node_modules/src/.internal/core/rendering/filters/BlurFilter.ts","../node_modules/src/.internal/core/rendering/filters/FocusFilter.ts","../node_modules/src/.internal/core/utils/PatternSet.ts","../node_modules/src/.internal/core/elements/AmChartsLogo.ts","../node_modules/src/.internal/core/utils/Plugin.ts","../node_modules/src/.internal/core/utils/Instance.ts","../node_modules/src/.internal/core/rendering/Group.ts","../node_modules/src/.internal/core/utils/Disposer.ts","../node_modules/src/.internal/core/elements/PointedRectangle.ts","../node_modules/src/.internal/core/rendering/fills/Pattern.ts","../node_modules/src/.internal/core/utils/Object.ts","../node_modules/src/.internal/core/elements/RoundedRectangle.ts","../node_modules/src/.internal/core/interaction/Mouse.ts","../node_modules/src/.internal/core/data/JSONParser.ts","../node_modules/src/.internal/core/elements/PointedShape.ts","../node_modules/src/.internal/core/interaction/InteractionKeyboardObject.ts","../node_modules/src/.internal/core/elements/PopupCSS.ts","../node_modules/src/.internal/core/elements/Popup.ts","../node_modules/src/.internal/core/Component.ts","../node_modules/src/.internal/core/data/CSVParser.ts","../node_modules/src/.internal/core/formatters/NumberFormatter.ts","../node_modules/src/.internal/core/utils/String.ts","../node_modules/src/.internal/core/utils/Array.ts","../node_modules/src/.internal/core/Sprite.ts","../node_modules/src/.internal/core/utils/Cache.ts","../node_modules/src/.internal/core/utils/AsyncPending.ts","../node_modules/src/.internal/core/System.ts","../node_modules/src/.internal/core/utils/Time.ts","../node_modules/src/.internal/core/elements/ResizeButton.ts","../node_modules/src/.internal/core/SpriteState.ts","../node_modules/src/.internal/core/utils/EventDispatcher.ts","../node_modules/src/.internal/core/rendering/Paper.ts","../node_modules/src/.internal/core/formatters/DurationFormatter.ts","../node_modules/src/.internal/core/formatters/DateFormatter.ts","../node_modules/src/.internal/core/rendering/fills/RadialGradient.ts","../node_modules/src/.internal/core/elements/Tooltip.ts","../node_modules/src/.internal/core/utils/Net.ts","../node_modules/src/.internal/core/interaction/InteractionObject.ts","../node_modules/src/.internal/core/utils/Color.ts","../node_modules/src/.internal/core/export/Export.ts","../node_modules/src/.internal/core/rendering/Path.ts","../node_modules/src/.internal/core/utils/Math.ts","../node_modules/src/.internal/core/utils/List.ts","../node_modules/src/.internal/core/rendering/filters/DropShadowFilter.ts","../node_modules/src/.internal/core/data/DataSource.ts","../node_modules/src/.internal/core/Options.ts","../node_modules/src/.internal/core/utils/ColorSet.ts","../node_modules/src/.internal/core/utils/Percent.ts","../node_modules/src/.internal/core/utils/SortedList.ts","../node_modules/src/.internal/core/elements/Button.ts","../node_modules/src/lang/en.ts","../node_modules/src/.internal/core/utils/Language.ts","../node_modules/src/.internal/core/export/ExportCSS.ts","../node_modules/src/.internal/core/export/ExportMenu.ts","../node_modules/src/.internal/core/interaction/InteractionObjectEvents.ts","../node_modules/src/.internal/core/interaction/Interaction.ts","../node_modules/src/.internal/core/Registry.ts","../node_modules/src/.internal/core/Container.ts","../node_modules/src/.internal/core/rendering/filters/Filter.ts","../node_modules/src/.internal/core/utils/Number.ts","../node_modules/src/.internal/core/utils/Order.ts","../node_modules/src/.internal/core/utils/Adapter.ts","../node_modules/src/.internal/core/elements/Scrollbar.ts","../node_modules/src/.internal/core/elements/Grip.ts","../node_modules/src/.internal/charts/Chart.ts","../node_modules/src/.internal/charts/elements/Bullet.ts","../node_modules/src/.internal/charts/Legend.ts","../node_modules/src/.internal/charts/series/Series.ts","../node_modules/src/.internal/charts/types/SerialChart.ts","../node_modules/src/.internal/plugins/WordCloud/WordCloudSeries.ts","../node_modules/src/.internal/plugins/WordCloud/WordCloud.ts","../node_modules/src/.internal/core/elements/Rectangle.ts","../node_modules/src/.internal/core/rendering/fills/LinearGradient.ts","../node_modules/src/.internal/core/utils/Keyboard.ts","../node_modules/src/.internal/core/utils/Colors.ts","../node_modules/src/.internal/core/interaction/Inertia.ts","../node_modules/src/.internal/core/utils/Responsive.ts"],"sourcesContent":["/**\r\n * Data Loader is responsible for loading and parsing external data\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DataSource } from \"./DataSource\";\r\nimport { DataParser } from \"./DataParser\";\r\nimport { CSVParser } from \"./CSVParser\";\r\nimport { JSONParser } from \"./JSONParser\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $array from \"../utils/Array\";\r\n\r\n/**\r\n * Represents a list of available adapters for Sprite\r\n */\r\nexport interface IDataLoaderAdapters {\r\n\r\n\t/**\r\n\t * Applied after the Data Loader determines suitable parser type by data\r\n\t * source's URL extension.\r\n\t */\r\n\tgetParserByType: {\r\n\t\tparser: DataParser,\r\n\t\ttype?: string\r\n\t},\r\n\r\n\t/**\r\n\t * Applied after the Data Loader determines suitable parser type based on\r\n\t * its data examination.\r\n\t */\r\n\tgetParserByData: {\r\n\t\tparser: DataParser,\r\n\t\tdata?: string,\r\n\t\ttype?: string\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * Data Loader is responsible for loading and parsing external data.\r\n *\r\n * There is just one instance of DataLoader per system. Unless you have a\r\n * speicific reason, do not instantiate additional instances.\r\n *\r\n * The global instance of Data Loader is accessible via:\r\n *\r\n * ```TypeScript\r\n * am4core.dataLoader;\r\n * ```\r\n * ```JavaScript\r\n * am4core.dataLoader;\r\n * ```\r\n *\r\n * A loading of specific data source is done via [[DataSource]].\r\n *\r\n \t Please refer to [[DataSource]] for information how to use it.\r\n *\r\n * @see {@link IDataLoaderAdapters} for a list of available Adapters\r\n */\r\nexport class DataLoader {\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDataLoaderAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter: Adapter<DataLoader, IDataLoaderAdapters> = new Adapter<DataLoader, IDataLoaderAdapters>(this);\r\n\r\n\t/**\r\n\t * Loads a supplied [[DataSource]] or an array of data sources, then calls\r\n\t * their respective `parse` methods.\r\n\t *\r\n\t * @param source  A single data source or an array of multiple of data sources\r\n\t */\r\n\tpublic load(source: DataSource | DataSource[]): void {\r\n\t\tlet sources = Array.isArray(source) ? source : [source];\r\n\r\n\t\t// Add each Source to the list to be loaded simultaneously\r\n\t\tlet promises = $array.map(sources, (x) => {\r\n\t\t\t// Dispatch events\r\n\t\t\tx.dispatchImmediately(\"started\");\r\n\t\t\tx.dispatchImmediately(\"loadstarted\");\r\n\r\n\t\t\treturn $net.load(x.url, x, x.requestOptions);\r\n\t\t});\r\n\r\n\t\t// Run all promises in parallel\r\n\t\tPromise.all(promises).then((res) => {\r\n\t\t\t// Process each loaded source\r\n\t\t\t$array.each(res, (result) => {\r\n\t\t\t\t// Get Source\r\n\t\t\t\tlet source = result.target;\r\n\r\n\t\t\t\t// Dispatch events\r\n\t\t\t\tsource.dispatchImmediately(\"loadended\");\r\n\r\n\t\t\t\tif (result.error) {\r\n\t\t\t\t\tif (source.events.isEnabled(\"error\")) {\r\n\t\t\t\t\t\tsource.events.dispatchImmediately(\"error\", {\r\n\t\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\t\tcode: result.xhr.status,\r\n\t\t\t\t\t\t\tmessage: source.language.translate(\"Unable to load file: %1\", null, source.url),\r\n\t\t\t\t\t\t\ttarget: source\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// Initiate parsing of the loaded data\r\n\t\t\t\t\tsource.processData(result.response, result.type);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsource.dispatchImmediately(\"ended\");\r\n\t\t\t});\r\n\t\t}).catch((res) => {\r\n\r\n\t\t\tif (res.target) {\r\n\r\n\t\t\t\tres.target.dispatchImmediately(\"loadended\");\r\n\r\n\t\t\t\tif (res.target.events.isEnabled(\"error\")) {\r\n\t\t\t\t\tres.target.events.dispatchImmediately(\"error\", {\r\n\t\t\t\t\t\ttype: \"error\",\r\n\t\t\t\t\t\tcode: res.xhr.status,\r\n\t\t\t\t\t\tmessage: res.target.language.translate(\"Unable to load file: %1\", null, res.target.url),\r\n\t\t\t\t\t\ttarget: res.target\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tres.target.dispatchImmediately(\"ended\");\r\n\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a [[DataParser]] object based on the data type.\r\n\t * Built-in parser types are as follows:\r\n\t *\r\n\t * * \"csv\" or \"text/csv\"\r\n\t * * \"json\" or \"application/json\"\r\n\t *\r\n\t * @param contentType  A format type\r\n\t * @return A parser object\r\n\t */\r\n\tpublic getParserByType(contentType: string): DataParser {\r\n\r\n\t\t// Let some plugin decide\r\n\t\tlet parser = this.adapter.apply(\"getParserByType\", {\r\n\t\t\tparser: null,\r\n\t\t\ttype: contentType\r\n\t\t}).parser;\r\n\r\n\t\tif (parser) {\r\n\t\t\treturn parser;\r\n\t\t}\r\n\r\n\t\tif (contentType == \"csv\" || contentType == \"text/csv\" || contentType == \"application/vnd.ms-excel\") {\r\n\t\t\treturn new CSVParser();\r\n\t\t}\r\n\t\tif (contentType == \"json\" || contentType == \"application/json\") {\r\n\t\t\treturn new JSONParser();\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to determine a parser out of content type and/or actual data.\r\n\t *\r\n\t * @param data         Data\r\n\t * @param contentType  Content-type\r\n\t * @return Parser instance\r\n\t */\r\n\tpublic getParserByData(data: string, contentType?: string): DataParser {\r\n\r\n\t\t// Let some plugin decide\r\n\t\tlet parser = this.adapter.apply(\"getParserByData\", {\r\n\t\t\tparser: null,\r\n\t\t\tdata: data,\r\n\t\t\ttype: contentType\r\n\t\t}).parser;\r\n\r\n\t\t// Check if we have parser from outside code\r\n\t\tif (!parser) {\r\n\t\t\t// No, let's try to figure it out\r\n\t\t\tparser = this.getParserByType(contentType)\r\n\r\n\t\t\tif (parser) {\r\n\t\t\t\t// We're able to figure out parser by content-type\r\n\t\t\t\treturn parser;\r\n\t\t\t}\r\n\t\t\telse if (JSONParser.isJSON(data)) {\r\n\t\t\t\treturn this.getParserByType(\"json\");\r\n\t\t\t}\r\n\t\t\telse if (CSVParser.isCSV(data)) {\r\n\t\t\t\treturn this.getParserByType(\"csv\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn parser;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Create instance of Data Loader\r\n */\r\nexport let dataLoader: DataLoader = new DataLoader();\r\n","import { options } from \"../Options\";\n\n/**\n * Outputs string to console if `verbose` is `true`.\n */\nexport function log(...messages: Array<any>): void {\n\tif (options.verbose) {\n\t\tif (console) {\n\t\t\tconsole.log(...messages);\n\t\t}\n\t}\n}\n\n/**\n * Outputs a warning to the console.\n */\nexport function warn(...messages: Array<any>): void {\n\tif (!options.suppressWarnings) {\n\t\tif (console) {\n\t\t\tconsole.warn(...messages);\n\t\t}\n\t}\n}\n","/**\r\n * Modal class is used to display information over chart area.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Popup, IPopupAdapters } from \"./Popup\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\n\r\n/**\r\n * Represents a list of available adapters for Export.\r\n */\r\nexport interface IModalAdapters extends IPopupAdapters {}\r\n\r\n/**\r\n * Shows an HTML modal which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n */\r\nexport class Modal extends Popup {\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IModalAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter: Adapter<Modal, IModalAdapters> = new Adapter<Modal, IModalAdapters>(this);\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Modal\";\r\n\t\tthis.showCurtain = true;\r\n\t\tthis.draggable = false;\r\n\t}\r\n\r\n}\r\n","/**\r\n * Text class deals with all text placed on chart.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { DataItem } from \"../DataItem\";\r\nimport { TextValign } from \"../defs/TextValign\";\r\nimport { TextAlign } from \"../defs/TextAlign\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { AMElement } from \"../rendering/AMElement\";\r\nimport { Group } from \"../rendering/Group\";\r\nimport { registry } from \"../Registry\";\r\nimport { ITextChunk, getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Color } from \"../utils/Color\";\r\nimport { Pattern } from \"../rendering/fills/Pattern\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"../rendering/fills/RadialGradient\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../utils/Responsive\";\r\nimport { options } from \"../Options\";\r\n\r\n\r\n/**\r\n * Defines properties for [[Text]].\r\n */\r\nexport interface ILabelProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Horizontal align of the text.\r\n\t *\r\n\t * @default \"start\"\r\n\t */\r\n\ttextAlign?: TextAlign;\r\n\r\n\t/**\r\n\t * Vertical align of the text.\r\n\t *\r\n\t * @default \"top\"\r\n\t */\r\n\ttextValign?: TextValign;\r\n\r\n\t/**\r\n\t * A plain text content.\r\n\t */\r\n\ttext?: string;\r\n\r\n\t/**\r\n\t * Should the lines wrap if they do not fit into max width?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\twrap?: boolean;\r\n\r\n\t/**\r\n\t * Should the text be selectable>\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tselectable?: boolean;\r\n\r\n\t/**\r\n\t * HTML content.\r\n\t */\r\n\thtml?: string;\r\n\r\n\t/**\r\n\t * Should the lines be truncated (optionally with ellipsis) if they do not\r\n\t * fit into max width?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\ttruncate?: boolean;\r\n\r\n\t/**\r\n\t * If `truncate` is enabled, should Label try to break only on full words\r\n\t * (`true`), or whenever needed, including middle of the word. (`false`)\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tfullWords?: boolean;\r\n\r\n\t/**\r\n\t * If lines are truncated, this ellipsis will be added at the end.\r\n\t *\r\n\t * @default \"…\"\r\n\t */\r\n\tellipsis?: string;\r\n\r\n\t/**\r\n\t * Hide text of it does not fit into element's dimensions?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\thideOversized?: boolean;\r\n\r\n\t/**\r\n\t * If set to `true` square-bracket formatting blocks will be treated as\r\n\t * regular text.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tignoreFormatting?: boolean;\r\n\r\n\t/**\r\n\t * Path string along which text should be arranged\r\n\t */\r\n\tpath?: string\r\n\r\n\t/**\r\n\t * Relative label location on path.\r\n\t */\r\n\tlocationOnPath?: number;\r\n\r\n\t/**\r\n\t * A ratio to calculate text baseline. Ralative distance from the bottom of\r\n\t * the label.\r\n\t *\r\n\t * @default -0.27\r\n\t */\r\n\tbaseLineRatio?: number;\r\n}\r\n\r\n/**\r\n * Text line information.\r\n *\r\n * Objects used to hold cached information about lines in a Text element.\r\n */\r\nexport interface ITextLineInfo {\r\n\r\n\t/**\r\n\t * Measurements for the bounding box of the line.\r\n\t */\r\n\t\"bbox\"?: IRectangle,\r\n\r\n\t/**\r\n\t * A reference to an SVG `<g>` element that holds line elements.\r\n\t */\r\n\t\"element\"?: Group,\r\n\r\n\t/**\r\n\t * Indicates if line contains more than one element, e.g. has multiple\r\n\t * formatted blocks.\r\n\t */\r\n\t\"complex\"?: boolean,\r\n\r\n\t\"text\"?: string,\r\n\r\n\t\"style\"?: string\r\n};\r\n\r\n/**\r\n * Defines events for [[Text]].\r\n */\r\nexport interface ILabelEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Adapters for [[Text]].\r\n *\r\n * Includes both the [[Adapter]] definitions and properties.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILabelAdapters extends IContainerAdapters, ILabelProperties {\r\n\r\n\t/**\r\n\t * Applied to the final formatted label text.\r\n\t */\r\n\ttextOutput: string;\r\n\r\n\t/**\r\n\t * Applied to the final formatted label HTML.\r\n\t */\r\n\thtmlOutput: string;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Text is used to display highly configurable, data-enabled textual elements.\r\n *\r\n * ## Data Binding\r\n *\r\n * A Text element can dynamically parse and populate its contents with values\r\n * from a [[DataItem]].\r\n *\r\n * To activate such binding, set element's `dataItem` property.\r\n *\r\n * When activated, text contents will be parsed for special tags, e.g.:\r\n *\r\n * ```TypeScript\r\n * label.dataItem = myDataItem;\r\n * label.text = \"The title is: {title}\";\r\n * ```\r\n * ```JavaScript\r\n * label.dataItem = myDataItem;\r\n * label.text = \"The title is: {title}\";\r\n * ```\r\n *\r\n * The above will automatically replace \"{title}\" in the string with the\r\n * actual data value from `myDataItem`.\r\n *\r\n * Note, that most often dataItem is set by the Component.\r\n *\r\n *\r\n * @see {@link ILabelEvents} for a list of available events\r\n * @see {@link ILabelAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/} for info on string formatting and data binding\r\n * @todo Vertical align\r\n * @important\r\n */\r\nexport class Label extends Container {\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILabelProperties;\r\n\r\n\t/**\r\n\t * Defines Adapter type.\r\n\t */\r\n\tpublic _adapter!: ILabelAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILabelEvents;\r\n\r\n\t/**\r\n\t * Indicates if the whole text does not fit into max dimenstions set for it.\r\n\t */\r\n\tpublic isOversized: boolean = false;\r\n\r\n\t/**\r\n\t * Currently formatted text, read only.\r\n\t */\r\n\tpublic currentText: string;\r\n\r\n\t/**\r\n\t * Current format to be used for outputing text.\r\n\t */\r\n\tprotected _currentFormat: string;\r\n\r\n\t/**\r\n\t * [_sourceDataItemEvents description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _sourceDataItemEvents: MultiDisposer;\r\n\r\n\r\n\tprotected _prevStatus: string;\r\n\r\n\t/**\r\n\t * SVG path element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic pathElement: $type.Optional<AMElement>;\r\n\r\n\t/**\r\n\t * SVG textpath element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic textPathElement: $type.Optional<Group>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Execute super's constructor\r\n\t\tsuper();\r\n\r\n\t\t// Set this class name\r\n\t\tthis.className = \"Label\";\r\n\r\n\t\tthis.fill = new InterfaceColorSet().getFor(\"text\");\r\n\r\n\t\t// not good to set this, as then these will appear on each label and values set on container won't be applied.\r\n\t\t//this.textDecoration = \"none\";\r\n\t\t//this.fontWeight = \"normal\";\r\n\r\n\r\n\t\t// Set defaults\r\n\t\tthis.wrap = false;\r\n\t\tthis.truncate = false;\r\n\t\tthis.fullWords = true;\r\n\t\tthis.ellipsis = \"…\";\r\n\t\tthis.textAlign = \"start\";\r\n\t\tthis.textValign = \"top\";\r\n\r\n\t\tthis.layout = \"absolute\";\r\n\t\tthis.baseLineRatio = -0.27;\r\n\t\t//this.pixelPerfect = true;\r\n\t\tthis._positionPrecision = 1;\r\n\r\n\t\t// Add events to watch for maxWidth/maxHeight changes so that we can\r\n\t\t// invalidate this\r\n\t\tthis.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.handleMaxSize()\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\t// this solves strange bug when text just added to svg is 0x0\r\n\t\tthis.events.once(\"validated\", this.handleValidate, this, false);\r\n\r\n\t\t// Aply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A placeholder method that is called **after** element finishes drawing\r\n\t * itself.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\t// since we removed validatePosition from sprite, we still need it here to handle rotated text\r\n\t\tsuper.afterDraw();\r\n\t\tthis.validatePosition();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t * @ignore\r\n\t * @param paper Paper\r\n\t * @return true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\r\n\t\tlet changed = super.setPaper(paper);\r\n\r\n\t\tif (changed) {\r\n\t\t\tthis.hardInvalidate();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleValidate() {\r\n\t\tif ((this.currentText || this.text) && (this.bbox.width == 0 || this.bbox.height == 0)) {\r\n\t\t\tregistry.events.once(\"exitframe\", this.hardInvalidate, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleMaxSize() {\r\n\t\tif (\r\n\t\t\t(this.bbox.width > this.availableWidth)\r\n\t\t\t|| ((this.bbox.width < this.availableWidth) && (this.isOversized || this.truncate))\r\n\t\t\t|| (this.bbox.height > this.availableHeight)\r\n\t\t\t|| ((this.bbox.height < this.availableHeight) && this.isOversized)\r\n\t\t) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//this.alignSVGText();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [arrange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic arrange(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates current text according to data item and supported features.\r\n\t * Returns `true` if current text has changed.\r\n\t *\r\n\t * @return Text changed?\r\n\t */\r\n\tprotected updateCurrentText(): boolean {\r\n\t\t// Determine output format\r\n\t\tlet output: string, text: string;\r\n\r\n\t\tif ($utils.isNotEmpty(this.html) && this.paper.supportsForeignObject()) {\r\n\r\n\t\t\t// We favor HTML text if it's set and browser supports `foreignObject`\r\n\t\t\toutput = \"html\";\r\n\t\t\ttext = this.html;\r\n\t\t}\r\n\t\telse {\r\n\t\t\toutput = \"svg\";\r\n\t\t\ttext = this.text;\r\n\t\t}\r\n\r\n\t\t// Need to toString source?\r\n\t\tif ($type.isObject(text as any)) {\r\n\t\t\ttext = text.toString();\r\n\t\t}\r\n\r\n\t\t// Need to format text all the time\r\n\t\tif ($type.hasValue(text) && text !== \"\") {\r\n\t\t\ttext = this.populateString(text, this.dataItem);\r\n\t\t}\r\n\r\n\t\tif (output == \"html\") {\r\n\t\t\tif (this._adapterO) {\r\n\t\t\t\ttext = this._adapterO.apply(\"htmlOutput\", text);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._adapterO) {\r\n\t\t\t\ttext = this._adapterO.apply(\"textOutput\", text);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Update the text\r\n\t\tlet changed = text != this.currentText || output != this._currentFormat;\r\n\t\tthis.currentText = text;\r\n\t\tthis._currentFormat = output;\r\n\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Hard invalidate means the text will be redrawn even if it hasn't changed.\r\n\t * This is used when we change `fontSize`, `fontFamily`, or for some other\r\n\t * reasons.\r\n\t */\r\n\tpublic hardInvalidate() {\r\n\t\tthis._prevStatus = \"\";\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Gets line bbox, uses caching to save cpu\r\n\t * @ignore\r\n\t */\r\n\tprotected getLineBBox(lineInfo: ITextLineInfo) {\r\n\t\t//let cacheKey = lineInfo.text + lineInfo.style;\r\n\r\n\t\t//let lineBBox = this.getCache(cacheKey);\r\n\t\t//if (!lineBBox) {\r\n\t\t//lineBBox = lineInfo.element.getBBox();\r\n\t\t//if (lineBBox.width != 0 && lineBBox.height != 0) {\r\n\t\t//\tthis.setCache(cacheKey, lineBBox, 5000);\r\n\t\t//}\r\n\t\t//}\r\n\r\n\t\tlet element = lineInfo && lineInfo.element;\r\n\t\tlet node = element && element.node;\r\n\r\n\t\t// Check for the parent Node to avoid FF from throwing errors\r\n\t\tif (node && node.parentNode) {\r\n\t\t\tlineInfo.bbox = element.getBBox();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the textual label.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\r\n\t\t// Draw super\r\n\t\tsuper.draw();\r\n\r\n\t\tlet oldW = this.bbox.width;\r\n\t\tlet oldH = this.bbox.height;\r\n\r\n\t\tlet topParent = this.topParent;\r\n\t\tif (topParent) {\r\n\t\t\tif (!topParent.maxWidth || !topParent.maxHeight) {\r\n\t\t\t\ttopParent.events.once(\"maxsizechanged\", this.hardInvalidate, this, false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Calculate max width and height\r\n\t\tlet maxWidth: number = $math.max(this.availableWidth - this.pixelPaddingLeft - this.pixelPaddingRight, 0);\r\n\t\tlet maxHeight: number = $math.max(this.availableHeight - this.pixelPaddingTop - this.pixelPaddingBottom, 0);\r\n\r\n\t\t// save\r\n\t\tlet status = maxHeight + \",\" + maxWidth + this.wrap + this.truncate + this.fullWords + this.rtl + this.ellipsis;\r\n\r\n\t\t// Update text\r\n\t\tif (!this.updateCurrentText() && this.inited && this._prevStatus == status) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._measuredWidth = 0;\r\n\t\tthis._measuredHeight = 0;\r\n\r\n\t\t// Reset\r\n\t\tthis.isOversized = false;\r\n\r\n\t\t// Determine output format\r\n\t\tlet output = this._currentFormat;\r\n\t\tlet text = this.currentText;\r\n\r\n\t\t// Empty string\r\n\t\tif (!$type.hasValue(text) || text == \"\") {\r\n\t\t\tthis.element.attr({ display: \"none\" });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Chop up text into lines\r\n\t\t// We're still processing SVG and HTML in the same way for now\r\n\t\tlet lines: string[] = text.split(\"\\n\");\r\n\r\n\t\t// Do we need to go through the trouble of measuring lines\r\n\t\t//let measure: boolean = true;// (lines.length > 1) || this.wrap;\r\n\r\n\t\tthis._prevStatus = status;\r\n\r\n\t\tthis.textAlign = this.textAlign;\r\n\r\n\t\t// need this to measure\r\n\t\tlet display = this.group.getAttr(\"display\");\r\n\t\tif (display == \"none\") {\r\n\t\t\tthis.group.removeAttr(\"display\");\r\n\t\t}\r\n\r\n\t\tif (this.textPathElement) {\r\n\t\t\tthis.textPathElement.removeChildren();\r\n\t\t}\r\n\r\n\t\t// SVG or HTML?\r\n\t\tif (output === \"svg\") {\r\n\t\t\t/**\r\n\t\t\t * SVG\r\n\t\t\t */\r\n\r\n\t\t\tthis.element.removeAttr(\"display\");\r\n\r\n\t\t\t// Clear the element\r\n\t\t\tlet group: Group = <Group>this.element;\r\n\t\t\t//group.removeChildren();\r\n\r\n\t\t\tthis.resetBBox();\r\n\r\n\t\t\t// Init state variables\r\n\t\t\tlet currentHeight: number = 0;\r\n\t\t\tlet currentFormat: string = \"\";\r\n\r\n\t\t\t// Process each line\r\n\t\t\tfor (let i = 0; i < lines.length; i++) {\r\n\r\n\t\t\t\t// Get line\r\n\t\t\t\tlet line: string = lines[i];\r\n\r\n\t\t\t\t// Check if line is empty\r\n\t\t\t\tif (line == \"\") {\r\n\t\t\t\t\t// It is, let's just update currentHeight and go to the next one\r\n\t\t\t\t\t// If it's the first line, we'll have to use arbirary line height,\r\n\t\t\t\t\t// since there's nothing to measure. For subsequent lines we can take\r\n\t\t\t\t\t// previous line's height\r\n\t\t\t\t\tlet tempElement = this.getSVGLineElement(\"\", 0);\r\n\t\t\t\t\ttempElement.add(\r\n\t\t\t\t\t\tthis.getSvgElement(\r\n\t\t\t\t\t\t\t\".\",\r\n\t\t\t\t\t\t\tgetTextFormatter().translateStyleShortcuts(currentFormat)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tgroup.add(tempElement);\r\n\t\t\t\t\tlet offset = Math.ceil(tempElement.getBBox().height);\r\n\t\t\t\t\tif (offset > 0) {\r\n\t\t\t\t\t\tcurrentHeight += offset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroup.removeElement(tempElement);\r\n\r\n\t\t\t\t\t// Clear cache if necessary\r\n\t\t\t\t\tlet lineInfo = this.getLineInfo(i);\r\n\t\t\t\t\tif (lineInfo) {\r\n\t\t\t\t\t\tlineInfo.text = \"\";\r\n\t\t\t\t\t\tlineInfo.element.textContent = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Chunk up the line and process each chunk\r\n\t\t\t\tlet chunks: ITextChunk[] = getTextFormatter().chunk(line, null, this.ignoreFormatting);\r\n\t\t\t\tlet currentLineHeight: number = 0;\r\n\t\t\t\tlet firstChunk: boolean = true;\r\n\t\t\t\tlet skipTextChunks: boolean = false;\r\n\r\n\t\t\t\t// Create line element or grab it from cache\r\n\t\t\t\tlet lineInfo = this.getLineInfo(i);\r\n\r\n\t\t\t\tif (lineInfo) {\r\n\t\t\t\t\t// Empty line\r\n\t\t\t\t\tlineInfo.text = \"\";\r\n\t\t\t\t\tlineInfo.element.textContent = \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Init new line info\r\n\t\t\t\t\tlineInfo = {\r\n\t\t\t\t\t\t\"text\": \"\",\r\n\t\t\t\t\t\t\"element\": this.getSVGLineElement(\"\", 0),\r\n\t\t\t\t\t\t\"complex\": false\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// Create the line element\r\n\t\t\t\t\t//lineInfo.element = this.getSVGLineElement(\"\", 0);\r\n\t\t\t\t\t//lineElement = this.getSVGLineElement(\"\", 0);\r\n\t\t\t\t\tgroup.add(lineInfo.element);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlineInfo.element.removeAttr(\"display\");\r\n\t\t\t\tlineInfo.element.removeChildren(); // memory leak without this\r\n\r\n\t\t\t\tif (this.textPathElement) {\r\n\t\t\t\t\tlineInfo.element.add(this.textPathElement);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*// @todo not needed anymore\r\n\t\t\t\tif (this.rtl) {\r\n\t\t\t\t\tchunks.reverse();\r\n\t\t\t\t}*/\r\n\r\n\t\t\t\t// Process each chunk\r\n\t\t\t\tfor (let x: number = 0; x < chunks.length; x++) {\r\n\r\n\t\t\t\t\t// If there's more than one chunk, means the line is \"complex\"\r\n\t\t\t\t\tif (x) {\r\n\t\t\t\t\t\tlineInfo.complex = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Get chunk\r\n\t\t\t\t\tlet chunk = chunks[x];\r\n\r\n\t\t\t\t\t// Is this chunk format or text?\r\n\t\t\t\t\tif (chunk.type === \"format\") {\r\n\r\n\t\t\t\t\t\t// Log current format, so that we can apply it to multiple lines if\r\n\t\t\t\t\t\t// necessary\r\n\t\t\t\t\t\tcurrentFormat = chunk.text;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t// It's text block\r\n\r\n\t\t\t\t\t\t// Need to skip?\r\n\t\t\t\t\t\t// We do this when truncating. We can't just simply go ahead and\r\n\t\t\t\t\t\t// abandon chunk processing as they might have formatting\r\n\t\t\t\t\t\t// instructions in them that are relevant for subsequent lines\r\n\t\t\t\t\t\tif (skipTextChunks) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add chunk to the current element\r\n\t\t\t\t\t\t//lineInfo.element.content += $utils.trim(getTextFormatter().format(currentFormat + chunk.text, output));\r\n\r\n\t\t\t\t\t\tlineInfo.text = chunk.text;\r\n\t\t\t\t\t\tlineInfo.style = getTextFormatter().translateStyleShortcuts(currentFormat);\r\n\r\n\r\n\t\t\t\t\t\tif (this.textPathElement) {\r\n\t\t\t\t\t\t\tthis.getSvgElement(lineInfo.text, lineInfo.style, this.textPathElement);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.getSvgElement(lineInfo.text, lineInfo.style, lineInfo.element);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.getLineBBox(lineInfo);\r\n\t\t\t\t\t\tlineInfo.bbox.width = Math.ceil(lineInfo.bbox.width);\r\n\r\n\t\t\t\t\t\t// Updated current line height\r\n\t\t\t\t\t\tif (currentLineHeight < lineInfo.bbox.height) {\r\n\t\t\t\t\t\t\tcurrentLineHeight = lineInfo.bbox.height;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Wrapping?\r\n\t\t\t\t\t\tif ((this.wrap || this.truncate) && (lineInfo.bbox.width > maxWidth)) {\r\n\r\n\t\t\t\t\t\t\t// Set oversized\r\n\t\t\t\t\t\t\tthis.isOversized = true;\r\n\r\n\t\t\t\t\t\t\t// Take temporary measurements\r\n\t\t\t\t\t\t\tlet lineText: string = lineInfo.element.textContent;\r\n\t\t\t\t\t\t\tlet avgCharWidth: number = (lineInfo.bbox.width / lineText.length); // * .9;\r\n\r\n\t\t\t\t\t\t\t// Calculate average number of symbols / width\r\n\t\t\t\t\t\t\tlet excessChars: number = $math.min(Math.ceil((lineInfo.bbox.width - maxWidth) / avgCharWidth), lineText.length);\r\n\r\n\t\t\t\t\t\t\t// Are we truncating or auto-wrapping text?\r\n\t\t\t\t\t\t\tif (this.truncate) {\r\n\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t * Processing line truncation\r\n\t\t\t\t\t\t\t\t * With the addition of each text chunk we measure if current\r\n\t\t\t\t\t\t\t\t * line does not exceed maxWidth. If it does, we will stop\r\n\t\t\t\t\t\t\t\t * addition of further chunks as well as try to truncate\r\n\t\t\t\t\t\t\t\t * current or any number of previous chunks with an added\r\n\t\t\t\t\t\t\t\t * ellipsis\r\n\t\t\t\t\t\t\t\t */\r\n\r\n\t\t\t\t\t\t\t\t// Indicator whether we need to add ellipsis to the current\r\n\t\t\t\t\t\t\t\t// element, even if it fits. This is needed to indicate\r\n\t\t\t\t\t\t\t\t// whether we have already removed some subsequent chunks in\r\n\t\t\t\t\t\t\t\t// which case we need to add ellipsis.\r\n\t\t\t\t\t\t\t\tlet addEllipsis: boolean = false;\r\n\r\n\t\t\t\t\t\t\t\t// Process each child in the temporary line, until the whole\r\n\t\t\t\t\t\t\t\t// line fits, preferably with an ellipsis\r\n\t\t\t\t\t\t\t\t// TODO use iterator instead\r\n\t\t\t\t\t\t\t\tlet node = lineInfo.element.node;\r\n\t\t\t\t\t\t\t\tif (node && node.childNodes) {\r\n\t\t\t\t\t\t\t\t\tfor (let e = lineInfo.element.node.childNodes.length - 1; e >= 0; e--) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Get current element\r\n\t\t\t\t\t\t\t\t\t\tlet node = lineInfo.element.node.childNodes[e];\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Add ellipsis only if previous chunk was removed in full\r\n\t\t\t\t\t\t\t\t\t\t// and this chunk already fits\r\n\t\t\t\t\t\t\t\t\t\t//if (addEllipsis && (bbox.width <= maxWidth)) {\r\n\t\t\t\t\t\t\t\t\t\tif (addEllipsis && (lineInfo.bbox.width <= maxWidth)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Add ellipsis\r\n\t\t\t\t\t\t\t\t\t\t\tnode.textContent += \" \" + this.ellipsis;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Measure again (we need to make sure ellipsis fits)\r\n\t\t\t\t\t\t\t\t\t\t\tlineInfo.bbox = lineInfo.element.getBBox();\r\n\t\t\t\t\t\t\t\t\t\t\tlineInfo.bbox.width = Math.floor(lineInfo.bbox.width);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// If it fits, we're done here\r\n\t\t\t\t\t\t\t\t\t\t\t// If it doesn't we continue rolling\r\n\t\t\t\t\t\t\t\t\t\t\tif (lineInfo.bbox.width <= maxWidth) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\taddEllipsis = false;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Get element text\r\n\t\t\t\t\t\t\t\t\t\tlet elementText = node.textContent;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Calculate average number of symbols / width\r\n\t\t\t\t\t\t\t\t\t\tlineText = lineInfo.element.textContent;\r\n\t\t\t\t\t\t\t\t\t\texcessChars = $math.min(Math.ceil((lineInfo.bbox.width - maxWidth) / avgCharWidth), lineText.length);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Do this until we fit\r\n\t\t\t\t\t\t\t\t\t\twhile ((lineInfo.bbox.width > maxWidth) && (excessChars <= lineText.length) && (excessChars > 0)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Calculate max available chars\r\n\t\t\t\t\t\t\t\t\t\t\tlet maxChars: number = $math.max(lineText.length - excessChars - this.ellipsis.length, 1);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Is there anything left?\r\n\t\t\t\t\t\t\t\t\t\t\tif (maxChars <= 1) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Nope, let's jump to the previous item\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Set excess characters to zero so that this loop does\r\n\t\t\t\t\t\t\t\t\t\t\t\t// not repeat when it over\r\n\t\t\t\t\t\t\t\t\t\t\t\texcessChars = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Add ellipsis to previous item\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Subsequent iterations will check if the ellipsis fits\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (e > 0) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Indicating to add ellipsis to previous item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taddEllipsis = true;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Removing this node\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlineInfo.element.node.removeChild(node);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Truncate the text\r\n\t\t\t\t\t\t\t\t\t\t\telementText = $utils.truncateWithEllipsis(elementText, maxChars, this.ellipsis, this.fullWords, this.rtl);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif ((elementText.length > maxChars) && this.fullWords) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Still too long?\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Let's try truncating breaking words anyway\r\n\t\t\t\t\t\t\t\t\t\t\t\telementText = $utils.truncateWithEllipsis(elementText, maxChars, this.ellipsis, false, this.rtl);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Set truncated text\r\n\t\t\t\t\t\t\t\t\t\t\tnode.textContent = elementText;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Measure again\r\n\t\t\t\t\t\t\t\t\t\t\tlineInfo.bbox = lineInfo.element.getBBox();\r\n\t\t\t\t\t\t\t\t\t\t\tlineInfo.bbox.width = Math.floor(lineInfo.bbox.width);\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Increase excess characters count, just in case it still\r\n\t\t\t\t\t\t\t\t\t\t\t// doesn't fit and we have to go at it again\r\n\t\t\t\t\t\t\t\t\t\t\texcessChars = Math.ceil(excessChars * 1.1);\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Do not process further chunks\r\n\t\t\t\t\t\t\t\t\t\tskipTextChunks = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t * Processign auto-wrap\r\n\t\t\t\t\t\t\t\t * In this case we're going to be adding text chunks until\r\n\t\t\t\t\t\t\t\t * they don't fit into current line. Once that happens we will\r\n\t\t\t\t\t\t\t\t * inject the rest of the chunks to the next line\r\n\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\t// Get last node added and measure it\r\n\t\t\t\t\t\t\t\tlet node = lineInfo.element.node;\r\n\t\t\t\t\t\t\t\tif (node) {\r\n\t\t\t\t\t\t\t\t\tlet lastNode = lineInfo.element.node.lastChild;\r\n\r\n\t\t\t\t\t\t\t\t\t// Init split lines\r\n\t\t\t\t\t\t\t\t\tlet splitLines: string[];\r\n\t\t\t\t\t\t\t\t\twhile ((lineInfo.bbox.width > maxWidth) && (excessChars <= lineText.length) && (excessChars > 0)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Calculate max available chars\r\n\t\t\t\t\t\t\t\t\t\tlet maxChars: number = $math.max(chunk.text.length - excessChars, 1);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Don't split the words mid-word if it's not the first chunk\r\n\t\t\t\t\t\t\t\t\t\t// in the line\r\n\t\t\t\t\t\t\t\t\t\tif (firstChunk) {\r\n\t\t\t\t\t\t\t\t\t\t\t// Split mid-word if necessary\r\n\t\t\t\t\t\t\t\t\t\t\tsplitLines = $utils.splitTextByCharCount(chunk.text, maxChars, true, this.rtl);\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Don't split mid-word\r\n\t\t\t\t\t\t\t\t\t\t\tsplitLines = $utils.splitTextByCharCount(chunk.text, maxChars, true, this.rtl, false);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Check if the first word is too long\r\n\t\t\t\t\t\t\t\t\t\t\tif ((splitLines[0].length > maxChars) || maxChars === 1) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Yes - move the whole chunk to the next line\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Remove the element we just added\r\n\t\t\t\t\t\t\t\t\t\t\t\tlineInfo.element.node.removeChild(lastNode)\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Break out of the while on next cycle\r\n\t\t\t\t\t\t\t\t\t\t\t\texcessChars = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Use the first line to update last item\r\n\t\t\t\t\t\t\t\t\t\tif (excessChars > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet lineText = splitLines.shift();\r\n\t\t\t\t\t\t\t\t\t\t\tif (firstChunk) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlineText = $utils.trim(lineText);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tlastNode.textContent = getTextFormatter().cleanUp(lineText);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Measure again, just in case\r\n\t\t\t\t\t\t\t\t\t\tlineInfo.bbox = lineInfo.element.getBBox();\r\n\t\t\t\t\t\t\t\t\t\tlineInfo.bbox.width = Math.floor(lineInfo.bbox.width);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Increase excess characters count, just in case it still\r\n\t\t\t\t\t\t\t\t\t\t// doesn't fit and we have to go at it again\r\n\t\t\t\t\t\t\t\t\t\t//excessChars = Math.ceil(excessChars * 1.05);\r\n\t\t\t\t\t\t\t\t\t\texcessChars++;\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t// Construct the rest of the line\r\n\t\t\t\t\t\t\t\t\tif (splitLines.length > 0) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tlet restOfLine: string = \"\";\r\n\t\t\t\t\t\t\t\t\t\t// Add leftovers from splitting the current chunk\r\n\t\t\t\t\t\t\t\t\t\tif ($type.hasValue(splitLines)) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (this.rtl) {\r\n\t\t\t\t\t\t\t\t\t\t\t\trestOfLine += splitLines.join(\"\") + currentFormat;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\trestOfLine += currentFormat + splitLines.join(\"\").replace(/([\\[\\]]{1})/g, \"$1$1\");\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Add the rest of the chunks\r\n\t\t\t\t\t\t\t\t\t\tfor (let c: number = x + 1; c < chunks.length; c++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (chunks[c].type == \"value\") {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// We're escaping single square brackets that were\r\n\t\t\t\t\t\t\t\t\t\t\t\t// cleaned up by chunk() back to double square brackets\r\n\t\t\t\t\t\t\t\t\t\t\t\t// so that they are not being treated as format on\r\n\t\t\t\t\t\t\t\t\t\t\t\t// next pass.\r\n\t\t\t\t\t\t\t\t\t\t\t\trestOfLine += chunks[c].text.replace(/([\\[\\]]{1})/g, \"$1$1\");\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\trestOfLine += chunks[c].text;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Inject the rest of the lines as chunks for subsequent\r\n\r\n\t\t\t\t\t\t\t\t\t\tlines.splice(i + 1, 0, restOfLine);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// Skip processing the rest of the chunks\r\n\t\t\t\t\t\t\t\t\tskipTextChunks = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Let's update the text's bbox with the line's one\r\n\t\t\t\t\t\tif (this.bbox.width < lineInfo.bbox.width) {\r\n\t\t\t\t\t\t\tthis.bbox.width = lineInfo.bbox.width;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// commented to avoid bug (seen on sankey link) where text is incorrectly aligned\r\n\t\t\t\t\t\t//if (this.bbox.x > lineInfo.bbox.x) {\r\n\t\t\t\t\t\t//this.bbox.x = lineInfo.bbox.x;\r\n\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t\tthis.bbox.height = currentHeight + currentLineHeight;\r\n\r\n\t\t\t\t\t\t// Position current line\r\n\t\t\t\t\t\tif (!this.textPathElement) {\r\n\t\t\t\t\t\t\tlineInfo.element.attr({\r\n\t\t\t\t\t\t\t\t\"x\": \"0\",\r\n\t\t\t\t\t\t\t\t\"y\": currentHeight + currentLineHeight,\r\n\t\t\t\t\t\t\t\t\"dy\": $math.round((this.baseLineRatio * currentLineHeight), 3).toString()\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tlineInfo.element.attr({\r\n\t\t\t\t\t\t\t\t\"dy\": -this.paddingBottom.toString()\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfirstChunk = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Trim the last item\r\n\t\t\t\tlet node = lineInfo.element.node;\r\n\t\t\t\tif (node) {\r\n\t\t\t\t\tlet lastNode = node.lastChild;\r\n\t\t\t\t\tif (lastNode) {\r\n\t\t\t\t\t\tlastNode.textContent = this.rtl ?\r\n\t\t\t\t\t\t\t$utils.ltrim(lastNode.textContent) :\r\n\t\t\t\t\t\t\t$utils.rtrim(lastNode.textContent);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Increment collective height\r\n\t\t\t\tcurrentHeight += currentLineHeight;\r\n\r\n\t\t\t\t// Save line cache\r\n\t\t\t\tthis.addLineInfo(lineInfo, i);\r\n\t\t\t}\r\n\r\n\t\t\t// Check if maybe we need to hide the whole label if it doesn't fit\r\n\t\t\tthis.maybeHideOversized();\r\n\r\n\t\t\tthis.measureFailed = false;\r\n\t\t\tif (this.bbox.width == 0 || this.bbox.height == 0) {\r\n\t\t\t\tthis.measureFailed = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Updated measured dims\r\n\t\t\tthis._measuredWidth = $math.round($math.max(this.bbox.width, this.pixelWidth - this.pixelPaddingLeft - this.pixelPaddingRight));\r\n\t\t\tthis._measuredHeight = $math.round($math.max(this.bbox.height, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom));\r\n\r\n\t\t\t// Align the lines\r\n\t\t\tthis.alignSVGText();\r\n\r\n\t\t\tthis.bbox.width = this._measuredWidth;\r\n\t\t\tthis.bbox.height = this._measuredHeight;\r\n\r\n\t\t\tif (oldH != this._measuredHeight || oldW != this._measuredWidth) {\r\n\t\t\t\tthis.dispatch(\"transformed\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.hideUnused(lines.length);\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * HTML\r\n\t\t\t */\r\n\r\n\t\t\tthis.element.removeAttr(\"display\");\r\n\t\t\tthis.resetBBox();\r\n\r\n\t\t\t// Clear the element\r\n\t\t\tlet group: Group = <Group>this.element;\r\n\t\t\tgroup.removeChildren();\r\n\t\t\tthis.setCache(\"lineInfo\", [], 0);\r\n\r\n\t\t\t// Create a ForeignObject to use as HTML container\r\n\t\t\tlet fo = this.paper.foreignObject();\r\n\t\t\tgroup.add(fo);\r\n\r\n\t\t\t// Set widths on foreignObject so that autosizing measurements work\r\n\t\t\t// This will bet reset to actual content width/height\r\n\t\t\tif (this.maxWidth) {\r\n\t\t\t\tfo.attr({\r\n\t\t\t\t\twidth: this.maxWidth - this.pixelPaddingLeft - this.pixelPaddingRight\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this.maxHeight) {\r\n\t\t\t\tfo.attr({\r\n\t\t\t\t\theight: this.maxHeight - this.pixelPaddingTop - this.pixelPaddingBottom\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Create line element\r\n\t\t\t//let lineElement: HTMLElement = this.getHTMLLineElement(getTextFormatter().format(this.html, output));\r\n\t\t\tlet lineElement: HTMLElement = this.getHTMLLineElement(text);\r\n\t\t\tfo.node.appendChild(lineElement);\r\n\r\n\t\t\t// Temporarily set to inline-block so we can measure real width and height\r\n\t\t\tlineElement.style.display = \"inline-block\";\r\n\t\t\tconst clientWidth = lineElement.clientWidth;\r\n\t\t\tconst clientHeight = lineElement.clientHeight;\r\n\r\n\t\t\tlineElement.style.display = \"block\";\r\n\t\t\tthis._bbox = {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: clientWidth,\r\n\t\t\t\theight: clientHeight\r\n\t\t\t};\r\n\r\n\t\t\t// Set exact dimensions of foreignObject so it is sized exactly as\r\n\t\t\t// the content within (add one pixel to width so it does not wrap)\r\n\t\t\tfo.attr({\r\n\t\t\t\twidth: clientWidth + 1,\r\n\t\t\t\theight: clientHeight\r\n\t\t\t});\r\n\r\n\t\t\t// Check if maybe we need to hide the whole label if it doesn't fit\r\n\t\t\tthis.maybeHideOversized();\r\n\r\n\t\t\t// Set measurements and update bbox\r\n\t\t\tthis._measuredWidth = $math.max(this.bbox.width, this.pixelWidth - this.pixelPaddingLeft - this.pixelPaddingRight);\r\n\t\t\tthis._measuredHeight = $math.max(this.bbox.height, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom);\r\n\r\n\t\t\tthis.bbox.width = this._measuredWidth;\r\n\t\t\tthis.bbox.height = this._measuredHeight;\r\n\r\n\t\t\t// Don't let labels bleed out of the alotted area\r\n\t\t\tif (this.truncate) {\r\n\t\t\t\tlineElement.style.overflow = \"hidden\";\r\n\t\t\t}\r\n\r\n\t\t\tif ((clientWidth > maxWidth) || (clientHeight > maxHeight)) {\r\n\t\t\t\tthis.isOversized = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Set applicable styles\r\n\t\tthis.setStyles();\r\n\t\tthis.updateCenter();\r\n\t\tthis.updateBackground();\r\n\r\n\t\tif (display == \"none\") {\r\n\t\t\tthis.group.attr({ display: \"none\" });\r\n\t\t}\r\n\r\n\t\tif (this.pathElement) {\r\n\t\t\tthis.paper.appendDef(this.pathElement);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element if it does not fit into available space\r\n\t */\r\n\tprivate maybeHideOversized(): void {\r\n\t\tif (this.hideOversized) {\r\n\t\t\tif ((this.availableWidth < this.bbox.width) || (this.availableHeight < this.bbox.height)) {\r\n\t\t\t\tthis.element.attr({ display: \"none\" });\r\n\t\t\t\tthis.isOversized = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.element.removeAttr(\"display\");\r\n\t\t\t\tthis.isOversized = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Aligns the lines horizontally and vertically, based on properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic alignSVGText(): void {\r\n\t\t// Get Group\r\n\t\tlet group: Group = <Group>this.element;\r\n\t\tlet children = group.node.children || group.node.childNodes;\r\n\r\n\t\t// Is there anything to align?\r\n\t\tif (!children || (children && children.length == 0)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet width = this._measuredWidth;\r\n\t\tlet height = this._measuredHeight;\r\n\r\n\t\t// TODO maybe these aren't needed ?\r\n\t\t$utils.used(this.pixelPaddingLeft);\r\n\t\t$utils.used(this.pixelPaddingRight);\r\n\t\t$utils.used(this.pixelPaddingTop);\r\n\t\t$utils.used(this.pixelPaddingBottom);\r\n\r\n\t\tif (this.rtl) {\r\n\t\t\tgroup.attr({\r\n\t\t\t\t\"direction\": \"rtl\"\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tgroup.removeAttr(\"direction\");\r\n\t\t}\r\n\r\n\t\t// Process each line\r\n\t\t//$iter.each(group.children.backwards().iterator(), (element) => {\r\n\t\tfor (let i = children.length - 1; i >= 0; i--) {\r\n\t\t\t// Align horizontally\r\n\t\t\t// Since we are using `text-anchor` for horizontal alignment, all we need\r\n\t\t\t// to do here is move the `x` position\r\n\t\t\tlet node = <SVGElement>children[i];\r\n\r\n\t\t\tnode.setAttribute(\"text-anchor\", this.textAlign);\r\n\r\n\t\t\tif (this.textPathElement) {\r\n\t\t\t\tnode.removeAttribute(\"x\");\r\n\t\t\t\tnode.removeAttribute(\"y\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tswitch (this.textAlign) {\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\tnode.setAttribute(\"x\", (width / 2).toString() + \"px\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"end\":\r\n\t\t\t\t\t\tif (this.rtl) {\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tnode.setAttribute(\"x\", width.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif (this.rtl) {\r\n\t\t\t\t\t\t\tnode.setAttribute(\"x\", width.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tnode.removeAttribute(\"text-anchor\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet y = $type.toNumber(node.getAttribute(\"y\"));\r\n\r\n\t\t\t\tswitch (this.textValign) {\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\tnode.setAttribute(\"y\", ((y || 0) + (height - this.bbox.height) / 2).toString());\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\tnode.setAttribute(\"y\", ((y || 0) + height - this.bbox.height).toString());\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tnode.setAttribute(\"y\", (y || 0).toString());\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Produces an SVG line element with formatted text.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text    Text to wrap into line\r\n\t * @param y       Current line vertical position\r\n\t * @return A DOM element\r\n\t * @todo Implement HTML support\r\n\t */\r\n\tpublic getSVGLineElement(text: string, y?: number): Group {\r\n\r\n\t\t// Create a <text> node and set text\r\n\t\tlet element: Group = this.paper.addGroup(\"text\");\r\n\t\telement.textContent = text;\r\n\r\n\t\t// Set parameters\r\n\t\telement.attr({\r\n\t\t\t\"x\": \"0\"\r\n\t\t\t//\"alignment-baseline\": \"hanging\",\r\n\t\t\t//\"baseline-shift\": \"-20%\",\r\n\t\t\t//\"text-anchor\": \"center\"\r\n\t\t});\r\n\r\n\t\t// Set `y` position\r\n\t\tif ($type.hasValue(y)) {\r\n\t\t\telement.attr({\r\n\t\t\t\t\"y\": y.toString()\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Don't let labels blled out of the alotted area\r\n\t\tif (this.truncate || this.wrap) {\r\n\t\t\telement.attr({ \"overflow\": \"hidden\" });\r\n\t\t}\r\n\r\n\t\t// Add RTL?\r\n\t\t// This has now been moved to this.alignSVGText()\r\n\t\t// if (this.rtl) {\r\n\t\t// \telement.attr({\r\n\t\t// \t\t\"direction\": \"rtl\",\r\n\t\t// \t\t//\"unicode-bidi\": \"bidi-override\"\r\n\t\t// \t});\r\n\t\t// }\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * An RTL (right-to-left) setting.\r\n\t *\r\n\t * RTL may affect alignment, text, and other visual properties.\r\n\t *\r\n\t * If you set this on a top-level chart object, it will be used for all\r\n\t * child elements, e.g. labels, unless they have their own `rtl` setting\r\n\t * set directly on them.\r\n\t *\r\n\t * @param value  `true` for to use RTL\r\n\t */\r\n\tpublic set rtl(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis._rtl = value;\r\n\t\tif (this.element) {\r\n\t\t\tthis.alignSVGText();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return RTL?\r\n\t */\r\n\tpublic get rtl(): boolean {\r\n\t\tif ($type.hasValue(this._rtl)) {\r\n\t\t\treturn this._rtl;\r\n\t\t}\r\n\t\telse if (this._topParent) {\r\n\t\t\treturn this._topParent.rtl;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets cached BBox.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic resetBBox(): void {\r\n\t\tthis._bbox = { x: 0, y: 0, width: 0, height: 0 };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates and returns an HTML line element (`<div>`).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text  Text to add\r\n\t * @return `<div>` element reference\r\n\t */\r\n\tpublic getHTMLLineElement(text: string): HTMLElement {\r\n\r\n\t\t// Create the <div> element\r\n\t\tlet div: HTMLElement = document.createElement(\"div\");\r\n\t\tdiv.innerHTML = text;\r\n\r\n\t\t// Set text alignment\r\n\t\tswitch (this.textAlign) {\r\n\t\t\tcase \"middle\":\r\n\t\t\t\tdiv.style.textAlign = \"center\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"end\":\r\n\t\t\t\tdiv.style.textAlign = \"right\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t// Disable or enable wrapping\r\n\t\tif (this.wrap) {\r\n\t\t\tdiv.style.wordWrap = \"break-word\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdiv.style.whiteSpace = \"nowrap\";\r\n\t\t}\r\n\r\n\t\t// Don't let labels bleed out of the alotted area\r\n\t\t// Moved to `draw()` because setting \"hidden\" kills all measuring\r\n\t\t/*if (this.truncate) {\r\n\t\t\tdiv.style.overflow = \"hidden\";\r\n\t\t}*/\r\n\r\n\t\t// Set RTL-related styles\r\n\t\tif (this.rtl) {\r\n\t\t\tdiv.style.direction = \"rtl\";\r\n\t\t\t//div.style.unicodeBidi = \"bidi-override\";\r\n\t\t}\r\n\r\n\t\t// Translate some of the SVG styles into CSS\r\n\t\tif ($type.hasValue(this.fill)) {\r\n\t\t\tdiv.style.color = this.fill.toString();\r\n\t\t}\r\n\r\n\t\treturn div;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies specific styles to text to make it not selectable, unless it is\r\n\t * explicitly set as `selectable`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Set styles via AMElement\r\n\t */\r\n\tpublic setStyles(): void {\r\n\t\tlet group: Group = <Group>this.element;\r\n\t\tif (!this.selectable || this.draggable || this.resizable || this.swipeable) {\r\n\t\t\tgroup.addStyle({\r\n\t\t\t\t\"webkitUserSelect\": \"none\",\r\n\t\t\t\t\"msUserSelect\": \"none\"\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if (this.selectable) {\r\n\t\t\tgroup.removeStyle(\"webkitUserSelect\");\r\n\t\t\tgroup.removeStyle(\"msUserSelect\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides unused lines\r\n\t */\r\n\tprotected hideUnused(index: number) {\r\n\t\tthis.initLineCache();\r\n\t\tlet lines: ITextLineInfo[] = this.getCache(\"lineInfo\");\r\n\t\tif (lines.length >= index) {\r\n\t\t\tfor (let i = index; i < lines.length; i++) {\r\n\t\t\t\tlet line = lines[i];\r\n\t\t\t\tif (line && line.element) {\r\n\t\t\t\t\tline.element.attr({ \"display\": \"none\" });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An SVG text.\r\n\t *\r\n\t * Please note that setting `html` will override this setting if browser\r\n\t * supports `foreignObject` in SGV, such as most modern browsers excluding\r\n\t * IEs.\r\n\t *\r\n\t * @param value  SVG Text\r\n\t */\r\n\tpublic set text(value: string) {\r\n\t\t//this.setPropertyValue(\"html\", undefined);\r\n\t\tthis.setPropertyValue(\"text\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return SVG text\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this.getPropertyValue(\"text\");\r\n\t}\r\n\r\n\t/**\r\n\t * An SVG path string to position text along. If set, the text will follow\r\n\t * the curvature of the path.\r\n\t *\r\n\t * Location along the path can be set using `locationOnPath`.\r\n\t *\r\n\t * IMPORTANT: Only SVG text can be put on path. If you are using HTML text\r\n\t * this setting will be ignored.\r\n\t *\r\n\t * @since 4.1.2\r\n\t * @param  value  Path\r\n\t */\r\n\tpublic set path(value: string) {\r\n\t\tif (this.setPropertyValue(\"path\", value, true)) {\r\n\t\t\tif (this.pathElement) {\r\n\t\t\t\tthis.pathElement.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.textPathElement) {\r\n\t\t\t\tthis.textPathElement.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis.pathElement = this.paper.add(\"path\");\r\n\t\t\tthis.pathElement.attr({ \"d\": value });\r\n\t\t\tthis.pathElement.attr({ \"id\": \"text-path-\" + this.uid });\r\n\t\t\tthis._disposers.push(this.pathElement);\r\n\r\n\t\t\tthis.textPathElement = this.paper.addGroup(\"textPath\");\r\n\t\t\tthis.textPathElement.attrNS($dom.XLINK, \"xlink:href\", \"#text-path-\" + this.uid);\r\n\t\t\t// TODO remove after https://bugzilla.mozilla.org/show_bug.cgi?id=455986 is fixed\r\n\t\t\tthis.textPathElement.attr({ \"path\": value });\r\n\t\t\tthis._disposers.push(this.textPathElement);\r\n\t\t\tthis.hardInvalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Path\r\n\t */\r\n\tpublic get path(): string {\r\n\t\treturn this.getPropertyValue(\"path\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative label location on `path`. Value range is from 0 (beginning)\r\n\t * to 1 (end).\r\n\t *\r\n\t * Works only if you set `path` setting to an SVG path.\r\n\t *\r\n\t * @since 4.1.2\r\n\t * @default 0\r\n\t * @param  value  Relatvie location on path\r\n\t */\r\n\tpublic set locationOnPath(value: number) {\r\n\t\tthis.setPropertyValue(\"locationOnPath\", value);\r\n\t\tif (this.textPathElement) {\r\n\t\t\tthis.textPathElement.attr({ \"startOffset\": (value * 100) + \"%\" })\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Relatvie location on path\r\n\t */\r\n\tpublic get locationOnPath(): number {\r\n\t\treturn this.getPropertyValue(\"locationOnPath\");\r\n\t}\r\n\r\n\t/**\r\n\t * A ratio to calculate text baseline. Ralative distance from the bottom of\r\n\t * the label.\r\n\t *\r\n\t * @since 4.4.2\r\n\t * @default -0.27\r\n\t * @param  value  Base line ratio\r\n\t */\r\n\tpublic set baseLineRatio(value: number) {\r\n\t\tthis.setPropertyValue(\"baseLineRatio\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Base line ratio\r\n\t */\r\n\tpublic get baseLineRatio(): number {\r\n\t\treturn this.getPropertyValue(\"baseLineRatio\");\r\n\t}\r\n\r\n\t/**\r\n\t * Enables or disables autowrapping of text.\r\n\t *\r\n\t * @param value  Auto-wrapping enabled\r\n\t */\r\n\tpublic set wrap(value: boolean) {\r\n\t\tthis.resetBBox();\r\n\t\tthis.setPropertyValue(\"wrap\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Auto-wrap enabled or not\r\n\t */\r\n\tpublic get wrap(): boolean {\r\n\t\treturn this.getPropertyValue(\"wrap\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if text lines need to be truncated if they do not fit, using\r\n\t * configurable `ellipsis` string.\r\n\t *\r\n\t * `truncate` overrides `wrap` if both are set to `true`.\r\n\t *\r\n\t * NOTE: For HTML text, this setting **won't** trigger a parser and actual\r\n\t * line truncation with ellipsis. It will just hide everything that goes\r\n\t * outside the label.\r\n\t *\r\n\t * @param value  trincate text?\r\n\t */\r\n\tpublic set truncate(value: boolean) {\r\n\t\tthis.resetBBox();\r\n\t\tthis.setPropertyValue(\"truncate\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Truncate text?\r\n\t */\r\n\tpublic get truncate(): boolean {\r\n\t\treturn this.getPropertyValue(\"truncate\");\r\n\t}\r\n\r\n\t/**\r\n\t * If `truncate` is enabled, should Label try to break only on full words\r\n\t * (`true`), or whenever needed, including middle of the word. (`false`)\r\n\t *\r\n\t * @default true\r\n\t * @param value  Truncate on full words?\r\n\t */\r\n\tpublic set fullWords(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fullWords\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Truncate on full words?\r\n\t */\r\n\tpublic get fullWords(): boolean {\r\n\t\treturn this.getPropertyValue(\"fullWords\");\r\n\t}\r\n\r\n\t/**\r\n\t * Ellipsis character to use if `truncate` is enabled.\r\n\t *\r\n\t * @param value Ellipsis string\r\n\t * @default \"...\"\r\n\t */\r\n\tpublic set ellipsis(value: string) {\r\n\t\tthis.setPropertyValue(\"ellipsis\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ellipsis string\r\n\t */\r\n\tpublic get ellipsis(): string {\r\n\t\treturn this.getPropertyValue(\"ellipsis\");\r\n\t}\r\n\r\n\t/**\r\n\t * Forces the text to be selectable. This setting will be ignored if the\r\n\t * object has some kind of interaction attached to it, such as it is\r\n\t * `draggable`, `swipeable`, `resizable`.\r\n\t *\r\n\t * @param value  Text selectable?\r\n\t * @default false\r\n\t */\r\n\tpublic set selectable(value: boolean) {\r\n\t\tthis.setPropertyValue(\"selectable\", value, true);\r\n\t\tthis.setStyles();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Text selectable?\r\n\t */\r\n\tpublic get selectable(): boolean {\r\n\t\treturn this.getPropertyValue(\"selectable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal text alignment.\r\n\t *\r\n\t * Available choices:\r\n\t * * \"start\"\r\n\t * * \"middle\"\r\n\t * * \"end\"\r\n\t *\r\n\t * @param value  Alignment\r\n\t */\r\n\tpublic set textAlign(value: TextAlign) {\r\n\t\tthis.setPropertyValue(\"textAlign\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Alignment\r\n\t */\r\n\tpublic get textAlign(): TextAlign {\r\n\t\treturn this.getPropertyValue(\"textAlign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical text alignment.\r\n\t *\r\n\t * @ignore Exclude from docs (not used)\r\n\t * @param value  Alignment\r\n\t * @deprecated\r\n\t */\r\n\tpublic set textValign(value: TextValign) {\r\n\t\tthis.setPropertyValue(\"textValign\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs (not used)\r\n\t * @return Alignment\r\n\t * @deprecated\r\n\t */\r\n\tpublic get textValign(): TextValign {\r\n\t\treturn this.getPropertyValue(\"textValign\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Raw HTML to be used as text.\r\n\t *\r\n\t * NOTE: HTML text is subject to browser support. It relies on browsers\r\n\t * supporting SVG `foreignObject` nodes. Some browsers (read IEs) do not\r\n\t * support it. On those browsers, the text will fall back to basic SVG text,\r\n\t * striping out all HTML markup and styling that goes with it.\r\n\t *\r\n\t * For more information about `foreignObject` and its browser compatibility\r\n\t * refer to [this page](https://developer.mozilla.org/en/docs/Web/SVG/Element/foreignObject#Browser_compatibility).\r\n\t *\r\n\t * @param value HTML text\r\n\t */\r\n\tpublic set html(value: string) {\r\n\t\tthis.setPropertyValue(\"html\", value, true);\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\tconst group: Group = <Group>this.element;\r\n\t\t\tgroup.removeChildrenByTag(\"foreignObject\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return HTML content\r\n\t */\r\n\tpublic get html(): string {\r\n\t\treturn this.getPropertyValue(\"html\");\r\n\t}\r\n\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\t\tif (this.html) {\r\n\t\t\tconst group: Group = <Group>this.element;\r\n\t\t\tconst divs = group.node.getElementsByTagName(\"div\");\r\n\t\t\tfor(let i = 0; i < divs.length; i++) {\r\n\t\t\t\tconst div = divs[i];\r\n\t\t\t\tif ($type.hasValue(this.fill)) {\r\n\t\t\t\t\tdiv.style.color = this.fill.toString();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the whole text should be hidden if it does not fit into\r\n\t * its allotted space.\r\n\t *\r\n\t * @param value  Hide if text does not fit?\r\n\t */\r\n\tpublic set hideOversized(value: boolean) {\r\n\t\tthis.setPropertyValue(\"hideOversized\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hide if text does not fit?\r\n\t */\r\n\tpublic get hideOversized(): boolean {\r\n\t\treturn this.getPropertyValue(\"hideOversized\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` square-bracket formatting blocks will be treated as\r\n\t * regular text.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Ignore formatting?\r\n\t */\r\n\tpublic set ignoreFormatting(value: boolean) {\r\n\t\tthis.setPropertyValue(\"ignoreFormatting\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ignore formatting?\r\n\t */\r\n\tpublic get ignoreFormatting(): boolean {\r\n\t\treturn this.getPropertyValue(\"ignoreFormatting\");\r\n\t}\r\n\r\n\t/**\r\n\t * Override `mesaureElement` so it does not get measure again, because\r\n\t * internal `_bbox` is being updated by measuring routines in Text itself.\r\n\t */\r\n\tpublic measureElement(): void { }\r\n\r\n\t/**\r\n\t * Returns information about a line element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param index  Line index\r\n\t * @return Line info object\r\n\t */\r\n\tpublic getLineInfo(index: number): ITextLineInfo {\r\n\t\tthis.initLineCache();\r\n\t\tlet lines = this.getCache(\"lineInfo\");\r\n\t\treturn lines.length > index ? lines[index] : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a line to line info cache.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param line     Line info object\r\n\t * @param index    Insert at specified index\r\n\t */\r\n\tpublic addLineInfo(line: ITextLineInfo, index: number): void {\r\n\t\tthis.initLineCache();\r\n\t\tthis.getCache(\"lineInfo\")[index] = line;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if line cache is initialized and initializes it.\r\n\t */\r\n\tprivate initLineCache(): void {\r\n\t\tif (!$type.hasValue(this.getCache(\"lineInfo\"))) {\r\n\t\t\tthis.setCache(\"lineInfo\", [], 0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataItem]] to use for populating dynamic sections of the text.\r\n\t *\r\n\t * Check the description for [[Text]] class, for data binding.\r\n\t *\r\n\t * @param dataItem Data item\r\n\t */\r\n\tpublic setDataItem(dataItem: DataItem): void {\r\n\t\tif (this._sourceDataItemEvents) {\r\n\t\t\tthis._sourceDataItemEvents.dispose();\r\n\t\t}\r\n\t\tif (dataItem) {\r\n\t\t\tthis._sourceDataItemEvents = new MultiDisposer([\r\n\t\t\t\tdataItem.events.on(\"valuechanged\", this.invalidate, this, false),\r\n\t\t\t\tdataItem.events.on(\"workingvaluechanged\", this.invalidate, this, false),\r\n\t\t\t\tdataItem.events.on(\"calculatedvaluechanged\", this.invalidate, this, false),\r\n\t\t\t\tdataItem.events.on(\"propertychanged\", this.invalidate, this, false)\r\n\t\t\t]);\r\n\t\t}\r\n\t\tsuper.setDataItem(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns available horizontal space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Available width (px)\r\n\t */\r\n\tpublic get availableWidth(): number {\r\n\t\treturn $type.hasValue(this.maxWidth) ? this.maxWidth : this.pixelWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns available vertical space.\r\n\t *\r\n\t * @return Available height (px)\r\n\t */\r\n\tpublic get availableHeight(): number {\r\n\t\treturn $type.hasValue(this.maxHeight) ? this.maxHeight : this.pixelHeight;\r\n\t}\r\n\r\n\t// temp, replacing textFormatter method\r\n\tpublic getSvgElement(text: string, style?: string, parent?: Group): AMElement {\r\n\t\tlet element = this.paper.add(\"tspan\");\r\n\t\telement.textContent = text;\r\n\t\tif (style) {\r\n\r\n\t\t\tif (options.nonce && parent) {\r\n\t\t\t\t//element.node.setAttribute(\"nonce\", \"test123\");\r\n\t\t\t\tconst classid = \"amcharts_element_style_\" + btoa(style).replace(/[^\\w]*/g, \"\");\r\n\t\t\t\telement.node.setAttribute(\"class\", classid);\r\n\r\n\t\t\t\tconst defs = <SVGDefsElement>document.createElementNS($dom.SVGNS, \"defs\");\r\n\t\t\t\tparent.node.appendChild(defs);\r\n\r\n\t\t\t\tconst e = document.createElement(\"style\");\r\n\t\t\t\te.type = \"text/css\";\r\n\t\t\t\te.innerHTML = \".\" + classid + \" { \" + style + \"}\";\r\n\t\t\t\te.setAttribute(\"nonce\", options.nonce)\r\n\t\t\t\tdefs.appendChild(e);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.node.setAttribute(\"style\", style);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (parent) {\r\n\t\t\tparent.add(element);\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the whole element, including layout AND all its child\r\n\t * elements.\r\n\t */\r\n\tpublic deepInvalidate() {\r\n\t\tsuper.deepInvalidate();\r\n\t\tthis.hardInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader title of the element.\r\n\t *\r\n\t * @param value Title\r\n\t */\r\n\tpublic set readerTitle(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerTitle\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Title\r\n\t */\r\n\tpublic get readerTitle(): string {\r\n\t\tlet title = this.getPropertyValue(\"readerTitle\");\r\n\t\tif (!title) {\r\n\t\t\ttitle = this.populateString(\r\n\t\t\t\t$utils.plainText(\r\n\t\t\t\t\t$utils.isNotEmpty(this.html)\r\n\t\t\t\t\t\t? this.html\r\n\t\t\t\t\t\t: this.text\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\ttitle = this.populateString(title);\r\n\t\t}\r\n\t\treturn title;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Label\"] = Label;\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Hide labels added directly to chart, like titles if chart is short.\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Label && target.parent && target.parent.isBaseSprite) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * This module contains a version of ColorSet that can (and should) be used for\r\n * coloring UI elements.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { registry } from \"../Registry\";\r\nimport { Color, color } from \"./Color\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available color purposes and their relation with the color set color\r\n * index.\r\n */\r\nexport interface IColorPurpose {\r\n\tstroke: Color,\r\n\tfill: Color,\r\n\r\n\tprimaryButton: Color,\r\n\tprimaryButtonHover: Color,\r\n\tprimaryButtonDown: Color,\r\n\tprimaryButtonActive: Color,\r\n\tprimaryButtonText: Color,\r\n\tprimaryButtonStroke: Color,\r\n\r\n\tsecondaryButton: Color,\r\n\tsecondaryButtonHover: Color,\r\n\tsecondaryButtonDown: Color,\r\n\tsecondaryButtonActive: Color,\r\n\tsecondaryButtonText: Color,\r\n\tsecondaryButtonStroke: Color,\r\n\r\n\tgrid: Color,\r\n\tbackground: Color,\r\n\talternativeBackground: Color,\r\n\ttext: Color,\r\n\talternativeText: Color,\r\n\tdisabledBackground: Color,\r\n\r\n\tpositive: Color,\r\n\tnegative: Color\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This module contains a version of ColorSet that can (and should) be used for\r\n * coloring UI elements.\r\n *\r\n * The main difference from the basic [[ColorSet]] is that instead of sequenced\r\n * colors, it uses a concept of named colors.\r\n *\r\n * This way, every element in the UI can extract an exact color theme author\r\n * meant for the specific purpose, like strokes, backgrounds, etc.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nexport class InterfaceColorSet extends BaseObject {\r\n\r\n\t/**\r\n\t * Maps the list of purposes (like \"stroke\") to an index of color of the\r\n\t * color set.\r\n\t */\r\n\tprotected _purposes: IColorPurpose = {\r\n\t\tstroke: color(\"#e5e5e5\"),\r\n\t\tfill: color(\"#f3f3f3\"),\r\n\r\n\t\tprimaryButton: color(\"#6794dc\"),\r\n\t\tprimaryButtonHover: color(\"#6771dc\"),\r\n\t\tprimaryButtonDown: color(\"#68dc75\"),\r\n\t\tprimaryButtonActive: color(\"#68dc75\"),\r\n\t\tprimaryButtonText: color(\"#FFFFFF\"),\r\n\t\tprimaryButtonStroke: color(\"#FFFFFF\"),\r\n\r\n\t\tsecondaryButton: color(\"#d9d9d9\"),\r\n\t\tsecondaryButtonHover: color(\"#d9d9d9\").brighten(-0.25),\r\n\t\tsecondaryButtonDown: color(\"#d9d9d9\").brighten(-0.35),\r\n\t\tsecondaryButtonActive: color(\"#d9d9d9\").brighten(0.35),\r\n\t\tsecondaryButtonText: color(\"#000000\"),\r\n\r\n\t\tsecondaryButtonStroke: color(\"#FFFFFF\"),\r\n\r\n\t\tgrid: color(\"#000000\"),\r\n\t\tbackground: color(\"#ffffff\"),\r\n\t\talternativeBackground: color(\"#000000\"),\r\n\t\ttext: color(\"#000000\"),\r\n\t\talternativeText: color(\"#FFFFFF\"),\r\n\t\tdisabledBackground: color(\"#999999\"),\r\n\t\tpositive: color(\"#67dc75\"),\r\n\t\tnegative: color(\"#dc6788\")\r\n\t};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"InterfaceColorSet\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected debug(): void {}\r\n\r\n\t/**\r\n\t * Returns a color to be used for the specific purpose.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let uicolors = new am4core.InterfaceColorSet();\r\n\t * console.log(uicolors.getFor(\"stroke\"));\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var uicolors = new am4core.InterfaceColorSet();\r\n\t * console.log(uicolors.getFor(\"stroke\"));\r\n\t * ```\r\n\t *\r\n\t * @param purpose  Color use purpuse\r\n\t * @return Color\r\n\t */\r\n\tpublic getFor(purpose: keyof IColorPurpose): Color {\r\n\t\treturn this._purposes[purpose];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets color to be used for the specific purpose.\r\n\t *\r\n\t * @param purpose  Color use purpose\r\n\t * @param color    Color\r\n\t */\r\n\tpublic setFor(purpose: keyof IColorPurpose, color: Color): void {\r\n\t\tthis._purposes[purpose] = color;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"InterfaceColorSet\"] = InterfaceColorSet;\r\n","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"../utils/Math\";\r\nimport { registry } from \"../Registry\";\r\n\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * LINEAR FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"linear\".\r\n */\r\nexport function linear(t: number): number {\r\n\treturn +t;\r\n}\r\nregistry.registeredClasses[\"ease.linear\"] = linear;\r\n\r\n/**\r\n * Easing function: \"quadIn\".\r\n */\r\nexport function quadIn(t: number): number {\r\n\treturn t * t;\r\n}\r\nregistry.registeredClasses[\"ease.quadIn\"] = quadIn;\r\n\r\n/**\r\n * Easing function: \"quadOut\".\r\n */\r\nexport function quadOut(t: number): number {\r\n\treturn t * (2 - t);\r\n}\r\nregistry.registeredClasses[\"ease.quadOut\"] = quadOut;\r\n\r\n/**\r\n * Easing function: \"quadInOut\".\r\n */\r\nexport function quadInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? t * t : --t * (2 - t) + 1) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.quadInOut\"] = quadInOut;\r\n\r\n/**\r\n * Easing function: \"polyIn\".\r\n */\r\nexport function polyIn(t: number, e: number): number {\r\n\treturn Math.pow(t, e);\r\n}\r\nregistry.registeredClasses[\"ease.polyIn\"] = polyIn;\r\n\r\n/**\r\n * Easing function: \"polyOut\".\r\n */\r\nexport function polyOut(t: number, e: number): number {\r\n\treturn 1 - Math.pow(1 - t, e);\r\n}\r\nregistry.registeredClasses[\"ease.polyOut\"] = polyOut;\r\n\r\n/**\r\n * Easing function: \"polyInOut\".\r\n */\r\nexport function polyInOut(t: number, e: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.polyInOut\"] = polyInOut;\r\n\r\n/**\r\n * Easing function: \"polyIn3\".\r\n */\r\nexport function polyIn3(t: number): number {\r\n\treturn polyIn(t, 3);\r\n}\r\nregistry.registeredClasses[\"ease.polyIn3\"] = polyIn3;\r\n\r\n/**\r\n * Easing function: \"polyOut3\".\r\n */\r\nexport function polyOut3(t: number): number {\r\n\treturn polyOut(t, 3);\r\n}\r\nregistry.registeredClasses[\"ease.polyOut3\"] = polyOut3;\r\n\r\n/**\r\n * Easing function: \"polyInOut3\".\r\n */\r\nexport function polyInOut3(t: number): number {\r\n\treturn polyInOut(t, 3);\r\n}\r\nregistry.registeredClasses[\"ease.polyInOut3\"] = polyInOut3;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * EXPONENTIAL FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"expIn\".\r\n */\r\nexport function expIn(t: number): number {\r\n\treturn Math.pow(2, 10 * t - 10);\r\n}\r\nregistry.registeredClasses[\"ease.expIn\"] = expIn;\r\n\r\n/**\r\n * Easing function: \"expOut\".\r\n */\r\nexport function expOut(t: number): number {\r\n\treturn 1 - Math.pow(2, -10 * t);\r\n}\r\nregistry.registeredClasses[\"ease.expOut\"] = expOut;\r\n\r\n/**\r\n * Easing function: \"expInOut\".\r\n */\r\nexport function expInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.expInOut\"] = expInOut;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * SINE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"sinIn\".\r\n */\r\nexport function sinIn(t: number): number {\r\n\treturn 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nregistry.registeredClasses[\"ease.sinIn\"] = sinIn;\r\n\r\n/**\r\n * Easing function: \"sinOut\".\r\n */\r\nexport function sinOut(t: number): number {\r\n\treturn Math.sin(t * $math.HALFPI);\r\n}\r\nregistry.registeredClasses[\"ease.sinOut\"] = sinOut;\r\n\r\n/**\r\n * Easing function: \"sinInOut\".\r\n */\r\nexport function sinInOut(t: number): number {\r\n\treturn (1 - Math.cos($math.PI * t)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.sinInOut\"] = sinInOut;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * CUBIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"cubicIn\".\r\n */\r\nexport function cubicIn(t: number): number {\r\n\treturn t * t * t;\r\n}\r\nregistry.registeredClasses[\"ease.cubicIn\"] = cubicIn;\r\n\r\n/**\r\n * Easing function: \"cubicOut\".\r\n */\r\nexport function cubicOut(t: number): number {\r\n\treturn --t * t * t + 1;\r\n}\r\nregistry.registeredClasses[\"ease.cubicOut\"] = cubicOut;\r\n\r\n/**\r\n * Easing function: \"cubicInOut\".\r\n */\r\nexport function cubicInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.cubicInOut\"] = cubicInOut;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * CIRCLE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"circleIn\".\r\n */\r\nexport function circleIn(t: number): number {\r\n\treturn 1 - Math.sqrt(1 - t * t);\r\n}\r\nregistry.registeredClasses[\"ease.circleIn\"] = circleIn;\r\n\r\n/**\r\n * Easing function: \"circleOut\".\r\n */\r\nexport function circleOut(t: number): number {\r\n\treturn Math.sqrt(1 - --t * t);\r\n}\r\nregistry.registeredClasses[\"ease.circleOut\"] = circleOut;\r\n\r\n/**\r\n * Easing function: \"circleInOut\".\r\n */\r\nexport function circleInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.circleInOut\"] = circleInOut;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * BOUNCE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11,\r\n\tb2 = 6 / 11,\r\n\tb3 = 8 / 11,\r\n\tb4 = 3 / 4,\r\n\tb5 = 9 / 11,\r\n\tb6 = 10 / 11,\r\n\tb7 = 15 / 16,\r\n\tb8 = 21 / 22,\r\n\tb9 = 63 / 64,\r\n\tb0 = 1 / b1 / b1;\r\n\r\n/**\r\n * Easing function: \"bounceIn\".\r\n */\r\nexport function bounceIn(t: number): number {\r\n\treturn 1 - bounceOut(1 - t);\r\n}\r\nregistry.registeredClasses[\"ease.bounceIn\"] = bounceIn;\r\n\r\n/**\r\n * Easing function: \"bounceOut\".\r\n */\r\nexport function bounceOut(t: number): number {\r\n\tt = +t;\r\n\treturn t < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\r\n}\r\nregistry.registeredClasses[\"ease.bounceOut\"] = bounceOut;\r\n\r\n/**\r\n * Easing function: \"bounceInOut\".\r\n */\r\nexport function bounceInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.bounceInOut\"] = bounceInOut;\r\n\r\n/**\r\n * ============================================================================\r\n * ELASTIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet tau = 2 * Math.PI;\r\nlet amplitude = 1;\r\nlet period = 0.3 / tau;\r\nlet s = Math.asin(1 / amplitude) * period;\r\n\r\n/**\r\n * Easing function: \"elasticIn\".\r\n *\r\n * @function elasticIn\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\r\nexport function elasticIn(t: number): number {\r\n\treturn amplitude * Math.pow(2, 10 * --t) * Math.sin((s - t) / period);\r\n}\r\nregistry.registeredClasses[\"ease.elasticIn\"] = elasticIn;\r\n\r\n/**\r\n * Easing function: \"elasticOut\".\r\n *\r\n * @function elasticOut\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\r\nexport function elasticOut(t: number): number {\r\n\treturn 1 - amplitude * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / period);\r\n}\r\nregistry.registeredClasses[\"ease.elasticOut\"] = elasticOut;\r\n\r\n/**\r\n * Easing function: \"elasticInOut\".\r\n *\r\n * @function elasticInOut\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\r\nexport function elasticInOut(t: number): number {\r\n\tt = t * 2 - 1;\r\n\treturn (t < 0\r\n\t\t? amplitude * Math.pow(2, 10 * t) * Math.sin((s - t) / period)\r\n\t\t: 2 - amplitude * Math.pow(2, -10 * t) * Math.sin((s + t) / period)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.elasticInOut\"] = elasticInOut;\r\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","/**\r\n * A collection of String-based constants.\r\n * @hidden\r\n * @ignore Exclude from docs\r\n */\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport let PX: string = \"px\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport let STRING: string = \"string\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport let NUMBER: string = \"number\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport let DATE: string = \"date\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport let DURATION: string = \"duration\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport let PLACEHOLDER: string = \"__§§§__\";\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport let PLACEHOLDER2: string = \"__§§§§__\";\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IDisposer, Disposer } from \"./Disposer\";\r\nimport { EventDispatcher, AMEvent } from \"./EventDispatcher\";\r\nimport { Optional } from \"./Type\";\r\nimport { IClone } from \"./Clone\";\r\nimport * as $object from \"./Object\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $string from \"./String\";\r\n\r\n/**\r\n * Defines events from [[Dictionary]].\r\n */\r\nexport interface IDictionaryEvents<Key, Value> {\r\n\r\n\t/**\r\n\t * Invoked when an item is removed from the dictionary.\r\n\t */\r\n\tremoved: {\r\n\r\n\t\t/**\r\n\t\t * Removed value.\r\n\t\t */\r\n\t\toldValue: Value;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when dictionary is cleared.\r\n\t */\r\n\tcleared: {};\r\n\r\n\t/**\r\n\t * Invoked when `insertKey()` method is called.\r\n\t */\r\n\tinsertKey: {\r\n\r\n\t\t/**\r\n\t\t * Key.\r\n\t\t */\r\n\t\tkey: Key;\r\n\r\n\t\t/**\r\n\t\t * Added value.\r\n\t\t */\r\n\t\tnewValue: Value;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `setKey()` method is called.\r\n\t */\r\n\tsetKey: {\r\n\r\n\t\t/**\r\n\t\t * Key.\r\n\t\t */\r\n\t\tkey: Key;\r\n\r\n\t\t/**\r\n\t\t * Removed value. (if overwriting)\r\n\t\t */\r\n\t\toldValue: Value;\r\n\r\n\t\t/**\r\n\t\t * Added value.\r\n\t\t */\r\n\t\tnewValue: Value;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `removeKey()` method is called.\r\n\t */\r\n\tremoveKey: {\r\n\r\n\t\t/**\r\n\t\t * Key.\r\n\t\t */\r\n\t\tkey: Key;\r\n\r\n\t\t/**\r\n\t\t * Removed value.\r\n\t\t */\r\n\t\toldValue: Value;\r\n\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * [K description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Descirption\r\n */\r\nexport type DictionaryLike<K, A> = $iter.Iterable<[K, A]> & {\r\n\tevents: EventDispatcher<{ removed: { oldValue: A } }>;\r\n};\r\n\r\n/**\r\n * A disposable dictionary, which when disposed itself will call `dispose()`\r\n * method on all its items.\r\n */\r\nexport class DictionaryDisposer<K, A extends IDisposer> extends Disposer {\r\n\tconstructor(dict: DictionaryLike<K, A>) {\r\n\t\tconst disposer = dict.events.on(\"removed\", (x) => {\r\n\t\t\tx.oldValue.dispose();\r\n\t\t}, undefined, false);\r\n\r\n\t\tsuper(() => {\r\n\t\t\tdisposer.dispose();\r\n\r\n\t\t\t// TODO clear the dictionary ?\r\n\t\t\t$iter.each(dict.iterator(), (a) => {\r\n\t\t\t\tconst v = a[1];\r\n\t\t\t\tv.dispose();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * A Dictionary is collection where values of some type can be mapped to\r\n * string keys.\r\n *\r\n * You might call it an \"associative list\" or \"associative array\".\r\n */\r\nexport class Dictionary<Key extends string, T> {\r\n\r\n\t/**\r\n\t * Key/value pairs\r\n\t */\r\n\tprivate _dictionary: { [key in Key]?: T };\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<Dictionary<Key, T>, IDictionaryEvents<Key, T>>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._dictionary = {};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if key exists in Dictionary.\r\n\t *\r\n\t * @param key  The key to search for\r\n\t * @return `true` if key exists, `false` if it doesn't\r\n\t */\r\n\tpublic hasKey(key: Key): boolean {\r\n\t\treturn $object.hasKey(this._dictionary, key);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the value for a specific key.\r\n\t *\r\n\t * @param key  The key to search for\r\n\t * @return Value for the key, or `undefined` if it doesn't exist\r\n\t */\r\n\tpublic getKey(key: Key): Optional<T> {\r\n\t\treturn this._dictionary[key];\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts value at specific key.\r\n\t *\r\n\t * Will thrown an exception if the key already exists in the dictionary.\r\n\t *\r\n\t * @param key    Key\r\n\t * @param value  Value\r\n\t */\r\n\tpublic insertKey(key: Key, value: T): void {\r\n\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\tthrow new Error(\"Key \" + key + \" already exists in dictionary\");\r\n\r\n\t\t} else {\r\n\t\t\tthis._dictionary[key] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"insertKey\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"insertKey\", {\r\n\t\t\t\t\ttype: \"insertKey\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds or updates key/value into dictionary.\r\n\t *\r\n\t * If the key already exists, the old value will be overwritten.\r\n\t *\r\n\t * If the new value is exactly the same as the old value (using ===), it won't do anything.\r\n\t *\r\n\t * @param key    Key\r\n\t * @param value  Value\r\n\t */\r\n\tpublic setKey(key: Key, value: T): void {\r\n\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\tconst oldValue = this._dictionary[key];\r\n\r\n\t\t\tif (oldValue !== value) {\r\n\t\t\t\tthis._dictionary[key] = value;\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"setKey\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"setKey\", {\r\n\t\t\t\t\t\ttype: \"setKey\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tkey: key,\r\n\t\t\t\t\t\toldValue: oldValue,\r\n\t\t\t\t\t\tnewValue: value\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tthis._dictionary[key] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"insertKey\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"insertKey\", {\r\n\t\t\t\t\ttype: \"insertKey\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the value at specific `key` using custom function.\r\n\t *\r\n\t * Passes in current value into the function, and uses its output as a new\r\n\t * value.\r\n\t *\r\n\t * If the new value is exactly the same as the old value (using ===), it won't do anything.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param key  Key\r\n\t * @param fn   Function to transform the value\r\n\t */\r\n\tpublic updateKey(key: Key, fn: (value: T) => T): void {\r\n\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\tconst oldValue = this._dictionary[key];\r\n\t\t\tconst newValue = fn(oldValue);\r\n\r\n\t\t\tif (oldValue !== newValue) {\r\n\t\t\t\tthis._dictionary[key] = newValue;\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"setKey\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"setKey\", {\r\n\t\t\t\t\t\ttype: \"setKey\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tkey: key,\r\n\t\t\t\t\t\toldValue: oldValue,\r\n\t\t\t\t\t\tnewValue: newValue\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Key \" + key + \" doesn't exist in dictionary\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes value at specific `key` from dictionary.\r\n\t *\r\n\t * @param key  Key to remove\r\n\t */\r\n\tpublic removeKey(key: Key): void {\r\n\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\tconst oldValue = this._dictionary[key];\r\n\r\n\t\t\tdelete this._dictionary[key];\r\n\r\n\t\t\tif (this.events.isEnabled(\"removeKey\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removeKey\", {\r\n\t\t\t\t\ttype: \"removeKey\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [insertKeyIfEmpty description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo description\r\n\t * @param key      [description]\r\n\t * @param ifEmpty  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic insertKeyIfEmpty(key: Key, ifEmpty: () => T): T {\r\n\t\tif (!this.hasKey(key)) {\r\n\t\t\tthis.insertKey(key, ifEmpty());\r\n\t\t}\r\n\r\n\t\treturn <T>this.getKey(key);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all items from the dictionary.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\t// TODO dispatch this after clear\r\n\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t$object.each(this._dictionary, (key, value) => {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: value\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._dictionary = {};\r\n\r\n\t\tif (this.events.isEnabled(\"cleared\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"cleared\", {\r\n\t\t\t\ttype: \"cleared\",\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies items from another Dictionary.\r\n\t *\r\n\t * @param source  A Dictionary to copy items from\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (a) => {\r\n\t\t\t// TODO fix this type cast\r\n\t\t\tthis.setKey(<Key>a[0], a[1]);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an interator that can be used to iterate through all items in\r\n\t * the dictionary.\r\n\t *\r\n\t * @return Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<[Key, T]> {\r\n\t\t// @todo fix this type after the Iterator bug is fixed\r\n\t\t// https://github.com/Microsoft/TypeScript/issues/16730\r\n\t\treturn <$iter.Iterator<[Key, T]>>$object.entries(this._dictionary);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ES6 iterator for the keys/values of the dictionary.\r\n\t */\r\n\tpublic *[Symbol.iterator](): Iterator<[Key, T]> {\r\n\t\t// TODO make this more efficient ?\r\n\t\tfor (let key in this._dictionary) {\r\n\t\t\tif ($object.hasKey(this._dictionary, key)) {\r\n\t\t\t\tyield [<Key>key, this._dictionary[key]];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calls `f` for each key/value in the dictionary.\r\n\t */\r\n\tpublic each(f: (key: Key, value: T) => void): void {\r\n\t\t$iter.each(this.iterator(), ([key, value]) => f(key, value));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that can be used to iterate through all items in\r\n\t * the dictionary, ordered by key.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Iterator\r\n\t */\r\n\tpublic sortedIterator(): $iter.Iterator<[Key, T]> {\r\n\t\treturn $iter.sort(this.iterator(), (x, y) => $string.order(x[0], y[0]));\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A version of a [[Dictionary]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nexport class DictionaryTemplate<Key extends string, T extends IClone<T> & { isTemplate: boolean }> extends Dictionary<Key, T> {\r\n\t/**\r\n\t * A template object.\r\n\t *\r\n\t * @todo Make this private\r\n\t */\r\n\tpublic _template!: T;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param t Template object\r\n\t */\r\n\tpublic constructor(t: T) {\r\n\t\tsuper();\r\n\t\tthis.template = t;\r\n\t}\r\n\r\n\t/**\r\n\t * A \"template\" object to copy all properties from when creating new list\r\n\t * items.\r\n\t *\r\n\t * @param v  Template object\r\n\t */\r\n\tpublic set template(v: T) {\r\n\t\tv.isTemplate = true;\r\n\t\tthis._template = v;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Template object\r\n\t */\r\n\tpublic get template(): T {\r\n\t\treturn this._template;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all elements from other dictionary.\r\n\t *\r\n\t * @param source  Source dictionary\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (a) => {\r\n\t\t\t// TODO fix this type cast\r\n\t\t\t// TODO why does this need to clone ?\r\n\t\t\tthis.setKey(<Key>a[0], a[1].clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a new object of the specified type, adds it to specified\r\n\t * `key` in the dictionary, and returns it.\r\n\t *\r\n\t * @param make  Item type to use. Will use the default type for the dictionary if not specified.\r\n\t * @return      Newly created item\r\n\t */\r\n\tpublic create(key: Key): T {\r\n\t\treturn this.insertKeyIfEmpty(key, () => this.template.clone());\r\n\t}\r\n\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { EventListener, TargetedEventDispatcher, AMEvent } from \"./utils/EventDispatcher\";\r\nimport { InteractionObject, IInteractionObjectEvents } from \"./interaction/InteractionObject\";\r\nimport { IPointer } from \"./interaction/Pointer\";\r\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"./utils/Disposer\";\r\nimport { IPoint } from \"./defs/IPoint\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $object from \"./utils/Object\";\r\n\r\n/**\r\n * ============================================================================\r\n * RE-EXPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport { AMEvent };\r\n\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @important\r\n */\r\nexport class SpriteEventDispatcher<T extends AMEvent<Sprite, ISpriteEvents>> extends TargetedEventDispatcher<Sprite, T> {\r\n\r\n\t/**\r\n\t * [_interactionEvents description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprivate _interactionEvents = new Dictionary<string, CounterDisposer>();\r\n\r\n\t/**\r\n\t * [_dispatchSpriteEvent description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprivate _dispatchSpriteEvent<Key extends keyof IInteractionObjectEvents>(ev: AMEvent<InteractionObject, IInteractionObjectEvents>[Key]): void {\r\n\t\tif (this.target.disabled || this.target.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// TODO remove this <any> later\r\n\t\tif (this.target.events.isEnabled(ev.type)) {\r\n\t\t\tlet imev: AMEvent<Sprite, ISpriteEvents>[Key] = <any>$object.merge(ev, {\r\n\t\t\t\ttarget: this.target\r\n\t\t\t});\r\n\t\t\tthis.target.events.dispatchImmediately(imev.type, imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_dispatchSpritePointEvent description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprivate _dispatchSpritePointEvent<Key extends \"hit\" | \"track\">(ev: AMEvent<InteractionObject, IInteractionObjectEvents>[Key]): void {\r\n\t\tif (this.target.disabled || this.target.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// TODO remove this <any> later\r\n\t\tif (this.target.events.isEnabled(ev.type)) {\r\n\r\n\t\t\tlet imev: AMEvent<Sprite, ISpriteEvents>[Key] = <any>$object.merge(ev, {\r\n\t\t\t\ttarget: this.target,\r\n\t\t\t\tspritePoint: ev.point ? $utils.documentPointToSprite(ev.point, this.target) : undefined,\r\n\t\t\t\tsvgPoint: this.target.getSvgPoint(ev.point)\r\n\t\t\t});\r\n\t\t\tthis.target.events.dispatchImmediately(imev.type, imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_addInteractionObjectEvent description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprivate _addInteractionObjectEvent<C, Key extends keyof IInteractionObjectEvents>(type: Key, callback: (this: C, ev: AMEvent<InteractionObject, IInteractionObjectEvents>[Key]) => void, context: C, shouldClone: boolean): IDisposer {\r\n\t\tconst key = shouldClone + \"-\" + type;\r\n\r\n\t\tconst counter = this._interactionEvents.insertKeyIfEmpty(key, () => {\r\n\t\t\tconst disposer = this.target.interactions.events.on(type, callback, context, shouldClone);\r\n\r\n\t\t\treturn new CounterDisposer(() => {\r\n\t\t\t\tthis._interactionEvents.removeKey(key);\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn counter.increment();\r\n\t}\r\n\r\n\t/**\r\n\t * [_on description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _on<A, B, Key extends keyof T>(once: boolean, type: Key | null, callback: A, context: B, shouldClone: boolean, dispatch: (type: Key, event: T[Key]) => void): EventListener<T> {\r\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n\r\n\t\tconst disposers = [info.disposer];\r\n\r\n\t\t/**\r\n\t\t * Catching Sprite-related events, converting them to [[SpriteEvent]] and\r\n\t\t * triggering them on sprite\r\n\t\t */\r\n\t\tswitch (type) {\r\n\t\t\tcase \"hit\":\r\n\t\t\tcase \"track\":\r\n\t\t\tcase \"doublehit\":\r\n\t\t\tcase \"wheel\":\r\n\t\t\tcase \"wheelup\":\r\n\t\t\tcase \"wheeldown\":\r\n\t\t\tcase \"wheelleft\":\r\n\t\t\tcase \"wheelright\":\r\n\t\t\t\tdisposers.push(this._addInteractionObjectEvent(<any>type, this._dispatchSpritePointEvent, this, shouldClone));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rightclick\":\r\n\t\t\tcase \"down\":\r\n\t\t\t//case \"hold\":\r\n\t\t\tcase \"up\":\r\n\t\t\tcase \"drag\":\r\n\t\t\tcase \"dragged\":\r\n\t\t\tcase \"dragstart\":\r\n\t\t\tcase \"dragstop\":\r\n\t\t\tcase \"over\":\r\n\t\t\tcase \"out\":\r\n\t\t\tcase \"swipe\":\r\n\t\t\tcase \"swipeleft\":\r\n\t\t\tcase \"swiperight\":\r\n\t\t\tcase \"resize\":\r\n\t\t\t//case \"rotate\":\r\n\t\t\tcase \"focus\":\r\n\t\t\tcase \"blur\":\r\n\t\t\tcase \"toggled\":\r\n\t\t\t\tdisposers.push(this._addInteractionObjectEvent(<any>type, this._dispatchSpriteEvent, this, shouldClone));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Set functional properties based on events. For example if we add a\r\n\t\t * \"drag\" event handler, we want to make the Sprite draggable, even if we\r\n\t\t * don't explicitly set \"draggable\"\r\n\t\t */\r\n\t\tswitch (type) {\r\n\t\t\tcase \"hit\":\r\n\t\t\tcase \"doublehit\":\r\n\t\t\tcase \"rightclick\":\r\n\t\t\tcase \"down\":\r\n\t\t\tcase \"up\":\r\n\t\t\t\tthis.target.clickable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"toggled\":\r\n\t\t\t\tthis.target.togglable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"drag\":\r\n\t\t\tcase \"dragstart\":\r\n\t\t\tcase \"dragstop\":\r\n\t\t\t\tthis.target.draggable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"track\":\r\n\t\t\t\tthis.target.trackable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"resize\":\r\n\t\t\t\tthis.target.resizable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"swipe\":\r\n\t\t\tcase \"swipeleft\":\r\n\t\t\tcase \"swiperight\":\r\n\t\t\t\tthis.target.swipeable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"wheel\":\r\n\t\t\tcase \"wheelup\":\r\n\t\t\tcase \"wheeldown\":\r\n\t\t\tcase \"wheelleft\":\r\n\t\t\tcase \"wheelright\":\r\n\t\t\t\tthis.target.wheelable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"over\":\r\n\t\t\t\tthis.target.hoverable = true;\r\n\t\t\tcase \"out\":\r\n\t\t\t\tthis.target.hoverable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"focus\":\r\n\t\t\tcase \"blur\":\r\n\t\t\t\tthis.target.focusable = true;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tinfo.disposer = new MultiDisposer(disposers);\r\n\r\n\t\treturn info;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Defines a type of event that has a single point of reference.\r\n */\r\nexport type SpritePointerTypeEvent = {\r\n\r\n\t/**\r\n\t * Is event originated by touch pointer?\r\n\t */\r\n\ttouch: boolean;\r\n\r\n};\r\n\r\n/**\r\n * Defines property set for a [[Sprite]] event that contains point information.\r\n */\r\nexport type SpritePointEvent = {\r\n\t/**\r\n\t * Event point in global (document) coordinates.\r\n\t */\r\n\tpoint: IPoint;\r\n\r\n\t/**\r\n\t * Event point in local Sprite coordinates.\r\n\t */\r\n\tspritePoint: IPoint;\r\n\r\n\t/**\r\n\t * Event point with chart (svg) coodinates.\r\n\t */\r\n\tsvgPoint: IPoint;\r\n};\r\n\r\n\r\n/**\r\n * Defines a type of event that has a related Pointer.\r\n */\r\nexport type SpritePointerEvent = {\r\n\r\n\t/**\r\n\t * Coordinates of the primary cursor position.\r\n\t */\r\n\tpointer: IPointer;\r\n\r\n};\r\n\r\n\r\n/**\r\n * Defines property set for a [[Sprite]] event that contains mouse or touch\r\n * event.\r\n */\r\nexport type SpriteMouseTouchEvent = {\r\n\r\n\t/**\r\n\t * Original mouse/touch event.\r\n\t */\r\n\tevent: MouseEvent | TouchEvent;\r\n\r\n};\r\n\r\n/**\r\n * Defines property set for a [[Sprite]] event that contains coordinate shift\r\n * information, such as drag events.\r\n */\r\nexport type SpriteShiftEvent = {\r\n\r\n\t/**\r\n\t * Shift in coordinates after dragging.\r\n\t */\r\n\tshift: IPoint;\r\n\r\n};\r\n\r\n/**\r\n * Defines available events available for [[Sprite]].\r\n */\r\nexport interface ISpriteEvents extends IInteractionObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when Sprite completes transition to a [[SpriteState]].\r\n\t */\r\n\ttransitionended: {};\r\n\r\n\t/**\r\n\t * Invoked when size of the Sprite changes.\r\n\t */\r\n\tsizechanged: {};\r\n\r\n\t/**\r\n\t * Invoked when maximum available size of the Sprite changes, i.e. when the\r\n\t * size of parent container changes.\r\n\t */\r\n\tmaxsizechanged: {\r\n\t\tpreviousWidth: number,\r\n\t\tpreviousHeight: number\r\n\t};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\ttransformed: {\r\n\r\n\t\t/**\r\n\t\t * [string description]\r\n\t\t * @todo Needs description\r\n\t\t */\r\n\t\tdummyData?: string;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when position of the [[Sprite]] changes.\r\n\t */\r\n\tpositionchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] is initialized.\r\n\t */\r\n\tinited: {};\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] appears. Sprite appears when `sprite.appear()` method\r\n\t * is called and show animation is finished.\r\n\t */\r\n\tappeared: {};\r\n\r\n\t/**\r\n\t * Invoked when chart is shown if `am4core.options.queue = true` or/and `am4core.options.onlyShowOnViewport = true`.\r\n\t */\r\n\tremovedfromqueue: {};\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] is becomes ready, that is it has finished all\r\n\t * calculations and building itself.\r\n\t *\r\n\t * For [[Container]] object (and all those inheriting it, including charts)\r\n\t * this event will fire when all children become ready.\r\n\t */\r\n\tready: {};\r\n\r\n\t/**\r\n\t * Invoked before [[Sprite]] is validated.\r\n\t *\r\n\t * @todo Description (check)\r\n\t */\r\n\tbeforevalidated: {};\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] is validated. (on init or after update)\r\n\t *\r\n\t * @todo Description (check)\r\n\t */\r\n\tvalidated: {};\r\n\r\n\t/**\r\n\t * Invoked when visibility of the [[Sprite]] changes. (from visible to hidden,\r\n\t * and vice versa)\r\n\t */\r\n\tvisibilitychanged: {\r\n\t\tvisible: boolean;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when hidden [[Sprite]] is shown.\r\n\t */\r\n\tshown: {};\r\n\r\n\t/**\r\n\t * Invoked when visible [[Sprite]] is hidden.\r\n\t */\r\n\thidden: {};\r\n\r\n\t/**\r\n\t * Invoked when zIndex of a sprite is changed\r\n\t */\r\n\tzIndexChanged: {};\r\n\r\n\t/**\r\n\t * Invoked when property of the [[Sprite]] changes.\r\n\t */\r\n\tpropertychanged: {\r\n\r\n\t\t/**\r\n\t\t * Property key.\r\n\t\t */\r\n\t\tproperty: string;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the global scale changed, meaning that scale of [[Sprite]]\r\n\t * or any of its ascendants changed.\r\n\t */\r\n\tglobalscalechanged: {};\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] is clicked or touched.\r\n\t */\r\n\thit: SpritePointerTypeEvent & SpritePointEvent & SpriteMouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when [[Sprite]] is clicked or touched twice in rapid succession.\r\n\t */\r\n\tdoublehit: SpritePointerTypeEvent & SpritePointEvent & SpriteMouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when pointer (mouse cursor or touch point) moves over `trackable`\r\n\t * [[Sprite]].\r\n\t */\r\n\ttrack:  SpritePointerTypeEvent & SpritePointEvent & SpritePointerEvent & SpriteMouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel while over the [[Sprite]].\r\n\t */\r\n\twheel: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel upwards while over the [[Sprite]].\r\n\t */\r\n\twheelup: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel downwards while over the [[Sprite]].\r\n\t */\r\n\twheeldown: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel leftwards while over the [[Sprite]].\r\n\t */\r\n\twheelleft: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel rightwards while over the [[Sprite]].\r\n\t */\r\n\twheelright: SpritePointEvent & SpriteShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `togglable` Sprite is being toggled on and off. (its\r\n\t * `isActive` property is being changed)\r\n\t */\r\n\ttoggled: {};\r\n\r\n\t/**\r\n\t * Invoked just before Sprite is disposed.\r\n\t */\r\n\tbeforedisposed: {};\r\n\r\n\t/**\r\n\t * Invoked when sprite is disabled\r\n\t */\r\n\tdisabled: {};\r\n\r\n\t/**\r\n\t * Invoked when sprite is enabled\r\n\t */\r\n\tenabled: {};\r\n\r\n\t/**\r\n\t * Invoked when `draggable` object is being dragged. (using mouse, touch or\r\n\t * keyboard).\r\n\t *\r\n\t * This is simmilar but different then `\"drag\"` event in that it kicks in\r\n\t * after `\"drag\"` which modifies [[Sprite]] coordinates. This allows doing\r\n\t * own manipulations and corrections to element positions.\r\n\t */\r\n\tdragged: SpritePointerTypeEvent & SpriteShiftEvent & SpritePointEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original coordinates of the pointer's position when the dragging started.\r\n\t\t */\r\n\t\tstartPoint: IPoint,\r\n\r\n\t\t/**\r\n\t\t * An original JavaScript event that triggered dragging.\r\n\t\t */\r\n\t\tevent?: MouseEvent | TouchEvent | KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when a sprite is added to a parent\r\n\t */\r\n\tparentset: {};\r\n\r\n}\r\n","/**\r\n * Data parser module.\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines common options for all data parsers.\r\n */\r\nexport interface IDataParserOptions {\r\n\r\n\t/**\r\n\t * Empty values (e.g. empty strings, `null`, etc.) will be replaced with\r\n\t * this.\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * List of fields in data that hold numeric values. Parser will try to\r\n\t * convert the value in those fields to a `number`.\r\n\t */\r\n\tnumberFields?: string[];\r\n\r\n\t/**\r\n\t * List of fields in data that need to be treated as Dates, i.e. converted\r\n\t * to `Date` objects from whatever source format they are currently in.\r\n\t */\r\n\tdateFields?: string[];\r\n\r\n\t/**\r\n\t * An instance of [[DateFormatter]] to use when parsing string-based dates.\r\n\t * If it's not set, the parser will create it's own instance of\r\n\t * [[DateFormatter]], should any date parsing required. (`dateFields` is set)\r\n\t *\r\n\t * Unless `dateFormat` is set in parser options, the parser will try to look\r\n\t * for `dateFormat` in `dateFormatter`.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Parsing_Dates} Tutorial on date parsing\r\n\t */\r\n\tdateFormatter?: DateFormatter;\r\n\r\n\t/**\r\n\t * Override date format set in `dateFormatter`.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Parsing_Dates} Tutorial on date parsing\r\n\t */\r\n\tdateFormat?: string;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class for the data parsers.\r\n */\r\nexport class DataParser {\r\n\r\n\t/**\r\n\t * Content type, relevant to the specific format.\r\n\t */\r\n\tpublic contentType: string;\r\n\r\n\t/**\r\n\t * Parser options.\r\n\t *\r\n\t * @see {@link IDataParserOptions} for description of each option\r\n\t */\r\n\tpublic options: IDataParserOptions;\r\n\r\n\t/**\r\n\t * A \"placeholder\" function for real parsers to override.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param data  Source data\r\n\t * @return Parsed data (empty)\r\n\t */\r\n\tpublic parse(data: string): any {\r\n\t\treturn [];\r\n\t};\r\n\r\n\t/**\r\n\t * Checks if there are any numeric fields that need to be converted to\r\n\t * numbers.\r\n\t *\r\n\t * @return Numeric fields?\r\n\t */\r\n\tprotected get parsableNumbers(): boolean {\r\n\t\treturn this.options.numberFields && (this.options.numberFields.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a value to 'number' if it is in `numberFields`.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @param value  Value\r\n\t * @return Parsed or original value\r\n\t */\r\n\tprotected maybeToNumber(field: string, value: any): any {\r\n\t\tif (this.options.numberFields.indexOf(field) !== -1) {\r\n\t\t\treturn $utils.anyToNumber(value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are any date fields that need to be converted to `Date`\r\n\t * objects.\r\n\t *\r\n\t * @return Date fields?\r\n\t */\r\n\tprotected get parsableDates(): boolean {\r\n\t\treturn this.options.dateFields && (this.options.dateFields.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a value to `Date` if it is in `dateFields`.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @param value  Value\r\n\t * @return Parsed or original value\r\n\t */\r\n\tprotected maybeToDate(field: string, value: any): any {\r\n\t\tif (this.options.dateFields.indexOf(field) !== -1) {\r\n\t\t\treturn this.options.dateFormatter.parse(value, this.dateFormat);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces empty value with something else.\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Source value or replacement\r\n\t */\r\n\tprotected maybeToEmpty(value: any): any {\r\n\t\tif ((!$type.hasValue(value) || value == \"\") && $type.hasValue(this.options.emptyAs)) {\r\n\t\t\treturn this.options.emptyAs;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * [[DateFormatter]] object for date parsing.\r\n\t *\r\n\t * If there was not [[DateFormatter]] supplied in parser options, a new one\r\n\t * is created.\r\n\t *\r\n\t * @return Date formatter\r\n\t * @see {@link DateFormatter}\r\n\t */\r\n\tprotected get dateFormatter(): DateFormatter {\r\n\t\tif (!this.options.dateFormatter) {\r\n\t\t\tthis.options.dateFormatter = new DateFormatter;\r\n\t\t\tif (this.options.dateFormat) {\r\n\t\t\t\tthis.options.dateFormat = this.options.dateFormat;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.options.dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A date format to use when parsing dates.\r\n\t *\r\n\t * @return Date format\r\n\t * @see {@link DateFormatter}\r\n\t */\r\n\tprotected get dateFormat(): string {\r\n\t\treturn this.options.dateFormat || this.dateFormatter.inputDateFormat;\r\n\t}\r\n\r\n}\r\n","/**\r\n * A collection of universal utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { Percent } from \"./Percent\";\r\nimport { isSafari } from \"./Browser\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $string from \"./String\";\r\nimport * as $strings from \"./Strings\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MISC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * Marks a value as being used (e.g. because the value has side effects).\r\n */\r\nexport function used<A>(value: A) { }\r\n\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function copyProperties(source: Object, target: Object): Object {\r\n\t$object.each(source, (key, value) => {\r\n\t\t// only if value is set\r\n\t\tif ($type.hasValue(value)) {\r\n\t\t\t(<any>target)[key] = value;\r\n\t\t}\r\n\t});\r\n\r\n\treturn target;\r\n}\r\n\r\n/**\r\n * Removes target from url\r\n */\r\nexport function stripHash(url: string): string {\r\n\treturn /^[^#]*/.exec(url)[0];\r\n}\r\n\r\nexport function getBaseURI() {\r\n\tlet url = \"#\";\r\n\r\n\t// Needed until https://bugs.webkit.org/show_bug.cgi?id=189499 is fixed\r\n\tif (isSafari()) {\r\n\t\tlet baseURI = document.baseURI;\r\n\t\tif (baseURI) {\r\n\t\t\tbaseURI = stripHash(baseURI);\r\n\t\t\tlet loc = stripHash(location.href);\r\n\t\t\tif (baseURI !== loc) {\r\n\t\t\t\turl = loc + url;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn url;\r\n}\r\n\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source: Object, target: Object): Object {\r\n\t$object.each(source, (key, value) => {\r\n\t\t// only if value is set\r\n\t\tif ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\r\n\t\t\t(<any>target)[key] = value;\r\n\t\t}\r\n\t});\r\n\treturn target;\r\n}\r\n\r\n/**\r\n * Copies all properties of one object to the other.\r\n *\r\n * @param source     Source object\r\n * @param recipient  Target object\r\n * @return Updated target object\r\n */\r\nexport function copy(source: Object, target: Object): Object {\r\n\t$object.each(source, (key, value) => {\r\n\t\t(<any>target)[key] = value;\r\n\t});\r\n\treturn target;\r\n}\r\n\r\n/**\r\n * Checks if value is not empty (undefined or zero-length string).\r\n *\r\n * @param value  Value to check\r\n * @return `true` if value is not \"empty\"\r\n */\r\nexport function isNotEmpty(value: $type.Optional<string>): value is string {\r\n\treturn $type.hasValue(value) && (value.toString() !== \"\");\r\n}\r\n\r\n/**\r\n * [relativeToValue description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param percent  [description]\r\n * @param full     [description]\r\n * @return [description]\r\n */\r\nexport function relativeToValue(percent: $type.Optional<number | Percent>, full: number): number {\r\n\tif ($type.isNumber(percent)) {\r\n\t\treturn percent;\r\n\t} else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n\t\treturn full * percent.value;\r\n\r\n\t} else {\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/**\r\n * [relativeRadiusToValue description]\r\n *\r\n * Differs from relativeToValue so that if a value is negative, it subtracts\r\n * it from full value.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param percent             [description]\r\n * @param full                [description]\r\n * @param subtractIfNegative  [description]\r\n * @return [description]\r\n */\r\nexport function relativeRadiusToValue(percent: $type.Optional<number | Percent>, full: number, subtractIfNegative?: boolean): $type.Optional<number> {\r\n\tlet value: $type.Optional<number>;\r\n\r\n\tif ($type.isNumber(percent)) {\r\n\t\tvalue = percent;\r\n\r\n\t\tif (value < 0) {\r\n\t\t\tif (subtractIfNegative) {\r\n\t\t\t\tvalue = full + value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = full - value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t} else if (percent != null && $type.isNumber(percent.value)) {\r\n\t\tvalue = full * percent.value;\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * [valueToRelative description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param value  [description]\r\n * @param full   [description]\r\n * @return [description]\r\n */\r\nexport function valueToRelative(value: number | Percent, full: number): number {\r\n\tif (value instanceof Percent) {\r\n\t\treturn value.value;\r\n\t}\r\n\telse {\r\n\t\treturn value / full;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns pixel ratio of the current screen (used on retina displays).\r\n *\r\n * @return Pixel ratio\r\n */\r\nexport function getPixelRatio(): number {\r\n\tlet ratio = window.devicePixelRatio || 1;\r\n\treturn ratio;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Converts camelCased text to dashed version:\r\n * (\"thisIsString\" > \"this-is-string\")\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function camelToDashed(str: string): string {\r\n\treturn str.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n\r\n/**\r\n * Converts tring to uppercase.\r\n *\r\n * @param str  String to convert\r\n * @return uppercased string\r\n * @todo Maybe make it better\r\n */\r\nexport function capitalize(str: string): string {\r\n\tlet arr: string[] = str.split(\"\");\r\n\tarr[0] = arr[0].toUpperCase();\r\n\treturn arr.join(\"\");\r\n}\r\n\r\n/**\r\n * Converts any value into its string representation.\r\n *\r\n * @param value  Value\r\n * @return String represantation of the value\r\n */\r\nexport function stringify(value: any): string {\r\n\treturn JSON.stringify(value);\r\n}\r\n\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value: string): string {\r\n\treturn value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n\r\n/**\r\n * Splits the text into multiple lines, respecting maximum character count.\r\n * Prioretizes splitting on spaces and punctuation. Falls back on splitting\r\n * mid-word if there's no other option.\r\n *\r\n * @param text      Text\r\n * @param maxChars  Maximum number of characters per line\r\n * @return An array of split text\r\n */\r\nexport function splitTextByCharCount(text: string, maxChars: number, fullWords?: boolean, rtl?: boolean, fullWordFallback?: boolean): string[] {\r\n\r\n\t// Maybe the text fits?\r\n\tif (text.length <= maxChars) {\r\n\t\treturn [text];\r\n\t}\r\n\r\n\t// Init result\r\n\tlet res: string[] = [];\r\n\r\n\r\n\t// Split by words or by charts\r\n\tif (fullWords) {\r\n\r\n\t\t// Split by words first\r\n\r\n\t\t// Split by spacing\r\n\t\tlet currentIndex: number = -1;\r\n\t\t//let tmpText = text.replace(/([,;:!?\\\\\\/\\.]+[\\s]+|[\\s])/g, $strings.PLACEHOLDER + \"$1\" + $strings.PLACEHOLDER);\r\n\t\tlet tmpText = text.replace(/([,;:!?\\\\\\/]+|[\\s])/g, $strings.PLACEHOLDER + \"$1\" + $strings.PLACEHOLDER);\r\n\t\tlet words = tmpText.split($strings.PLACEHOLDER);\r\n\r\n\t\t// Glue end-of-word punctuation to the word itself\r\n\t\tfor (let i = 1; i < words.length; i++) {\r\n\t\t\tlet word = words[i];\r\n\t\t\tif ((word == \".\" || word == \",\") && words[i - 1].match(/[\\w]+$/)) {\r\n\t\t\t\twords[i - 1] += word;\r\n\t\t\t\twords[i] = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Process each word\r\n\t\tfor (let i = 0; i < words.length; i++) {\r\n\r\n\t\t\t// Get word and symbol count\r\n\t\t\tlet word: string = words[i];\r\n\t\t\tlet wordLength: number = word.length;\r\n\r\n\t\t\t// Ignore empty words\r\n\t\t\tif (wordLength === 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Check word length\r\n\t\t\tif ((wordLength > maxChars) && (fullWords !== true || fullWordFallback != false)) {\r\n\t\t\t//if (wordLength > maxChars) {\r\n\t\t\t\t// A single word is longer than allowed symbol count\r\n\t\t\t\t// Break it up\r\n\t\t\t\tif (rtl) {\r\n\t\t\t\t\tword = reverseString(word);\r\n\t\t\t\t}\r\n\t\t\t\tlet parts: RegExpMatchArray | null = word.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\"));\r\n\r\n\t\t\t\t// TODO is this correct ?\r\n\t\t\t\tif (parts) {\r\n\t\t\t\t\tif (rtl) {\r\n\t\t\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\t\t\tparts[x] = reverseString(parts[x]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//parts.reverse();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tres = res.concat(parts);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// Init current line\r\n\t\t\t\tif (currentIndex === -1) {\r\n\t\t\t\t\tres.push(\"\");\r\n\t\t\t\t\tcurrentIndex = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if we need to break into another line\r\n\t\t\t\tif (((res[currentIndex].length + wordLength + 1) > maxChars) && res[currentIndex] !== \"\") {\r\n\t\t\t\t\tres.push(\"\");\r\n\t\t\t\t\tcurrentIndex++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add word\r\n\t\t\t\tres[currentIndex] += word;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Update index\r\n\t\t\tcurrentIndex = res.length - 1;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\r\n\t\t// Splitting by anywhere (living la vida facil)\r\n\t\tlet parts: RegExpMatchArray | null = text.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\"));\r\n\r\n\t\tif (parts) {\r\n\t\t\tif (rtl) {\r\n\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\tif (!rtl) {\r\n\t\t\t\t\t\tparts[x] = reverseString(parts[x]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tres = parts;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Do we have only one word that does not fit?\r\n\t// Since fullWords is set and we can't split the word, we end up with empty\r\n\t// set.\r\n\tif (res.length == 1 && fullWords && fullWordFallback && (res[0].length > maxChars)) {\r\n\t\tres = [];\r\n\t}\r\n\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * Truncates the text to certain character count.\r\n *\r\n * Will add ellipsis if the string is truncated. Optionally, can truncate on\r\n * full words only.\r\n *\r\n * For RTL support, pass in the fifth parameter as `true`.\r\n *\r\n * @param text       Input text\r\n * @param maxChars   Maximum character count of output\r\n * @param ellipsis   Ellipsis string, i.e. \"...\"\r\n * @param fullWords  If `true`, will not break mid-word, unless there's a single word and it does not with into `maxChars`\r\n * @param rtl        Is this an RTL text?\r\n * @return Truncated text\r\n */\r\nexport function truncateWithEllipsis(text: string, maxChars: number, ellipsis: string, fullWords?: boolean, rtl?: boolean): string {\r\n\r\n\tif (text.length <= maxChars) {\r\n\t\treturn text;\r\n\t}\r\n\r\n\t// Calc max chars\r\n\tmaxChars -= ellipsis.length;\r\n\tif (maxChars < 1) {\r\n\t\tmaxChars = 1;\r\n\t\t//ellipsis = \"\";\r\n\t}\r\n\r\n\t// Get lines\r\n\tlet lines = splitTextByCharCount(text, maxChars, fullWords, rtl);\r\n\r\n\t// Use first line\r\n\treturn (lines[0] || \"\") + ellipsis;\r\n}\r\n\r\n/**\r\n * Removes whitespace from beginning and end of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function trim(str: string): string {\r\n\treturn str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\");\r\n};\r\n\r\n/**\r\n * Removes whitespace from end of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function rtrim(str: string): string {\r\n\treturn str.replace(/[\\s\\uFEFF\\xA0]+$/g, \"\");\r\n};\r\n\r\n/**\r\n * Removes whitespace from beginning of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function ltrim(str: string): string {\r\n\treturn str.replace(/^[\\s\\uFEFF\\xA0]+/g, \"\");\r\n};\r\n\r\n/**\r\n * Reverses string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function reverseString(str: string): string {\r\n\treturn str.split(\"\").reverse().join(\"\");\r\n}\r\n\r\n/**\r\n * Removes quotes from the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function unquote(str: string): string {\r\n\tlet res = str.trim();\r\n\tres = str.replace(/^'(.*)'$/, \"$1\");\r\n\tif (res == str) {\r\n\t\tres = str.replace(/^\"(.*)\"$/, \"$1\");\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value: any, len: number = 0, char: string = \"0\"): string {\r\n\tif (typeof value !== \"string\") {\r\n\t\tvalue = value.toString();\r\n\t}\r\n\r\n\treturn len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\n\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format: string): string {\r\n\r\n\t// Undefined?\r\n\tif (typeof format === \"undefined\") {\r\n\t\treturn $strings.STRING;\r\n\t}\r\n\r\n\t// Cleanup and lowercase format\r\n\tformat = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n\r\n\t// Remove style tags\r\n\tformat = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n\r\n\t// Trim\r\n\tformat = format.trim();\r\n\r\n\t// Check for any explicit format hints (i.e. /Date)\r\n\tlet hints: RegExpMatchArray | null = format.match(/\\/(date|number|duration)$/);\r\n\r\n\tif (hints) {\r\n\t\treturn hints[1];\r\n\t}\r\n\r\n\t// Check for explicit hints\r\n\tif (format === $strings.NUMBER) {\r\n\t\treturn $strings.NUMBER;\r\n\t}\r\n\r\n\tif (format === $strings.DATE) {\r\n\t\treturn $strings.DATE;\r\n\t}\r\n\r\n\tif (format === $strings.DURATION) {\r\n\t\treturn $strings.DURATION;\r\n\t}\r\n\r\n\t// Detect number formatting symbols\r\n\tif (format.match(/[#0]/)) {\r\n\t\treturn $strings.NUMBER;\r\n\t}\r\n\r\n\t// Detect date formatting symbols\r\n\tif (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n\t\treturn $strings.DATE;\r\n\t}\r\n\r\n\t// Nothing? Let's display as string\r\n\treturn $strings.STRING;\r\n}\r\n\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format: string): string {\r\n\treturn format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text: string): string {\r\n\treturn text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text: string): string {\r\n\treturn text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * TYPE CONVERSION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value: number): string {\r\n\t// TODO handle Infinity and -Infinity\r\n\tif ($type.isNaN(value)) {\r\n\t\treturn \"NaN\";\r\n\t}\r\n\r\n\tif (value === Infinity) {\r\n\t\treturn \"Infinity\";\r\n\t}\r\n\r\n\tif (value === -Infinity) {\r\n\t\treturn \"-Infinity\";\r\n\t}\r\n\r\n\t// Negative 0\r\n\tif ((value === 0) && (1 / value === -Infinity)) {\r\n\t\treturn \"-0\";\r\n\t}\r\n\r\n\t// Preserve negative and deal with absoute values\r\n\tlet negative = value < 0;\r\n\r\n\tvalue = Math.abs(value);\r\n\r\n\t// TODO test this\r\n\tlet parsed = $type.getValue(/^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value));\r\n\tlet digits = parsed[1];\r\n\tlet decimals = parsed[2] || \"\";\r\n\r\n\tlet res: string;\r\n\r\n\t// Leave the nummber as it is if it does not use exponents\r\n\tif (parsed[3] == null) {\r\n\t\tres = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n\r\n\t} else {\r\n\t\tlet exponent = +parsed[3];\r\n\r\n\t\t// Deal with decimals\r\n\t\tif (value < 1) {\r\n\t\t\tlet zeros = exponent - 1;\r\n\r\n\t\t\tres = \"0.\" + $string.repeat(\"0\", zeros) + digits + decimals;\r\n\r\n\t\t\t// Deal with integers\r\n\t\t} else {\r\n\t\t\tlet zeros = exponent - decimals.length;\r\n\r\n\t\t\tif (zeros === 0) {\r\n\t\t\t\tres = digits + decimals;\r\n\r\n\t\t\t} else if (zeros < 0) {\r\n\t\t\t\tres = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tres = digits + decimals + $string.repeat(\"0\", zeros);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn negative ? \"-\" + res : res;\r\n}\r\n\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function anyToDate(value: Date | number | string): Date {\r\n\tif ($type.isDate(value)) {\r\n\t\t// TODO maybe don't create a new Date ?\r\n\t\tconst date = new Date(value);\r\n\t\t// This is needed because IE does not copy over milliseconds\r\n\t\tdate.setMilliseconds(value.getMilliseconds());\r\n\t\treturn date;\r\n\t}\r\n\r\n\telse if ($type.isNumber(value)) {\r\n\t\treturn new Date(value);\r\n\t}\r\n\r\n\telse {\r\n\t\t// Try converting to number (assuming timestamp)\r\n\t\tlet num = Number(value);\r\n\r\n\t\tif (!$type.isNumber(num)) {\r\n\t\t\treturn new Date(value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn new Date(num);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Tries converting any value to a number.\r\n *\r\n * @param value  Source value\r\n * @return Number\r\n */\r\nexport function anyToNumber(value: Date | number | string): $type.Optional<number> {\r\n\tif ($type.isDate(value)) {\r\n\t\treturn value.getTime();\r\n\t}\r\n\r\n\telse if ($type.isNumber(value)) {\r\n\t\treturn value;\r\n\t}\r\n\r\n\telse if ($type.isString(value)) {\r\n\t\t// Try converting to number (assuming timestamp)\r\n\t\tlet num = Number(value);\r\n\r\n\t\tif (!$type.isNumber(num)) {\r\n\t\t\t// Failing\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn num;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date: Date, utc: boolean = false): number {\r\n\tconst start = new Date(date.getFullYear(), 0, 0);\r\n\tconst diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n\tconst oneDay = 1000 * 60 * 60 * 24;\r\n\treturn Math.floor(diff / oneDay);\r\n}\r\n\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date: Date, _utc: boolean = false): number {\r\n\tconst d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n\tconst day = d.getUTCDay() || 7;\r\n\td.setUTCDate(d.getUTCDate() + 4 - day);\r\n\tconst firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n\treturn Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date: Date, utc: boolean = false): number {\r\n\tconst firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n\tlet currentWeek = getWeek(date, utc);\r\n\tif (currentWeek == 1) {\r\n\t\tcurrentWeek = 53;\r\n\t}\r\n\treturn currentWeek - firstWeek + 1;\r\n}\r\n\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week: number, year: number, weekday: number = 1, utc: boolean = false): number {\r\n\tlet date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n\tif (utc) {\r\n\t\tdate.setUTCFullYear(year);\r\n\t}\r\n\tlet day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n\treturn day;\r\n}\r\n\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours: number, base?: number): number {\r\n\tif (hours > 12) {\r\n\t\thours -= 12;\r\n\t}\r\n\telse if (hours === 0) {\r\n\t\thours = 12;\r\n\t}\r\n\treturn $type.hasValue(base) ? hours + (base - 1) : hours;\r\n}\r\n\r\n/**\r\n * Returns a string name of the tome zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date: Date, long: boolean = false, savings: boolean = false, utc: boolean = false): string {\r\n\tif (utc) {\r\n\t\treturn long ? \"Coordinated Universal Time\" : \"UTC\";\r\n\t}\r\n\tlet wotz = date.toLocaleString(\"UTC\");\r\n\tlet wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n\t//wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n\tif (savings === false) {\r\n\t\twtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n\t}\r\n\treturn wtz;\r\n}\r\n\r\n/**\r\n * Returns a \"week year\" of the given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year of week\r\n */\r\nexport function getWeekYear(date: Date, _utc: boolean = false): number {\r\n\tconst d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n\tconst day = d.getUTCDay() || 7;\r\n\td.setUTCDate(d.getUTCDate() + 4 - day);\r\n\tconst firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n\treturn firstDay.getFullYear();\r\n}\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * NUMBER-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns a random number between `from` and `to`.\r\n *\r\n * @param from  From number\r\n * @param to    To number\r\n * @return Random number\r\n */\r\nexport function random(from: number, to: number): number {\r\n\treturn Math.floor(Math.random() * (to - from)) + from;\r\n}\r\n\r\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * @param value  Input value\r\n * @param min    Minimum value\r\n * @param max    Maximum value\r\n * @return Possibly adjusted value\r\n */\r\nexport function fitNumber(value: number, min: number, max: number): number {\r\n\tif (value > max) {\r\n\t\treturn max;\r\n\t}\r\n\telse if (value < min) {\r\n\t\treturn min;\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * If the value is does not fit withing specified range, it \"wraps\" around the\r\n * values.\r\n *\r\n * For example, if we have input value 10 with min set at 1 and max set at 8,\r\n * the value will not fit. The remainder that does not fit (2) will be added\r\n * to `min`, resulting in 3.\r\n *\r\n * The output of regular `fitNumber()` would return 8 instead.\r\n *\r\n * @param value  Input value\r\n * @param min    Minimum value\r\n * @param max    Maximum value\r\n * @return Possibly adjusted value\r\n */\r\nexport function fitNumberRelative(value: number, min: number, max: number): number {\r\n\tlet gap = max - min;\r\n\tif (value > max) {\r\n\t\tvalue = min + (value - gap * Math.floor(value / gap));\r\n\t}\r\n\telse if (value < min) {\r\n\t\tvalue = min + (value - gap * Math.floor(value / gap));\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * SPRITE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Converts SVG element coordinates to coordinates within specific [[Sprite]].\r\n *\r\n * @param point   SVG coordinates\r\n * @param sprite  Sprite\r\n * @return Sprite coordinates\r\n */\r\nexport function svgPointToSprite(point: IPoint, sprite: Sprite): IPoint {\r\n\tlet x: number = point.x;\r\n\tlet y: number = point.y;\r\n\tlet sprites: Sprite[] = [];\r\n\tif (sprite) {\r\n\t\twhile ($type.hasValue(sprite.parent)) {\r\n\t\t\tsprites.push(sprite);\r\n\t\t\tsprite = sprite.parent as any;\r\n\t\t}\r\n\r\n\t\tsprites.reverse();\r\n\r\n\t\tfor (let i = 0; i < sprites.length; i++) {\r\n\t\t\tlet sprite: Sprite = sprites[i];\r\n\t\t\tlet angle: number = sprite.rotation;\r\n\r\n\t\t\tlet relativeX = x - sprite.pixelX - sprite.ex;\r\n\t\t\tlet relativeY = y - sprite.pixelY - sprite.ey;\r\n\r\n\t\t\tif (sprite.dx) {\r\n\t\t\t\tx -= sprite.dx;\r\n\t\t\t}\r\n\t\t\tif (sprite.dy) {\r\n\t\t\t\ty -= sprite.dy;\r\n\t\t\t}\r\n\r\n\t\t\tlet scale = sprite.scale;\r\n\r\n\t\t\t// this handles nonscaling\r\n\t\t\tif(sprite.group){\r\n\t\t\t\tscale = sprite.group.scale; \r\n\t\t\t}\r\n\r\n\t\t\tx = ($math.cos(-angle) * relativeX - $math.sin(-angle) * relativeY) / scale - sprite.pixelPaddingLeft;\r\n\t\t\ty = ($math.cos(-angle) * relativeY + $math.sin(-angle) * relativeX) / scale - sprite.pixelPaddingTop;\r\n\t\t}\r\n\t}\r\n\r\n\treturn { x: x, y: y };\r\n}\r\n\r\n/**\r\n * Converts coordinates within [[Sprite]] to coordinates relative to the whole\r\n * SVG element.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @return SVG coordinates\r\n */\r\nexport function spritePointToSvg(point: IPoint, sprite: Sprite): IPoint {\r\n\tlet x: number = point.x;\r\n\tlet y: number = point.y;\r\n\r\n\tif (sprite) {\r\n\t\twhile ($type.hasValue(sprite.parent)) {\r\n\t\t\tlet angle: number = sprite.rotation;\r\n\r\n\t\t\tx += sprite.pixelPaddingLeft + sprite.ex;\r\n\t\t\ty += sprite.pixelPaddingTop + sprite.ey;\r\n\r\n\t\t\tlet scale = sprite.scale;\r\n\r\n\t\t\t// this handles nonscaling\r\n\t\t\tif(sprite.group){\r\n\t\t\t\tscale = sprite.group.scale; \r\n\t\t\t}\r\n\r\n\t\t\tlet relativeX = sprite.pixelX + ((x * $math.cos(angle) - y * $math.sin(angle))) * scale;\r\n\t\t\tlet relativeY = sprite.pixelY + ((x * $math.sin(angle) + y * $math.cos(angle))) * scale;\r\n\r\n\t\t\tif (sprite.dx) {\r\n\t\t\t\trelativeX += sprite.dx;\r\n\t\t\t}\r\n\t\t\tif (sprite.dy) {\r\n\t\t\t\trelativeY += sprite.dy;\r\n\t\t\t}\r\n\r\n\t\t\tx = relativeX;\r\n\t\t\ty = relativeY;\r\n\r\n\t\t\tsprite = sprite.parent as any;\r\n\t\t}\r\n\t}\r\n\treturn { x: x, y: y };\r\n}\r\n\r\n\r\n/**\r\n * Converts coordinates of one sprite to another.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @param toSprite  Sprite\r\n * @return converted coordinates\r\n */\r\nexport function spritePointToSprite(point: IPoint, sprite: Sprite, toSprite: Sprite): IPoint {\r\n\treturn svgPointToSprite(spritePointToSvg(point, sprite), toSprite);\r\n}\r\n\r\n\r\n/**\r\n * Converts a rectangle expressed in SVG element coordinates to coordinates\r\n * within specific [[Sprite]].\r\n *\r\n * @param rect    SVG rectangle\r\n * @param sprite  Sprite\r\n * @return Sprite rectangle\r\n */\r\nexport function svgRectToSprite(rect: IRectangle, sprite: Sprite): IRectangle {\r\n\tlet p1: IPoint = svgPointToSprite(rect, sprite);\r\n\tlet p2: IPoint = svgPointToSprite({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);\r\n\treturn { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\r\n}\r\n\r\n/**\r\n * Converts a rectangle expressed in [[Sprite]] coordinates to SVG coordinates.\r\n *\r\n * @param rect    Sprite rectangle\r\n * @param sprite  Sprite\r\n * @return SVG rectangle\r\n */\r\nexport function spriteRectToSvg(rect: IRectangle, sprite: Sprite): IRectangle {\r\n\tlet p1: IPoint = spritePointToSvg(rect, sprite);\r\n\tlet p2: IPoint = spritePointToSvg({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);\r\n\treturn { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\r\n}\r\n\r\n/**\r\n * Converts global document-wide coordinates to coordinates within SVG element.\r\n *\r\n * @param point         Global coordinates\r\n * @param svgContainer  SVG element\r\n * @return SVG coordinates\r\n */\r\nexport function documentPointToSvg(point: IPoint, svgContainer: HTMLElement, cssScale?: number): IPoint {\r\n\ttry {\r\n\t\tlet bbox = svgContainer.getBoundingClientRect();\r\n\r\n\t\tif (!$type.isNumber(cssScale)) {\r\n\t\t\tcssScale = 1;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t\"x\": (point.x - bbox.left) / cssScale,\r\n\t\t\t\"y\": (point.y - bbox.top) / cssScale\r\n\t\t};\r\n\t}\r\n\tcatch (e) {\r\n\t\treturn point;\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts SVG coordinates to global document-wide coordinates.\r\n *\r\n * @param point         SVG coordinates\r\n * @param svgContainer  SVG element\r\n * @return Global coordinates\r\n */\r\nexport function svgPointToDocument(point: IPoint, svgContainer: HTMLElement): IPoint {\r\n\ttry {\r\n\t\tlet bbox = svgContainer.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\t\"x\": point.x + bbox.left,\r\n\t\t\t\"y\": point.y + bbox.top\r\n\t\t};\r\n\t}\r\n\tcatch (e) {\r\n\t\treturn point;\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts document-wide global coordinates to coordinates within specific\r\n * [[Sprite]].\r\n *\r\n * @param point   Global coordinates\r\n * @param sprite  Sprite\r\n * @return Sprite coordinates\r\n */\r\nexport function documentPointToSprite(point: IPoint, sprite: Sprite): IPoint {\r\n\tif (sprite && sprite.htmlContainer) {\r\n\t\tlet svgPoint: IPoint = documentPointToSvg(point, $type.getValue(sprite.htmlContainer), sprite.svgContainer.cssScale);\r\n\t\treturn svgPointToSprite(svgPoint, sprite);\r\n\t}\r\n\telse {\r\n\t\treturn point;\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts coordinates within [[Sprite]] to global document coordinates.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @return Global coordinates\r\n */\r\nexport function spritePointToDocument(point: IPoint, sprite: Sprite): IPoint {\r\n\tif (sprite && sprite.htmlContainer) {\r\n\t\tlet svgPoint: IPoint = spritePointToSvg(point, sprite);\r\n\t\treturn svgPointToDocument(svgPoint, $type.getValue(sprite.htmlContainer));\r\n\t}\r\n\telse {\r\n\t\treturn point;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DEPRECATED FUNCTIONS\r\n * @todo Review and remove\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns element's width.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Width (px)\r\n * @deprecated Not used anywhere\r\n */\r\nexport function width(element: HTMLElement): number {\r\n\r\n\tlet cs = getComputedStyle(element);\r\n\r\n\tlet paddingX = parseFloat(cs.paddingLeft) + parseFloat(cs.paddingRight);\r\n\tlet borderX = parseFloat(cs.borderLeftWidth) + parseFloat(cs.borderRightWidth);\r\n\r\n\treturn element.clientWidth - paddingX - borderX;\r\n}\r\n\r\n/**\r\n * Returns element's height.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Height (px)\r\n * @deprecated Not used anywhere\r\n */\r\nexport function height(element: HTMLElement): number {\r\n\r\n\tlet cs = getComputedStyle(element);\r\n\r\n\tlet paddingY = parseFloat(cs.paddingTop) + parseFloat(cs.paddingBottom);\r\n\tlet borderY = parseFloat(cs.borderTopWidth) + parseFloat(cs.borderBottomWidth);\r\n\r\n\treturn element.clientHeight - paddingY - borderY;\r\n}\r\n\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number: number): number {\r\n\tlet match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n\tif (!match) { return 0; }\r\n\treturn Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\n\r\n\r\n/**\r\n * A parsed URL\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport interface Url {\r\n\tprotocol: string;\r\n\tseparator: string;\r\n\tauthority: string;\r\n\tdomain: string;\r\n\tport: string;\r\n\tpath: string;\r\n\tquery: string;\r\n\thash: string;\r\n}\r\n\r\nconst urlRegexp = /^([a-zA-Z][a-zA-Z0-9\\+\\.\\-]*:)?(?:(\\/\\/)([^\\@]+\\@)?([^\\/\\?\\#\\:]*)(\\:[0-9]+)?)?([^\\?\\#]*)(\\?[^\\#]*)?(\\#.*)?$/;\r\n\r\n/**\r\n * Parses a URL\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO test this\r\nexport function parseUrl(url: string): Url {\r\n\tconst match = urlRegexp.exec(url);\r\n\r\n\treturn {\r\n\t\tprotocol: (match && match[1]) || \"\",\r\n\t\tseparator: (match && match[2]) || \"\",\r\n\t\tauthority: (match && match[3]) || \"\",\r\n\t\tdomain: (match && match[4]) || \"\",\r\n\t\tport: (match && match[5]) || \"\",\r\n\t\tpath: (match && match[6]) || \"\",\r\n\t\tquery: (match && match[7]) || \"\",\r\n\t\thash: (match && match[8]) || \"\"\r\n\t};\r\n}\r\n\r\n/**\r\n * Serializes a Url into a string\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function serializeUrl(url: Url): string {\r\n\treturn url.protocol + url.separator + url.authority + url.domain + url.port + url.path + url.query + url.hash;\r\n}\r\n\r\n/**\r\n * Checks whether a Url is relative or not\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO is this correct ?\r\nfunction isRelativeUrl(url: Url): boolean {\r\n\treturn url.protocol === \"\" &&\r\n\t\turl.separator === \"\" &&\r\n\t\turl.authority === \"\" &&\r\n\t\turl.domain === \"\" &&\r\n\t\turl.port === \"\";\r\n}\r\n\r\n/**\r\n * Joins together two URLs, resolving relative URLs correctly\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO test this\r\nexport function joinUrl(left: string, right: string): string {\r\n\tconst parsedLeft = parseUrl(left);\r\n\tconst parsedRight = parseUrl(right);\r\n\r\n\tif (isRelativeUrl(parsedLeft)) {\r\n\t\tthrow new Error(\"Left URL is not absolute\");\r\n\t}\r\n\r\n\tif (isRelativeUrl(parsedRight)) {\r\n\t\t// TODO is this correct ?\r\n\t\tif (parsedRight.path !== \"\") {\r\n\t\t\tif (parsedRight.path[0] === \"/\") {\r\n\t\t\t\tparsedLeft.path = parsedRight.path;\r\n\r\n\t\t\t\t// TODO is this correct ?\r\n\t\t\t} else {\r\n\t\t\t\tconst leftPath = parsedLeft.path.split(/\\//);\r\n\t\t\t\tconst rightPath = parsedRight.path.split(/\\//);\r\n\r\n\t\t\t\t// TODO is this correct ?\r\n\t\t\t\tif (leftPath.length === 0) {\r\n\t\t\t\t\tif (rightPath.length !== 0) {\r\n\t\t\t\t\t\tleftPath.push(\"\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (leftPath.length > 1) {\r\n\t\t\t\t\tleftPath.pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$array.pushAll(leftPath, rightPath);\r\n\r\n\t\t\t\tparsedLeft.path = leftPath.join(\"/\");\r\n\r\n\t\t\t\tif (parsedLeft.path !== \"\" && parsedLeft.path[0] !== \"/\") {\r\n\t\t\t\t\tthrow new Error(\"URL path must start with /\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// TODO is this correct ?\r\n\t\tparsedLeft.query = parsedRight.query;\r\n\t\tparsedLeft.hash = parsedRight.hash;\r\n\r\n\t\treturn serializeUrl(parsedLeft);\r\n\r\n\t} else {\r\n\t\treturn serializeUrl(parsedRight);\r\n\t}\r\n}\r\n\r\n/**\r\n * Detects MSIE.\r\n *\r\n * @return Is IE?\r\n */\r\nexport function isIE(): boolean {\r\n\treturn !!(<any>window).MSInputMethodContext && !!(<any>document).documentMode;\r\n}\r\n","/**\r\n * Base functionality\r\n*/\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IClone } from \"./utils/Clone\";\r\nimport { List, ListTemplate } from \"./utils/List\";\r\nimport { OrderedListTemplate, SortedListTemplate } from \"./utils/SortedList\";\r\nimport { Dictionary, DictionaryTemplate } from \"./utils/Dictionary\";\r\nimport { Disposer, IDisposer } from \"./utils/Disposer\";\r\nimport { EventDispatcher, AMEvent } from \"./utils/EventDispatcher\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { Color, color } from \"./utils/Color\";\r\nimport { Percent, percent } from \"./utils/Percent\";\r\nimport { ITheme } from \"../themes/ITheme\";\r\nimport { Ordering } from \"./utils/Order\";\r\n\r\nimport { registry } from \"./Registry\";\r\nimport { cache } from \"./utils/Cache\";\r\n\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n\r\n//import * as $debug from \"./utils/Debug\";\r\n\r\n/**\r\n * Provides base functionality for all derivative objects, like generating ids,\r\n * handling cache, etc.\r\n */\r\nexport class BaseObject implements IClone<BaseObject>, IDisposer {\r\n\r\n\t/**\r\n\t * A unique ID for this object.\r\n\t *\r\n\t * Generated on first access by `uid()` getter.\r\n\t */\r\n\tprotected _uid: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * Indicates if this object has already been deleted. Any\r\n\t * destruction/disposal code should take this into account when deciding\r\n\t * wheter to run potentially costly disposal operations if they already have\r\n\t * been run.\r\n\t */\r\n\tprotected _disposed: boolean = false;\r\n\r\n\t/**\r\n\t * List of IDisposer which will be disposed when the BaseObject is disposed.\r\n\t */\r\n\tprotected _disposers: Array<IDisposer> = [];\r\n\r\n\t/**\r\n\t * User-defined id of the object.\r\n\t */\r\n\tprotected _id: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * Holds a universal mapping collection, so that elements and their children\r\n\t * can create and look up all kinds of relations between id and object.\r\n\t */\r\n\tprotected _map: $type.Optional<Dictionary<string, any>>;\r\n\r\n\t/**\r\n\t * Holds mapping for objects referenced by id in JSON config that are not yet\r\n\t * available at processing time.\r\n\t */\r\n\tprotected _delayedMap: $type.Optional<Dictionary<string, any>>;\r\n\r\n\t/**\r\n\t * The theme used by this object.\r\n\t */\r\n\tprotected _themes: $type.Optional<ITheme[]>;\r\n\r\n\t// @review\r\n\t/**\r\n\t * A list of objects that are clones of this object. An object needs to\r\n\t * maintain a list of its clones so that properties can be re-applied to\r\n\t * clones whenever property on the object they were cloned from changes.\r\n\t */\r\n\tprotected _clones: $type.Optional<List<this>>;\r\n\r\n\r\n\t// @review\r\n\t/**\r\n\t * Reference to the original object this object was cloned from. We need to\r\n\t * keep this so we can disassociate it from source object when this object\r\n\t * is disposed.\r\n\t */\r\n\tpublic clonedFrom: $type.Optional<this>;\r\n\r\n\t/**\r\n\t * A class name for the object.\r\n\t *\r\n\t * This property is used by deriving classes to identify which class it is.\r\n\t * We could derive the class name from the object itself, however method of\r\n\t * doing so is too costly, so we are relying on this property to quickly\r\n\t * access type of class.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _className: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * [cloneId description]\r\n\t *\r\n\t * @todo Needs description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic cloneId: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * Holds processing error list.\r\n\t */\r\n\tprotected _processingErrors: string[];\r\n\r\n\t//protected _classes: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Sets class name\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.className = \"BaseObject\";\r\n\t\t//this.debug();\r\n\t}\r\n\r\n\tprotected debug(): void {\r\n\t\t//$debug.debug(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns object's internal unique ID.\r\n\t *\r\n\t * @return Unique ID\r\n\t */\r\n\tpublic get uid(): string {\r\n\t\tif (!this._uid) {\r\n\t\t\tthis._uid = registry.getUniqueId();\r\n\t\t\tregistry.map.setKey(this._uid, this);\r\n\t\t}\r\n\t\treturn this._uid;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the user-defined id of the element.\r\n\t *\r\n\t * @param value Id\r\n\t */\r\n\tpublic set id(value: $type.Optional<string>) {\r\n\t\t//registry.map.setKey(value, this); // registry.map only stores by uid\r\n\t\tthis._id = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Id\r\n\t */\r\n\tpublic get id(): $type.Optional<string> {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a universal collection for mapping ids with objects.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Map collection\r\n\t */\r\n\tpublic get map(): Dictionary<string, any> {\r\n\t\tif (!this._map) {\r\n\t\t\tthis._map = new Dictionary<string, any>();\r\n\t\t}\r\n\t\treturn this._map;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns mapping for objects referenced by id in JSON config that are not yet\r\n\t * available at processing time.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Map collection\r\n\t */\r\n\tpublic get delayedMap(): Dictionary<string, any> {\r\n\t\tif (!this._delayedMap) {\r\n\t\t\tthis._delayedMap = new Dictionary<string, any>();\r\n\t\t}\r\n\t\treturn this._delayedMap;\r\n\t}\r\n\r\n\t/**\r\n\t * Logs an id and property of the target element that is not yet available\r\n\t * for later assignment.\r\n\t * \r\n\t * @ignore\r\n\t * @param  property  Property to set\r\n\t * @param  id        ID of the target element\r\n\t */\r\n\tpublic addDelayedMap(property: string, id: string): void {\r\n\t\tconst map = this.delayedMap;\r\n\t\tif (!map.hasKey(id)) {\r\n\t\t\tmap.setKey(id, []);\r\n\t\t}\r\n\t\tconst list = map.getKey(id);\r\n\t\tlist.push({\r\n\t\t\tproperty: property,\r\n\t\t\ttarget: this\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Processes delayed JSON config items.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic processDelayedMap(): void {\r\n\t\tthis.delayedMap.each((id, list) => {\r\n\t\t\tif (this.map.hasKey(id)) {\r\n\t\t\t\tconst target = this.map.getKey(id);\r\n\t\t\t\t$array.each(list, (item: any) => {\r\n\t\t\t\t\titem.target[item.property] = target;\r\n\t\t\t\t});\r\n\t\t\t\tthis.delayedMap.removeKey(id);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Applies properties from all assigned themes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyTheme(): void {\r\n\t\t// TODO is this needed ?\r\n\t\tif (registry) {\r\n\t\t\tlet themes = this.getCurrentThemes();\r\n\r\n\t\t\t// TODO is this needed ?\r\n\t\t\tif (themes) {\r\n\t\t\t\t$array.each(themes, (theme, index) => {\r\n\t\t\t\t\ttheme(this);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of themes to be used for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value An array of themes\r\n\t */\r\n\tpublic set themes(value: $type.Optional<ITheme[]>) {\r\n\t\tthis._themes = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return An array of themes\r\n\t */\r\n\tpublic get themes(): $type.Optional<ITheme[]> {\r\n\t\treturn this._themes;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of themes that should be applied to this element. It could\r\n\t * either be a list of themes set explicitly on this element, or system-wide.\r\n\t *\r\n\t * @return List of themes\r\n\t */\r\n\tpublic getCurrentThemes(): ITheme[] {\r\n\t\treturn this.themes || registry.themes;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this object has been already been disposed.\r\n\t *\r\n\t * @return Is disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tthis._disposed = true;\r\n\r\n\t\t\tconst a = this._disposers;\r\n\r\n\t\t\tthis._disposers = <any>null;\r\n\r\n\t\t\twhile (a.length !== 0) {\r\n\t\t\t\tconst disposer = a.shift();\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\t// Clear cache\r\n\t\t\tthis.clearCache();\r\n\r\n\t\t\t// remove from clones list\r\n\t\t\tif (this.clonedFrom) {\r\n\t\t\t\tthis.clonedFrom.clones.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tconst uid = this._uid;\r\n\r\n\t\t\tif (uid != null) {\r\n\t\t\t\tregistry.map.removeKey(uid);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an IDisposer, which will be disposed when this object is disposed.\r\n\t *\r\n\t * @param target Object to dispose\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic addDisposer(target: IDisposer): void {\r\n\t\tthis._disposers.push(target);\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes disposable object and removes it from `_disposers`.\r\n\t *\r\n\t * @param target Object to dispose\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic removeDispose(target: IDisposer): void {\r\n\t\t//if(target){\r\n\t\tif (!this._disposed) {\r\n\t\t\tlet index = $array.indexOf(this._disposers, target);\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tthis._disposers.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttarget.dispose();\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Makes a copy of this object and returns the clone. Try to avoid cloning complex objects like chart, create new instances if you need them.\r\n\t *\r\n\t * @param cloneId  An id to use for clone (if not set a unique id will be generated)\r\n\t * @returns Clone\r\n\t */\r\n\tpublic clone<A extends this>(cloneId?: string): this {\r\n\t\tif (!cloneId) {\r\n\t\t\tcloneId = \"clone-\" + registry.getUniqueId();\r\n\t\t}\r\n\r\n\t\tlet newObject: this = new (<{ new(): A; }>this.constructor)();\r\n\t\tnewObject.cloneId = cloneId;\r\n\r\n\t\tnewObject.copyFrom(this);\r\n\r\n\t\t// add to clones list\r\n\t\t// this.clones.push(newObject); // moved this to copyFrom\r\n\r\n\r\n\t\treturn newObject;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a collection of object's clones.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Clones\r\n\t */\r\n\tpublic get clones(): List<this> {\r\n\t\tif (!this._clones) {\r\n\t\t\tthis._clones = new List<this>();\r\n\t\t}\r\n\t\treturn this._clones;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from different element.\r\n\t *\r\n\t * @param object Source element\r\n\t */\r\n\tpublic copyFrom(object: this): void {\r\n\t\tobject.clones.push(this); // do not moveValue, as it is expensive! even if there will be several items in clones list, it's not that bad.\r\n\t\tthis.clonedFrom = object;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's class name. (a class that was used to instantiate the element)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Class name\r\n\t */\r\n\tpublic set className(value: $type.Optional<string>) {\r\n\t\tthis._className = value;\r\n\t\t/*if (registry) {\r\n\t\t\tregistry.registeredClasses[value] = typeof this;\r\n\t\t}*/\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Class name\r\n\t */\r\n\tpublic get className(): $type.Optional<string> {\r\n\t\treturn this._className;\r\n\t}\r\n\r\n\t/**\r\n\t * Caches value in object's cache.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param key    Key\r\n\t * @param value  Value\r\n\t * @param ttl    TTL in seconds\r\n\t */\r\n\tpublic setCache(key: string, value: any, ttl?: number): void {\r\n\t\tcache.set(this.uid, key, value, ttl);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves cached value.\r\n\t *\r\n\t * If optional second padarameter is specified, it will return that value\r\n\t * if cache is not available or is expired.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param key    Key\r\n\t * @param value  Value to return if cache is not available\r\n\t * @return Value\r\n\t */\r\n\tpublic getCache(key: string, value: any = undefined): any {\r\n\t\treturn cache.get(this.uid, key, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears object's local cache.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic clearCache(): void {\r\n\t\tcache.clear(this.uid);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates [[Disposer]] for `setTimeout` function call. This ensures that all\r\n\t * timeouts created by the object will be cleared when object itself is\r\n\t * disposed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fn     Callback function\r\n\t * @param delay  Timeout (ms)\r\n\t * @return Disposer for timeout\r\n\t */\r\n\tpublic setTimeout(fn: () => void, delay: number): IDisposer {\r\n\t\tconst id = setTimeout(() => {\r\n\t\t\tthis.removeDispose(disposer);\r\n\t\t\tfn();\r\n\t\t}, delay);\r\n\r\n\t\tconst disposer = new Disposer(() => {\r\n\t\t\tclearTimeout(id);\r\n\t\t});\r\n\r\n\t\tthis._disposers.push(disposer);\r\n\t\treturn disposer;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates [[Disposer]] for `setInterval` function call. This ensures that all\r\n\t * timeouts created by the object will be cleared when object itself is\r\n\t * disposed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fn     Callback function\r\n\t * @param delay  Timeout (ms)\r\n\t * @return Disposer for timeout\r\n\t */\r\n\tpublic setInterval(fn: () => void, delay: number): IDisposer {\r\n\t\tconst id = setInterval(() => {\r\n\t\t\tthis.removeDispose(disposer);\r\n\t\t\tfn();\r\n\t\t}, delay);\r\n\r\n\t\tconst disposer = new Disposer(() => {\r\n\t\t\tclearTimeout(id);\r\n\t\t});\r\n\r\n\t\tthis._disposers.push(disposer);\r\n\t\treturn disposer;\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * JSON-BASED CONFIG PROCESSING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Use this property to set JSON-based config. When set, triggers processing\r\n\t * routine, which will go through all properties, and try to apply values,\r\n\t * create instances, etc.\r\n\t *\r\n\t * Use this with caution, as it is a time-consuming process. It's used for\r\n\t * initialchart setup only, not routine operations.\r\n\t *\r\n\t * @param json JSON config\r\n\t */\r\n\tpublic set config(config: object) {\r\n\t\ttry {\r\n\t\t\tthis.processConfig(config);\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\t/*if (this instanceof Sprite) {\r\n\t\t\t\tthis.raiseCriticalError(e);\r\n\t\t\t}*/\r\n\t\t\t(<any>this).raiseCriticalError(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes the JSON config.\r\n\t *\r\n\t * @param json  JSON config\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected processConfig(config?: object): void {\r\n\r\n\t\tif (!config) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get target\r\n\t\tlet target = <any>this;\r\n\r\n\t\t// Iterate through all of the items\r\n\t\t$object.eachOrdered(config, (configKey, value) => {\r\n\t\t\tlet configValue: any = value;\r\n\r\n\t\t\t// Is this a callback?\r\n\t\t\tif (configKey == \"callback\" && typeof value == \"function\") {\r\n\t\t\t\t(<any>value).call(target);\r\n\t\t\t}\r\n\r\n\t\t\t// Check if there's a property in target\r\n\t\t\tif (this.hasProperty(configKey)) {\r\n\r\n\t\t\t\tlet item: any;\r\n\r\n\t\t\t\t// Do we have instructions to create an object?\r\n\t\t\t\t// We create a new object if \"type\" key is set, but only if the\r\n\t\t\t\t// target object is of different type.\r\n\t\t\t\tif (\r\n\t\t\t\t\t$type.isObject(configValue)\r\n\t\t\t\t\t&& $type.hasValue((<any>configValue)[\"type\"])\r\n\t\t\t\t\t&& (\r\n\t\t\t\t\t\t!$type.isObject(target[configKey])\r\n\t\t\t\t\t\t|| !$type.hasValue(target[configKey].className)\r\n\t\t\t\t\t\t|| (<any>configValue)[\"forceCreate\"]\r\n\t\t\t\t\t\t|| target[configKey].className != (<any>configValue)[\"type\"]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t&& !this.asIs(configKey)\r\n\t\t\t\t) {\r\n\t\t\t\t\titem = this.createClassInstance((<any>configValue)[\"type\"]);\r\n\r\n\t\t\t\t\t// Create new instance\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\ttarget[configKey] = item;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\titem = target[configKey];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Get item from the object\r\n\t\t\t\t\titem = target[configKey];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * It is...\r\n\t\t\t\t * --------------------------------------------------------------------\r\n\t\t\t\t */\r\n\r\n\t\t\t\tif (item instanceof Adapter) {\r\n\r\n\t\t\t\t\t// ... an Adapter, try to add handlers to it\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\tthis.processAdapters(item, configValue);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (item instanceof EventDispatcher) {\r\n\r\n\t\t\t\t\t// ... an EventDispatcher, try to add handlers to it\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\tthis.processEvents(item, configValue);\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (configKey == \"locale\" && $type.isString(configValue)) {\r\n\r\n\t\t\t\t\t// ... a locale specified as string, e.g. \"fr_FR\"\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\tif ((<any>window)[\"am4lang_\" + configValue]) {\r\n\t\t\t\t\t\ttarget[configKey] = (<any>window)[\"am4lang_\" + configValue];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (configKey == \"parent\" && $type.isString(configValue)) {\r\n\r\n\t\t\t\t\t// ... a parent referred via its it\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\tconst parent = this.map.getKey(configValue);\r\n\t\t\t\t\tif (parent) {\r\n\t\t\t\t\t\ttarget[configKey] = parent;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.addDelayedMap(\"parent\", configValue);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.asIs(configKey)) {\r\n\r\n\t\t\t\t\t// ... a special field, just set it to new value\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\t// (no need to add each indvidual item)\r\n\t\t\t\t\ttarget[configKey] = configValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.asFunction(configKey) && $type.isString(configValue)) {\r\n\r\n\t\t\t\t\t// ... a field indicating function name to look for in registry\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\tif ($type.hasValue(registry.registeredClasses[configValue])) {\r\n\t\t\t\t\t\ttarget[configKey] = registry.registeredClasses[configValue];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthrow Error(\"Invalid easing function: \" + configValue);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (<any>configValue instanceof BaseObject) {\r\n\r\n\t\t\t\t\t// ... a BaseObject object, we just going to use it as it is\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\ttarget[configKey] = configValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (item instanceof BaseObject) {\r\n\r\n\t\t\t\t\t// ... another child BaseObject\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\t// Let's just pass in config part in and let itself deal with it\r\n\t\t\t\t\titem.config = configValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (item instanceof ListTemplate || item instanceof OrderedListTemplate || item instanceof SortedListTemplate) {\r\n\r\n\t\t\t\t\t// ... a list with template\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\t// Let's see what we can do with it\r\n\t\t\t\t\tif ($type.isArray(configValue)) {\r\n\r\n\t\t\t\t\t\t// It's an array.\r\n\t\t\t\t\t\t// Create a list item for entry, or try to apply properties to an\r\n\t\t\t\t\t\t// existing entry if possible and it is present.\r\n\t\t\t\t\t\tif (item instanceof ListTemplate) {\r\n\t\t\t\t\t\t\tthis.processListTemplate(configValue, item);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.processOrderedTemplate(configValue, item);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.isObject(configValue)) {\r\n\t\t\t\t\t\t// It's a single oject.\r\n\t\t\t\t\t\t// Treat it as a template.\r\n\t\t\t\t\t\tif (<any>configValue instanceof BaseObject) {\r\n\t\t\t\t\t\t\t// Item is already a BaseObject, no need to process it further\r\n\t\t\t\t\t\t\titem.template = configValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t// Now let's find out if the whole object if a template, or we\r\n\t\t\t\t\t\t\t// need to get it from `template` key\r\n\t\t\t\t\t\t\tlet templateValue;\r\n\t\t\t\t\t\t\tif ($type.hasValue((<any>configValue).template)) {\r\n\t\t\t\t\t\t\t\ttemplateValue = (<any>configValue).template;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\ttemplateValue = configValue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (item.template instanceof BaseObject) {\r\n\t\t\t\t\t\t\t\t// Template is a BaseObject so we will just let its config\r\n\t\t\t\t\t\t\t\t// deal with the configuration\r\n\t\t\t\t\t\t\t\t(<any>item.template).config = templateValue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t$object.each(templateValue, (entryKey, entryValue) => {\r\n\r\n\t\t\t\t\t\t\t\t\tlet listItem = (<any>item.template)[entryKey];\r\n\r\n\t\t\t\t\t\t\t\t\tif (listItem instanceof Adapter) {\r\n\t\t\t\t\t\t\t\t\t\tthis.processAdapters(listItem, entryValue);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (listItem instanceof EventDispatcher) {\r\n\t\t\t\t\t\t\t\t\t\tthis.processEvents(listItem, entryValue);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (listItem instanceof DictionaryTemplate) {\r\n\t\t\t\t\t\t\t\t\t\tthis.processDictionaryTemplate(listItem, entryValue);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (item.template[entryKey] instanceof BaseObject) {\r\n\t\t\t\t\t\t\t\t\t\t// Template is a BaseObject. Let it deal with its own config.\r\n\t\t\t\t\t\t\t\t\t\t(<any>item.template[entryKey]).config = entryValue;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if ($type.isObject(entryValue) && $type.hasValue((<any>entryValue)[\"type\"])) {\r\n\t\t\t\t\t\t\t\t\t\tlistItem = this.createClassInstance((<any>entryValue)[\"type\"])\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (listItem) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (listItem instanceof BaseObject) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlistItem.config = <any>entryValue;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\titem.template[entryKey] = listItem;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\titem.template[entryKey] = entryValue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (listItem instanceof List) {\r\n\t\t\t\t\t\t\t\t\t\t// It's List, process it\r\n\t\t\t\t\t\t\t\t\t\tthis.processList(entryValue, listItem);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// Aything else. Just assing and be done with it.\r\n\t\t\t\t\t\t\t\t\t\titem.template[entryKey] = this.maybeColorOrPercent(entryValue);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Check maybe there are `values` to insert\r\n\t\t\t\t\t\t\tif ($type.hasValue((<any>configValue).values)) {\r\n\t\t\t\t\t\t\t\tif (item instanceof ListTemplate) {\r\n\t\t\t\t\t\t\t\t\tthis.processListTemplate((<any>configValue).values, item);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tthis.processOrderedTemplate((<any>configValue).values, item);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t// Something else?\r\n\t\t\t\t\t\t// Not sure what to do with it on a list - ignore\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (item instanceof List) {\r\n\r\n\t\t\t\t\t// ... a list\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\tif (configKey == \"children\") {\r\n\t\t\t\t\t\tthis.processList(configValue, item, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.processList(configValue, item);\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (item instanceof DictionaryTemplate) {\r\n\r\n\t\t\t\t\t// ... a dictionary with template\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\tthis.processDictionaryTemplate(item, configValue);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (item instanceof Dictionary) {\r\n\r\n\t\t\t\t\t// ... a dictionary\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\tthis.processDictionary(item, configValue);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if (item instanceof Color || item instanceof Percent) {\r\n\r\n\t\t\t\t\t// ... it's a Color or Percent\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\t\t\t\t\ttarget[configKey] = this.maybeColorOrPercent(configValue);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse if ($type.isObject(item) && $type.isObject(configValue)) {\r\n\r\n\t\t\t\t\t// ... a regular object\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\t$object.copyAllProperties(<Object>configValue, <Object>item);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// ... something else - probably a simple property or object\r\n\t\t\t\t\t// ------------------------------------------------------------------\r\n\r\n\t\t\t\t\t// Maybe convert to `Percent` or `Color`?\r\n\t\t\t\t\tconfigValue = this.maybeColorOrPercent(configValue);\r\n\r\n\t\t\t\t\t// Assign\r\n\t\t\t\t\ttarget[configKey] = configValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse if (!this.isReserved(configKey)) {\r\n\r\n\t\t\t\t// Doesn't have property set. But we're going to assume JSON config\r\n\t\t\t\t// creator knows what he/she is doing and set it anyway.\r\n\t\t\t\ttarget[configKey] = configValue;\r\n\r\n\t\t\t}\r\n\t\t}, this.configOrder);\r\n\r\n\t\t// Any errors?\r\n\t\tif (this.processingErrors.length) {\r\n\t\t\tlet errors = this.processingErrors.join(\"\\n\");\r\n\t\t\tthis._processingErrors = [];\r\n\t\t\tthrow Error(errors);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to detect if value is color or percent and converts to proper object\r\n\t * if necessary.\r\n\t *\r\n\t * Returns the same source value if no color/percent detected\r\n\t *\r\n\t * @param value  Source value\r\n\t * @return Converted value\r\n\t */\r\n\tprotected maybeColorOrPercent(value: any): any {\r\n\t\tif ($type.isString(value)) {\r\n\t\t\tif (value.match(/^[\\-]?[0-9.]+\\%$/)) {\r\n\t\t\t\treturn percent($type.toNumber(value));\r\n\t\t\t}\r\n\t\t\telse if (value.match(/^\\#[0-9abcdef]{3,}$/i)) {\r\n\t\t\t\treturn color(value);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\tprotected processAdapters(item: Adapter<any, any>, config: any): void {\r\n\t\tif ($type.isArray(config)) {\r\n\t\t\t$array.each(config, (entry: { key: string, callback: any, priority?: number }, index) => {\r\n\t\t\t\titem.add(entry.key, entry.callback, entry.priority || 0, this);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if ($type.isObject(config)) {\r\n\t\t\t$object.each(config, (key, entry) => {\r\n\t\t\t\tif (!item.has(key, entry)) {\r\n\t\t\t\t\titem.add(key, entry);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected processEvents(item: EventDispatcher<any>, config: any): void {\r\n\t\tif ($type.isArray(config)) {\r\n\t\t\t$array.each(config, (entry: { type: string, callback: any }, index) => {\r\n\t\t\t\titem.on(entry.type, entry.callback, this);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if ($type.isObject(config)) {\r\n\t\t\t$object.each(config, (key, entry) => {\r\n\t\t\t\tif (!item.has(key, entry)) {\r\n\t\t\t\t\titem.on(key, entry);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON config for a [[DictionaryTemplate]] item.\r\n\t *\r\n\t * @todo Description\r\n\t * @param item    Item\r\n\t * @param config  Config\r\n\t */\r\n\tprotected processDictionaryTemplate(item: DictionaryTemplate<any, any>, config: any): void {\r\n\r\n\t\t// We can only process object\r\n\t\t// Not sure what to do with other types - ignore\r\n\t\tif ($type.isObject(config)) {\r\n\r\n\t\t\t// Create an entry for each item, or override properties for\r\n\t\t\t// existing one.\r\n\t\t\t$object.each(config, (entryKey, entryValue) => {\r\n\t\t\t\tlet listItem;\r\n\r\n\t\t\t\t// Get existing one, or create a new one\r\n\t\t\t\tif (entryKey == \"template\") {\r\n\t\t\t\t\tlistItem = item.template;\r\n\t\t\t\t}\r\n\t\t\t\telse if (item.hasKey(entryKey)) {\r\n\t\t\t\t\tlistItem = item.getKey(entryKey);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlistItem = item.create(entryKey);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set data\r\n\t\t\t\tif (listItem instanceof BaseObject) {\r\n\t\t\t\t\tlistItem.config = entryValue;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($type.isObject(listItem) && $type.isObject(entryValue)) {\r\n\t\t\t\t\t$object.copyAllProperties(<Object>entryValue, <Object>listItem);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlistItem.setKey(entryKey, entryValue);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON config for a [[Dictionary]] item.\r\n\t *\r\n\t * @todo Description\r\n\t * @param item    Item\r\n\t * @param config  Config\r\n\t */\r\n\tprotected processDictionary(item: Dictionary<any, any>, config: any): void {\r\n\r\n\t\t// We can only process object\r\n\t\t// Not sure what to do with other types - ignore\r\n\t\tif ($type.isObject(config)) {\r\n\r\n\t\t\t// Create an entry for each item, or override properties for\r\n\t\t\t// existing one.\r\n\t\t\t// @todo support for non-basic types\r\n\t\t\t$object.each(config, (entryKey, entryValue) => {\r\n\t\t\t\titem.setKey(entryKey, entryValue);\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes [[ListTemplate]].\r\n\t *\r\n\t * @param configValue  Config value\r\n\t * @param item         Item\r\n\t */\r\n\tprotected processListTemplate(configValue: any, item: ListTemplate<any>): void {\r\n\r\n\t\t$array.each(configValue, (entry, index) => {\r\n\t\t\tlet type = this.getConfigEntryType(entry);\r\n\t\t\tlet listItem;\r\n\t\t\tif (item.hasIndex(index) && !(<any>entry)[\"forceCreate\"]) {\r\n\t\t\t\tlistItem = item.getIndex(index);\r\n\t\t\t}\r\n\t\t\telse if (<any>entry instanceof BaseObject) {\r\n\t\t\t\t// Item is already a BaseObject, no need to process it further\r\n\t\t\t\titem.push(entry);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (type) {\r\n\t\t\t\tlistItem = item.create(type);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlistItem = item.create();\r\n\t\t\t}\r\n\r\n\t\t\tif (entry === listItem) {\r\n\t\t\t\t// It's already the same item, do nothing\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tif ($type.isObject(entry)) {\r\n\r\n\t\t\t\t\t// If the list item is BaseObject, we just need to let it\r\n\t\t\t\t\t// deal if its own config\r\n\t\t\t\t\tif (listItem instanceof BaseObject) {\r\n\t\t\t\t\t\t(<any>listItem).config = entry;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ($type.isObject(listItem) && $type.isObject(entry)) {\r\n\t\t\t\t\t\t$object.copyAllProperties(<Object>entry, <Object>listItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\titem.setIndex(item.indexOf(listItem), entry);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Truncate the list if it contains less items than the config\r\n\t\t// array\r\n\t\twhile (configValue.length > item.length) {\r\n\t\t\titem.pop();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes [[OrdererListTemplate]] or [[SortedListTemplate]].\r\n\t *\r\n\t * @param configValue  Config value\r\n\t * @param item         Item\r\n\t */\r\n\tprotected processOrderedTemplate(configValue: any, item: OrderedListTemplate<any> | SortedListTemplate<any>): void {\r\n\r\n\t\t$array.each(configValue, (entry, index) => {\r\n\t\t\tlet type = this.getConfigEntryType(entry);\r\n\t\t\tlet listItem;\r\n\t\t\tif (type) {\r\n\t\t\t\tlistItem = item.create(type);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlistItem = item.create();\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isObject(entry)) {\r\n\r\n\t\t\t\t// If the list item is BaseObject, we just need to let it\r\n\t\t\t\t// deal if its own config\r\n\t\t\t\tif (listItem instanceof BaseObject) {\r\n\t\t\t\t\t(<any>listItem).config = entry;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($type.isObject(listItem) && $type.isObject(entry)) {\r\n\t\t\t\t\t$object.copyAllProperties(<Object>entry, <Object>listItem);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\titem.insert(entry);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes [[List]].\r\n\t *\r\n\t * @param configValue  Config value\r\n\t * @param item         Item\r\n\t */\r\n\tprotected processList(configValue: any, item: List<any>, parent?: any): void {\r\n\r\n\t\t// Convert to array if necessary\r\n\t\tif (!$type.isArray(configValue)) {\r\n\t\t\tconfigValue = [configValue];\r\n\t\t}\r\n\r\n\t\t// It's an array\r\n\t\t// Create a list item for entry\r\n\t\tconst itemCount = item.length;\r\n\t\tlet extraCount = 0;\r\n\t\t$array.each(configValue, (entry, index) => {\r\n\r\n\t\t\tif ($type.isObject(entry)) {\r\n\r\n\t\t\t\t// An object.\r\n\t\t\t\t//\r\n\t\t\t\t// Let's see if we can instantiate a class out of it, or we need\r\n\t\t\t\t// to push it into list as it is.\r\n\t\t\t\t//\r\n\t\t\t\t// If there are items already at the specified index in the list,\r\n\t\t\t\t// apply properties rather than create a new one.\r\n\r\n\t\t\t\tlet listItem;\r\n\t\t\t\tif ((index < itemCount) && !(<any>entry)[\"forceCreate\"]) {\r\n\t\t\t\t\tlistItem = item.getIndex(index);\r\n\t\t\t\t}\r\n\t\t\t\telse if (<any>entry instanceof BaseObject) {\r\n\t\t\t\t\t// Item is already a BaseObject, no need to process it further\r\n\t\t\t\t\titem.push(entry);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\textraCount++;\r\n\t\t\t\t\tlistItem = this.createEntryInstance(entry);\r\n\t\t\t\t\tif (parent) {\r\n\t\t\t\t\t\tlistItem.parent = parent;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\titem.push(listItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the list item is BaseObject, we just need to let it\r\n\t\t\t\t// deal if its own config\r\n\t\t\t\tif (listItem instanceof BaseObject) {\r\n\t\t\t\t\t(<any>listItem).config = entry;\r\n\t\t\t\t}\r\n\t\t\t\telse if ($type.isObject(listItem) && $type.isObject(entry)) {\r\n\t\t\t\t\t$object.copyAllProperties(<Object>entry, <Object>listItem);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// Basic value.\r\n\t\t\t\t// Just push it into list, or override existing value\r\n\t\t\t\tif (item.hasIndex(index)) {\r\n\t\t\t\t\titem.setIndex(index, entry);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\titem.push(entry);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\t// Truncate the list if it contains less items than the config\r\n\t\t// array\r\n\t\twhile (!parent && (configValue.length + extraCount) < item.length) {\r\n\t\t\titem.pop();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// Language must come first, so it's all set up when the rest of the\r\n\t\t// elements are being instantiated\r\n\t\telse if (a == \"language\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (b == \"language\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if field should be just assigned as is, without any checking when\r\n\t * processing JSON config.\r\n\t *\r\n\t * Extending functions can override this function to do their own checks.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn $array.indexOf([\"locale\"], field) != -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if field needs to be converted to function, if it is specified\r\n\t * as string.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a relevant class instance if such class definition exists.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param className  Class name\r\n\t * @return Instance\r\n\t */\r\n\tprotected createClassInstance(className: string): Object {\r\n\t\tif ($type.hasValue(registry.registeredClasses[className])) {\r\n\t\t\treturn new registry.registeredClasses[className]();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow Error(\"Invalid type: \\\"\" + className + \"\\\".\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a class instance for a config entry using it's type. (as set in\r\n\t * `type` property)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config part\r\n\t * @return Instance\r\n\t */\r\n\tprotected createEntryInstance(config: any): any {\r\n\t\tlet res: Object;\r\n\t\tif ($type.hasValue(config[\"type\"])) {\r\n\t\t\tres = this.createClassInstance(config[\"type\"]);\r\n\t\t}\r\n\t\tif (!res) {\r\n\t\t\treturn config;\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines config object type.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config part\r\n\t * @return Type\r\n\t */\r\n\tprotected getConfigEntryType(config: any): any {\r\n\t\tif ($type.hasValue(config[\"type\"])) {\r\n\t\t\tif ($type.hasValue(registry.registeredClasses[config[\"type\"]])) {\r\n\t\t\t\treturn registry.registeredClasses[config[\"type\"]];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow Error(\"Invalid type: \\\"\" + config[\"type\"] + \"\\\".\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this element has a property.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param prop  Property name\r\n\t * @return Has property?\r\n\t */\r\n\tprotected hasProperty(prop: string): boolean {\r\n\t\treturn prop in this ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checkes whether JSON key is a reserved keyword.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Reserved\r\n\t */\r\n\tprotected isReserved(key: string): boolean {\r\n\t\treturn [\"type\", \"forceCreate\"].indexOf(key) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of errors that happened during JSON processing.\r\n\t *\r\n\t * @return Errors\r\n\t */\r\n\tprotected get processingErrors(): string[] {\r\n\t\tif (!this._processingErrors) {\r\n\t\t\tthis._processingErrors = [];\r\n\t\t}\r\n\t\treturn this._processingErrors;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[BaseObjectEvents]].\r\n */\r\nexport interface IBaseObjectEvents { };\r\n\r\n/**\r\n * A version of [[BaseObject]] with events properties and methods.\r\n * Classes that use [[EventDispatcher]] should extend this instead of\r\n * [[BaseObject]] directly.\r\n */\r\nexport class BaseObjectEvents extends BaseObject {\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"BaseObjectEvents\";\r\n\t}\r\n\r\n\tpublic _events!: IBaseObjectEvents;\r\n\r\n\t/**\r\n\t * An [[EventDispatcher]] instance\r\n\t * @ignore\r\n\t */\r\n\tpublic _eventDispatcher: EventDispatcher<AMEvent<this, this[\"_events\"]>>;\r\n\r\n\t/**\r\n\t * An [[EventDispatcher]] instance\r\n\t */\r\n\tpublic get events(): EventDispatcher<AMEvent<this, this[\"_events\"]>> {\r\n\t\tif (!this._eventDispatcher) {\r\n\t\t\tthis._eventDispatcher = new EventDispatcher();\r\n\t\t\tthis._disposers.push(this._eventDispatcher);\r\n\t\t}\r\n\t\treturn this._eventDispatcher;\r\n\t}\r\n\r\n\t//public set events(value:EventDispatcher<AMEvent<this, this[\"_events\"]>>){\r\n\t//\tthis._eventDispatcher = value;\r\n\t//}\r\n\r\n\t/**\r\n\t * Dispatches an event using own event dispatcher. Will automatically\r\n\t * populate event data object with event type and target (this element).\r\n\t * It also checks if there are any handlers registered for this sepecific\r\n\t * event.\r\n\t *\r\n\t * @param eventType Event type (name)\r\n\t * @param data      Data to pass into event handler(s)\r\n\t */\r\n\tpublic dispatch<Key extends keyof this[\"_events\"]>(eventType: Key, data?: any): void {\r\n\t\t// @todo Implement proper type check\r\n\t\tif (this._eventDispatcher) {\r\n\t\t\tif (this.events.isEnabled(eventType)) {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tdata.type = eventType;\r\n\t\t\t\t\tdata.target = data.target || this;\r\n\t\t\t\t\t(<any>this.events).dispatch(eventType, {\r\n\t\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t(<any>this.events).dispatch(eventType, {\r\n\t\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Works like `dispatch`, except event is triggered immediately, without\r\n\t * waiting for the next frame cycle.\r\n\t *\r\n\t * @param eventType Event type (name)\r\n\t * @param data      Data to pass into event handler(s)\r\n\t */\r\n\tpublic dispatchImmediately<Key extends keyof this[\"_events\"]>(eventType: Key, data?: any): void {\r\n\t\t// @todo Implement proper type check\r\n\t\tif (this._eventDispatcher) {\r\n\t\t\tif (this.events.isEnabled(eventType)) {\r\n\t\t\t\tif (data) {\r\n\t\t\t\t\tdata.type = eventType;\r\n\t\t\t\t\tdata.target = data.target || this;\r\n\t\t\t\t\t(<any>this.events).dispatchImmediately(eventType, data);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t(<any>this.events).dispatchImmediately(eventType, {\r\n\t\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Sprite]].\r\n\t *\r\n\t * @param source Source object\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (source._eventDispatcher) {\r\n\t\t\tthis.events.copyFrom(source._eventDispatcher);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { IClone } from \"./Clone\";\nimport { Ordering } from \"./Order\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\n\n\n/**\n * ============================================================================\n * UTILITY FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface Iterator<A> {\n\t(push: (value: A) => boolean): void;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface Iterable<A> {\n\titerator(): Iterator<A>;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function fromArray<A>(array: Array<A>): Iterator<A> {\n\treturn (push) => {\n\t\tconst length = array.length;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tif (!push(array[i])) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function length<A>(iter: Iterator<A>): number {\n\tlet sum = 0;\n\n\titer((_) => {\n\t\t++sum;\n\t\treturn true;\n\t});\n\n\treturn sum;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function toArray<A>(iter: Iterator<A>): Array<A> {\n\tconst output: Array<A> = [];\n\n\titer((value) => {\n\t\toutput.push(value);\n\t\treturn true;\n\t});\n\n\treturn output;\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function eachContinue<A>(iter: Iterator<A>, fn: (value: A) => boolean): void {\n\titer(fn);\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function each<A>(iter: Iterator<A>, fn: (value: A) => void): void {\n\titer((value) => {\n\t\tfn(value);\n\t\treturn true;\n\t});\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function sort<A>(iter: Iterator<A>, fn: (left: A, right: A) => Ordering): Iterator<A> {\n\treturn fromArray(toArray(iter).sort(fn));\n}\n\n/**\n * [A description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function map<A, B>(iter: Iterator<A>, fn: (value: A) => B): Iterator<B> {\n\treturn (push) => iter((value) => push(fn(value)));\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function filter<A>(iter: Iterator<A>, fn: (value: A) => boolean): Iterator<A> {\n\treturn (push) => iter((value) => {\n\t\tif (fn(value)) {\n\t\t\treturn push(value);\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function concat<A>(...args: Array<Iterator<A>>): Iterator<A> {\n\treturn (push) => {\n\t\tlet go = true;\n\n\t\tconst push2 = (value: A) => (go = push(value));\n\n\t\tconst length = args.length;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\targs[i](push2);\n\n\t\t\tif (!go) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function flatten<A>(iter: Iterator<Iterator<A>>): Iterator<A> {\n\treturn (push) => {\n\t\tlet go = true;\n\n\t\tconst push2 = (value: A) => (go = push(value));\n\n\t\titer((value) => {\n\t\t\tvalue(push2);\n\t\t\treturn go;\n\t\t});\n\t};\n}\n\n/**\n * [number description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function indexed<A>(iter: Iterator<A>): Iterator<[number, A]> {\n\treturn (push) => {\n\t\tlet index = 0;\n\n\t\titer((value) => push([index++, value]));\n\t};\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function findIndex<A>(iter: Iterator<A>, matches: (value: A) => boolean): number {\n\tlet found = false;\n\tlet i = 0;\n\n\titer((value) => {\n\t\tif (matches(value)) {\n\t\t\tfound = true;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\t++i;\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn (found ? i : -1);\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function find<A>(iter: Iterator<A>, matches: (value: A) => boolean): A | undefined {\n\tlet output;\n\n\titer((value) => {\n\t\tif (matches(value)) {\n\t\t\toutput = value;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn output;\n}\n\n/**\n * [A description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function findMap<A, B>(iter: Iterator<A>, matches: (value: A) => B | null): B | undefined {\n\tlet output;\n\n\titer((value) => {\n\t\tconst v = matches(value);\n\n\t\tif (v !== null) {\n\t\t\toutput = v;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn output;\n}\n\n/**\n * [iter description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function contains<A>(iter: Iterator<A>, matches: (value: A) => boolean): boolean {\n\tlet output = false;\n\n\titer((value) => {\n\t\tif (matches(value)) {\n\t\t\toutput = true;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n\n\treturn output;\n}\n\n/**\n * [A description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport function foldl<A, B>(iter: Iterator<A>, init: B, fn: (state: B, value: A) => B): B {\n\titer((value) => {\n\t\tinit = fn(init, value);\n\t\treturn true;\n\t});\n\n\treturn init;\n}\n\n/**\n * [min2 description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param left [description]\n * @param right [description]\n * @return [description]\n */\nfunction min2(left: number | null, right: number): number {\n\tif (left == null || right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * [min description]\n *\n * @ignore Exclude from docs\n * @todo Verify that this works correctly\n * @todo Description\n * @param a [description]\n * @return [description]\n */\nexport function min(a: Iterator<number>): number | null {\n\treturn foldl(a, null, min2);\n}\n\n/**\n * [max2 description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param left [description]\n * @param right [description]\n * @return [description]\n */\nfunction max2(left: number | null, right: number): number {\n\tif (left == null || right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * [max description]\n *\n * @ignore Exclude from docs\n * @todo Verify that this works correctly\n * @todo Description\n * @param a [description]\n * @return [description]\n */\nexport function max(a: Iterator<number>): number | null {\n\treturn foldl(a, null, max2);\n}\n\n\n/**\n * [join description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param iter [description]\n * @param separator [description]\n * @return [description]\n */\nexport function join(iter: Iterator<string>, separator: string = \"\"): string {\n\tlet first = true;\n\tlet init = \"\";\n\n\titer((value) => {\n\t\tif (first) {\n\t\t\tfirst = false;\n\n\t\t} else {\n\t\t\tinit += separator;\n\t\t}\n\n\t\tinit += value;\n\n\t\treturn true;\n\t});\n\n\treturn init;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class ListIterator<T extends IClone<T>> {\n\tprivate _listCopy!: Array<T>;\n\tprivate _create: () => T;\n\n\tpublic list: Iterable<T>;\n\n\t// flag specifies if iterator should create new list item if it is reqested for a nextItem but there is no more left in the list\n\tpublic createNewItems: boolean = false;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param list [description]\n\t * @param create [description]\n\t */\n\tconstructor(list: Iterable<T>, create: () => T) {\n\t\tthis.list = list;\n\t\tthis._create = create;\n\t\tthis.reset();\n\t}\n\n\treset() {\n\t\tthis._listCopy = toArray(this.list.iterator());\n\t}\n\n\tclear() {\n\t\tthis._listCopy.length = 0;\n\t}\n\n\tgetFirst(): $type.Optional<T> {\n\t\treturn this.returnItem(0);\n\t}\n\n\tgetLast(): $type.Optional<T> {\n\t\treturn this.returnItem(this._listCopy.length - 1);\n\t}\n\n\tfind(fn: (value: T) => boolean): $type.Optional<T> {\n\t\tlet index: number = $array.findIndex(this._listCopy, fn);\n\n\t\tif (index !== -1) {\n\t\t\tlet item = this._listCopy[index];\n\t\t\t// TODO use removeIndex instead ?\n\t\t\t$array.remove(this._listCopy, item);\n\t\t\treturn item;\n\n\t\t} else {\n\t\t\treturn this.getLast();\n\t\t}\n\t}\n\n\tremoveItem(item: T): boolean {\n\t\treturn $array.remove(this._listCopy, item);\n\t}\n\n\tprotected returnItem(index: number): $type.Optional<T> {\n\t\tif (index >= 0 && index < this._listCopy.length) {\n\t\t\tlet item = this._listCopy[index];\n\t\t\t// TODO use removeIndex instead ?\n\t\t\t$array.remove(this._listCopy, item);\n\t\t\treturn item;\n\n\t\t} else if (this.createNewItems) {\n\t\t\treturn this._create();\n\t\t}\n\t}\n\n\titerator() {\n\t\treturn fromArray(this._listCopy);\n\t}\n}\n","/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Color, color } from \"../utils/Color\"\r\n\r\n/**\r\n * Defines a class that holds default properties for new SVG elements\r\n */\r\nexport class SVGDefaults {\r\n\tstatic opacity: number = 1;\r\n\tstatic strokeOpacity: number = 1;\r\n\tstatic strokeWidth: number = 1;\r\n\tstatic fillOpacity: number = 1;\r\n\tstatic fill: Color = color(\"#000000\");\r\n\tstatic stroke: Color = color(\"#000000\");\r\n\tstatic focusable: boolean = undefined;\r\n\tstatic tabindex: number = 0;\r\n}\r\n","/**\r\n * [[AMElement]] represents any SVG element and related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available SVG attributes.\r\n */\r\nexport type SVGAttribute =\r\n\t\"accent-height\" | \"accumulate\" | \"additive\" | \"alignment-baseline\" | \"allowReorder\" | \"alphabetic\" | \"amplitude\" | \"arabic-form\" | \"aria-checked\" | \"aria-describedby\" | \"aria-hidden\" | \"aria-label\" | \"aria-labelledby\" | \"aria-live\" | \"aria-controls\" | \"aria-orientation\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"ascent\" | \"attributeName\" | \"attributeType\" | \"autoReverse\" | \"azimuth\" | \"baseFrequency\" | \"baseline-shift\" | \"baseProfile\" | \"bbox\" | \"begin\" | \"bias\" | \"by\" | \"calcMode\" | \"cap-height\" | \"class\" | \"clip\" | \"clipPathUnits\" | \"clip-path\" | \"clip-rule\" | \"color\" | \"color-interpolation\" | \"color-interpolation-filters\" | \"color-profile\" | \"color-rendering\" | \"contentScriptType\" | \"contentStyleType\" | \"cursor\" | \"cx\" | \"cy\" | \"d\" | \"decelerate\" | \"descent\" | \"diffuseConstant\" | \"direction\" | \"display\" | \"divisor\" | \"dominant-baseline\" | \"dur\" | \"dx\" | \"dy\" | \"edgeMode\" | \"elevation\" | \"enable-background\" | \"end\" | \"exponent\" | \"externalResourcesRequired\" | \"fill\" | \"fill-opacity\" | \"fill-rule\" | \"filter\" | \"filterRes\" | \"filterUnits\" | \"flood-color\" | \"flood-opacity\" | \"focusable\" | \"font-family\" | \"font-size\" | \"font-size-adjust\" | \"font-stretch\" | \"font-style\" | \"font-variant\" | \"font-weight\" | \"format\" | \"from\" | \"fx\" | \"fy\" | \"g1\" | \"g2\" | \"glyph-name\" | \"glyph-orientation-horizontal\" | \"glyph-orientation-vertical\" | \"glyphRef\" | \"gradientTransform\" | \"gradientUnits\" | \"hanging\" | \"height\" | \"href\" | \"horiz-adv-x\" | \"horiz-origin-x\" | \"id\" | \"ideographic\" | \"image-rendering\" | \"in\" | \"in2\" | \"intercept\" | \"k\" | \"k1\" | \"k2\" | \"k3\" | \"k4\" | \"kernelMatrix\" | \"kernelUnitLength\" | \"kerning\" | \"keyPoints\" | \"keySplines\" | \"keyTimes\" | \"lang\" | \"lengthAdjust\" | \"letter-spacing\" | \"lighting-color\" | \"limitingConeAngle\" | \"local\" | \"marker-end\" | \"marker-mid\" | \"marker-start\" | \"markerHeight\" | \"markerUnits\" | \"markerWidth\" | \"mask\" | \"maskContentUnits\" | \"maskUnits\" | \"mathematical\" | \"max\" | \"media\" | \"method\" | \"min\" | \"mode\" | \"name\" | \"numOctaves\" | \"offset\" | \"onabort\" | \"onactivate\" | \"onbegin\" | \"onclick\" | \"onend\" | \"onerror\" | \"onfocusin\" | \"onfocusout\" | \"onload\" | \"onmousedown\" | \"onmousemove\" | \"onmouseout\" | \"onmouseover\" | \"onmouseup\" | \"onrepeat\" | \"onresize\" | \"onscroll\" | \"onunload\" | \"onzoom\" | \"opacity\" | \"operator\" | \"order\" | \"orient\" | \"orientation\" | \"origin\" | \"overflow\" | \"overline-position\" | \"overline-thickness\" | \"panose-1\" | \"paint-order\" | \"pathLength\" | \"patternContentUnits\" | \"patternTransform\" | \"patternUnits\" | \"pointer-events\" | \"points\" | \"pointsAtX\" | \"pointsAtY\" | \"pointsAtZ\" | \"preserveAlpha\" | \"preserveAspectRatio\" | \"primitiveUnits\" | \"r\" | \"radius\" | \"refX\" | \"refY\" | \"rendering-intent\" | \"repeatCount\" | \"repeatDur\" | \"requiredExtensions\" | \"requiredFeatures\" | \"restart\" | \"result\" | \"role\" | \"rotate\" | \"rx\" | \"ry\" | \"scale\" | \"seed\" | \"shape-rendering\" | \"slope\" | \"spacing\" | \"specularConstant\" | \"specularExponent\" | \"speed\" | \"spreadMethod\" | \"startOffset\" | \"stdDeviation\" | \"stemh\" | \"stemv\" | \"stitchTiles\" | \"stop-color\" | \"stop-opacity\" | \"strikethrough-position\" | \"strikethrough-thickness\" | \"string\" | \"stroke\" | \"stroke-dasharray\" | \"stroke-dashoffset\" | \"stroke-linecap\" | \"stroke-linejoin\" | \"stroke-miterlimit\" | \"stroke-opacity\" | \"stroke-width\" | \"style\" | \"surfaceScale\" | \"systemLanguage\" | \"tabindex\" | \"tableValues\" | \"target\" | \"targetX\" | \"targetY\" | \"text-anchor\" | \"text-decoration\" | \"text-rendering\" | \"textLength\" | \"to\" | \"transform\" | \"type\" | \"u1\" | \"u2\" | \"underline-position\" | \"underline-thickness\" | \"unicode\" | \"unicode-bidi\" | \"unicode-range\" | \"units-per-em\" | \"v-alphabetic\" | \"v-hanging\" | \"v-ideographic\" | \"v-mathematical\" | \"values\" | \"version\" | \"vert-adv-y\" | \"vert-origin-x\" | \"vert-origin-y\" | \"viewBox\" | \"viewTarget\" | \"visibility\" | \"width\" | \"widths\" | \"word-spacing\" | \"writing-mode\" | \"x\" | \"x-height\" | \"x1\" | \"x2\" | \"xChannelSelector\" | \"xlink:actuate\" | \"xlink:arcrole\" | \"xlink:href\" | \"xlink:role\" | \"xlink:show\" | \"xlink:title\" | \"xlink:type\" | \"xml:base\" | \"xml:lang\" | \"xml:space\" | \"y\" | \"y1\" | \"y2\" | \"yChannelSelector\" | \"z\" | \"zoomAndPan\";\r\n\r\n/**\r\n * Represents an interface for SVG attributes.\r\n *\r\n * This is a collection of all properties that an SVG element can have.\r\n */\r\nexport interface ISVGAttribute {\r\n\t\"accent-height\"?: any;\r\n\t\"accumulate\"?: any;\r\n\t\"additive\"?: any;\r\n\t\"alignment-baseline\"?: any;\r\n\t\"allowReorder\"?: any;\r\n\t\"alphabetic\"?: any;\r\n\t\"amplitude\"?: any;\r\n\t\"arabic-form\"?: any;\r\n\t\"aria-checked\"?: any;\r\n\t\"aria-describedby\"?: any;\r\n\t\"aria-hidden\"?: any;\r\n\t\"aria-label\"?: any;\r\n\t\"aria-labelledby\"?: any;\r\n\t\"aria-live\"?: any;\r\n\t\"aria-controls\"?: any;\r\n\t\"aria-orientation\"?: any;\r\n\t\"aria-valuemax\"?: any;\r\n\t\"aria-valuemin\"?: any;\r\n\t\"aria-valuenow\"?: any;\r\n\t\"aria-valuetext\"?: any;\r\n\t\"ascent\"?: any;\r\n\t\"attributeName\"?: any;\r\n\t\"attributeType\"?: any;\r\n\t\"autoReverse\"?: any;\r\n\t\"azimuth\"?: any;\r\n\t\"baseFrequency\"?: any;\r\n\t\"baseline-shift\"?: any;\r\n\t\"baseProfile\"?: any;\r\n\t\"bbox\"?: any;\r\n\t\"begin\"?: any;\r\n\t\"bias\"?: any;\r\n\t\"by\"?: any;\r\n\t\"calcMode\"?: any;\r\n\t\"cap-height\"?: any;\r\n\t\"class\"?: any;\r\n\t\"clip\"?: any;\r\n\t\"clipPathUnits\"?: any;\r\n\t\"clip-path\"?: any;\r\n\t\"clip-rule\"?: any;\r\n\t\"color\"?: any;\r\n\t\"color-interpolation\"?: any;\r\n\t\"color-interpolation-filters\"?: any;\r\n\t\"color-profile\"?: any;\r\n\t\"color-rendering\"?: any;\r\n\t\"contentScriptType\"?: any;\r\n\t\"contentStyleType\"?: any;\r\n\t\"cursor\"?: any;\r\n\t\"cx\"?: any;\r\n\t\"cy\"?: any;\r\n\t\"d\"?: any;\r\n\t\"decelerate\"?: any;\r\n\t\"descent\"?: any;\r\n\t\"diffuseConstant\"?: any;\r\n\t\"direction\"?: any;\r\n\t\"display\"?: any;\r\n\t\"divisor\"?: any;\r\n\t\"dominant-baseline\"?: any;\r\n\t\"dur\"?: any;\r\n\t\"dx\"?: any;\r\n\t\"dy\"?: any;\r\n\t\"edgeMode\"?: any;\r\n\t\"elevation\"?: any;\r\n\t\"enable-background\"?: any;\r\n\t\"end\"?: any;\r\n\t\"exponent\"?: any;\r\n\t\"externalResourcesRequired\"?: any;\r\n\t\"fill\"?: any;\r\n\t\"fill-opacity\"?: any;\r\n\t\"fill-rule\"?: any;\r\n\t\"filter\"?: any;\r\n\t\"filterRes\"?: any;\r\n\t\"filterUnits\"?: any;\r\n\t\"flood-color\"?: any;\r\n\t\"flood-opacity\"?: any;\r\n\t\"focusable\"?: any;\r\n\t\"font-family\"?: any;\r\n\t\"font-size\"?: any;\r\n\t\"font-size-adjust\"?: any;\r\n\t\"font-stretch\"?: any;\r\n\t\"font-style\"?: any;\r\n\t\"font-variant\"?: any;\r\n\t\"font-weight\"?: any;\r\n\t\"format\"?: any;\r\n\t\"from\"?: any;\r\n\t\"fx\"?: any;\r\n\t\"fy\"?: any;\r\n\t\"g1\"?: any;\r\n\t\"g2\"?: any;\r\n\t\"glyph-name\"?: any;\r\n\t\"glyph-orientation-horizontal\"?: any;\r\n\t\"glyph-orientation-vertical\"?: any;\r\n\t\"glyphRef\"?: any;\r\n\t\"gradientTransform\"?: any;\r\n\t\"gradientUnits\"?: any;\r\n\t\"hanging\"?: any;\r\n\t\"height\"?: any;\r\n\t\"href\"?: any;\r\n\t\"horiz-adv-x\"?: any;\r\n\t\"horiz-origin-x\"?: any;\r\n\t\"id\"?: any;\r\n\t\"ideographic\"?: any;\r\n\t\"image-rendering\"?: any;\r\n\t\"in\"?: any;\r\n\t\"in2\"?: any;\r\n\t\"intercept\"?: any;\r\n\t\"k\"?: any;\r\n\t\"k1\"?: any;\r\n\t\"k2\"?: any;\r\n\t\"k3\"?: any;\r\n\t\"k4\"?: any;\r\n\t\"kernelMatrix\"?: any;\r\n\t\"kernelUnitLength\"?: any;\r\n\t\"kerning\"?: any;\r\n\t\"keyPoints\"?: any;\r\n\t\"keySplines\"?: any;\r\n\t\"keyTimes\"?: any;\r\n\t\"lang\"?: any;\r\n\t\"lengthAdjust\"?: any;\r\n\t\"letter-spacing\"?: any;\r\n\t\"lighting-color\"?: any;\r\n\t\"limitingConeAngle\"?: any;\r\n\t\"local\"?: any;\r\n\t\"marker-end\"?: any;\r\n\t\"marker-mid\"?: any;\r\n\t\"marker-start\"?: any;\r\n\t\"markerHeight\"?: any;\r\n\t\"markerUnits\"?: any;\r\n\t\"markerWidth\"?: any;\r\n\t\"mask\"?: any;\r\n\t\"maskContentUnits\"?: any;\r\n\t\"maskUnits\"?: any;\r\n\t\"mathematical\"?: any;\r\n\t\"max\"?: any;\r\n\t\"media\"?: any;\r\n\t\"method\"?: any;\r\n\t\"min\"?: any;\r\n\t\"mode\"?: any;\r\n\t\"name\"?: any;\r\n\t\"numOctaves\"?: any;\r\n\t\"offset\"?: any;\r\n\t\"onabort\"?: any;\r\n\t\"onactivate\"?: any;\r\n\t\"onbegin\"?: any;\r\n\t\"onclick\"?: any;\r\n\t\"onend\"?: any;\r\n\t\"onerror\"?: any;\r\n\t\"onfocusin\"?: any;\r\n\t\"onfocusout\"?: any;\r\n\t\"onload\"?: any;\r\n\t\"onmousedown\"?: any;\r\n\t\"onmousemove\"?: any;\r\n\t\"onmouseout\"?: any;\r\n\t\"onmouseover\"?: any;\r\n\t\"onmouseup\"?: any;\r\n\t\"onrepeat\"?: any;\r\n\t\"onresize\"?: any;\r\n\t\"onscroll\"?: any;\r\n\t\"onunload\"?: any;\r\n\t\"onzoom\"?: any;\r\n\t\"opacity\"?: any;\r\n\t\"operator\"?: any;\r\n\t\"order\"?: any;\r\n\t\"orient\"?: any;\r\n\t\"orientation\"?: any;\r\n\t\"origin\"?: any;\r\n\t\"overflow\"?: any;\r\n\t\"overline-position\"?: any;\r\n\t\"overline-thickness\"?: any;\r\n\t\"panose-1\"?: any;\r\n\t\"paint-order\"?: any;\r\n\t\"path\"?: any;\r\n\t\"pathLength\"?: any;\r\n\t\"patternContentUnits\"?: any;\r\n\t\"patternTransform\"?: any;\r\n\t\"patternUnits\"?: any;\r\n\t\"pointer-events\"?: any;\r\n\t\"points\"?: any;\r\n\t\"pointsAtX\"?: any;\r\n\t\"pointsAtY\"?: any;\r\n\t\"pointsAtZ\"?: any;\r\n\t\"preserveAlpha\"?: any;\r\n\t\"preserveAspectRatio\"?: any;\r\n\t\"primitiveUnits\"?: any;\r\n\t\"r\"?: any;\r\n\t\"radius\"?: any;\r\n\t\"refX\"?: any;\r\n\t\"refY\"?: any;\r\n\t\"rendering-intent\"?: any;\r\n\t\"repeatCount\"?: any;\r\n\t\"repeatDur\"?: any;\r\n\t\"requiredExtensions\"?: any;\r\n\t\"requiredFeatures\"?: any;\r\n\t\"restart\"?: any;\r\n\t\"result\"?: any;\r\n\t\"role\"?: any;\r\n\t\"rotate\"?: any;\r\n\t\"rx\"?: any;\r\n\t\"ry\"?: any;\r\n\t\"scale\"?: any;\r\n\t\"seed\"?: any;\r\n\t\"shape-rendering\"?: any;\r\n\t\"slope\"?: any;\r\n\t\"spacing\"?: any;\r\n\t\"specularConstant\"?: any;\r\n\t\"specularExponent\"?: any;\r\n\t\"speed\"?: any;\r\n\t\"spreadMethod\"?: any;\r\n\t\"startOffset\"?: any;\r\n\t\"stdDeviation\"?: any;\r\n\t\"stemh\"?: any;\r\n\t\"stemv\"?: any;\r\n\t\"stitchTiles\"?: any;\r\n\t\"stop-color\"?: any;\r\n\t\"stop-opacity\"?: any;\r\n\t\"strikethrough-position\"?: any;\r\n\t\"strikethrough-thickness\"?: any;\r\n\t\"string\"?: any;\r\n\t\"stroke\"?: any;\r\n\t\"stroke-dasharray\"?: any;\r\n\t\"stroke-dashoffset\"?: any;\r\n\t\"stroke-linecap\"?: any;\r\n\t\"stroke-linejoin\"?: any;\r\n\t\"stroke-miterlimit\"?: any;\r\n\t\"stroke-opacity\"?: any;\r\n\t\"stroke-width\"?: any;\r\n\t\"style\"?: any;\r\n\t\"surfaceScale\"?: any;\r\n\t\"systemLanguage\"?: any;\r\n\t\"tabindex\"?: any;\r\n\t\"tableValues\"?: any;\r\n\t\"target\"?: any;\r\n\t\"targetX\"?: any;\r\n\t\"targetY\"?: any;\r\n\t\"text-anchor\"?: any;\r\n\t\"text-decoration\"?: any;\r\n\t\"text-rendering\"?: any;\r\n\t\"textLength\"?: any;\r\n\t\"to\"?: any;\r\n\t\"transform\"?: any;\r\n\t\"type\"?: any;\r\n\t\"u1\"?: any;\r\n\t\"u2\"?: any;\r\n\t\"underline-position\"?: any;\r\n\t\"underline-thickness\"?: any;\r\n\t\"unicode\"?: any;\r\n\t\"unicode-bidi\"?: any;\r\n\t\"unicode-range\"?: any;\r\n\t\"units-per-em\"?: any;\r\n\t\"v-alphabetic\"?: any;\r\n\t\"v-hanging\"?: any;\r\n\t\"v-ideographic\"?: any;\r\n\t\"v-mathematical\"?: any;\r\n\t\"values\"?: any;\r\n\t\"version\"?: any;\r\n\t\"vert-adv-y\"?: any;\r\n\t\"vert-origin-x\"?: any;\r\n\t\"vert-origin-y\"?: any;\r\n\t\"viewBox\"?: any;\r\n\t\"viewTarget\"?: any;\r\n\t\"visibility\"?: any;\r\n\t\"width\"?: any;\r\n\t\"widths\"?: any;\r\n\t\"word-spacing\"?: any;\r\n\t\"writing-mode\"?: any;\r\n\t\"x\"?: any;\r\n\t\"x-height\"?: any;\r\n\t\"x1\"?: any;\r\n\t\"x2\"?: any;\r\n\t\"xChannelSelector\"?: any;\r\n\t\"xlink:actuate\"?: any;\r\n\t\"xlink:arcrole\"?: any;\r\n\t\"xlink:href\"?: any;\r\n\t\"xlink:role\"?: any;\r\n\t\"xlink:show\"?: any;\r\n\t\"xlink:title\"?: any;\r\n\t\"xlink:type\"?: any;\r\n\t\"xml:base\"?: any;\r\n\t\"xml:lang\"?: any;\r\n\t\"xml:space\"?: any;\r\n\t\"y\"?: any;\r\n\t\"y1\"?: any;\r\n\t\"y2\"?: any;\r\n\t\"yChannelSelector\"?: any;\r\n\t\"z\"?: any;\r\n\t\"zoomAndPan\"?: any;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all SVG elements. Provides low-level DOM functionality.\r\n *\r\n * All visual elements extend this class.\r\n */\r\nexport class AMElement implements IDisposer {\r\n\r\n\t/**\r\n\t * Indicates if the element was already disposed.\r\n\t */\r\n\tprotected _isDisposed: boolean = false;\r\n\r\n\t/**\r\n\t * An SVG node of the element.\r\n\t */\r\n\tpublic node: SVGSVGElement;\r\n\r\n\t/**\r\n\t * Current X coordinate.\r\n\t */\r\n\tprivate _x: number = 0;\r\n\r\n\t/**\r\n\t * Current Y coordinate.\r\n\t */\r\n\tprivate _y: number = 0;\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tprivate _rotationY: number = 0;\t\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tprivate _rotationX: number = 0;\t\t\r\n\r\n\t/**\r\n\t * Current rotation.\r\n\t */\r\n\tprivate _rotation: number = 0;\r\n\r\n\t/**\r\n\t * Current scale.\r\n\t */\r\n\tprivate _scale: number = 1;\r\n\r\n\t/**\r\n\t * current value of transfrom string\r\n\t */\r\n\tprivate _transformString:string;\r\n\r\n\t/**\r\n\t * Constructor creates a new element or uses the one that was passed in.\r\n\t *\r\n\t * @param element Element reference node type\r\n\t */\r\n\tconstructor(element: string | SVGSVGElement) {\r\n\t\tif (typeof element === \"string\") {\r\n\t\t\tthis.node = <SVGSVGElement>document.createElementNS($dom.SVGNS, element);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.node = element;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes element's node from DOM.\r\n\t */\r\n\tpublic removeNode(): void {\r\n\t\tif (this.node) {\r\n\t\t\tif (this.node.parentNode) {\r\n\t\t\t\tthis.node.parentNode.removeChild(this.node);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `transform` attribute of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Transform attribute value\r\n\t */\r\n\tpublic get transformString(): $type.Optional<string> {\r\n\t\tif (this.node) {\r\n\r\n\t\t\treturn this._transformString;\r\n\t\t\t/*\r\n\t\t\tconst value = this.node.getAttribute(\"transform\");\r\n\r\n\t\t\tif (value !== null) {\r\n\t\t\t\treturn value;\r\n\t\t\t}*/\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appply position, rotation and scale properties via elemen's `transform`\r\n\t * property\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic transform(): void {\r\n\r\n\t\tlet transfromString = \"translate(\" + this._x + \",\" + this._y + \")\";\r\n\r\n\t\tif (this._scale != 1) {\r\n\t\t\ttransfromString += ((transfromString ? \" \" : \"\") + \"scale(\" + this._scale + \")\");\r\n\t\t}\r\n\r\n\t\tif (this._rotation != 0) {\r\n\t\t\tlet rotateString = \"rotate(\" + this._rotation + \")\";\r\n\r\n\t\t\tif(this._rotationX && this._rotationY){\r\n\t\t\t\trotateString = \"rotate(\" + this._rotation + \" \" + this._rotationX + \" \" + this._rotationY + \")\";\r\n\t\t\t}\r\n\r\n\t\t\ttransfromString += ((transfromString ? \" \" : \"\") + rotateString);\r\n\t\t}\r\n\r\n\t\tthis._transformString = transfromString;\r\n\r\n\t\tthis.node.setAttribute(\"transform\", transfromString);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns bounding box of the element.\r\n\t *\r\n\t * ATTENTION: Bounding box calculations are extremely costly so should be\r\n\t * used sparingly and cached whenever possible.\r\n\t *\r\n\t * @return Bounding rectangle\r\n\t */\r\n\tpublic getBBox(): IRectangle {\r\n\t\tlet bbox: IRectangle = {\r\n\t\t\twidth: 0,\r\n\t\t\theight: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\t// FF would fail if getBBox() is called without node added to parent\r\n\t\tif (this.node && this.node.parentNode) {\r\n\t\t\t\r\n\t\t\ttry { // again for ff. TODO: check if this doesn't slow down\r\n\t\t\t\tlet svgbbox = this.node.getBBox();\r\n\t\t\t\tbbox.x = svgbbox.x;\r\n\t\t\t\tbbox.y = svgbbox.y;\r\n\t\t\t\tbbox.width = svgbbox.width;\r\n\t\t\t\tbbox.height = svgbbox.height;\r\n\t\t\t} catch (err) { }\r\n\t\t}\r\n\r\n\t\treturn bbox;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the element to new coordinates.\r\n\t *\r\n\t * @param x  Target X\r\n\t * @param y  Target Y\r\n\t */\r\n\tpublic moveTo(point: IPoint): void {\r\n\t\tif (point) {\r\n\t\t\tlet x: number = point.x;\r\n\t\t\tlet y: number = point.y;\r\n\t\t\tif (this._x != x || this._y != y) {\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis.transform();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Element's SVG contents.\r\n\t *\r\n\t * @param value Contents\r\n\t */\r\n\tpublic set content(value: string) {\r\n\t\t// @todo Do not use `innerHTML` as this is not reliable and will not work on all browsers\r\n\t\tthis.node.innerHTML = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's contents as SVG markup.\r\n\t *\r\n\t * @return Contents\r\n\t */\r\n\tpublic get content(): string {\r\n\t\t// @todo Do not use `innerHTML` as this is not reliable and will not work on all browsers\r\n\t\treturn this.node.innerHTML || \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Text contents of the SVG element.\r\n\t *\r\n\t * @param value Text contents\r\n\t */\r\n\tpublic set textContent(value: string) {\r\n\t\tthis.node.textContent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Text contents\r\n\t */\r\n\tpublic get textContent(): string {\r\n\t\treturn this.node.textContent || \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Element's X position in pixels.\r\n\t *\r\n\t * @param value  X coordinate (px)\r\n\t */\r\n\tpublic set x(value: number) {\r\n\t\tif (this._x != value) {\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return X coordinate (px)\r\n\t */\r\n\tpublic get x(): number {\r\n\t\treturn this._x;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's Y position in pixels.\r\n\t *\r\n\t * @param value Y coordinate (px)\r\n\t */\r\n\tpublic set y(value: number) {\r\n\t\tif (this._y != value) {\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y coordinate (px)\r\n\t */\r\n\tpublic get y(): number {\r\n\t\treturn this._y;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's rotation in degrees.\r\n\t *\r\n\t * @param value Rotation\r\n\t */\r\n\tpublic set rotation(angle: number) {\r\n\t\tif (this._rotation != angle) {\r\n\t\t\tthis._rotation = angle;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get rotation(): number {\r\n\t\treturn this._rotation;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic set rotationX(x: number) {\r\n\t\tif (this._rotationX != x) {\r\n\t\t\tthis._rotationX = x;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\t\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get rotationX():number{\r\n\t\treturn this._rotationX;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic set rotationY(y: number) {\r\n\t\tif (this._rotationY != y) {\r\n\t\t\tthis._rotationY = y;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\t\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get rotationY():number{\r\n\t\treturn this._rotationY;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Element's scale where 1 is original size.\r\n\t *\r\n\t * Setting to 0.5 will reduce element's size by 50%, 2 will make element\r\n\t * twice as large, etc.\r\n\t *\r\n\t * @param value Scale\r\n\t */\r\n\tpublic set scale(value: number) {\r\n\t\tif (this._scale != value) {\r\n\t\t\tthis._scale = value;\r\n\t\t\tthis.transform();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Scale\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this._scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an attribute from element.\r\n\t *\r\n\t * @param attribute  Attribute to remove\r\n\t */\r\n\tpublic removeAttr(attribute: string): void {\r\n\t\tthis.node.removeAttribute(attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a set of attributes on a element.\r\n\t *\r\n\t * @param attributes  An object with attribute names (key) and values\r\n\t * @return The same element\r\n\t */\r\n\tpublic attr(attributes: ISVGAttribute): AMElement {\r\n\t\t$object.each(attributes, (attributeName, attributeValue) => {\r\n\t\t\tif (!$type.hasValue(attributeValue)) {\r\n\t\t\t\tthis.node.removeAttribute(attributeName);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is for performance testing\r\n\t\t\t\t//if(attributeValue == this.node.getAttribute(attributeName)){\r\n\t\t\t\t//\tconsole.log(attributeName, attributeValue)\r\n\t\t\t\t//}\r\n\t\t\t\tthis.node.setAttribute(attributeName, attributeValue);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a value of a node attribute.\r\n\t *\r\n\t * @param attribute  Attribute name\r\n\t * @return Attribute value\r\n\t */\r\n\tpublic getAttr(attribute: string): string | null {\r\n\t\treturn this.node.getAttribute(attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a single attribute of the element's node using namesspace.\r\n\t *\r\n\t * @param ns         Namespace\r\n\t * @param attribute  Attribute\r\n\t * @param value      Value\r\n\t * @return The same element\r\n\t */\r\n\tpublic attrNS(ns: string, attribute: string, value: string): AMElement {\r\n\t\tthis.node.setAttributeNS(ns, attribute, value);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a namespaced attribute value from node.\r\n\t *\r\n\t * @param ns         Namespace\r\n\t * @param attribute  Attribute\r\n\t * @return Attribute value\r\n\t */\r\n\tpublic getAttrNS(ns: string, attribute: string): string {\r\n\t\treturn this.node.getAttributeNS(ns, attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes `style` attribute from node.\r\n\t *\r\n\t * @param attribute  Attribute to remove\r\n\t */\r\n\tpublic removeStyle(attribute: string): void {\r\n\t\t// @todo Review because it's a bit messy and maybe not needed (pratically not used)\r\n\t\t(<any>this.node.style)[attribute] = null;\r\n\t\tdelete (<any>this.node.style)[attribute];\r\n\t}\r\n\r\n\t/**\r\n\t * Returns style attribute value.\r\n\t *\r\n\t * @param attribute  Style attribute value\r\n\t * @return Attribute value\r\n\t */\r\n\tpublic getStyle(attribute: string): string {\r\n\t\t// @todo Review because it's a bit messy and maybe not needed (pratically not used)\r\n\t\treturn (<any>this.node.style)[attribute];\r\n\t}\r\n\r\n\t/**\r\n\t * Adds style attributes to element's node.\r\n\t *\r\n\t * @param attributes  Object containing attribute: value pairs\r\n\t * @return The same element\r\n\t */\r\n\tpublic addStyle(attributes: Object): AMElement {\r\n\t\t// @todo Review because it's a bit messy and maybe not needed (pratically not used)\r\n\t\t$object.each(attributes, (attributeName, attributeValue) => {\r\n\t\t\tif (!$type.hasValue(attributeValue)) {\r\n\t\t\t\tthis.removeStyle(attributeName);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.node.style)[attributeName] = attributeValue;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a class to element.\r\n\t *\r\n\t * @param name  Class name\r\n\t */\r\n\tpublic addClass(name: string): void {\r\n\t\t$dom.addClass(this.node, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a class from element.\r\n\t *\r\n\t * @param name Class name\r\n\t */\r\n\tpublic removeClass(name: string): void {\r\n\t\t$dom.removeClass(this.node, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a class name on element.\r\n\t *\r\n\t * @param name  Class name\r\n\t */\r\n\tpublic setClass(name: string): void {\r\n\t\tthis.node.setAttribute(\"class\", name);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all element's child nodes, basically leaving it empty.\r\n\t */\r\n\tpublic removeChildNodes(): void {\r\n\t\t// remove all children\r\n\t\twhile (this.node.childNodes.length > 0) {\r\n\t\t\tthis.node.removeChild(this.node.firstChild!);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Was this element already been disposed?\r\n\t *\r\n\t * @return Disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._isDisposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes element.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.removeNode();\r\n\t}\r\n\r\n}\r\n","import * as $array from \"./Array\";\nimport * as $log from \"./Log\";\n\n\ninterface Sensor {\n\taddTarget(target: Element, callback: () => void): void;\n\tremoveTarget(target: Element): void;\n}\n\n\ndeclare const ResizeObserver: any;\n\nclass Native implements Sensor {\n\tprivate _observer: any;\n\tprivate _targets: Array<{ target: Element, callback: () => void }> = [];\n\n\tconstructor() {\n\t\tthis._observer = new ResizeObserver((entries: Array<any>) => {\n\t\t\t$array.each(entries, (entry) => {\n\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\tif (x.target === entry.target) {\n\t\t\t\t\t\tx.callback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tthis._observer.observe(target, { box: \"content-box\" });\n\t\tthis._targets.push({ target, callback });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\tthis._observer.unobserve(target);\n\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\t}\n}\n\n\nclass Raf implements Sensor {\n\tpublic static delay: number = 200;\n\n\tprivate _timer: number | undefined;\n\tprivate _targets: Array<{ target: Element, callback: () => void, size: ClientRect | DOMRect }> = [];\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tif (this._targets.length === 0) {\n\t\t\tlet lastTime: number | null = null;\n\n\t\t\tconst loop = () => {\n\t\t\t\tconst currentTime = Date.now();\n\n\t\t\t\tif (lastTime === null || currentTime > (lastTime + Raf.delay)) {\n\t\t\t\t\tlastTime = currentTime;\n\n\t\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\t\tlet newSize = x.target.getBoundingClientRect();\n\n\t\t\t\t\t\tif (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n\t\t\t\t\t\t\tx.size = newSize;\n\t\t\t\t\t\t\tx.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t\t};\n\n\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t}\n\n\t\tlet size = target.getBoundingClientRect();\n\t\tthis._targets.push({ target, callback, size });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\n\t\tif (this._targets.length === 0) {\n\t\t\tcancelAnimationFrame(this._timer);\n\t\t}\n\t}\n}\n\n\nlet observer: Sensor | null = null;\n\nfunction makeSensor(): Sensor {\n\tif (observer === null) {\n\t\tif (typeof ResizeObserver !== \"undefined\") {\n\t\t\tobserver = new Native();\n\n\t\t} else {\n\t\t\tobserver = new Raf();\n\t\t}\n\t}\n\n\treturn observer;\n}\n\nexport class ResizeSensor {\n\tprivate _sensor: Sensor;\n\tprivate _element: Element;\n\tprivate _disposed: boolean = false;\n\n\tconstructor(element: Element, callback: () => void) {\n\t\tthis._sensor = makeSensor();\n\t\tthis._element = element;\n\t\tthis._sensor.addTarget(element, callback);\n\t}\n\n\tpublic isDisposed() {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._sensor.removeTarget(this._element);\n\t\t}\n\t}\n\n\tpublic get sensor(): Sensor {\n\t\treturn this._sensor;\n\t}\n\n\t/**\n\t * Deprecated: do not use.\n\t *\n\t * @ignore Exclude from docs\n\t */\n\tpublic reset() {\n\t\t$log.warn(\"resizeSensor.reset() is no longer needed and can be removed\");\n\t}\n}\n","/**\r\n * This functionality is related to the HTML wrapper that houses `<svg>` tag.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { Popup } from \"../elements/Popup\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { ListTemplate, ListDisposer } from \"../utils/List\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { ResizeSensor } from \"../utils/ResizeSensor\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * A array of all SVG Containers (one SVG container per chart instance).\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const svgContainers: Array<SVGContainer> = [];\r\n\r\n/**\r\n * A class used to create an HTML wrapper for the SVG contents.\r\n */\r\nexport class SVGContainer implements IDisposer {\r\n\r\n\t/**\r\n\t * Indicates if this object has already been deleted. Any\r\n\t * destruction/disposal code should take this into account when deciding\r\n\t * wheter to run potentially costly disposal operations if they already have\r\n\t * been run.\r\n\t */\r\n\tprotected _disposed: boolean = false;\r\n\r\n\t/**\r\n\t * Width of HTML element.\r\n\t */\r\n\tpublic width: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Height of HTML element.\r\n\t */\r\n\tpublic height: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * A [[Container]] element which is placed into container.\r\n\t */\r\n\tprotected _container: $type.Optional<Container>;\r\n\r\n\t/**\r\n\t * A parent HTML container that SVG wrapper element is placed in.\r\n\t */\r\n\tpublic htmlElement: HTMLElement;\r\n\r\n\t/**\r\n\t * If this component is in a separate HTML container, `autoResize` means the\r\n\t * module will constantly measure container's size and adopt contents to it.\r\n\t */\r\n\tpublic autoResize: Boolean = true;\r\n\r\n\t/**\r\n\t * A `<div>` element which acts as a wrapper/holder for the SVG element.\r\n\t */\r\n\tpublic SVGContainer: HTMLDivElement;\r\n\r\n\t/**\r\n\t * A `<div>` element which acts as a placeholder for accesibility reader\r\n\t * alert.\r\n\t */\r\n\tprivate _readerAlertElement: HTMLDivElement;\r\n\r\n\t/**\r\n\t * A reference to ResizeSensor object which monitors changes of div size.\r\n\t *\r\n\t * @deprecated\r\n\t * @ignore\r\n\t */\r\n\tpublic resizeSensor: ResizeSensor;\r\n\r\n\t/**\r\n\t * Holds list of references to [[Sprite]] objects that should not be exported\r\n\t * when exporting chart to an image.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic nonExportableSprites: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Holds [[Modal]] object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _modal: $type.Optional<Modal>;\r\n\r\n\t/**\r\n\t * Holds [[Popup]] objects.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _popups: $type.Optional<ListTemplate<Popup>>;\r\n\r\n\t/**\r\n\t * List of objects that need to be disposed when this one is disposed.\r\n\t */\r\n\tprotected _disposers: Array<IDisposer> = [];\r\n\r\n\tpublic cssScale: number = 1;\r\n\r\n\t// This is needed so that it won't resize while printing, so that way printing works correctly.\r\n\tprotected _printing: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * * Creates an HTML wrapper for SVG\r\n\t */\r\n\tconstructor(htmlElement: HTMLElement, ghost?: boolean) {\r\n\r\n\t\t// Log parent HTML element\r\n\t\tthis.htmlElement = htmlElement;\r\n\r\n\t\tif (!ghost) {\r\n\t\t\tthis._printing = false;\r\n\r\n\t\t\tthis.initSensor();\r\n\r\n\t\t\tthis._disposers.push($dom.addEventListener(window, \"beforeprint\", () => {\r\n\t\t\t\tthis._printing = true;\r\n\t\t\t}));\r\n\r\n\t\t\tthis._disposers.push($dom.addEventListener(window, \"afterprint\", () => {\r\n\t\t\t\tthis._printing = false;\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\t// Adds to containers array\r\n\t\tsvgContainers.push(this);\r\n\r\n\t\t/**\r\n\t\t * Create child div for the container - it will have svg node\r\n\t\t * It might seem that this container is not necessay, however having it solves\r\n\t\t * a problems with mouse position detection and some other.\r\n\t\t */\r\n\t\tlet svgContainer = document.createElement(\"div\");\r\n\t\tlet style = svgContainer.style;\r\n\t\tstyle.width = \"100%\";\r\n\t\tstyle.height = \"100%\";\r\n\t\tstyle.position = \"relative\";\r\n\t\thtmlElement.appendChild(svgContainer);\r\n\r\n\t\tthis.SVGContainer = svgContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)Initializes a resize sensor.\r\n\t */\r\n\tpublic initSensor(): void {\r\n\t\tif (this.resizeSensor) {\r\n\t\t\tthis.resizeSensor.dispose();\r\n\t\t}\r\n\t\tconst callback = () => {\r\n\t\t\tif (this.autoResize && !this._printing) {\r\n\t\t\t\tthis.measure();\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.resizeSensor = new ResizeSensor(this.htmlElement, callback);\r\n\t\tthis._disposers.push(this.resizeSensor);\r\n\t}\r\n\r\n\t/**\r\n\t * Measures size of parent HTML element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measure(): void {\r\n\t\tlet width: number = $utils.width(this.htmlElement);\r\n\t\tlet height: number = $utils.height(this.htmlElement);\r\n\t\tlet container = this.container;\r\n\t\tif (container) {\r\n\t\t\tif (this.width != width || this.height != height) {\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\r\n\t\t\t\tif (width > 0) {\r\n\t\t\t\t\tcontainer.maxWidth = width;\r\n\t\t\t\t}\r\n\t\t\t\tif (height > 0) {\r\n\t\t\t\t\tcontainer.maxHeight = height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$dom.fixPixelPerfect(this.SVGContainer);\r\n\t\t\t}\r\n\r\n\t\t\tif (!container.maxWidth) {\r\n\t\t\t\tcontainer.maxWidth = 0;\r\n\t\t\t}\r\n\t\t\tif (!container.maxHeight) {\r\n\t\t\t\tcontainer.maxHeight = 0;\r\n\t\t\t}\r\n\t\t\tthis.cssScale = 1;\r\n\t\t\tthis.checkTransform(this.htmlElement);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Container]] element which is placed into container.\r\n\t *\r\n\t * @param container  Container\r\n\t */\r\n\tpublic set container(container: $type.Optional<Container>) {\r\n\t\tthis._container = container;\r\n\t\tthis.measure();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Container\r\n\t */\r\n\tpublic get container(): $type.Optional<Container> {\r\n\t\treturn this._container;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this object has been already been disposed.\r\n\t *\r\n\t * @return Is disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes this container from SVG container list in system, which\r\n\t * effectively disables size change monitoring for it.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\t$array.remove(svgContainers, this);\r\n\t\t}\r\n\r\n\t\t$array.each(this._disposers, (item) => {\r\n\t\t\titem.dispose();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if chart container should have its style set\r\n\t * to `overflow: hidden`.\r\n\t *\r\n\t * Normally, we don't want that, so that certain elements, such as tooltips,\r\n\t * would be able to go outside chart area.\r\n\t *\r\n\t * There is one issue though. Some browsers ignore SVG masks and would\r\n\t * display scrollbars if chart elements, that go outside chart area extend\r\n\t * outside window.\r\n\t *\r\n\t * This is especially true for [[MapChart]], which can have its elements\r\n\t * extend very widely when zoomed in. Even if those parts are not visible\r\n\t * because of SVG masks, some browsers might still display window scrollbars.\r\n\t *\r\n\t * This is why we set this setting to `true` in [[MapChart]].\r\n\t *\r\n\t * Other charts use default of `false`.\r\n\t */\r\n\tpublic set hideOverflow(value: boolean) {\r\n\t\tif (value) {\r\n\t\t\tthis.SVGContainer.style.overflow = \"hidden\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.SVGContainer.style.overflow = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * MODAL/POPUP RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns a [[Modal]] instance, associated with this chart.\r\n\t * (elements top parent)\r\n\t *\r\n\t * Accessing modal does not make it appear. To make a modal appear, use\r\n\t * `showModal()` method.\r\n\t *\r\n\t * @see {@link Modal} for more information about using Modal windows\r\n\t * @return Modal instance\r\n\t */\r\n\tpublic get modal(): Modal {\r\n\r\n\t\tif (!$type.hasValue(this._modal)) {\r\n\r\n\t\t\t// Create new modal\r\n\t\t\tthis._modal = new Modal();\r\n\t\t\tthis._modal.container = this.SVGContainer;\r\n\r\n\t\t\t// Add to disposers\r\n\t\t\tthis._disposers.push(this._modal);\r\n\t\t}\r\n\t\treturn this._modal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a modal window with specific content (`text` parameter) and,\r\n\t * optionally, `title`.\r\n\t *\r\n\t * The `text` parameter can contain HTML content.\r\n\t *\r\n\t * @see {@link Modal} for more information about using Modal windows\r\n\t * @param text   Modal contents\r\n\t * @param title  Title for the modal window\r\n\t */\r\n\tpublic openModal(text: string, title?: string): Modal {\r\n\r\n\t\t// Hide previous modal\r\n\t\tthis.closeModal();\r\n\r\n\t\t// Create modal\r\n\t\tlet modal = this.modal;\r\n\t\tmodal.content = text;\r\n\t\tmodal.readerTitle = title || \"\";\r\n\t\tmodal.title = title || \"\";\r\n\t\tmodal.open();\r\n\r\n\t\treturn modal;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides modal window if there is one currently open.\r\n\t */\r\n\tpublic closeModal(): void {\r\n\t\tif (this._modal) {\r\n\t\t\tthis.modal.close();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of popups for this chart.\r\n\t *\r\n\t * @return Popups\r\n\t */\r\n\tpublic get popups(): ListTemplate<Popup> {\r\n\r\n\t\tif (!$type.hasValue(this._popups)) {\r\n\r\n\t\t\t// Create popup template\r\n\t\t\tlet popupTemplate = new Popup();\r\n\t\t\tpopupTemplate.container = this.SVGContainer;\r\n\r\n\t\t\t// Create the list\r\n\t\t\tthis._popups = new ListTemplate(popupTemplate);\r\n\r\n\t\t\t// Add to disposers\r\n\t\t\tthis._disposers.push(new ListDisposer(this._popups));\r\n\t\t\tthis._disposers.push(this._popups.template);\r\n\t\t}\r\n\t\treturn this._popups;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates, opens, and returns a new [[Popup]] window.\r\n\t *\r\n\t * `text` can be any valid HTML.\r\n\t *\r\n\t * `title` is currently not supported.\r\n\t *\r\n\t * @param text   Popup contents\r\n\t * @param title  Popup title\r\n\t * @return Popup instance\r\n\t */\r\n\tpublic openPopup(text: string, title?: string): Popup {\r\n\t\tlet popup = this.popups.create();\r\n\t\tpopup.content = text;\r\n\t\tif ($type.hasValue(title)) {\r\n\t\t\tpopup.title = title;\r\n\t\t}\r\n\t\tpopup.open();\r\n\t\treturn popup;\r\n\t}\r\n\r\n\t/**\r\n\t * Closes all currently open popup windows\r\n\t */\r\n\tpublic closeAllPopups(): void {\r\n\t\tthis.popups.each((popup) => {\r\n\t\t\tpopup.close();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * ACCESSIBILITY STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * A `<div>` element used as as placeholder to trigger screen alerts.\r\n\t *\r\n\t * @sunce 4.9.2\r\n\t * @return Element\r\n\t */\r\n\tpublic get readerAlertElement(): HTMLDivElement {\r\n\t\tif (!$type.hasValue(this._readerAlertElement)) {\r\n\t\t\t// Create element\r\n\t\t\tconst div = document.createElement(\"div\");\r\n\t\t\tdiv.setAttribute(\"role\", \"alert\");\r\n\t\t\tdiv.style.zIndex = \"-100000\";\r\n\t\t\tdiv.style.opacity = \"0\";\r\n\t\t\tdiv.style.position = \"absolute\";\r\n\t\t\tdiv.style.top = \"0\";\r\n\t\t\tthis.SVGContainer.appendChild(div);\r\n\t\t\tthis._readerAlertElement = div;\r\n\t\t}\r\n\t\treturn this._readerAlertElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers screen reader read out a message.\r\n\t *\r\n\t * @since 4.9.2\r\n\t * @param  text  Alert text\r\n\t */\r\n\tpublic readerAlert(text: string): void {\r\n\t\tthis.readerAlertElement.innerHTML = text;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * OTHER STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\tprotected checkTransform(div: HTMLElement) {\r\n\t\tif (window.getComputedStyle) {\r\n\t\t\tif (div && div.style) {\r\n\t\t\t\tlet style = window.getComputedStyle(div, null);\r\n\t\t\t\tif (style) {\r\n\t\t\t\t\tlet matrix = style.getPropertyValue(\"-webkit-transform\") ||\r\n\t\t\t\t\t\tstyle.getPropertyValue(\"-moz-transform\") ||\r\n\t\t\t\t\t\tstyle.getPropertyValue(\"-ms-transform\") ||\r\n\t\t\t\t\t\tstyle.getPropertyValue(\"-o-transform\") ||\r\n\t\t\t\t\t\tstyle.getPropertyValue(\"transform\");\r\n\r\n\t\t\t\t\tif (matrix && matrix !== \"none\") {\r\n\t\t\t\t\t\tlet values = matrix.split('(')[1].split(')')[0].split(',');\r\n\t\t\t\t\t\tlet a = Number(values[0]);\r\n\t\t\t\t\t\tlet b = Number(values[1]);\r\n\r\n\t\t\t\t\t\tlet scale = Math.sqrt(a * a + b * b);\r\n\r\n\t\t\t\t\t\tif (!isNaN(scale)) {\r\n\t\t\t\t\t\t\tthis.cssScale *= scale;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (div.parentNode && div.parentNode instanceof HTMLElement) {\r\n\t\t\t\tthis.checkTransform(div.parentNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * Defines functionality for \"Data Item\"\r\n *\r\n * A Data Item can be any object that can hold data. For example [[LineSeries]]\r\n * holds a number of values, that comprise a line graph. Each of those values\r\n * (data points) is a {DataItem}.\r\n *\r\n * Furthermore the [[LineSeries]] itself can be represented as a entry in the\r\n * legend. Since legend needs access to Line Series' value, a DataItem is\r\n * created for the series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"./Base\";\r\nimport { AMEvent } from \"./utils/EventDispatcher\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { Component, CalculatedValue } from \"./Component\";\r\nimport { IAnimatable, Animation, IAnimationOptions, IAnimationEvents, AnimationDisposer } from \"./utils/Animation\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { IDisposer } from \"./utils/Disposer\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $array from \"./utils/Array\";\r\n//import * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n *\r\n * @todo Description\r\n  */\r\nexport interface IValues { }\r\n\r\n/**\r\n * Defines data events for [[DataItem]]\r\n */\r\nexport interface IDataItemEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when the visibility of the Data Item changes, i.e. Series is\r\n\t * hidden\r\n\t */\r\n\tvisibilitychanged: {\r\n\t\tvisible: boolean;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the value is changed\r\n\t */\r\n\tvaluechanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the internal/intermediate value has changed\r\n\t */\r\n\tworkingvaluechanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the calculated value has changed\r\n\t */\r\n\tcalculatedvaluechanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the location of Data Item changes\r\n\t */\r\n\tlocationchanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when working location of Data Item changes\r\n\t */\r\n\tworkinglocationchanged: {\r\n\t\tproperty: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when a property of the Data Item changes\r\n\t */\r\n\tpropertychanged: {\r\n\t\tproperty: string;\r\n\t\tvalue: any; // TODO don't make this any\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[DataItem]]\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IDataItemAdapters {\r\n\r\n\tduration: number;\r\n\r\n\tvalue: {\r\n\t\tvalue: number,\r\n\t\tfield: string\r\n\t};\r\n\r\n\tworkingValue: {\r\n\t\tworkingValue: number,\r\n\t\tfield: string\r\n\t};\r\n\r\n\tdate: {\r\n\t\tdate: Date,\r\n\t\tfield: string\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * DataItem represents single element in data, for example a data point in a\r\n * Serial Chart Series, e.g. a column.\r\n *\r\n * DataItem defines relationship between structured data, required for specific\r\n * chart type or task, and raw source data.\r\n *\r\n * It also implements required calculations, updates related visual elements,\r\n * etc.\r\n *\r\n * @todo Description\r\n * @important\r\n */\r\nexport class DataItem extends BaseObjectEvents implements IAnimatable {\r\n\r\n\t/**\r\n\t * When we are using a nested data structure, like for example in a TreeMap,\r\n\t * this property points to a parent Data Item of this one.\r\n\t */\r\n\tpublic parent: $type.Optional<this>;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IDataItemEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDataItemAdapters;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _adapterO: Adapter<this, this[\"_adapter\"]>;\r\n\r\n\t/**\r\n\t * Holds Adapter.\r\n\t */\r\n\tpublic get adapter(): Adapter<this, this[\"_adapter\"]> {\r\n\t\tif (!this._adapterO) {\r\n\t\t\tthis._adapterO = new Adapter<this, this[\"_adapter\"]>(this);\r\n\t\t}\r\n\t\treturn this._adapterO;\r\n\t}\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this Data Item is used for.\r\n\t */\r\n\tpublic _component!: Component;\r\n\r\n\t/**\r\n\t * A reference to a [[Component]] this Data Item belongs to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic component: $type.Optional<this[\"_component\"]>;\r\n\r\n\t/**\r\n\t * A reference to the original Data Item in raw data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dataContext: Object;\r\n\r\n\t/**\r\n\t * This Data Item is currently disabled.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _disabled: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether Data Item has any properties set.\r\n\t *\r\n\t * If it does not have any, the code can use this property to check whether\r\n\t * they need to apply costly operation of re-applying properties, whenever\r\n\t * Data Item-related element is redrawn, e.g. series.\r\n\t */\r\n\tpublic hasProperties: boolean = false;\r\n\r\n\t/**\r\n\t * An object containing calculated values.\r\n\t */\r\n\tpublic readonly values: { [index: string]: { [index: string]: number } } = {};\r\n\r\n\t/**\r\n\t * An object container current working values.\r\n\t */\r\n\t//public readonly workingValues: { [index: string]: { [index: string]: number } } = {};\r\n\r\n\t/**\r\n\t * An object containing categories.\r\n\t */\r\n\tpublic readonly categories: { [index: string]: string } = {};\r\n\r\n\t/**\r\n\t * An object containing dates.\r\n\t */\r\n\tpublic readonly dates: { [index: string]: Date } = {};\r\n\r\n\t/**\r\n\t * An object containing locations for the Data Item.\r\n\t *\r\n\t * A location is a position within date or category, or, in some other cases,\r\n\t * where there is no single point but rather some period.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Data_item_locations} for info how data item locations work\r\n\t */\r\n\tpublic readonly locations: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * Current working locations.\r\n\t */\r\n\tpublic readonly workingLocations: { [index: string]: number } = {};\r\n\r\n\t/**\r\n\t * An object containing Data Item specific appearance properties in key-value\r\n\t * pairs.\r\n\t *\r\n\t * Sometimes a single Data Item needs to apply different properties than the\r\n\t * rest of the data [[Series]] it is part of. E.g. a single column,\r\n\t * represented by a Data Item needs to be filled with a different color than\r\n\t * the reset of the [[ColumnSeries]] it belongs to.\r\n\t *\r\n\t * That's where Data Item's `properties` come into play.\r\n\t *\r\n\t * Please note that you should set Data Item-specific properties using\r\n\t * `setProperty()` method, rather than access `properties` object directly.\r\n\t */\r\n\tpublic readonly properties: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * A list of [[Sprite]] elements that are associated with this Data Item.\r\n\t *\r\n\t * E.g. an [[Axis]] Data Item has several separate elements associated with\r\n\t * it, like [[AxisTick]], [[AxisLabel]], and [[Grid]].\r\n\t *\r\n\t * Data Item keeps track of all of them, so it can toggle all related visual\r\n\t * elements when it itself is toggled.\r\n\t */\r\n\tpublic sprites: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * List of animations currently animating Data Item's values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * The current index within the dataItems\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _index: number | null = null;\r\n\r\n\t/**\r\n\t * Is Data Item currently visible?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _visible: boolean = true;\r\n\r\n\t/**\r\n\t * Is Data Item currently hidden?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _hidden: boolean = false;\r\n\r\n\t/**\r\n\t * Should this Data Item be used when calculating data ranges and scales?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Some of the Data Item's data fields may contain an array of children. This\r\n\t * property contains an object indicating which fields hold an array, so that\r\n\t * they can be processed properly.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hasChildren: { [index: string]: boolean } = {};\r\n\r\n\t/**\r\n\t * Indicates whether Data Item is currently animiting from visible to hidden\r\n\t * state.\r\n\t */\r\n\tpublic isHiding: boolean = false;\r\n\r\n\t/**\r\n\t * Holds a Disposer reference to hiding [[Animation]] currently playing.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _hideDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _valueAnimations: { [key: string]: Animation } = {};\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _locationAnimations: { [key: string]: Animation } = {};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * @todo Adding events to disposers produces errors in some cases, which means that chart is using disposed Data Items which is not right\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Data Item's position index in Component's data.\r\n\t *\r\n\t * @return Index\r\n\t */\r\n\tpublic get index(): number {\r\n\t\tif (this.component) {\r\n\t\t\tif (this._index != null) {\r\n\t\t\t\treturn this._index;\r\n\t\t\t} else {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of [[Animations]] objects currently mutating Data Item's values.\r\n\t *\r\n\t * @return [description]\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Visible?\r\n\t */\r\n\tpublic set visible(value: boolean) {\r\n\t\tif (value) {\r\n\t\t\tthis.hidden = false;\r\n\t\t}\r\n\t\tif (this._visible != value) {\r\n\t\t\tthis.setVisibility(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets hidden flag for data item. Mostly used to initially hide data item.\r\n\t *\r\n\t * @param value Hidden?\r\n\t */\r\n\tpublic set hidden(value: boolean) {\r\n\t\tif (this._hidden != value) {\r\n\t\t\tthis._hidden = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.setVisibility(false);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setVisibility(true, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this Data Item is currently hidden.\r\n\t *\r\n\t * @return Hidden?\r\n\t */\r\n\tpublic get hidden(): boolean {\r\n\t\treturn this._hidden;\r\n\t}\r\n\r\n\t/**\r\n\t * Disables all Sprites associated with this Data Item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {boolean}\r\n\t */\r\n\tpublic set __disabled(value: boolean) {\r\n\t\t//\tif (this._disabled != value) { // not good\r\n\t\tthis._disabled = value;\r\n\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.__disabled = value;\r\n\t\t});\r\n\t\t//\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Is this Data Item currently disabled?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param {boolean}\r\n\t */\r\n\tpublic get __disabled(): boolean {\r\n\t\treturn this._disabled;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tif (value) {\r\n\t\t\t\tsprite.visible = sprite.defaultState.properties.visible;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (sprite.hiddenState) {\r\n\t\t\t\t\tsprite.visible = sprite.hiddenState.properties.visible;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsprite.visible = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._visible = value;\r\n\t\tif (this._eventDispatcher && !this.__disabled) {\r\n\t\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tvisible: value\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this Data Item is currently visible.\r\n\t *\r\n\t * @return Visible?\r\n\t */\r\n\tpublic get visible(): boolean {\r\n\t\tif (this._hidden) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this._visible;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param fields    A list of fields to set values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif (!this.hidden) {\r\n\t\t\tthis.setVisibility(true, true);\r\n\r\n\t\t\tthis.isHiding = false;\r\n\r\n\t\t\tif (this._hideDisposer) {\r\n\t\t\t\tthis.removeDispose(this._hideDisposer);\r\n\t\t\t}\r\n\r\n\t\t\tlet animation: $type.Optional<Animation>;\r\n\r\n\t\t\tif (fields) {\r\n\t\t\t\t$array.each(fields, (field) => {\r\n\t\t\t\t\tanimation = this.setWorkingValue(field, this.values[field].value, duration, delay);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\t\tlet animation = sprite.show(duration);\r\n\r\n\t\t\t\tif (animation != null && !animation.isFinished()) {\r\n\t\t\t\t\tthis._disposers.push(animation);\r\n\r\n\t\t\t\t\tif (delay != null && delay > 0) {\r\n\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn animation;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tsuper.dispose();\r\n\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.dispose();\r\n\t\t});\r\n\r\n\t\tthis.sprites = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param toValue   A value to set to `fields` when hiding\r\n\t * @param fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis.isHiding = true;\r\n\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\r\n\t\t\tlet animation = sprite.hide(duration);\r\n\r\n\t\t\tif (animation != null && !animation.isFinished()) {\r\n\t\t\t\tthis._disposers.push(animation);\r\n\r\n\t\t\t\tif (delay != null && delay > 0) {\r\n\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif ($type.isNumber(toValue) && fields) {\r\n\t\t\tlet animation: $type.Optional<Animation>;\r\n\r\n\t\t\t$array.each(fields, (field) => {\r\n\t\t\t\tlet anim = this.setWorkingValue(field, toValue, duration, delay);\r\n\t\t\t\tif (anim) {\r\n\t\t\t\t\tanimation = anim;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\tthis._hideDisposer = animation.events.on(\"animationended\", () => {\r\n\t\t\t\t\tthis.setVisibility(false, true);\r\n\t\t\t\t\tthis.isHiding = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._disposers.push(this._hideDisposer);\r\n\t\t\t\treturn animation;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.isHiding = false;\r\n\t\t\t\tthis.setVisibility(false, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.isHiding = false;\r\n\t\t\tthis.setVisibility(false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a duration (ms) the Data Item should take to animate from one\r\n\t * value to another.\r\n\t *\r\n\t * If the duration is not specified via parameter, this method will try to\r\n\t * request a default duration from the related `Component`.\r\n\t *\r\n\t * @param duration  Default duration (ms)\r\n\t * @return Duration (ms)\r\n\t */\r\n\tpublic getDuration(duration?: number): $type.Optional<number> {\r\n\t\tif (!$type.isNumber(duration)) {\r\n\t\t\tlet component: $type.Optional<Component> = this.component;\r\n\t\t\tif (component) {\r\n\t\t\t\tduration = component.interpolationDuration;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (duration != null) {\r\n\t\t\tif (!this._adapterO) {\r\n\t\t\t\treturn duration;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._adapterO.apply(\"duration\", duration);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a numeric value for specific data field.\r\n\t *\r\n\t * If `calculated` is not set, it will return a raw value, as it is in\r\n\t * source data.\r\n\t *\r\n\t * If `calculated` is set, it will return a pre-calculated specific value.\r\n\t *\r\n\t * @param name        Data field name\r\n\t * @param calculated  A calculated value name\r\n\t * @return Value\r\n\t */\r\n\tpublic getValue(name: string, calculated?: CalculatedValue): $type.Optional<number> {\r\n\t\tif (name && this.component) {\r\n\t\t\tif (!calculated) {\r\n\t\t\t\tcalculated = (<any>this.component.dataFields)[name + \"Show\"];\r\n\t\t\t\tif (!calculated) {\r\n\t\t\t\t\tcalculated = \"value\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst value = this.values[name][calculated];\r\n\r\n\t\t\tif (this._adapterO && this._adapterO.isEnabled(\"value\")) {\r\n\t\t\t\treturn this._adapterO.apply(\"value\", {\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tfield: name\r\n\t\t\t\t}).value;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a current working value for a specific data field.\r\n\t *\r\n\t * The actual value may differ from the one returned by `getValue()`. The\r\n\t * latter returns static values from the data source.\r\n\t *\r\n\t * `getWorkingValue()` returns current value, which is usually different if\r\n\t * Data Item is animating from one state to another.\r\n\t *\r\n\t * @param name        Data field name\r\n\t * @return Value\r\n\t */\r\n\tpublic getWorkingValue(name: string): $type.Optional<number> {\r\n\t\tif (name && this.component) {\r\n\t\t\tlet realName = (<any>this.component.dataFields)[name + \"Show\"];\r\n\r\n\t\t\tif (!realName) {\r\n\t\t\t\trealName = \"workingValue\";\r\n\t\t\t}\r\n\t\t\tif (this._adapterO) {\r\n\t\t\t\treturn this._adapterO.apply(\"workingValue\", {\r\n\t\t\t\t\tworkingValue: this.values[name][realName],\r\n\t\t\t\t\tfield: name\r\n\t\t\t\t}).workingValue;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.values[name][realName];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Value\r\n\t */\r\n\tpublic getActualWorkingValue(name: string): $type.Optional<number> {\r\n\t\treturn this.values[name].workingValue;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets a numeric value for specific data field.\r\n\t *\r\n\t * @param name        Data field name\r\n\t * @param value       Value\r\n\t * @param calculated  Calculated data field name\r\n\t * @param duration    Duration (ms) to animate to new value to\r\n\t * @param delay       Delay animation (ms)\r\n\t */\r\n\tpublic setValue(name: string, value: number, duration?: number, delay?: number): void {\r\n\t\tlet currentValue: number = this.values[name].value;\r\n\t\tlet newDuration: $type.Optional<number> = this.getDuration(duration);\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (currentValue !== value) {\r\n\t\t\tthis.values[name].value = value;\r\n\t\t\tif (this._eventDispatcher && !this.__disabled) {\r\n\t\t\t\tif (this.events.isEnabled(\"valuechanged\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"valuechanged\"] = {\r\n\t\t\t\t\t\ttype: \"valuechanged\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tproperty: name\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"valuechanged\", event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemValueChange(this, name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setWorkingValue(name, value, newDuration, delay);\r\n\t}\r\n\r\n\tsetCalculatedValue(name: string, value: number, calculated: CalculatedValue): void {\r\n\t\tlet currentValue: number = this.values[name][calculated];\r\n\r\n\t\tif (currentValue !== value && $type.isNumber(value)) {\r\n\t\t\tthis.values[name][calculated] = value;\r\n\r\n\t\t\tif (this._eventDispatcher && !this.__disabled) {\r\n\t\t\t\tif (this.events.isEnabled(\"calculatedvaluechanged\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"calculatedvaluechanged\"] = {\r\n\t\t\t\t\t\ttype: \"calculatedvaluechanged\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tproperty: name\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"calculatedvaluechanged\", event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemCalculatedValueChange(this, name);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set current working numeric value for a specific data field.\r\n\t *\r\n\t * @param name        Data field name\r\n\t * @param value       Value\r\n\t * @param calculated  Calculated data field name\r\n\t * @param duration    Duration (ms) to animate to new value to\r\n\t * @param delay       Delay animation (ms)\r\n\t * @return An [[Animation]] object used for transition to new values\r\n\t */\r\n\tpublic setWorkingValue(name: string, value: number, duration?: number, delay?: number): $type.Optional<Animation> {\r\n\t\tif ($type.isNumber(this.values[name].value)) {\r\n\t\t\tlet newDuration: $type.Optional<number> = this.getDuration(duration);\r\n\r\n\t\t\tlet workingValue: number = this.values[name].workingValue;\r\n\r\n\t\t\tif (newDuration != null && newDuration > 0 && $type.isNumber(workingValue) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop\r\n\r\n\t\t\t\tif (workingValue != value) {\r\n\t\t\t\t\tlet animation: Animation = this.animate({ childObject: this.values[name], property: \"workingValue\", from: workingValue, to: value, dummyData: name }, newDuration, this.component.interpolationEasing);\r\n\t\t\t\t\tif (delay != null) {\r\n\t\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tanimation.events.on(\"animationstarted\", this.handleInterpolationProgress, this);\r\n\t\t\t\t\tanimation.events.on(\"animationprogress\", this.handleInterpolationProgress, this);\r\n\t\t\t\t\tanimation.events.on(\"animationended\", this.handleInterpolationProgress, this);\r\n\t\t\t\t\tthis._valueAnimations[name] = animation;\r\n\t\t\t\t\treturn animation;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet valueAnimation = this._valueAnimations[name];\r\n\t\t\t\t\tif (valueAnimation) {\r\n\t\t\t\t\t\tvalueAnimation.stop();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.values[name].workingValue = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tlet valueAnimation = this._valueAnimations[name];\r\n\t\t\t\tif (valueAnimation) {\r\n\t\t\t\t\tvalueAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.values[name].workingValue = value;\r\n\t\t\t\tif (this._eventDispatcher && !this.__disabled) {\r\n\t\t\t\t\tif (this.events.isEnabled(\"workingvaluechanged\")) {\r\n\t\t\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"workingvaluechanged\"] = {\r\n\t\t\t\t\t\t\ttype: \"workingvaluechanged\",\r\n\t\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\t\tproperty: name\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.events.dispatchImmediately(\"workingvaluechanged\", event);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.handleDataItemWorkingValueChange(this, name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a relative location for a data field.\r\n\t *\r\n\t * A location is always relative on a 0 to 1 scale, with 0 being beginning,\r\n\t * 0.5 middle and 1 end.\r\n\t *\r\n\t * @todo Rewiew description\r\n\t * @param name      Data field name\r\n\t * @param value     Location (0-1)\r\n\t * @param duration  Duration (ms) to animate to new value to\r\n\t * @param delay     Delay animation (ms)\r\n\t */\r\n\tpublic setLocation(name: string, value: number, duration?: number, delay?: number) {\r\n\t\tlet currentLocation: number = this.locations[name];\r\n\r\n\t\tif (currentLocation !== value) {\r\n\t\t\tthis.locations[name] = value;\r\n\t\t\tif (this._eventDispatcher && !this.__disabled) {\r\n\t\t\t\tif (this.events.isEnabled(\"locationchanged\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"locationchanged\"] = {\r\n\t\t\t\t\t\ttype: \"locationchanged\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tproperty: name\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"locationchanged\", event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemValueChange(this, name); // correct\r\n\t\t\t}\r\n\r\n\t\t\tthis.setWorkingLocation(name, value, duration, delay);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a current working location for a data field.\r\n\t *\r\n\t * @todo Rewiew description\r\n\t * @param name      Data field name\r\n\t * @param value     Location (0-1)\r\n\t * @param duration  Duration (ms) to animate to new value to\r\n\t * @param delay     Delay animation (ms)\r\n\t */\r\n\tpublic setWorkingLocation(name: string, value: number, duration?: number, delay?: number): $type.Optional<Animation> {\r\n\t\tlet newDuration: $type.Optional<number> = this.getDuration(duration);\r\n\t\tlet workingLocation: number = this.workingLocations[name];\r\n\r\n\t\tif (newDuration != null && newDuration > 0 && $type.isNumber(workingLocation) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop\r\n\t\t\tif (workingLocation != value) {\r\n\t\t\t\tlet animation: Animation = this.animate({ childObject: this.workingLocations, property: name, from: workingLocation, to: value, dummyData: name }, newDuration, this.component.interpolationEasing);\r\n\t\t\t\tif (delay != null) {\r\n\t\t\t\t\tanimation.delay(delay);\r\n\t\t\t\t}\r\n\t\t\t\tanimation.events.on(\"animationstarted\", this.handleInterpolationProgress, this);\r\n\t\t\t\tanimation.events.on(\"animationprogress\", this.handleInterpolationProgress, this);\r\n\t\t\t\tanimation.events.on(\"animationended\", this.handleInterpolationProgress, this);\r\n\t\t\t\tthis._locationAnimations[name] = animation;\r\n\t\t\t\treturn animation;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet locationAnimation = this._locationAnimations[name];\r\n\t\t\t\tif (locationAnimation) {\r\n\t\t\t\t\tlocationAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.workingLocations[name] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet locationAnimation = this._locationAnimations[name];\r\n\t\t\tif (locationAnimation) {\r\n\t\t\t\tlocationAnimation.stop();\r\n\t\t\t}\r\n\r\n\t\t\tthis.workingLocations[name] = value;\r\n\r\n\t\t\tif (this._eventDispatcher && !this.__disabled) {\r\n\t\t\t\tif (this.events.isEnabled(\"workinglocationchanged\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"workinglocationchanged\"] = {\r\n\t\t\t\t\t\ttype: \"workinglocationchanged\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tproperty: name\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"workinglocationchanged\", event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemWorkingLocationChange(this, name);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets Date value to a data field.\r\n\t *\r\n\t * @param name      Data field name\r\n\t * @param date      Date object\r\n\t * @param duration  Duration (ms) to animate to new value to\r\n\t */\r\n\tpublic setDate(name: string, date: Date, duration?: number) {\r\n\r\n\t\tif (!$type.isDate(date) && this.component) {\r\n\t\t\tdate = this.component.dateFormatter.parse(date);\r\n\t\t}\r\n\r\n\t\tlet currentDate: Date = this.dates[name];\r\n\t\tif (currentDate !== date) {\r\n\t\t\tthis.dates[name] = date;\r\n\t\t\tthis.setValue(name, date.getTime(), duration);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a Date value of the data field.\r\n\t *\r\n\t * @param name  Data field name\r\n\t * @return Date object\r\n\t */\r\n\tpublic getDate(name: string): Date {\r\n\t\tif (this._adapterO) {\r\n\t\t\treturn this._adapterO.apply(\"date\", {\r\n\t\t\t\tdate: this.dates[name],\r\n\t\t\t\tfield: name\r\n\t\t\t}).date;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.dates[name];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a Data Item-specific visual properties to apply to related elements.\r\n\t *\r\n\t * @param name   Property name\r\n\t * @param value  Property value\r\n\t */\r\n\tpublic setProperty(name: string, value: any) {\r\n\t\tif (this.properties[name] !== value) {\r\n\t\t\tthis.hasProperties = true;\r\n\t\t\tthis.properties[name] = value;\r\n\t\t\tif (this._eventDispatcher && !this.__disabled) {\r\n\t\t\t\tif (this.events.isEnabled(\"propertychanged\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"propertychanged\"] = {\r\n\t\t\t\t\t\ttype: \"propertychanged\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tproperty: name,\r\n\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"propertychanged\", event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemPropertyChange(this, name);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a related category for this Data Item.\r\n\t *\r\n\t * @todo Review description\r\n\t * @param name   Data field name\r\n\t * @param value  Category\r\n\t */\r\n\tpublic setCategory(name: string, value: string) {\r\n\t\tif (!$type.isString(value)) {\r\n\t\t\tvalue = $type.castString(value);\r\n\t\t}\r\n\r\n\t\tif (this.categories[name] !== value) {\r\n\t\t\tthis.categories[name] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clones the Data Item, including all related data.\r\n\t *\r\n\t * @return New Data Item clone\r\n\t */\r\n\t//public clone(cloneId?: string): this {\r\n\t//\tlet dataItem: this = super.clone(cloneId);\r\n\t//\tdataItem.copyFrom(this);\r\n\t//\treturn dataItem;\r\n\t//}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from different data item.\r\n\t *\r\n\t * @param object Source data item\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tif (source.dataContext) {\r\n\t\t\tthis.dataContext = $utils.copy(source.dataContext, {});\r\n\t\t}\r\n\r\n\t\t$utils.copyProperties(source.locations, this.locations);\r\n\t\t/*\r\n\t\t$utils.copyProperties(source.properties, this.properties);\r\n\t\t$utils.copyProperties(source.categories, this.categories);\r\n\t\t$utils.copyProperties(source.values, this.values);\r\n\t\t$utils.copyProperties(source.dates, this.dates);\r\n\r\n\t\t$object.each(source.values, (name, value) => {\r\n\t\t\tthis.values[name] = $object.copy(value);\r\n\t\t});*/\r\n\t\tif (source._adapterO) {\r\n\t\t\tthis.adapter.copyFrom(source._adapterO);\r\n\t\t}\r\n\t\t//this.events.copyFrom(source.events); // because copied in Base\r\n\t\tthis.component = source.component;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets opacity for all Data Item's related elements (Sprites).\r\n\t *\r\n\t * @param value Opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: number) {\r\n\t\t$array.each(this.sprites, (sprite) => {\r\n\t\t\tsprite.opacity = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets whether this data point should not be included in the scale and\r\n\t * minimum/maximum calculations.\r\n\t *\r\n\t * E.g. some we may want to exclude a particular data point from influencing\r\n\t * [[ValueAxis]] scale.\r\n\t *\r\n\t * @param value  Exclude from min/max calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\t\tif (this._eventDispatcher && !this.__disabled) {\r\n\t\t\tif (this.events.isEnabled(\"propertychanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"propertychanged\"] = {\r\n\t\t\t\t\ttype: \"propertychanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: \"ignoreMinMax\",\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"propertychanged\", event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.component) {\r\n\t\t\tthis.component.handleDataItemPropertyChange(this, \"ignoreMinMax\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Exclude from min/max calculations?\r\n\t * @return Exclude from min/max calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and starts an [[Animation]] to interpolate (morph) Data Item's\r\n\t * properties and/or values.\r\n\t *\r\n\t * @see {@link Animation}\r\n\t * @param animationOptions  Animation options\r\n\t * @param duration          Animation duration (ms)\r\n\t * @param easing            Easing function\r\n\t * @return Animation\r\n\t */\r\n\tpublic animate(animationOptions: IAnimationOptions[] | IAnimationOptions, duration: number, easing?: (value: number) => number): Animation {\r\n\t\treturn new Animation(this, animationOptions, duration, easing).start();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles intermediate steps when Data Item is interpolating (morphing) from\r\n\t * one value to another.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event object\r\n\t */\r\n\tpublic handleInterpolationProgress(event: AMEvent<Animation, IAnimationEvents>[\"animationstarted\" | \"animationended\" | \"animationprogress\"]) {\r\n\t\tlet animation: Animation = event.target;\r\n\r\n\t\t// it's always only one options, no need cycle\r\n\t\tlet animationOptions: IAnimationOptions = animation.animationOptions[0];\r\n\t\tif (animationOptions) {\r\n\t\t\tif (this._eventDispatcher && !this.__disabled) {\r\n\t\t\t\tif (this.events.isEnabled(\"workingvaluechanged\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"workingvaluechanged\"] = {\r\n\t\t\t\t\t\ttype: \"workingvaluechanged\",\r\n\t\t\t\t\t\ttarget: this,\r\n\t\t\t\t\t\tproperty: animationOptions.dummyData\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"workingvaluechanged\", event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.handleDataItemWorkingValueChange(this, animationOptions.dummyData);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether Data Item has values set for all of the data fields,\r\n\t * supplied via argument.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param fields  Field list to check\r\n\t * @return Has values for all fields?\r\n\t */\r\n\tpublic hasValue(fields: string[]): boolean {\r\n\t\t// todo: what about categories?\r\n\t\tfor (let i = 0, len = fields.length; i < len; i++) {\r\n\t\t\tlet values = this.values[fields[i]];\r\n\t\t\tif (!values || !$type.hasValue(values.value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Depth of the Data Item.\r\n\t *\r\n\t * In nested data structures, like TreeMap, this indicates the level this\r\n\t * data point is at, in relation to the parent Data Item.\r\n\t *\r\n\t * @return Depth\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\tif (!this.parent) {\r\n\t\t\treturn 0;\r\n\r\n\t\t} else {\r\n\t\t\treturn this.parent.depth + 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets to a reference to an original object from Component's data.\r\n\t *\r\n\t * @return [description]\r\n\t */\r\n\tpublic get dataContext(): Object {\r\n\t\treturn this._dataContext;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to an original object in Component's data, that this Data Item\r\n\t * is derived from.\r\n\t *\r\n\t * @param value Original data object\r\n\t */\r\n\tpublic set dataContext(value: Object) {\r\n\t\tthis._dataContext = value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * adds a sprite to dataItem.sprites array\r\n\t * @ignore\r\n\t */\r\n\taddSprite(sprite: Sprite) {\r\n\t\tif (sprite.dataItem && sprite.dataItem != this) {\r\n\t\t\t$array.remove(sprite.dataItem.sprites, sprite);\r\n\t\t}\r\n\t\tif (!this.visible) {\r\n\t\t\tsprite.hide(0);\r\n\t\t}\r\n\r\n\t\tif (this.isHiding) {\r\n\t\t\tsprite.hide();\r\n\t\t}\r\n\t\tthis.sprites.push(sprite);\r\n\t\tsprite.dataItem = this;\r\n\t}\r\n}\r\n","/**\r\n * Animation module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { SVGDefaults } from \"../defs/SVGDefaults\";\r\nimport { Disposer, IDisposer } from \"../utils/Disposer\";\r\nimport { Color } from \"../utils/Color\";\r\nimport { Percent, percent } from \"../utils/Percent\";\r\nimport * as $async from \"../utils/AsyncPending\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $colors from \"../utils/Colors\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { system } from \"../System\";\r\nimport { options } from \"../Options\";\r\n\r\n\r\n/**\r\n * Defines interface for animation objects.\r\n *\r\n * Should at least contain `update()` method.\r\n */\r\nexport interface IAnimationObject {\r\n\tupdate: () => void\r\n}\r\n\r\n/**\r\n * Defines interface for objects that can be animated\r\n */\r\nexport interface IAnimatable {\r\n\tanimations: Array<Animation>;\r\n}\r\n\r\n\r\nexport type IAnimationOption = Color | Percent | number | string | boolean;\r\n\r\n/**\r\n * Defines interface for animation options.\r\n */\r\nexport interface IAnimationOptions {\r\n\r\n\t/**\r\n\t * An initial value to animate from.\r\n\t *\r\n\t * If omitted, the source value will be current value.\r\n\t */\r\n\tfrom?: IAnimationOption;\r\n\r\n\t/**\r\n\t * A target value to animate from.\r\n\t */\r\n\tto: IAnimationOption;\r\n\r\n\t/**\r\n\t * Property name to animate.\r\n\t */\r\n\tproperty?: any;\r\n\r\n\t/**\r\n\t * If current values should be taken from different object than the target\r\n\t * element of the animation, this property should be set to that object.\r\n\t */\r\n\tchildObject?: { [index: string]: any };\r\n\r\n\t/**\r\n\t * A method/function reference that will be called to for updating the\r\n\t * property value.\r\n\t */\r\n\tupdateMethod?(progress: number, from: IAnimationOption, to: IAnimationOption): IAnimationOption;\r\n\r\n\r\n\t/**\r\n\t * sometimes we need to pass some dummy data in animationOptions\r\n\t */\r\n\tdummyData?: any;\r\n\r\n}\r\n\r\n/**\r\n * An interface for an object defining [[Percent]] animation.\r\n */\r\nexport interface IPercentAnimationOptions extends IAnimationOptions {\r\n\r\n\t/**\r\n\t * Initial value.\r\n\t */\r\n\tfrom?: Percent;\r\n\r\n\t/**\r\n\t * Target value.\r\n\t */\r\n\tto: Percent;\r\n\r\n}\r\n\r\n/**\r\n * An interface for an object defining [[Color]] animation.\r\n */\r\nexport interface IColorAnimationOptions extends IAnimationOptions {\r\n\r\n\t/**\r\n\t * Initial value.\r\n\t */\r\n\tfrom?: Color;\r\n\r\n\t/**\r\n\t * Target value.\r\n\t */\r\n\tto: Color;\r\n\r\n}\r\n\r\n\r\n/**\r\n * Calls a `callback` function for the `duration` of milliseconds.\r\n *\r\n * @todo Needed?\r\n * @deprecated Not used anywhere\r\n * @ignore Exclude from docs\r\n * @param duration  Duration (ms)\r\n * @param callback  Callback function\r\n * @return Disposer\r\n */\r\nexport function animate(duration: number, callback: (time: number) => void): IDisposer {\r\n\tlet disposed = false;\r\n\r\n\t// TODO use performance.now() ?\r\n\tconst startTime = Date.now();\r\n\r\n\tfunction loop(now: number): void {\r\n\t\tif (!disposed) {\r\n\t\t\tconst diff = now - startTime;\r\n\r\n\t\t\tif (diff >= duration) {\r\n\t\t\t\tcallback(1);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t$async.nextFrame(loop);\r\n\t\t\t\tcallback(diff / duration);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t$async.nextFrame(loop);\r\n\r\n\treturn new Disposer(() => {\r\n\t\tdisposed = true;\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Defines events for [[Animation]].\r\n */\r\nexport interface IAnimationEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when animation starts playing.\r\n\t */\r\n\tanimationstarted: {\r\n\t\tprogress: number;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when animation finishes playing.\r\n\t */\r\n\tanimationended: {\r\n\t\tprogress: number;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when animation makes progress.\r\n\t */\r\n\tanimationprogress: {\r\n\t\tprogress: number;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when animation is stopped by some other process, before it had\r\n\t * a chance to finish.\r\n\t */\r\n\tanimationstopped: {\r\n\t\tprogress: number;\r\n\t};\r\n\r\n}\r\n\r\n\r\n/**\r\n * Returns numeric value accoring to progress between start and end values.\r\n *\r\n * @param progress  Progress (0-1)\r\n * @param from\r\n * @param to\r\n * @return Value according to progress\r\n */\r\nfunction getProgressNumber(progress: number, from: number, to: number): number {\r\n\treturn from + ((to - from) * progress);\r\n}\r\n\r\n/**\r\n * Returns [[Percent]] value accoring to progress between start and end\r\n * values.\r\n *\r\n * @param progress  Progress (0-1)\r\n * @param from\r\n * @param to\r\n * @return Value according to progress\r\n */\r\nfunction getProgressPercent(progress: number, from: Percent, to: Percent): Percent {\r\n\treturn new Percent(getProgressNumber(progress, from.percent, to.percent));\r\n}\r\n\r\n/**\r\n * Returns color value accoring to progress between start and end values.\r\n *\r\n * @param progress  Progress (0-1)\r\n * @param from\r\n * @param to\r\n * @return Color according to progress\r\n */\r\nfunction getProgressColor(progress: number, from: Color, to: Color): Color {\r\n\tconst color = new Color($colors.interpolate(from.rgb, to.rgb, progress));\r\n\tif (from.alpha != to.alpha) {\r\n\t\tcolor.alpha = from.alpha + (to.alpha - from.alpha) * progress;\r\n\t}\r\n\treturn color;\r\n}\r\n\r\n/**\r\n * [getHybridProperty description]\r\n *\r\n * @todo Description\r\n * @param property [description]\r\n * @param type [description]\r\n * @return [description]\r\n */\r\nfunction getHybridProperty(property: string, type: \"pixel\" | \"relative\"): string {\r\n\treturn type + property.charAt(0).toUpperCase() + property.substr(1);\r\n}\r\n\r\n\r\nexport class AnimationDisposer implements IDisposer {\r\n\tprivate _disposer: Disposer;\r\n\r\n\tconstructor(array: Array<Animation>) {\r\n\t\tthis._disposer = new Disposer(() => {\r\n\t\t\twhile (array.length !== 0) {\r\n\t\t\t\tarray[0].dispose();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tisDisposed(): boolean {\r\n\t\treturn this._disposer.isDisposed();\r\n\t}\r\n\r\n\tdispose(): void {\r\n\t\tthis._disposer.dispose();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Animation can be used to transition certain properties on an object that\r\n * implements [[IAnimatable]] interface.\r\n *\r\n * @see {@link IAnimationEvents} for a list of available events\r\n */\r\nexport class Animation extends BaseObjectEvents implements IAnimationObject {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAnimationEvents;\r\n\r\n\t/**\r\n\t * An animation target object. [[Animation]] will update properties of\r\n\t * this object.\r\n\t */\r\n\tpublic object: IAnimatable;\r\n\r\n\t/**\r\n\t * An array of animation option objects. Each animation object represent\r\n\t * one property. Animation can animate any number of properties\r\n\t * simultaneously.\r\n\t */\r\n\tpublic animationOptions: IAnimationOptions[];\r\n\r\n\t/**\r\n\t * Duration of the animation in milliseconds.\r\n\t */\r\n\tpublic duration: number = 0;\r\n\r\n\t/**\r\n\t * Easing function to use.\r\n\t *\r\n\t * @see {@link Ease}\r\n\t */\r\n\tpublic easing: (value: number) => number = $ease.linear;\r\n\r\n\t/**\r\n\t * Contains progress of the current animation: 0 (start) to 1 (end).\r\n\t */\r\n\tpublic progress: number = 0;\r\n\r\n\t/**\r\n\t * A list of options that cannot be animated. Those will be applied when\r\n\t * Animation ends.\r\n\t */\r\n\tprotected staticOptions!: IAnimationOptions[];\r\n\r\n\t/**\r\n\t * Indicated how many times animation should loop.\r\n\t */\r\n\tprotected _loop: number = 0;\r\n\r\n\t/**\r\n\t * Animation is paused.\r\n\t */\r\n\tprotected _pause: boolean = false;\r\n\r\n\t/**\r\n\t * Holds reference to timeout for delayed play.\r\n\t */\r\n\tprotected _delayTimeout: IDisposer | null = null;\r\n\r\n\t/**\r\n\t * A timestamp of when animation started playing.\r\n\t */\r\n\tprotected _startTime: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Elapsed time in currently playing animation.\r\n\t */\r\n\tprotected _time: number = 0;\r\n\r\n\t// TODO verify that this is correct\r\n\tprotected debug(): void { }\r\n\r\n\tprotected _isFinished: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param object            An object animation should run on\r\n\t * @param animationOptions  One or several (array) of animation options\r\n\t * @param duration          Duration (ms)\r\n\t * @param easing            Easing function\r\n\t */\r\n\tconstructor(object: IAnimatable, animationOptions: IAnimationOptions[] | IAnimationOptions, duration: number, easing?: (value: number) => number) {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Animation\";\r\n\r\n\t\t// Override duration if animations disabled system-wide\r\n\t\tif (options.animationsEnabled === false) {\r\n\t\t\tduration = 0;\r\n\t\t}\r\n\r\n\t\t// Set parameters\r\n\t\tthis.object = object;\r\n\t\tthis.animationOptions = $array.toArray(animationOptions);\r\n\t\tthis.duration = duration;\r\n\t\tif (easing) {\r\n\t\t\tthis.easing = easing;\r\n\t\t}\r\n\r\n\t\t// Run check if there are already animations playing on the same properties\r\n\t\t// and stop them - the last animation takes precedence\r\n\t\t//this.stopSameAnimations();\r\n\r\n\t\t/*if ($type.hasValue(callback)) {\r\n\t\t\t// TODO don't use .call\r\n\t\t\tthis.events.on(\"animationended\", callback, object);\r\n\t\t}*/\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes this object, clears up after itself.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\t\tthis.pause();\r\n\t}\r\n\r\n\t/**\r\n\t * Delays animation start by X milliseconds.\r\n\t *\r\n\t * @param delay  Delay (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic delay(delay: number): Animation {\r\n\t\t//@todo Maybe not use `bind()`\r\n\t\tif (delay > 0) {\r\n\t\t\tthis.pause();\r\n\r\n\t\t\t// This is so that it will get disposed if `this.object` is disposed\r\n\t\t\t// TODO hacky, figure out a better way\r\n\t\t\t$array.move(this.object.animations, this);\r\n\r\n\t\t\tlet id = setTimeout(() => {\r\n\t\t\t\tthis._delayTimeout = null;\r\n\t\t\t\tthis.start();\r\n\t\t\t}, delay);\r\n\r\n\t\t\tthis._delayTimeout = new Disposer(() => {\r\n\t\t\t\tclearTimeout(id);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprivate _start() {\r\n\t\tthis._isFinished = false;\r\n\t\t// Clear delay timeout if there was one\r\n\t\tif (this._delayTimeout) {\r\n\t\t\tthis.removeDispose(this._delayTimeout);\r\n\t\t\tthis._delayTimeout = null;\r\n\t\t}\r\n\r\n\t\t// Run check if there are already animations playing on the same properties\r\n\t\t// and stop them - the last animation takes precedence\r\n\t\tthis.stopSameAnimations();\r\n\r\n\t\t// Reset counters\r\n\t\tthis._pause = false;\r\n\r\n\t\t// Register animation\r\n\t\t$array.move(system.animations, this);\r\n\r\n\t\t// Register this animation in object's `animations` list\r\n\t\t$array.move(this.object.animations, this);\r\n\r\n\t\tsystem.requestFrame();\r\n\t}\r\n\r\n\t/**\r\n\t * Starts animation.\r\n\t *\r\n\t * @return Animation\r\n\t */\r\n\tpublic start(): Animation {\r\n\t\tthis._start();\r\n\t\tthis._startTime = Date.now();\r\n\t\tthis._time = 0;\r\n\t\tthis.staticOptions = [];\r\n\r\n\t\t// Process initial property values\r\n\t\tfor (let i: number = this.animationOptions.length - 1; i >= 0; i--) {\r\n\t\t\tlet options: IAnimationOptions = this.animationOptions[i];\r\n\t\t\tif (!$type.hasValue(options.from)) {\r\n\t\t\t\tif (options.childObject) {\r\n\t\t\t\t\toptions.from = options.childObject[options.property];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\toptions.from = (<any>this.object)[options.property];\r\n\r\n\t\t\t\t\tif (!$type.hasValue(options.from)) {\r\n\t\t\t\t\t\toptions.from = (<any>SVGDefaults)[options.property];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*if (!$type.hasValue(options.from)) {\r\n\t\t\t\t\tthrow Error(\"Could not get initial transition value.\");\r\n\t\t\t\t}*/\r\n\t\t\t}\r\n\r\n\t\t\tif (options.from == options.to) { // || options.to == (<any>this.object)[options.property]){ this is not good, as dataItem.value is set to final at once, and we animate workingValue\r\n\t\t\t\t$array.remove(this.animationOptions, options);\r\n\t\t\t}\r\n\t\t\telse if (!$type.hasValue(options.from) || (!(options.from instanceof Percent) && (options.to instanceof Percent)) || ((options.from instanceof Percent) && !(options.to instanceof Percent))) {\r\n\t\t\t\t// Initial value is undefined, treat it as static\r\n\t\t\t\tthis.staticOptions.push(options);\r\n\t\t\t\t$array.remove(this.animationOptions, options);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Use different update methods for different value types\r\n\t\t\t\tif ($type.isNumber(<number>options.to)) {\r\n\r\n\t\t\t\t\t// Numeric value\r\n\t\t\t\t\toptions.updateMethod = getProgressNumber;\r\n\r\n\t\t\t\t\t// Check if initial value is not Percent\r\n\t\t\t\t\tif (options.from instanceof Percent) {\r\n\t\t\t\t\t\t// It is. Let's convert it to pixel value\r\n\t\t\t\t\t\t// @todo Check if we can do this in a less hacky way\r\n\t\t\t\t\t\tlet convertedFrom: number = (<any>this.object)[getHybridProperty(options.property, \"pixel\")];\r\n\t\t\t\t\t\tif (!isNaN(convertedFrom)) {\r\n\t\t\t\t\t\t\toptions.from = convertedFrom;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.staticOptions.push(options);\r\n\t\t\t\t\t\t\t$array.remove(this.animationOptions, options);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (isNaN(<number>options.from)) {\r\n\t\t\t\t\t\t// Static value\r\n\t\t\t\t\t\tthis.staticOptions.push(options);\r\n\t\t\t\t\t\t$array.remove(this.animationOptions, options);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Check if maybe we have a color or percent value\r\n\t\t\t\t\tif (options.to instanceof Color) {\r\n\t\t\t\t\t\t// Yup - set resolved named color\r\n\t\t\t\t\t\t//options.from = $colors.stringToColor(<string>options.from);\r\n\t\t\t\t\t\tif (options.from) {\r\n\t\t\t\t\t\t\toptions.updateMethod = getProgressColor;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// Static value\r\n\t\t\t\t\t\t\tthis.staticOptions.push(options);\r\n\t\t\t\t\t\t\t$array.remove(this.animationOptions, options);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (options.to instanceof Percent) {\r\n\t\t\t\t\t\t// Percent\r\n\t\t\t\t\t\toptions.updateMethod = getProgressPercent;\r\n\r\n\t\t\t\t\t\t// Check if the initial value is maybe in pixels\r\n\t\t\t\t\t\tif (!isNaN(<number>options.from)) {\r\n\t\t\t\t\t\t\t// It is. Let's convert it\r\n\t\t\t\t\t\t\t// @todo Check if we can do this in a less hacky way\r\n\t\t\t\t\t\t\tlet convertedFrom: number = (<any>this.object)[getHybridProperty(options.property, \"relative\")];\r\n\t\t\t\t\t\t\tif (!isNaN(convertedFrom)) {\r\n\t\t\t\t\t\t\t\toptions.from = percent(convertedFrom * 100);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// Static value\r\n\t\t\t\t\t\tthis.staticOptions.push(options);\r\n\t\t\t\t\t\t$array.remove(this.animationOptions, options);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply static options (just in case they were reset by previous\r\n\t\t// animation loop)\r\n\t\tthis.applyStaticOptions();\r\n\r\n\t\tif (this.events.isEnabled(\"animationstarted\")) {\r\n\t\t\tconst event: AMEvent<this, IAnimationEvents>[\"animationstarted\"] = {\r\n\t\t\t\ttype: \"animationstarted\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tprogress: this.progress\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"animationstarted\", event);\r\n\t\t}\r\n\r\n\t\tthis.update();\r\n\r\n\t\t// If duration is 0, just end animation\r\n\t\tif (this.duration === 0) {\r\n\t\t\tthis.end();\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets loop count for the animation. If parameter is not a valid number the\r\n\t * animation will keep on looping indefinitely.\r\n\t *\r\n\t * @param count  Number of times to loop animation\r\n\t * @return Animation\r\n\t */\r\n\tpublic loop(count?: number): Animation {\r\n\t\tif (!$type.isNumber(count)) {\r\n\t\t\tcount = Infinity;\r\n\t\t}\r\n\t\tthis._loop = count;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Pauses animation.\r\n\t *\r\n\t * @return Animation\r\n\t */\r\n\tpublic pause(): Animation {\r\n\t\tthis._pause = true;\r\n\r\n\t\tif (this._delayTimeout) {\r\n\t\t\tthis.removeDispose(this._delayTimeout);\r\n\t\t\tthis._delayTimeout = null;\r\n\t\t}\r\n\r\n\t\t$array.remove(system.animations, this);\r\n\t\t$array.remove(this.object.animations, this);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Resumes paused animation.\r\n\t *\r\n\t * @return Animation\r\n\t */\r\n\tpublic resume(): Animation {\r\n\t\tthis._start();\r\n\t\tthis._startTime = Date.now() - this._time;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Jumps to animation end. If animation is set to loop, this will start\r\n\t * another round of animation from start.\r\n\t *\r\n\t * @return Animation\r\n\t */\r\n\tpublic end(): Animation {\r\n\r\n\t\t// Pause and complete the progress\r\n\t\tif (this._loop == 0) {\r\n\t\t\tthis.pause();\r\n\t\t}\r\n\t\tthis.setProgress(1);\r\n\r\n\t\t// Apply static options\r\n\t\tthis.applyStaticOptions();\r\n\r\n\t\tif (this.events.isEnabled(\"animationended\")) {\r\n\t\t\tconst event: AMEvent<this, IAnimationEvents>[\"animationended\"] = {\r\n\t\t\t\ttype: \"animationended\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tprogress: this.progress\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"animationended\", event);\r\n\t\t}\r\n\r\n\t\t// Check if we should loop\r\n\t\tif (this._loop > 0) {\r\n\t\t\tthis._loop--;\r\n\t\t\tthis.start();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.stop();\r\n\t\t\tthis._isFinished = true;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Stops animation immediately leaving properties in their current values.\r\n\t */\r\n\tpublic kill() {\r\n\t\tthis.pause();\r\n\t\tthis._isFinished = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns indicator if this animation is finished or not\r\n\t *\r\n\t * @return Is finished?\r\n\t */\r\n\tpublic isFinished(): boolean {\r\n\t\treturn this._isFinished;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies static options that can't be animated.\r\n\t */\r\n\tprotected applyStaticOptions(): void {\r\n\t\t$array.each(this.staticOptions, (options) => {\r\n\t\t\tif (options.childObject) {\r\n\t\t\t\toptions.childObject[options.property] = this.progress == 1 ? options.to : options.from;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.object)[options.property] = this.progress == 1 ? options.to : options.from;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Stops animation.\r\n\t *\r\n\t * When animation is stopped, the properties of the target object will remain\r\n\t * where they were at the moment when `stop()` was called.\r\n\t *\r\n\t * @param skipEvent  Do not trigger `animationstopped` event\r\n\t * @return Animation\r\n\t */\r\n\tpublic stop(skipEvent?: boolean): Animation {\r\n\t\tthis.pause();\r\n\t\tif (!skipEvent) {\r\n\t\t\tif (this.events.isEnabled(\"animationstopped\")) {\r\n\t\t\t\tconst event: AMEvent<this, IAnimationEvents>[\"animationstopped\"] = {\r\n\t\t\t\t\ttype: \"animationstopped\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tprogress: this.progress\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"animationstopped\", event);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current progress and updates object's numeric and color values.\r\n\t *\r\n\t * @param progress Progress (0-1)\r\n\t */\r\n\tpublic setProgress(progress: number): void {\r\n\t\tthis._time = this.duration * progress; // just in case we call this from outside\r\n\t\t$array.each(this.animationOptions, (options) => {\r\n\t\t\tif (options.updateMethod && $type.hasValue(options.from)) {\r\n\t\t\t\tlet value = options.updateMethod(progress, options.from, options.to);\r\n\r\n\t\t\t\tif (options.childObject) {\r\n\t\t\t\t\toptions.childObject[options.property] = value;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t(<any>this.object)[options.property] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.progress = progress;\r\n\t\tif (this.events.isEnabled(\"animationprogress\")) {\r\n\t\t\tconst event: AMEvent<this, IAnimationEvents>[\"animationprogress\"] = {\r\n\t\t\t\ttype: \"animationprogress\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tprogress: this.progress\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"animationprogress\", event);\r\n\t\t}\r\n\r\n\t\tsystem.requestFrame();\r\n\t}\r\n\r\n\t/**\r\n\t * Tracks and sets progress according to time or frames.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Animation\r\n\t */\r\n\tpublic update(): Animation {\r\n\t\tif (!this._pause) {\r\n\r\n\t\t\tlet progress;\r\n\t\t\tthis._time = $math.fitToRange(Date.now() - this._startTime!, 0, this.duration);\r\n\t\t\tlet timeProgress = this._time / this.duration;\r\n\t\t\tprogress = this.easing(timeProgress);\r\n\t\t\tif (this.duration == 0 || !$type.isNumber(progress) || timeProgress >= 1) {\r\n\t\t\t\tprogress = 1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setProgress(progress);\r\n\r\n\t\t\tif ($math.round(this._time / this.duration, 6) == 1) {\r\n\t\t\t\tthis.end();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if this animation is delayed.\r\n\t *\r\n\t * @readonly\r\n\t * @return [description]\r\n\t */\r\n\tpublic get delayed(): boolean {\r\n\t\treturn this._delayTimeout ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks other animations currently running on the same object and removes\r\n\t * overlapping options from those other animations that are contained in\r\n\t * this animation.\r\n\t *\r\n\t * This is needed to ensure that no two confurent animations step on each\r\n\t * other's toes by trying to animate the same property.\r\n\t */\r\n\tprivate stopSameAnimations(): void {\r\n\t\t// stop animation of the same property\r\n\t\t// TODO make this more efficient\r\n\t\t// TODO don't copy the array\r\n\t\t$array.each($array.copy(this.object.animations), (animation) => {\r\n\t\t\tif (animation !== this && !animation.delayed) {\r\n\t\t\t\tconst killed: Array<IAnimationOptions> = [];\r\n\r\n\t\t\t\t$array.each(this.animationOptions, (newOptions) => {\r\n\t\t\t\t\t$array.each(animation.animationOptions, (oldOptions) => {\r\n\t\t\t\t\t\tif (newOptions.property == oldOptions.property && newOptions.childObject == oldOptions.childObject) {\r\n\t\t\t\t\t\t\tkilled.push(oldOptions);\r\n\r\n\t\t\t\t\t\t\tif (animation.animationOptions.length == 0) {\r\n\t\t\t\t\t\t\t\tanimation.kill();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t\t\t$array.each(killed, (oldOptions) => {\r\n\t\t\t\t\t$array.remove(animation.animationOptions, oldOptions);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Adds easing functions to \"function\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn field == \"easing\" || super.asIs(field);\r\n\t}\r\n\r\n}","// Also detects iOS\nexport function isSafari(): boolean {\n\treturn /apple/i.test(navigator.vendor);\n}\n\nexport function isInternetExplorer(): boolean {\n\treturn /MSIE |Trident\\//.test(navigator.userAgent);\n}\n","/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\n\r\n/**\r\n * Events.\r\n */\r\nexport interface IValidatableEvents extends IBaseObjectEvents { }\r\n\r\n\r\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Validatable extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Is invalid and should be revalidated?\r\n\t */\r\n\tprivate _validateDisposer: IDisposer | null = null;\r\n\r\n\t/**\r\n\t * Invalidates the element, so that it can re-validate/redraw itself in the\r\n\t * next cycle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidate(): void {\r\n\t\tif (this._validateDisposer === null) {\r\n\t\t\tthis._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates itself.\r\n\t *\r\n\t * Most probably the extending class will have an overriding `validate()`\r\n\t * method which will do actual work, as well as call this method using\r\n\t * `super.validate()`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this._validateDisposer !== null) {\r\n\t\t\tthis._validateDisposer.dispose();\r\n\t\t\tthis._validateDisposer = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tif (this._validateDisposer !== null) {\r\n\t\t\tthis._validateDisposer.dispose();\r\n\t\t\tthis._validateDisposer = null;\r\n\t\t}\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @todo Review unused functions for removal\r\n * @hidden\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { percent, Percent, isPercent } from \"./Percent\";\r\n\r\n\r\n/**\r\n * @todo Description\r\n * @ignore Exclude from docs\r\n */\r\nexport type Public<T> = {[P in keyof T]: T[P]};\r\n\r\n\r\n/**\r\n * `Keyof<T>` is the same as `keyof T` except it only accepts string keys, not numbers or symbols.\r\n */\r\nexport type Keyof<T> = Extract<keyof T, string>;\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n * @deprecated Is not used anywhere. JS built-in isNaN is used everywhere. Maybe we don't need this, or if we do, then we should use it everywhere\r\n */\r\nexport function isNaN(value: number): boolean {\r\n\treturn Number(value) !== value;\r\n}\r\n\r\n/**\r\n * Represents a type for all available JavaScript variable types.\r\n */\r\nexport type Type\r\n\t= \"[object Object]\"\r\n\t| \"[object Array]\"\r\n\t| \"[object String]\"\r\n\t| \"[object Number]\"\r\n\t| \"[object Boolean]\"\r\n\t| \"[object Date]\";\r\n\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n */\r\nexport function getType<A>(value: A): Type {\r\n\treturn ({}).toString.call(value) as Type;\r\n}\r\n\r\n/**\r\n * Returns a default value if the passed in value is empty.\r\n *\r\n * @param value     Input value\r\n * @param optional  Default value\r\n * @return Value or default value whichever is available\r\n * @deprecated Not used anywhere\r\n */\r\nexport function getDefault<A>(value: null | undefined | A, optional: A): A {\r\n\treturn value || optional;\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is a string.\r\n *\r\n * @param value  Value\r\n * @return Is string?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkString(value: any): value is string {\r\n\tif (typeof value === \"string\") {\r\n\t\treturn true;\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a string but got \" + getType(value));\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is a boolean.\r\n *\r\n * @param value  Value\r\n * @return Is boolean?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkBoolean(value: any): value is boolean {\r\n\tif (typeof value === \"boolean\") {\r\n\t\treturn true;\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a boolean but got \" + getType(value));\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is a number.\r\n *\r\n * @param value  Value\r\n * @return Is number?\r\n * @throws {Error}\r\n */\r\nexport function checkNumber(value: any): value is number {\r\n\tif (typeof value === \"number\") {\r\n\t\tif (isNaN(value)) {\r\n\t\t\tthrow new Error(\"Expected a number but got NaN\");\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a number but got \" + getType(value));\r\n\t}\r\n\treturn true;\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is an object.\r\n *\r\n * @param value  Value\r\n * @return Is object?\r\n * @throws {Error}\r\n * @todo Is the input type correct?\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkObject(value: {}): value is {} {\r\n\tconst t = getType(value);\r\n\r\n\tif (t === \"[object Object]\") {\r\n\t\treturn true;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Expected an object but got \" + t);\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is an array.\r\n *\r\n * @param value  Value\r\n * @return Is array?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkArray<A>(value: Array<A>): value is Array<A> {\r\n\tif (Array.isArray(value)) {\r\n\t\treturn true;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Expected an array but got \" + getType(value));\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if the passed in value is a Date object.\r\n *\r\n * @param value  Value\r\n * @return Is Date object?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkDate(value: Date): value is Date {\r\n\tconst t = getType(value);\r\n\r\n\tif (t === \"[object Date]\") {\r\n\t\treturn true;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a date but got \" + t);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * TYPE CASTING\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Casts string or a number into string.\r\n *\r\n * @param value  Input\r\n * @return String value\r\n * @deprecated Not used anywhere\r\n */\r\nexport function castString(value: string | number): string {\r\n\tif (typeof value === \"string\") {\r\n\t\treturn value;\r\n\r\n\t} else if (typeof value === \"number\") {\r\n\t\treturn \"\" + value;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Expected a string or number but got \" + getType(value));\r\n\t}\r\n}\r\n\r\n/**\r\n * Casts string or a number into a number.\r\n *\r\n * @param value   Input value\r\n * @return Number  value\r\n * @throws {Error}\r\n */\r\nexport function castNumber(value: string | number | Date): number {\r\n\tif (typeof value === \"string\") {\r\n\t\tconst number = +value;\r\n\r\n\t\tif (isNaN(number)) {\r\n\t\t\tthrow new Error(\"Cannot cast string \" + JSON.stringify(value) + \" to a number\");\r\n\r\n\t\t} else {\r\n\t\t\treturn number;\r\n\t\t}\r\n\r\n\t} else if (typeof value === \"number\") {\r\n\t\tif (isNaN(value)) {\r\n\t\t\tthrow new Error(\"Expected a number but got NaN\");\r\n\r\n\t\t} else {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t} else {\r\n\t\tconst t = getType(value);\r\n\r\n\t\tif (t === \"[object Date]\") {\r\n\t\t\treturn value.getTime();\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Expected a string, number, or date but got \" + t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Casts number, string or Date into a Date object.\r\n *\r\n * @param value  Input value\r\n * @return Date object\r\n * @deprecated Not used anywhere\r\n * @throws {Error}\r\n * @hidden\r\n * @deprecated\r\n */\r\n/*export function castDate(value: string | number | Date, formatter?: DateFormatter): Date {\r\n\tif (typeof value === \"string\") {\r\n\t\tif (formatter) {\r\n\t\t\treturn formatter.parse(value);\r\n\t\t}\r\n\t\treturn new Date(value);\r\n\r\n\t} else if (typeof value === \"number\") {\r\n\t\treturn new Date(value);\r\n\r\n\t} else {\r\n\t\tconst t = getType(value);\r\n\r\n\t\tif (t === \"[object Date]\") {\r\n\t\t\treturn value;\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Expected a string, number, or date but got \" + t);\r\n\t\t}\r\n\t}\r\n}*/\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * Converts any value into `boolean`.\r\n *\r\n * @param value  Source value\r\n * @return `true` or `false`\r\n */\r\nexport function toBoolean(value: any): boolean {\r\n\treturn value ? true : false;\r\n}\r\n\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value: any): number {\r\n\tif (hasValue(value) && !isNumber(value)) {\r\n\t\tlet converted = Number(value);\r\n\t\tif (isNaN(converted) && isString(value) && value != \"\") {\r\n\t\t\treturn toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n\t\t}\r\n\t\treturn converted;\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Converts any value into a string (text).\r\n *\r\n * @param value  Source value\r\n * @return String representation of the input\r\n */\r\nexport function toText(value: any): string {\r\n\tif (hasValue(value) && !isString(value)) {\r\n\t\tif (isNumber(value)) {\r\n\t\t\treturn castString(value);\r\n\t\t}\r\n\t\telse if (isObject(value)) {\r\n\t\t\treturn value.toString();\r\n\t\t}\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Converts any value to a number or [[Percent]].\r\n *\r\n * If the parameter is a string and contains \"%\", it will\r\n * convert it into a [[Percent]].\r\n *\r\n * Otherwise, it will convert into a number.\r\n *\r\n * @param value  Number or percent\r\n * @return Percent object\r\n */\r\nexport function toNumberOrPercent(value: any): number | Percent {\r\n\tif (!hasValue(value) || isNumber(value) || isPercent(value)) {\r\n\t\treturn value;\r\n\t}\r\n\tif (isString(value) && value.indexOf(\"%\") != -1) {\r\n\t\treturn percent(toNumber(value));\r\n\t}\r\n\treturn toNumber(value);\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * VALUE PRESENCE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an optional value that can be of any type or `undefined`.\r\n */\r\nexport type Optional<A> = A | undefined;\r\n\r\n/**\r\n * Checks if a variable has a value.\r\n *\r\n * @param a  Input value\r\n * @returns                        Has value?\r\n */\r\nexport function hasValue<A>(a: Optional<A> | null): a is A {\r\n\treturn a != null;\r\n}\r\n\r\n/**\r\n * Returns a value or throws an {Error} exception if the variable has not\r\n * value.\r\n *\r\n * @param a  Input value\r\n * @returns                        Value\r\n */\r\nexport function getValue<A>(a: Optional<A> | null): A {\r\n\tif (hasValue(a)) {\r\n\t\treturn a;\r\n\r\n\t} else {\r\n\t\tthrow new Error(\"Value doesn't exist\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns a value, or returns the default value if it doesn't have a value.\r\n *\r\n * @param a  Input value\r\n * @returns                        Value\r\n */\r\nexport function getValueDefault<A>(a: Optional<A> | null, defaultValue: A): A {\r\n\tif (hasValue(a)) {\r\n\t\treturn a;\r\n\r\n\t} else {\r\n\t\treturn defaultValue;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value: any): value is Date {\r\n\treturn getType(value) === \"[object Date]\";\r\n}\r\n\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value: any): value is string {\r\n\treturn typeof value === \"string\";\r\n}\r\n\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value: any): value is number {\r\n\treturn typeof value === \"number\" && Number(value) == value;\r\n}\r\n\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value: any): value is object {\r\n\treturn typeof value === \"object\" && value != null;\r\n}\r\n\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value: any): value is Array<any> {\r\n\treturn Array.isArray(value);\r\n}\r\n","/**\r\n * Handles formatting of pseudo-markup in text.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { AMElement } from \"../rendering/AMElement\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * Defines an interface for an object that holds a chunk of text.\r\n */\r\nexport interface ITextChunk {\r\n\r\n\t/**\r\n\t * Type of the chunk.\r\n\t */\r\n\t\"type\": \"value\" | \"text\" | \"format\" | \"image\",\r\n\r\n\t/**\r\n\t * Text.\r\n\t */\r\n\t\"text\": string\r\n\r\n}\r\n\r\n/**\r\n * A list of Adapters for [[TextFormatter]].\r\n */\r\nexport interface ITextFormatterAdapters {\r\n\r\n\t/**\r\n\t * Applied to each chunk of text when it is parsed and added to chunk list.\r\n\t */\r\n\tchunk: string\r\n\r\n}\r\n\r\n/**\r\n * Handles formatting of pseudo-markdown in text.\r\n *\r\n * @todo Encode < > in output\r\n * @todo Add more adapters\r\n * @important\r\n */\r\nexport class TextFormatter extends BaseObject {\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITextFormatterAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter = new Adapter<TextFormatter, ITextFormatterAdapters>(this);\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"TextFormatter\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected debug(): void { }\r\n\r\n\t/**\r\n\t * Formats the text according to specifications passed in.\r\n\t *\r\n\t * @param text    Text to format\r\n\t * @param output  Output format (svg, html)\r\n\t * @return Formatted text\r\n\t */\r\n\tpublic format(text: string, output?: string): string {\r\n\r\n\t\t// Apply default\r\n\t\tif (!$type.hasValue(output)) {\r\n\t\t\toutput = \"svg\";\r\n\t\t}\r\n\r\n\t\t// Init return value\r\n\t\tlet formatted: string = \"\";\r\n\r\n\t\t// Replace double (escaped) square spaces with remporary codes\r\n\t\ttext = this.escape(text);\r\n\r\n\t\t// Divvy up the string by style tags\r\n\t\tlet styles: string[] | null = text.match(/\\[([^\\]]*?)\\]/gm);\r\n\r\n\t\tif (!styles) {\r\n\t\t\t// Nothing to do here - no formatting elements\r\n\t\t\treturn this.wrap(text, \"\", output);\r\n\t\t}\r\n\r\n\t\t// Get pure text - no style tags\r\n\t\tlet texts: string[] = text.split(/\\[[^\\[\\]]*\\]/);\r\n\r\n\t\t// Go through each of the texts and wrap it in style tags\r\n\t\tfor (let i = 0, len = texts.length; i < len; i++) {\r\n\r\n\t\t\t// Get text bit\r\n\t\t\tlet t: string = texts[i];\r\n\r\n\t\t\t// Check if string is empty\r\n\t\t\tif (t === \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// Run through an adapter\r\n\t\t\tt = this.adapter.apply(\"chunk\", t);\r\n\r\n\t\t\t// Get related style\r\n\t\t\tlet s: string = \"\";\r\n\t\t\tif (i > 0) {\r\n\t\t\t\ts = styles[i - 1].replace('[', '').replace(']', '');\r\n\t\t\t}\r\n\r\n\t\t\t// Wrap text in tag\r\n\t\t\tformatted += this.wrap(t, s, output);\r\n\t\t}\r\n\r\n\t\t// Replace placeholders back\r\n\t\tformatted = this.unescape(formatted);\r\n\r\n\t\t// Return result\r\n\t\treturn this.cleanUp(formatted);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces brackets with temporary placeholders.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text  Input text\r\n\t * @return Escaped text\r\n\t */\r\n\tpublic escape(text: string): string {\r\n\t\treturn text.\r\n\t\t\treplace(/\\[\\[/g, registry.getPlaceholder(\"1\")).\r\n\t\t\treplace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + registry.getPlaceholder(\"2\")).\r\n\t\t\treplace(/\\]\\]/g, registry.getPlaceholder(\"2\")).\r\n\t\t\treplace(/\\{\\{/g, registry.getPlaceholder(\"3\")).\r\n\t\t\treplace(/\\}\\}/g, registry.getPlaceholder(\"4\")).\r\n\t\t\treplace(/\\'\\'/g, registry.getPlaceholder(\"5\"));\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces placeholders back to brackets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text  Escaped text\r\n\t * @return Unescaped text\r\n\t */\r\n\tpublic unescape(text: string): string {\r\n\t\treturn text.\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"1\"), \"g\"), \"[[\").\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"2\"), \"g\"), \"]]\").\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"3\"), \"g\"), \"{{\").\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"4\"), \"g\"), \"}}\").\r\n\t\t\treplace(new RegExp(registry.getPlaceholder(\"5\"), \"g\"), \"''\");\r\n\t}\r\n\r\n\t/**\r\n\t * Cleans up the text text for leftover double square brackets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text  Input text\r\n\t * @return Cleaned up text\r\n\t */\r\n\tpublic cleanUp(text: string): string {\r\n\t\treturn text.\r\n\t\t\treplace(/\\[\\[/g, \"[\").\r\n\t\t\treplace(/\\]\\]/g, \"]\").\r\n\t\t\treplace(/\\{\\{/g, \"{\").\r\n\t\t\treplace(/\\}\\}/g, \"}\").\r\n\t\t\treplace(/\\'\\'/g, \"'\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps text into corresponding tags.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text   Text to wrap\r\n\t * @param style  Styles\r\n\t * @param output  Format to output in (svg, html)\r\n\t * @return Formatted string\r\n\t */\r\n\tpublic wrap(text: string, style: string, output: string): string {\r\n\r\n\t\tif (style === \"\" || style === \"/\") {\r\n\t\t\t//return text;\r\n\t\t\tstyle = \"\";\r\n\t\t}\r\n\r\n\t\tswitch (output) {\r\n\t\t\tcase \"html\":\r\n\t\t\t\treturn this.wrapHtml(text, this.translateStyleShortcuts(style));\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.wrapSvg(text, this.translateStyleShortcuts(style));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps text in styled SVG tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text   Text to wrap\r\n\t * @param style  Style property\r\n\t * @return Formatted tag\r\n\t */\r\n\tpublic wrapSvg(text: string, style: string): string {\r\n\t\tif (style === \"\") {\r\n\t\t\treturn \"<tspan>\" + text + \"</tspan>\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn \"<tspan style='\" + style + \"'>\" + text + \"</tspan>\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG `<tspan>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text   Text\r\n\t * @param style  Style\r\n\t * @return Element\r\n\t */\r\n\tpublic getSvgElement(text: string, style?: string): AMElement {\r\n\t\tlet element = new AMElement(\"tspan\");\r\n\t\telement.textContent = text;\r\n\t\tif (style) {\r\n\t\t\telement.node.setAttribute(\"style\", style);\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Wraps text in HTML <span> tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text   Text to wrap\r\n\t * @param style  Style property\r\n\t * @return Formatted tag\r\n\t * @todo Translate SVG styles into HTML ones\r\n\t */\r\n\tpublic wrapHtml(text: string, style: string): string {\r\n\t\tif (style === \"\") {\r\n\t\t\treturn \"<span>\" + text + \"</span>\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn \"<span style='\" + this.styleSvgToHtml(style) + \"'>\" + text + \"</span>\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an HTML `<span>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text   Text/HTML\r\n\t * @param style  Style definition\r\n\t * @return HTML element\r\n\t */\r\n\tpublic getHtmlElement(text: string, style?: string): HTMLElement {\r\n\t\tlet element = document.createElement(\"span\");\r\n\t\telement.innerHTML = text;\r\n\t\tif (style) {\r\n\t\t\telement.setAttribute(\"style\", style);\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Trabslates SVG CSS into HTML CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param style  SVG CSS\r\n\t * @return HTML CSS\r\n\t * @todo Implement actual translation\r\n\t */\r\n\tpublic styleSvgToHtml(style: string): string {\r\n\t\tstyle = style.replace(/fill:/, \"color:\");\r\n\t\treturn style;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates style shortcuts into full styles, i.e.:\r\n\t * \"bold\" => \"font-weight: bold\"\r\n\t * \"#f00\" => \"fill: #f00\"\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param style  Untranslated style\r\n\t * @return Translated style\r\n\t * @todo Implement actual translation\r\n\t */\r\n\tpublic translateStyleShortcuts(style: string): string {\r\n\r\n\r\n\t\tif (style == \"\" || style == \"[ ]\") {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\r\n\t\tlet cached = registry.getCache(\"translateStyleShortcuts_\" + style);\r\n\t\tif (cached) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\r\n\t\t// Pre-process quoted text\r\n\t\tconst q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\r\n\t\tif (q) {\r\n\t\t\tfor (let i: number = 0; i < q.length; i++) {\r\n\t\t\t\tstyle = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get style parts\r\n\t\tlet b: string[] | null = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w]+)|(\\/)/gi);\r\n\r\n\t\t// Empty?\r\n\t\tif (!b) {\r\n\t\t\treturn style;\r\n\t\t}\r\n\r\n\t\t// Check each part\r\n\t\tfor (let i: number = 0; i < b.length; i++) {\r\n\r\n\t\t\tif (b[i].match(/^bold$/i)) {\r\n\t\t\t\t// Bold\r\n\t\t\t\tb[i] = \"font-weight:\" + b[i];\r\n\t\t\t}\r\n\t\t\telse if (b[i] == \"/\") {\r\n\t\t\t\t// Just closing tag\r\n\t\t\t\t// Do nothing\r\n\t\t\t\tb[i] = \"\";\r\n\t\t\t}\r\n\t\t\telse if (!b[i].match(/:/)) {\r\n\t\t\t\t// Color\r\n\t\t\t\tb[i] = \"fill:\" + b[i];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tb[i] = b[i].replace(/\\+/g, \" \");\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet res = b.join(';');\r\n\t\tregistry.setCache(\"translateStyleShortcuts_\" + style, res);\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n\t *\r\n\t * If the second parameter `quotedBlocks` is set to `true` this method will\r\n\t * also single out text blocks enclosed within single quotes that no\r\n\t * formatting should be applied to, and they should be displayed as is.\r\n\t *\r\n\t * Default for the above is `false`, so that you can use single quote in text\r\n\t * without escaping it.\r\n\t *\r\n\t * If enabled, single quotes can be escaped by doubling it - adding two\r\n\t * single quotes, which will be replaced by a one single quote in the final\r\n\t * output.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text          Text to chunk\r\n\t * @param quotedBlocks  Use quoted blocks\r\n\t * @param noFormatting  Formatting blocks will be treated as regular text\r\n\t * @return Array of string chunks\r\n\t */\r\n\tpublic chunk(text: string, quotedBlocks: boolean = false, noFormatting: boolean = false): ITextChunk[] {\r\n\r\n\t\t// Init result\r\n\t\tlet res: ITextChunk[] = [];\r\n\r\n\t\t// Replace double (escaped) square spaces and quotes with temporary codes\r\n\t\ttext = this.escape(text);\r\n\r\n\t\t// Deal with style blocks\r\n\t\tlet chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\tlet chunk = chunks[i];\r\n\r\n\t\t\t// Empty?\r\n\t\t\tif (chunk === \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif ((i % 2) === 0) {\r\n\r\n\t\t\t\t// Text outside quotes\r\n\t\t\t\t// Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n\t\t\t\t// \"value\"\r\n\r\n\t\t\t\tchunk = chunk.replace(/\\]\\[/g, \"]\" + $strings.PLACEHOLDER + \"[\");\r\n\t\t\t\tchunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\r\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\r\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n\r\n\t\t\t\t\t// Placeholder?\r\n\t\t\t\t\tif (chunk2 === $strings.PLACEHOLDER) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Empty?\r\n\t\t\t\t\tif (chunk2 === \"\") {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Block or value\r\n\t\t\t\t\tif ((i2 % 2) === 0) {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": \"value\",\r\n\t\t\t\t\t\t\t\"text\": this.adapter.apply(\"chunk\", chunk2)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": noFormatting ? \"value\" : \"format\",\r\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// A text within doublequotes\r\n\t\t\t\t// All chunks are \"text\"\r\n\r\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\r\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\r\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n\r\n\t\t\t\t\t// Empty?\r\n\t\t\t\t\tif (chunk2 === \"\") {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Block or text\r\n\t\t\t\t\tif ((i2 % 2) === 0) {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\t\t\t\"text\": chunk2\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.isImage(chunk2)) {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": \"image\",\r\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tres.push({\r\n\t\t\t\t\t\t\t\"type\": \"format\",\r\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if supplied format contains image information and should be\r\n\t * formatted as such.\r\n\t * I.e.: `[img: myImage.png]`\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text  Format\r\n\t * @return `true` if it is an image\r\n\t */\r\n\tpublic isImage(text: string): boolean {\r\n\t\treturn text.match(/img[ ]?:/) ? true : false;\r\n\t}\r\n\r\n}\r\n\r\n\r\nlet formatter: TextFormatter;\r\n\r\n/**\r\n * Returns the global instance of [[TextFormatter]].\r\n *\r\n * All classes and instances should reuse this universal text formatter,\r\n * rather than create their own instance of it.\r\n */\r\nexport function getTextFormatter(): TextFormatter {\r\n\tif (formatter == null) {\r\n\t\tformatter = new TextFormatter();\r\n\t}\r\n\r\n\treturn formatter;\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TextFormatter\"] = TextFormatter;\r\n","/**\r\n * A collection of DOM-related functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, IDisposer } from \"./Disposer\";\r\nimport { readFrame, writeFrame } from \"./AsyncPending\";\r\nimport { options } from \"../Options\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * SVG namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const SVGNS: string = \"http://www.w3.org/2000/svg\";\r\n\r\n/**\r\n * XML namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const XMLNS: string = \"http://www.w3.org/2000/xmlns/\";\r\n\r\n/**\r\n * XLINK namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const XLINK: string = \"http://www.w3.org/1999/xlink\";\r\n\r\n\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener<E extends Event>(dom: EventTarget, type: string, listener: (event: E) => void, options?: any): IDisposer {\r\n\t//@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n\t//console.log(type, dom);\r\n\tdom.addEventListener(type, <EventListener>listener, options || false);\r\n\r\n\treturn new Disposer(() => {\r\n\t\tdom.removeEventListener(type, <EventListener>listener, options || false);\r\n\t});\r\n}\r\n\r\n/**\r\n * Finds and returns an element reference using following logic:\r\n * * If we pass in an element instance, we just return it back.\r\n * * If we pass in a string, the function looks for an element with such id.\r\n * * If no element with such id is found, we grab the first element with a tag name like this.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element definition (reference, or id, or tag name)\r\n * @return Element reference\r\n * @todo Review this function as it seems pretty fuzzy and hacky\r\n */\r\nexport function getElement(el: $type.Optional<HTMLElement | string>): $type.Optional<HTMLElement> {\r\n\tif ($type.isString(el)) {\r\n\t\tlet e: Element | null = document.getElementById(el);\r\n\r\n\t\tif (e == null) {\r\n\t\t\te = document.getElementsByClassName(el)[0];\r\n\t\t}\r\n\r\n\t\tif (e instanceof HTMLElement) {\r\n\t\t\treturn e;\r\n\t\t}\r\n\r\n\t} else if (el instanceof HTMLElement) {\r\n\t\treturn el;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element: HTMLElement | SVGSVGElement, className: string): void {\r\n\tif (!element) {\r\n\t\treturn;\r\n\t}\r\n\tif (element.classList) {\r\n\t\tconst classes = className.split(\" \");\r\n\t\t$array.each(classes, (name) => {\r\n\t\t\telement.classList.add(name);\r\n\t\t});\r\n\t}\r\n\telse {\r\n\t\tlet currentClassName = element.getAttribute(\"class\");\r\n\t\tif (currentClassName) {\r\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n\t\t\t\treturn item !== className;\r\n\t\t\t}).join(\" \") + \" \" + className);\r\n\t\t}\r\n\t\telse {\r\n\t\t\telement.setAttribute(\"class\", className);\r\n\t\t}\r\n\t\t//element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\") + \" \" + className;\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element: HTMLElement | SVGSVGElement, className: string): void {\r\n\tif (!element) {\r\n\t\treturn;\r\n\t}\r\n\tif (element.classList) {\r\n\t\telement.classList.remove(className);\r\n\t}\r\n\telse {\r\n\t\tlet currentClassName = element.getAttribute(\"class\");\r\n\t\tif (currentClassName) {\r\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n\t\t\t\treturn item !== className;\r\n\t\t\t}).join(\" \"));\r\n\t\t}\r\n\t\t//element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Still needed?\r\n */\r\nexport function setStyle(element: HTMLElement | SVGSVGElement, property: string, value: string): void {\r\n\t(<any>element.style)[property] = value;\r\n}\r\n\r\n/**\r\n * Gets the computed style value for an element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function getComputedStyle(element: Element, property: string): string | number {\r\n\r\n\tif ((<any>element).currentStyle) {\r\n\t\treturn (<any>element).currentStyle[property];\r\n\t}\r\n\r\n\treturn document.defaultView.getComputedStyle(element, null).getPropertyValue(property);\r\n}\r\n\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function blur(): void {\r\n\tif (document.activeElement && document.activeElement != document.body) {\r\n\t\tif ((<any>document.activeElement).blur) {\r\n\t\t\t(<any>document.activeElement).blur();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet input = document.createElement(\"button\");\r\n\t\t\tinput.style.position = \"fixed\";\r\n\t\t\tinput.style.top = \"0px\";\r\n\t\t\tinput.style.left = \"-10000px\";\r\n\t\t\tdocument.body.appendChild(input);\r\n\t\t\tinput.focus();\r\n\t\t\tinput.blur();\r\n\t\t\tdocument.body.removeChild(input);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Tries to focus the element.\r\n *\r\n * @ignore Exlude from docs\r\n * @param element  Element to focus\r\n */\r\nexport function focus(element: HTMLElement | SVGSVGElement): void {\r\n\r\n\tif (element instanceof HTMLElement) {\r\n\t\telement.focus();\r\n\t}\r\n\telse {\r\n\t\tlet input = document.createElement(\"input\");\r\n\t\tlet fo = <SVGSVGElement>document.createElementNS(SVGNS, \"foreignObject\");\r\n\t\tfo.appendChild(input);\r\n\t\telement.appendChild(fo);\r\n\t\tinput.focus();\r\n\t\tinput.disabled = true;\r\n\t\tfo.remove();\r\n\t}\r\n\r\n\t/*if ((<any>element).focus != undefined) {\r\n\t\t(<any>element).focus();\r\n\t}\r\n\telse if (element instanceof SVGSVGElement) {\r\n\t\t// Not implemented\r\n\t\t// @todo implement focus fallback\r\n\t}*/\r\n}\r\n\r\n/**\r\n * Returns markup for the element including the element tag itself.\r\n * SVG elements do not support `outerHTML` so this functions applies of\r\n * a workaround which creates a new temporary wrapper, clones element and uses\r\n * wrapper's `innerHTML`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element to get full markup for\r\n * @return Markup\r\n * @deprecated Not in use anywhere\r\n */\r\nexport function outerHTML(element: HTMLElement | SVGSVGElement): string {\r\n\tif (element.outerHTML) {\r\n\t\treturn element.outerHTML;\r\n\t}\r\n\telse {\r\n\t\tlet twrap = document.createElement(\"div\");\r\n\t\tlet tnode = element.cloneNode(true);\r\n\t\ttwrap.appendChild(tnode);\r\n\t\tlet content = twrap.innerHTML;\r\n\t\treturn content;\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if element is a valid DOM node.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element\r\n * @return `true` if element is a valid DOM node\r\n */\r\nexport function isElement(el: HTMLElement): boolean {\r\n\treturn el instanceof Object && el && el.nodeType === 1;\r\n}\r\n\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a: HTMLElement | SVGSVGElement, b: HTMLElement | SVGSVGElement): boolean {\r\n\tlet cursor: Node = b;\r\n\r\n\twhile (true) {\r\n\t\tif (a === cursor) {\r\n\t\t\treturn true;\r\n\r\n\t\t} else if (cursor.parentNode == null) {\r\n\t\t\t// TODO better ShadowRoot detection\r\n\t\t\tif ((<ShadowRoot>cursor).host == null) {\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tcursor = (<ShadowRoot>cursor).host;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcursor = cursor.parentNode;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a: Node): ShadowRoot | null {\r\n\tlet cursor: Node = a;\r\n\r\n\twhile (true) {\r\n\t\tif (cursor.parentNode == null) {\r\n\t\t\t// TODO better ShadowRoot detection\r\n\t\t\tif ((<ShadowRoot>cursor).host != null) {\r\n\t\t\t\treturn <ShadowRoot>cursor;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcursor = cursor.parentNode;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns the root of the element (either the Document or the ShadowRoot)\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getRoot(a: Node): Document | ShadowRoot | null {\r\n\t// TODO replace with Node.prototype.getRootNode\r\n\tconst owner = a.ownerDocument;\r\n\r\n\tlet cursor: Node = a;\r\n\r\n\twhile (true) {\r\n\t\tif (cursor.parentNode == null) {\r\n\t\t\t// If the cursor is the document, or it is a ShadowRoot\r\n\t\t\t// TODO better ShadowRoot detection\r\n\t\t\tif (cursor === owner || (<ShadowRoot>cursor).host != null) {\r\n\t\t\t\treturn <Document | ShadowRoot>cursor;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcursor = cursor.parentNode;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Gets the true target of the Event.\r\n *\r\n * This is needed to make events work with the shadow DOM.\r\n *\r\n * @param event  Event\r\n * @return EventTarget\r\n */\r\nexport function eventTarget(event: Event): EventTarget {\r\n\tif (typeof (<any>event).composedPath === \"function\") {\r\n\t\treturn (<any>event).composedPath()[0];\r\n\r\n\t} else {\r\n\t\treturn event.target;\r\n\t}\r\n}\r\n\r\n/**\r\n * Copies attributes from one element to another.\r\n *\r\n * @ignore Exclude from docs\r\n * @param source  Element to copy attributes from\r\n * @param target  Element to copy attributes to\r\n */\r\nexport function copyAttributes(source: Element | HTMLElement | SVGSVGElement, target: HTMLElement | SVGSVGElement): void {\r\n\t$array.each(source.attributes, (attr) => {\r\n\t\t// TODO what if it's null ?\r\n\t\tif (attr.value != null) {\r\n\t\t\ttarget.setAttribute(attr.name, attr.value);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * [fixPixelPerfect description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param el  Element\r\n */\r\nexport function fixPixelPerfect(el: HTMLElement): void {\r\n\treadFrame(() => {\r\n\t\t// sometimes IE doesn't like this\r\n\t\t// TODO figure out a way to remove this\r\n\t\ttry {\r\n\t\t\tconst rect = el.getBoundingClientRect();\r\n\r\n\t\t\tconst left = rect.left - Math.round(rect.left);\r\n\t\t\tconst top = rect.top - Math.round(rect.top);\r\n\r\n\t\t\tif (left !== 0) {\r\n\t\t\t\twriteFrame(() => {\r\n\t\t\t\t\tel.style.left = left + \"px\";\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (top !== 0) {\r\n\t\t\t\twriteFrame(() => {\r\n\t\t\t\t\tel.style.top = top + \"px\";\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} catch (e) { }\r\n\t});\r\n}\r\n\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet: $type.Optional<CSSStyleSheet>;\r\n\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element: ShadowRoot | null): CSSStyleSheet {\r\n\tif (element == null) {\r\n\t\tif (!$type.hasValue(rootStylesheet)) {\r\n\t\t\t// TODO use createElementNS ?\r\n\t\t\tconst e = document.createElement(\"style\");\r\n\t\t\te.type = \"text/css\";\r\n\t\t\tif (options.nonce != \"\") {\r\n\t\t\t\te.setAttribute(\"nonce\", options.nonce)\r\n\t\t\t}\r\n\t\t\tdocument.head.appendChild(e);\r\n\t\t\trootStylesheet = e.sheet as CSSStyleSheet;\r\n\t\t}\r\n\r\n\t\treturn rootStylesheet;\r\n\r\n\t} else {\r\n\t\t// TODO use createElementNS ?\r\n\t\tconst e = document.createElement(\"style\");\r\n\t\te.type = \"text/css\";\r\n\t\tif (options.nonce != \"\") {\r\n\t\t\te.setAttribute(\"nonce\", options.nonce)\r\n\t\t}\r\n\t\telement.appendChild(e);\r\n\t\treturn e.sheet as CSSStyleSheet;\r\n\t}\r\n}\r\n\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root: CSSStyleSheet, selector: string): CSSStyleRule {\r\n\tconst index = root.cssRules.length;\r\n\r\n\troot.insertRule(selector + \"{}\", index);\r\n\r\n\treturn root.cssRules[index] as CSSStyleRule;\r\n}\r\n\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends Disposer {\r\n\r\n\t/**\r\n\t * CSS rule.\r\n\t */\r\n\tprivate _rule: CSSStyleRule;\r\n\r\n\t/**\r\n\t * A CSS selector text.\r\n\t *\r\n\t * E.g.: `.myClass p`\r\n\t *\r\n\t * @param selector  CSS selector\r\n\t */\r\n\tpublic set selector(selector: string) {\r\n\t\tthis._rule.selectorText = selector;\r\n\t}\r\n\r\n\t/**\r\n\t * @return CSS selector\r\n\t */\r\n\tpublic get selector(): string {\r\n\t\treturn this._rule.selectorText;\r\n\t}\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param selector  CSS selector\r\n\t * @param styles    An object of style attribute - value pairs\r\n\t */\r\n\tconstructor(element: ShadowRoot | null, selector: string, styles: { [name: string]: string }) {\r\n\t\tconst root = getStylesheet(element);\r\n\r\n\t\t// TODO test this\r\n\t\tsuper(() => {\r\n\t\t\t// TODO a bit hacky\r\n\t\t\tconst index = $array.indexOf(root.cssRules, this._rule);\r\n\r\n\t\t\tif (index === -1) {\r\n\t\t\t\tthrow new Error(\"Could not dispose StyleRule\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// TODO if it's empty remove it from the DOM ?\r\n\t\t\t\troot.deleteRule(index);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._rule = appendStylesheet(root, selector);\r\n\r\n\t\t$object.each(styles, (key, value) => {\r\n\t\t\tthis.setStyle(key, value);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the same style properties with browser-specific prefixes.\r\n\t *\r\n\t * @param name   Attribute name\r\n\t * @param value  Attribute value\r\n\t */\r\n\tprivate _setVendorPrefixName(name: string, value: string): void {\r\n\t\tconst style = this._rule.style;\r\n\t\tstyle.setProperty(\"-webkit-\" + name, value, \"\");\r\n\t\tstyle.setProperty(\"-moz-\" + name, value, \"\");\r\n\t\tstyle.setProperty(\"-ms-\" + name, value, \"\");\r\n\t\tstyle.setProperty(\"-o-\" + name, value, \"\");\r\n\t\tstyle.setProperty(name, value, \"\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a value for specific style attribute.\r\n\t *\r\n\t * @param name   Attribute\r\n\t * @param value  Value\r\n\t */\r\n\tpublic setStyle(name: string, value: string): void {\r\n\t\tif (name === \"transition\") {\r\n\t\t\tthis._setVendorPrefixName(name, value);\r\n\r\n\t\t} else {\r\n\t\t\tthis._rule.style.setProperty(name, value, \"\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * An internal counter for unique style ids.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nlet styleId: number = 0;\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class StyleClass extends StyleRule {\r\n\r\n\t/**\r\n\t * Class name.\r\n\t */\r\n\tprivate _className: string;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param styles  An object of style attribute - value pairs\r\n\t * @param name    Class name\r\n\t */\r\n\tconstructor(element: ShadowRoot | null, styles: { [name: string]: string }, name?: string) {\r\n\t\tconst className =\r\n\t\t\t(!$type.hasValue(name)\r\n\t\t\t\t// TODO generate the classname randomly\r\n\t\t\t\t? \"__style_\" + (++styleId) + \"__\"\r\n\t\t\t\t: name);\r\n\r\n\t\tsuper(element, \".\" + className, styles);\r\n\r\n\t\tthis._className = className;\r\n\t}\r\n\r\n\t/**\r\n\t * Class name.\r\n\t *\r\n\t * @param name  Class name\r\n\t */\r\n\tpublic set className(name: string) {\r\n\t\tthis._className = name;\r\n\t\tthis.selector = \".\" + name;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Class name\r\n\t */\r\n\tpublic get className(): string {\r\n\t\treturn this._className;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the whole class to\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic toString(): string {\r\n\t\treturn this._className;\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport function ready(f: () => void): void {\r\n\tif (document.readyState !== \"loading\") {\r\n\t\tf();\r\n\r\n\t} else {\r\n\t\tconst listener = () => {\r\n\t\t\tif (document.readyState !== \"loading\") {\r\n\t\t\t\tdocument.removeEventListener(\"readystatechange\", listener);\r\n\t\t\t\tf();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"readystatechange\", listener);\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\r\nexport function findFont(element: Element): string {\r\n\r\n\t// Check if element has styles set\r\n\tlet font = getComputedStyle(element, \"font-family\");\r\n\r\n\tif (!font) {\r\n\t\t// Completely transparent. Look for a parent\r\n\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\tif (parent) {\r\n\t\t\treturn findFont(parent);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\treturn (<string>font);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\r\nexport function findFontSize(element: Element): string {\r\n\r\n\t// Check if element has styles set\r\n\tlet font = getComputedStyle(element, \"font-size\");\r\n\r\n\tif (!font) {\r\n\t\t// Completely transparent. Look for a parent\r\n\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\tif (parent) {\r\n\t\t\treturn findFontSize(parent);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\treturn (<string>font);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Checks whether element is not visible, whether directly or via its\r\n * ascendants.\r\n *\r\n * @param   element  Target element\r\n * @return           Hidden?\r\n */\r\nexport function isHidden(element: HTMLElement): boolean {\r\n\treturn (element.offsetParent === null);\r\n}\r\n\r\n\r\n/**\r\n * Checks wthether element is in the current viewport.\r\n *\r\n * @since 2.5.5\r\n * @param   el Element\r\n * @return     Within viewport?\r\n */\r\nexport function isElementInViewport(el: HTMLElement, viewportTarget?: HTMLElement | HTMLElement[]): boolean {\r\n\r\n\t// Get position data of the element\r\n\tlet rect = el.getBoundingClientRect();\r\n\r\n\t// Convert to array\r\n\tconst targets = $type.isArray(viewportTarget) ? viewportTarget : viewportTarget ? [viewportTarget] : [];\r\n\r\n\t// Should we measure against specific viewport element?\r\n\tif (targets.length) {\r\n\t\tfor (let i = 0; i < targets.length; i++) {\r\n\r\n\t\t\tconst target = targets[i];\r\n\r\n\t\t\t// Check if viewport itself is visible\r\n\t\t\tif (!isElementInViewport(target)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Check if element is visible within the viewport\r\n\t\t\tlet viewportRect = target.getBoundingClientRect();\r\n\t\t\tif (\r\n\t\t\t\trect.top >= 0 &&\r\n\t\t\t\trect.left >= 0 &&\r\n\t\t\t\trect.top <= (viewportRect.top + viewportRect.height) &&\r\n\t\t\t\trect.left <= (viewportRect.left + viewportRect.width)\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\trect.top >= 0 &&\r\n\t\trect.left >= 0 &&\r\n\t\trect.top <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n\t\trect.left <= (window.innerWidth || document.documentElement.clientWidth)\r\n\t);\r\n\r\n}\r\n","/**\r\n * Functionality for drawing circles.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport { percent, Percent } from \"../utils/Percent\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $math from \"../utils/Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Circle]].\r\n */\r\nexport interface ICircleProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Radius of the circle.\r\n\t *\r\n\t * Can be either absolute (pixels) or relative ([Percent]).\r\n\t */\r\n\tradius?: number | Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Circle]].\r\n */\r\nexport interface ICircleEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Circle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICircleAdapters extends ISpriteAdapters, ICircleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to create a circle\r\n * @see {@link ICircleEvents} for a list of available events\r\n * @see {@link ICircleAdapters} for a list of available Adapters\r\n */\r\nexport class Circle extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICircleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICircleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICircleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"Circle\";\r\n\t\tthis.element = this.paper.add(\"circle\");\r\n\r\n\t\tthis.setPercentProperty(\"radius\", percent(100));\r\n\t\tthis.setPropertyValue(\"horizontalCenter\", \"middle\");\r\n\t\tthis.setPropertyValue(\"verticalCenter\", \"middle\");\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the circle.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tthis.element.attr({ \"r\": this.pixelRadius });\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the circle.\r\n\t *\r\n\t * Can be either absolute (pixels) or relative ([Percent]).\r\n\t *\r\n\t * @param value  Radius\r\n\t */\r\n\tpublic set radius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius\r\n\t */\r\n\tpublic get radius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the circle in pixels.\r\n\t *\r\n\t * This is a read-only property. To set radius in pixels, use `radius`\r\n\t * property.\r\n\t *\r\n\t * @readonly\r\n\t * @return Radius (px)\r\n\t */\r\n\tpublic get pixelRadius(): number {\r\n\t\treturn $utils.relativeToValue(this.radius, $math.min(this.innerWidth / 2, this.innerHeight / 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Updates bounding box.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\tlet pixelRadius = this.pixelRadius;\r\n\t\tthis._bbox = {\r\n\t\t\tx: -pixelRadius,\r\n\t\t\ty: -pixelRadius,\r\n\t\t\twidth: pixelRadius * 2,\r\n\t\t\theight: pixelRadius * 2\r\n\t\t};\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Circle\"] = Circle;\r\n","/**\r\n * Ellipse module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Circle, ICircleProperties, ICircleAdapters, ICircleEvents } from \"./Circle\";\r\nimport { registry } from \"../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Ellipse]].\r\n */\r\nexport interface IEllipseProperties extends ICircleProperties {\r\n\r\n\t/**\r\n\t * Vertical radius.\r\n\t *\r\n\t * It's a relative size to the `radius`.\r\n\t *\r\n\t * E.g. 0.8 will mean the height of the ellipsis will be 80% of it's\r\n\t * horizontal radius.\r\n\t */\r\n\tradiusY?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Ellipse]].\r\n */\r\nexport interface IEllipseEvents extends ICircleEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IEllipseAdapters extends ICircleAdapters, IEllipseProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws an ellipse\r\n * @see {@link IEllipseEvents} for a list of available events\r\n * @see {@link IEllipseAdapters} for a list of available Adapters\r\n */\r\nexport class Ellipse extends Circle {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IEllipseProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IEllipseAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IEllipseEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Ellipse\";\r\n\r\n\t\tthis.element = this.paper.add(\"ellipse\");\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the ellipsis.\r\n\t */\r\n\tprotected draw() {\r\n\t\tsuper.draw();\r\n\t\tthis.element.attr({ \"rx\": this.radius });\r\n\t\tthis.element.attr({ \"ry\": this.radiusY });\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical radius.\r\n\t *\r\n\t * It's a relative size to the `radius`.\r\n\t *\r\n\t * E.g. 0.8 will mean the height of the ellipsis will be 80% of it's\r\n\t * horizontal radius.\r\n\t *\r\n\t * @param value  Vertical radius\r\n\t */\r\n\tpublic set radiusY(value: number) {\r\n\t\tthis.height = value * 2;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical radius\r\n\t */\r\n\tpublic get radiusY(): number {\r\n\t\treturn this.innerHeight / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal radius.\r\n\t *\r\n\t * @param value  Horizontal radius\r\n\t */\r\n\tpublic set radius(value: number) {\r\n\t\tthis.width = value * 2;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal radius\r\n\t */\r\n\tpublic get radius(): number {\r\n\t\treturn this.innerWidth / 2;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Ellipse\"] = Ellipse;\r\n","/**\r\n * Functionality for adding images in SVG tree.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Image]].\r\n */\r\nexport interface IImageProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * A URI of the image.\r\n\t */\r\n\thref?: string;\r\n\r\n\t/**\r\n\t * Sets image `width` in relation to its `height`.\r\n\t */\r\n\twidthRatio?: number;\r\n\r\n\t/**\r\n\t * Sets image `height` in relation to its `width`.\r\n\t */\r\n\theightRatio?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Image]].\r\n */\r\nexport interface IImageEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Image]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IImageAdapters extends ISpriteAdapters, IImageProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to add `<image>` elements to SVG.\r\n *\r\n * @see {@link IImageEvents} for a list of available events\r\n * @see {@link IImageAdapters} for a list of available Adapters\r\n */\r\nexport class Image extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IImageProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IImageAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IImageEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Image\";\r\n\t\tthis.element = this.paper.add(\"image\");\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.width = 50;\r\n\t\tthis.height = 50;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws an `<image>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.href) {\r\n\r\n\t\t\tlet width = this.innerWidth;\r\n\t\t\tlet height = this.innerHeight;\r\n\r\n\t\t\tif ($type.isNumber(this.widthRatio)) {\r\n\t\t\t\twidth = height * this.widthRatio;\r\n\t\t\t\tthis.width = width;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(this.heightRatio)) {\r\n\t\t\t\theight = width * this.heightRatio;\r\n\t\t\t\tthis.height = height;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis.element.attr({\r\n\t\t\t\t\"width\": width,\r\n\t\t\t\t\"height\": height\r\n\t\t\t});\r\n\t\t\tthis.element.attrNS($dom.XLINK, \"xlink:href\", this.href);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An image URI.\r\n\t *\r\n\t * @param value  Image URI\r\n\t */\r\n\tpublic set href(value: string) {\r\n\t\tthis.setPropertyValue(\"href\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Image URI\r\n\t */\r\n\tpublic get href(): string {\r\n\t\treturn this.getPropertyValue(\"href\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets image `width` relatively to its `height`.\r\n\t *\r\n\t * If image's `height = 100` and `widthRatio = 0.5` the actual width will be\r\n\t * `50`.\r\n\t *\r\n\t * @param value  Ratio\r\n\t */\r\n\tpublic set widthRatio(value: number) {\r\n\t\tthis.setPropertyValue(\"widthRatio\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ratio\r\n\t */\r\n\tpublic get widthRatio(): number {\r\n\t\treturn this.getPropertyValue(\"widthRatio\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets image `height` relatively to its `width`.\r\n\t *\r\n\t * If image's `width = 100` and `heightRatio = 0.5` the actual height will be\r\n\t * `50`.\r\n\t *\r\n\t * @param value  Ratio\r\n\t */\r\n\tpublic set heightRatio(value: number) {\r\n\t\tthis.setPropertyValue(\"heightRatio\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ratio\r\n\t */\r\n\tpublic get heightRatio(): number {\r\n\t\treturn this.getPropertyValue(\"heightRatio\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\treturn {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0,\r\n\t\t\twidth: this.pixelWidth,\r\n\t\t\theight: this.pixelHeight\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Image\"] = Image;\r\n","/**\r\n * Line drawing functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport { color } from \"../utils/Color\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $math from \"../utils/Math\";\r\nimport { IOrientationPoint } from \"../defs/IPoint\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Line]].\r\n */\r\nexport interface ILineProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * X coordinate of first end.\r\n\t */\r\n\tx1?: number;\r\n\r\n\t/**\r\n\t * Y coordinate of first end.\r\n\t */\r\n\ty1?: number;\r\n\r\n\t/**\r\n\t * X coordinate of second end.\r\n\t */\r\n\tx2?: number;\r\n\r\n\t/**\r\n\t * Y coordinate of second end.\r\n\t */\r\n\ty2?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Line]].\r\n */\r\nexport interface ILineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Line]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILineAdapters extends ISpriteAdapters, ILineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link ILineEvents} for a list of available events\r\n * @see {@link ILineAdapters} for a list of available Adapters\r\n */\r\nexport class Line extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Line\";\r\n\t\tthis.element = this.paper.add(\"line\");\r\n\t\tthis.fill = color(); //\"none\";\r\n\r\n\t\tthis.x1 = 0;\r\n\t\tthis.y1 = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the line.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this.x1 == this.x2 || this.y1 == this.y2) {\r\n\t\t\tthis.pixelPerfect = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.pixelPerfect = false;\r\n\t\t}\r\n\r\n\t\tthis.x1 = this.x1;\r\n\t\tthis.x2 = this.x2;\r\n\r\n\t\tthis.y1 = this.y1;\r\n\t\tthis.y2 = this.y2;\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate of first end.\r\n\t *\r\n\t * @param value X\r\n\t */\r\n\tpublic set x1(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tlet delta = 0;\r\n\t\tif (this.pixelPerfect && this.stroke instanceof LinearGradient) {\r\n\t\t\tdelta = 0.00001;\r\n\t\t}\r\n\r\n\t\tthis.setPropertyValue(\"x1\", value, true);\r\n\t\tthis.element.attr({ \"x1\": value + delta });\r\n\t}\r\n\r\n\t/**\r\n\t * @return X\r\n\t */\r\n\tpublic get x1(): number {\r\n\t\treturn this.getPropertyValue(\"x1\");\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate of second end.\r\n\t *\r\n\t * @param value X\r\n\t */\r\n\tpublic set x2(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"x2\", value, true);\r\n\t\tthis.element.attr({ \"x2\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return X\r\n\t */\r\n\tpublic get x2(): number {\r\n\t\tlet value = this.getPropertyValue(\"x2\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.pixelWidth;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate of first end.\r\n\t *\r\n\t * @param value Y\r\n\t */\r\n\tpublic set y1(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\r\n\t\tlet delta = 0;\r\n\t\tif (this.pixelPerfect && this.stroke instanceof LinearGradient) {\r\n\t\t\tdelta = 0.00001;\r\n\t\t}\r\n\r\n\t\tthis.setPropertyValue(\"y1\", value, true);\r\n\t\tthis.element.attr({ \"y1\": value + delta });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y\r\n\t */\r\n\tpublic get y1(): number {\r\n\t\treturn this.getPropertyValue(\"y1\");\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate of second end.\r\n\t *\r\n\t * @param value Y\r\n\t */\r\n\tpublic set y2(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"y2\", value, true);\r\n\t\tthis.element.attr({ \"y2\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y\r\n\t */\r\n\tpublic get y2(): number {\r\n\t\tlet value = this.getPropertyValue(\"y2\");\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.pixelHeight;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\t\tlet point1 = { x: this.x1, y: this.y1 };\r\n\t\tlet point2 = { x: this.x2, y: this.y2 };\r\n\t\tlet point = $math.getMidPoint(point1, point2, position);\r\n\t\tlet angle = $math.getAngle(point1, point2);\r\n\r\n\t\treturn {x:point.x, y:point.y, angle:angle};\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Line\"] = Line;\r\n","/**\r\n * Polyline module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport { IPoint, IOrientationPoint } from \"../defs/IPoint\";\r\nimport { color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Polyline]].\r\n */\r\nexport interface IPolylineProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * A list of segment coordinates for the multi-part line.\r\n\t */\r\n\tsegments?: Array<Array<IPoint>>;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Polyline]].\r\n */\r\nexport interface IPolylineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Polyline]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPolylineAdapters extends ISpriteAdapters, IPolylineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a polyline.\r\n *\r\n * @see {@link IPolylineEvents} for a list of available events\r\n * @see {@link IPolylineAdapters} for a list of available Adapters\r\n */\r\nexport class Polyline extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPolylineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPolylineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPolylineEvents;\r\n\r\n\t/**\r\n\t * [_distance description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _distance: number = 0;\r\n\r\n\t/**\r\n\t * [_realSegments]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _realSegments: $type.Optional<Array<Array<IPoint>>>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Polyline\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.shapeRendering = \"auto\";\r\n\t\tthis.fill = color();\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creats and adds an SVG path for the arc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makePath(): void {\r\n\t\tthis._distance = 0;\r\n\t\tlet segments = this.segments;\r\n\r\n\t\tif (segments && segments.length > 0) {\r\n\t\t\tlet path: string = \"\";\r\n\r\n\t\t\tfor (let i = 0, len = segments.length; i < len; i++) {\r\n\t\t\t\tlet points: IPoint[] = segments[i];\r\n\t\t\t\tif (points.length > 0) {\r\n\t\t\t\t\tpath += $path.moveTo(points[0]);\r\n\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tlet point: IPoint = points[p];\r\n\t\t\t\t\t\tpath += $path.lineTo(point);\r\n\t\t\t\t\t\tthis._distance += $math.getDistance(points[p - 1], point);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.path = path;\r\n\t\t}\r\n\r\n\t\tthis._realSegments = segments;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of segment coordinates for the multi-part line.\r\n\t *\r\n\t * @todo Example\r\n\t * @param segments  Segments\r\n\t */\r\n\tpublic set segments(segments: $type.Optional<Array<Array<IPoint>>>) {\r\n\t\tthis.setPropertyValue(\"segments\", segments);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Segments\r\n\t */\r\n\tpublic get segments(): $type.Optional<Array<Array<IPoint>>> {\r\n\t\treturn this.getPropertyValue(\"segments\");\r\n\t}\r\n\r\n\t/**\r\n\t * [distance description]\r\n\t *\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get distance(): number {\r\n\t\treturn this._distance;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\r\n\t\tlet deltaAngle: number = 0;\r\n\r\n\t\tif (position < 0) {\r\n\t\t\tposition = Math.abs(position);\r\n\t\t\tdeltaAngle = 180;\r\n\t\t}\r\n\r\n\t\tlet segments: $type.Optional<Array<Array<IPoint>>> = this._realSegments;\r\n\t\tif (segments) {\r\n\t\t\tlet totalDistance: number = this.distance;\r\n\t\t\tlet currentDistance: number = 0;\r\n\r\n\t\t\tlet distanceAB: number;\r\n\t\t\tlet positionA: number = 0;\r\n\t\t\tlet positionB: number = 0;\r\n\t\t\tlet pointA: IPoint;\r\n\t\t\tlet pointB: IPoint;\r\n\r\n\t\t\tfor (let s = 0; s < segments.length; s++) {\r\n\t\t\t\tlet points: IPoint[] = segments[s];\r\n\t\t\t\tif (points.length > 1) {\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tpointA = points[p - 1];\r\n\t\t\t\t\t\tpointB = points[p];\r\n\r\n\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\r\n\t\t\t\t\t\tdistanceAB = $math.getDistance(pointA, pointB);\r\n\t\t\t\t\t\tcurrentDistance += distanceAB;\r\n\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\r\n\r\n\t\t\t\t\t\tif (positionA <= position && positionB > position) {\r\n\t\t\t\t\t\t\ts = segments.length;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (points.length == 1) {\r\n\t\t\t\t\tpointA = points[0];\r\n\t\t\t\t\tpointB = points[0];\r\n\t\t\t\t\tpositionA = 0;\r\n\t\t\t\t\tpositionB = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (pointA && pointB) {\r\n\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\r\n\t\t\t\tlet midPoint: IPoint = $math.getMidPoint(pointA, pointB, positionAB);\r\n\t\t\t\treturn { x: midPoint.x, y: midPoint.y, angle: deltaAngle + $math.getAngle(pointA, pointB) };\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get realSegments():IPoint[][]{\r\n\t\treturn this._realSegments;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polyline\"] = Polyline;\r\n","/**\r\n * Module for a multi-part arched line.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Polyline, IPolylineProperties, IPolylineAdapters, IPolylineEvents } from \"./Polyline\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Polyarc]].\r\n */\r\nexport interface IPolyarcProperties extends IPolylineProperties {\r\n\r\n\t/**\r\n\t * Relative position along the line the control point is. (0-1)\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\tcontrolPointPosition: number;\r\n\r\n\t/**\r\n\t * Relative distance of the control point. (0-1)\r\n\t *\r\n\t * Default is half the length of the line. (0.5)\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\tcontrolPointDistance: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Polyarc]].\r\n */\r\nexport interface IPolyarcEvents extends IPolylineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Polyarc]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPolyarcAdapters extends IPolylineAdapters, IPolyarcProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a multi-part arched line.\r\n *\r\n * @see {@link IPolyarcEvents} for a list of available events\r\n * @see {@link IPolyarcAdapters} for a list of available Adapters\r\n */\r\nexport class Polyarc extends Polyline {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPolyarcProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPolyarcAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPolyarcEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Polyarc\";\r\n\r\n\t\tthis.controlPointDistance = 0.5;\r\n\t\tthis.controlPointPosition = 0.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creats and adds an SVG path for the arc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makePath(): void {\r\n\t\tthis._distance = 0;\r\n\t\tlet segments = this.segments;\r\n\r\n\t\tif (segments && segments.length > 0) {\r\n\t\t\tlet path: string = \"\";\r\n\t\t\tthis._realSegments = [];\r\n\r\n\t\t\tfor (let i = 0, len = segments.length; i < len; i++) {\r\n\t\t\t\tlet points: IPoint[] = segments[i];\r\n\t\t\t\tlet realPoints: IPoint[] = [];\r\n\t\t\t\tthis._realSegments.push(realPoints);\r\n\t\t\t\tif (points.length > 0) {\r\n\t\t\t\t\tpath += $path.moveTo(points[0]);\r\n\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tlet pointA: IPoint = points[p - 1];\r\n\t\t\t\t\t\tlet pointB: IPoint = points[p];\r\n\r\n\t\t\t\t\t\tlet distanceAB: number = $math.getDistance(pointB, pointA);\r\n\t\t\t\t\t\tlet cpDistance: number = distanceAB * this.controlPointDistance;\r\n\t\t\t\t\t\tlet controlPointPosition: number = this.controlPointPosition;\r\n\t\t\t\t\t\tlet angle: number = -$math.getAngle(pointA, pointB);\r\n\r\n\t\t\t\t\t\tlet cpx: number = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 0.5 - cpDistance * $math.sin(angle);\r\n\t\t\t\t\t\tlet cpy: number = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 0.5 - cpDistance * $math.cos(angle);\r\n\t\t\t\t\t\tlet controlPoint1: IPoint = { x: cpx, y: cpy };\r\n\r\n\t\t\t\t\t\tlet cpx2: number = pointA.x + (pointB.x - pointA.x) * controlPointPosition * 1.5 - cpDistance * $math.sin(angle);\r\n\t\t\t\t\t\tlet cpy2: number = pointA.y + (pointB.y - pointA.y) * controlPointPosition * 1.5 - cpDistance * $math.cos(angle);\r\n\t\t\t\t\t\tlet controlPoint2: IPoint = { x: cpx2, y: cpy2 };\r\n\r\n\t\t\t\t\t\tpath += $path.cubicCurveTo(pointB, controlPoint1, controlPoint2);\r\n\r\n\t\t\t\t\t\t// we add a lot of points in order to get the position/angle later\r\n\t\t\t\t\t\tlet stepCount: number = Math.ceil(distanceAB);\r\n\t\t\t\t\t\tlet prevPoint: IPoint = pointA;\r\n\t\t\t\t\t\tif (stepCount > 0) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i <= stepCount; i++) {\r\n\t\t\t\t\t\t\t\tlet point: IPoint = $math.getPointOnCubicCurve(pointA, pointB, controlPoint1, controlPoint2, i / stepCount);\r\n\t\t\t\t\t\t\t\trealPoints.push(point);\r\n\t\t\t\t\t\t\t\tthis._distance += $math.getDistance(prevPoint, point);\r\n\t\t\t\t\t\t\t\tprevPoint = point;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\trealPoints.push(pointA);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position along the line the control point is. (0-1)\r\n\t *\r\n\t * @default 0.5\r\n\t * @param value  Position (0-1)\r\n\t */\r\n\tpublic set controlPointPosition(value: number) {\r\n\t\tthis.setPropertyValue(\"controlPointPosition\", value);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic get controlPointPosition(): number {\r\n\t\treturn this.getPropertyValue(\"controlPointPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative distance of the control point. (0-1)\r\n\t *\r\n\t * Default is half the length of the line. (0.5)\r\n\t *\r\n\t * @default 0.5\r\n\t * @param value  Distance (0-1)\r\n\t */\r\n\tpublic set controlPointDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"controlPointDistance\", value);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance (0-1)\r\n\t */\r\n\tpublic get controlPointDistance(): number {\r\n\t\treturn this.getPropertyValue(\"controlPointDistance\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polyarc\"] = Polyarc;\r\n","/**\r\n * Morpher module contains functionality that allows morphing one polygon to\r\n * another.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { IMorphable } from \"../defs/IMorphable\";\r\nimport { IAnimatable, Animation, AnimationDisposer } from \"../utils/Animation\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * Morpher can be used to morph one polygon to some other polygon.\r\n */\r\nexport class Morpher extends BaseObject implements IAnimatable {\r\n\r\n\t/**\r\n\t * An element that will be a subject for morphing.\r\n\t */\r\n\tpublic morphable: IMorphable;\r\n\r\n\t/**\r\n\t * [_morphFromPointsReal description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _morphFromPointsReal: $type.Optional<Array<Array<Array<IPoint>>>>;\r\n\r\n\t/**\r\n\t * [_morphToPointsReal description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _morphToPointsReal: $type.Optional<Array<Array<Array<IPoint>>>>;\r\n\r\n\t/**\r\n\t * [_morphToPoints description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _morphToPoints: $type.Optional<Array<Array<Array<IPoint>>>>;\r\n\r\n\t/**\r\n\t * Morph progress (0-1)\r\n\t */\r\n\tprotected _morphProgress: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * List of animations currently running.\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * A storage for measurements.\r\n\t */\r\n\tprotected _bboxes: IRectangle[] = [];\r\n\r\n\t/**\r\n\t * Duration of the morphing animation in milliseconds.\r\n\t */\r\n\tpublic morphDuration: number = 800;\r\n\r\n\t/**\r\n\t * An easing function to use for morphing animation.\r\n\t *\r\n\t * @see {@link Ease}\r\n\t */\r\n\tpublic morphEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * If set to `true`, all separate parts of the multi-part polygon will\r\n\t * morph into a single circle or polygon when using built-in methods\r\n\t * `morphToCircle()` or `morphToPolygon()`.\r\n\t *\r\n\t * Otherwise each separate part of polygon will morph to individual target\r\n\t * circle or polgyon.\r\n\t */\r\n\tpublic morphToSingle: boolean = true;\r\n\r\n\t/**\r\n\t * A ratio to scale morphed object in relation to the source object.\r\n\t */\r\n\tpublic scaleRatio: number = 1;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param morphable An object to morph\r\n\t */\r\n\tconstructor(morphable: IMorphable) {\r\n\t\tsuper();\r\n\t\tthis.className = \"Morpher\";\r\n\t\tthis.morphable = morphable;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Morphs a polygon to another polygon.\r\n\t *\r\n\t * @param toPoints  Corner points of the target shape\r\n\t * @param duration  Duration in milliseconds\r\n\t * @param easing    Easing function\r\n\t * @return Animation\r\n\t */\r\n\tpublic morphToPolygon(toPoints: Array<Array<Array<IPoint>>>, duration?: number, easing?: (value: number) => number): Animation {\r\n\t\tlet points: Array<Array<Array<IPoint>>> = this.morphable.currentPoints;\r\n\t\tif(points && toPoints){\r\n\t\t\tthis.sortPoints(points);\r\n\t\t\tthis.sortPoints(toPoints);\r\n\r\n\t\t\tthis._morphFromPointsReal = [];\r\n\t\t\tthis._morphToPointsReal = [];\r\n\r\n\t\t\tif (!$type.hasValue(duration)) {\r\n\t\t\t\tduration = this.morphDuration;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.hasValue(easing)) {\r\n\t\t\t\teasing = this.morphEasing;\r\n\t\t\t}\r\n\r\n\t\t\tthis._morphFromPointsReal = this.normalizePoints(toPoints, points);\r\n\t\t\tthis._morphToPointsReal = this.normalizePoints(points, toPoints);\r\n\r\n\t\t\tthis.morphable.currentPoints = this._morphFromPointsReal;\r\n\r\n\t\t\tlet animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n\t\t\tthis._disposers.push(animation);\r\n\t\t\tanimation.start()\r\n\t\t\treturn animation;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [normalizePoints description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param pointsA  Point A\r\n\t * @param pointsB  Point B\r\n\t * @return Normalized points\r\n\t */\r\n\tpublic normalizePoints(pointsA: Array<Array<Array<IPoint>>>, pointsB: Array<Array<Array<IPoint>>>): Array<Array<Array<IPoint>>> {\r\n\t\tfor (let i = 0, len = pointsA.length; i < len; i++) {\r\n\t\t\tlet surfaceA: Array<IPoint> = pointsA[i][0];\r\n\r\n\t\t\tlet holeA: Array<IPoint> = pointsA[i][1];\r\n\t\t\tlet bboxA: IRectangle = $type.getValue($math.getBBox(surfaceA));\r\n\r\n\t\t\tlet middleX = bboxA.x + bboxA.width;\r\n\t\t\tlet middleY = bboxA.y + bboxA.height;\r\n\r\n\t\t\t// check if we have the same in PointsB\r\n\t\t\tif (!pointsB[i]) {\r\n\t\t\t\tpointsB[i] = [];\r\n\t\t\t}\r\n\r\n\t\t\t// check if we have surface in pointsB\r\n\t\t\tif (surfaceA && !pointsB[i][0]) {\r\n\t\t\t\tpointsB[i][0] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];\r\n\t\t\t}\r\n\r\n\t\t\tif (pointsB[i][0]) {\r\n\t\t\t\tpointsB[i][0] = this.addPoints(pointsB[i][0], surfaceA.length);\r\n\r\n\t\t\t\tlet distance = Infinity;\r\n\t\t\t\tlet splitAt = 0;\r\n\r\n\t\t\t\tfor (let a = 0; a < pointsB[i][0].length; a++) {\r\n\t\t\t\t\tlet newDistance = $math.getDistance(pointsB[i][0][a], surfaceA[0]);\r\n\t\t\t\t\tif (newDistance < distance) {\r\n\t\t\t\t\t\tsplitAt = a;\r\n\t\t\t\t\t\tdistance = newDistance;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet partA = pointsB[i][0].slice(0, splitAt);\r\n\t\t\t\tlet partB = pointsB[i][0].slice(splitAt);\r\n\t\t\t\tpointsB[i][0] = partB.concat(partA);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (holeA) {\r\n\t\t\t\tif (!pointsB[i][1]) {\r\n\t\t\t\t\tpointsB[i][1] = [{ x: middleX, y: middleY }, { x: middleX, y: middleY }];\r\n\t\t\t\t}\r\n\t\t\t\tpointsB[i][1] = this.addPoints(pointsB[i][1], holeA.length);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pointsB;\r\n\t}\r\n\r\n\t/**\r\n\t * [sortPoints description]\r\n\t *\r\n\t * @ignore Exclude from doc\r\n\t * @todo Description\r\n\t * @param points  [description]\r\n\t * @return                        common bbox of points\r\n\t */\r\n\tpublic sortPoints(points: Array<Array<Array<IPoint>>>): $type.Optional<IRectangle> {\r\n\t\tpoints.sort(function(a, b) {\r\n\t\t\tlet bbox1: IRectangle = $type.getValue($math.getBBox(a[0]));\r\n\t\t\tlet bbox2: IRectangle = $type.getValue($math.getBBox(b[0]));\r\n\r\n\t\t\tif (bbox1.width * bbox1.height > bbox2.width * bbox2.height) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet bboxes: IRectangle[] = [];\r\n\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\tlet surface: IPoint[] = points[i][0];\r\n\t\t\tif (surface) {\r\n\t\t\t\tbboxes.push($type.getValue($math.getBBox(surface)));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $math.getCommonRectangle(bboxes);\r\n\t}\r\n\r\n\t/**\r\n\t * Morphs polygon to a circle (it is actually a polygon which makes a circle).\r\n\t *\r\n\t * @param radius    Target circle radius (px)\r\n\t * @param duration  Duration (ms)\r\n\t * @param easing    Easing function\r\n\t * @return Animation\r\n\t */\r\n\tpublic morphToCircle(radius?: number, duration?: number, easing?: (value: number) => number): Animation {\r\n\t\tlet points: Array<Array<Array<IPoint>>> = this.morphable.points;\r\n\r\n\t\tlet commonBBox = this.sortPoints(points);\r\n\r\n\t\tthis._morphFromPointsReal = [];\r\n\t\tthis._morphToPointsReal = [];\r\n\r\n\t\tif (!$type.hasValue(duration)) {\r\n\t\t\tduration = this.morphDuration;\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(easing)) {\r\n\t\t\teasing = this.morphEasing;\r\n\t\t}\r\n\r\n\t\t// surface\r\n\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\tlet surface: IPoint[] = points[i][0];\r\n\t\t\tlet hole: IPoint[] = points[i][1];\r\n\r\n\t\t\tthis._morphFromPointsReal[i] = [];\r\n\t\t\tthis._morphToPointsReal[i] = [];\r\n\r\n\t\t\tif (surface) {\r\n\r\n\t\t\t\tlet toPoints: IPoint[] = surface;\r\n\t\t\t\tlet fromPoints: IPoint[] = surface;\r\n\t\t\t\tlet bbox: IRectangle = $type.getValue($math.getBBox(fromPoints)) // this._bboxes[i];\r\n\r\n\t\t\t\tif (this.morphToSingle) {\r\n\t\t\t\t\tbbox = $type.getValue(commonBBox);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet middleX: number = bbox.x + bbox.width / 2;\r\n\t\t\t\tlet middleY: number = bbox.y + bbox.height / 2;\r\n\t\t\t\tlet realRadius: $type.Optional<number> = radius;\r\n\t\t\t\tif (!$type.isNumber(realRadius)) {\r\n\t\t\t\t\trealRadius = Math.min(bbox.width / 2, bbox.height / 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttoPoints = [];\r\n\r\n\t\t\t\t// find angle for the first point\r\n\t\t\t\tlet startAngle: number = $math.getAngle({ x: middleX, y: middleY }, surface[0]);\r\n\t\t\t\tlet count: number = 100;\r\n\r\n\t\t\t\tif (surface.length > count) {\r\n\t\t\t\t\tcount = surface.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfromPoints = this.addPoints(surface, count);\r\n\t\t\t\tcount = fromPoints.length; // add Points might increase number a bit\r\n\r\n\t\t\t\tlet angle: number = 360 / (count - 1);\r\n\r\n\t\t\t\tfor (let a: number = 0; a < count; a++) {\r\n\t\t\t\t\tlet realAngle: number = angle * a + startAngle;\r\n\t\t\t\t\tlet pointOnCircle: IPoint = { x: middleX + realRadius * $math.cos(realAngle), y: middleY + realRadius * $math.sin(realAngle) };\r\n\t\t\t\t\ttoPoints[a] = pointOnCircle;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (hole && hole.length > 0) {\r\n\t\t\t\t\tfor (let i = 0, hlen = hole.length; i < hlen; i++) {\r\n\t\t\t\t\t\ttoPoints.push({ x: middleX, y: middleY });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._morphFromPointsReal[i][0] = fromPoints;\r\n\t\t\t\tthis._morphToPointsReal[i][0] = toPoints;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.morphable.currentPoints = this._morphFromPointsReal;\r\n\r\n\t\tlet animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n\t\tthis._disposers.push(animation);\r\n\t\tanimation.start()\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * [addPoints description]\r\n\t *\r\n\t * @ignore Exclude from doc\r\n\t * @todo Description\r\n\t * @param points         [description]\r\n\t * @param mustHaveCount  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic addPoints(points: IPoint[], mustHaveCount: number): IPoint[] {\r\n\t\tlet addToSegmentCount: number = Math.round(mustHaveCount / points.length);\r\n\t\tlet newPoints: IPoint[] = [];\r\n\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\tlet point0: IPoint = points[i];\r\n\t\t\tlet point1: IPoint;\r\n\t\t\tif (i == points.length - 1) {\r\n\t\t\t\tpoint1 = points[0];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpoint1 = points[i + 1];\r\n\t\t\t}\r\n\r\n\t\t\tnewPoints.push(point0);\r\n\r\n\t\t\tfor (let p: number = 1; p < addToSegmentCount; p++) {\r\n\t\t\t\tlet percent: number = p / addToSegmentCount;\r\n\t\t\t\tlet extraPoint: IPoint = { x: point0.x + (point1.x - point0.x) * percent, y: point0.y + (point1.y - point0.y) * percent }\r\n\t\t\t\tnewPoints.push(extraPoint);\r\n\t\t\t}\r\n\r\n\t\t\t// stop adding in case we already added more than left in original\r\n\t\t\tif (newPoints.length + points.length - i == mustHaveCount) {\r\n\t\t\t\taddToSegmentCount = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newPoints.length < mustHaveCount && points.length > 0) {\r\n\t\t\tlet lastPoint: IPoint = points[points.length - 1];\r\n\t\t\tfor (let p: number = newPoints.length; p < mustHaveCount; p++) {\r\n\t\t\t\t// add same as last\r\n\t\t\t\tnewPoints.push({ x: lastPoint.x, y: lastPoint.y });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn newPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Morphs polygon into a rectangular polygon.\r\n\t *\r\n\t * @param width     Width of the target rectangle (px)\r\n\t * @param height    Height of the target rectangle (px)\r\n\t * @param duration  Duration (ms)\r\n\t * @param easing    Easing function\r\n\t * @return Animation\r\n\t */\r\n\tpublic morphToRectangle(width?: number, height?: number, duration?: number, easing?: (value: number) => number): Animation {\r\n\t\tlet points: Array<Array<Array<IPoint>>> = this.morphable.points;\r\n\r\n\t\tthis.sortPoints(points);\r\n\r\n\t\tthis._morphFromPointsReal = [];\r\n\t\tthis._morphToPointsReal = [];\r\n\r\n\t\tif (!$type.hasValue(duration)) {\r\n\t\t\tduration = this.morphDuration;\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(easing)) {\r\n\t\t\teasing = this.morphEasing;\r\n\t\t}\r\n\r\n\t\t//\t\tlet biggestBBox: IRectangle = this._bboxes[this._biggestIndex];\r\n\r\n\t\t// surface\r\n\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\tlet surface: IPoint[] = points[i][0];\r\n\t\t\tlet hole: IPoint[] = points[i][1];\r\n\r\n\t\t\tthis._morphFromPointsReal[i] = [];\r\n\t\t\tthis._morphToPointsReal[i] = [];\r\n\r\n\t\t\tif (surface) {\r\n\r\n\t\t\t\tlet toPoints: IPoint[] = surface;\r\n\t\t\t\tlet fromPoints: IPoint[] = surface;\r\n\t\t\t\tlet bbox: IRectangle = this._bboxes[i];\r\n\r\n\r\n\t\t\t\t// we only work with first area. TODO: maybe we should find the biggest one?\r\n\t\t\t\tif (this.morphToSingle) {\r\n\t\t\t\t\t//if (i != this._biggestIndex) {\r\n\t\t\t\t\t//\tbbox = { x: biggestBBox.x + biggestBBox.width / 2, y: biggestBBox.y + biggestBBox.height / 2, width: 0, height: 0 };\r\n\t\t\t\t\t//}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet x: number = bbox.x;\r\n\t\t\t\tlet y: number = bbox.y;\r\n\r\n\t\t\t\tlet realWidth: $type.Optional<number> = width;\r\n\t\t\t\tlet realHeight: $type.Optional<number> = height;\r\n\r\n\t\t\t\tif (!$type.isNumber(realWidth)) {\r\n\t\t\t\t\trealWidth = bbox.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(realHeight)) {\r\n\t\t\t\t\trealHeight = bbox.height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttoPoints = [{ x: x, y: y }, { x: x + realWidth, y: y }, { x: x + realWidth, y: y + realHeight }, { x: x, y: y + realHeight }];\r\n\t\t\t\ttoPoints = this.addPoints(toPoints, surface.length);\r\n\r\n\t\t\t\t// if polygon has less points then count, add\r\n\t\t\t\tif (surface.length < 4) {\r\n\t\t\t\t\tfor (let i = surface.length; i < 4; i++) {\r\n\t\t\t\t\t\ttoPoints.push({ x: surface[i].x, y: surface[i].y });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (hole && hole.length > 0) {\r\n\t\t\t\t\tlet middleX: number = bbox.x + bbox.width / 2;\r\n\t\t\t\t\tlet middleY: number = bbox.y + bbox.height / 2;\r\n\r\n\t\t\t\t\tfor (let i = 0, hlen = hole.length; i < hlen; i++) {\r\n\t\t\t\t\t\ttoPoints.push({ x: middleX, y: middleY });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._morphFromPointsReal[i][0] = fromPoints;\r\n\t\t\t\tthis._morphToPointsReal[i][0] = toPoints;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.morphable.currentPoints = this._morphFromPointsReal;\r\n\r\n\t\tlet animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n\t\tthis._disposers.push(animation);\r\n\t\tanimation.start()\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Progress of the morph transition.\r\n\t *\r\n\t * Setting this will also trigger actual transformation.\r\n\t *\r\n\t * @param value  Progress (0-1)\r\n\t */\r\n\tpublic set morphProgress(value: $type.Optional<number>) {\r\n\t\tthis._morphProgress = value;\r\n\r\n\t\tlet currentPoints: Array<Array<Array<IPoint>>> = [];\r\n\r\n\t\tif (value != null) {\r\n\t\t\tlet fromPoints: $type.Optional<Array<Array<Array<IPoint>>>> = this._morphFromPointsReal;\r\n\t\t\tlet toPoints: $type.Optional<Array<Array<Array<IPoint>>>> = this._morphToPointsReal;\r\n\r\n\t\t\tif (fromPoints != null && toPoints != null) {\r\n\r\n\t\t\t\tfor (let i = 0, len = fromPoints.length; i < len; i++) {\r\n\r\n\t\t\t\t\tlet currentArea: Array<Array<IPoint>> = [];\r\n\t\t\t\t\tcurrentPoints.push(currentArea);\r\n\r\n\t\t\t\t\tlet surfaceFrom: IPoint[] = fromPoints[i][0];\r\n\t\t\t\t\tlet holeFrom: IPoint[] = fromPoints[i][1];\r\n\r\n\t\t\t\t\tlet surfaceTo: IPoint[] = toPoints[i][0];\r\n\t\t\t\t\tlet holeTo: IPoint[] = toPoints[i][1];\r\n\r\n\t\t\t\t\tif (surfaceFrom && surfaceFrom.length > 0 && surfaceTo && surfaceTo.length > 0) {\r\n\r\n\t\t\t\t\t\tlet currentSurface: IPoint[] = [];\r\n\r\n\t\t\t\t\t\tfor (let i = 0, slen = surfaceFrom.length; i < slen; i++) {\r\n\t\t\t\t\t\t\tlet point0: IPoint = surfaceFrom[i];\r\n\t\t\t\t\t\t\tlet point1: IPoint = surfaceTo[i];\r\n\r\n\t\t\t\t\t\t\tlet currentPoint: IPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value }\r\n\r\n\t\t\t\t\t\t\tcurrentSurface.push(currentPoint);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrentArea[0] = currentSurface;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (holeFrom && holeFrom.length > 0 && holeTo && holeTo.length > 0) {\r\n\t\t\t\t\t\tlet currentHole: IPoint[] = [];\r\n\t\t\t\t\t\tfor (let i = 0, hlen = holeFrom.length; i < hlen; i++) {\r\n\t\t\t\t\t\t\tlet point0: IPoint = holeFrom[i];\r\n\t\t\t\t\t\t\tlet point1: IPoint = holeTo[i];\r\n\r\n\t\t\t\t\t\t\tlet currentPoint: IPoint = { x: point0.x + (point1.x * this.scaleRatio - point0.x) * value, y: point0.y + (point1.y * this.scaleRatio - point0.y) * value }\r\n\r\n\t\t\t\t\t\t\tcurrentHole.push(currentPoint);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrentArea[1] = currentHole;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.morphable.currentPoints = currentPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the progress of morph transition.\r\n\t *\r\n\t * @return Progress (0-1)\r\n\t */\r\n\tpublic get morphProgress(): $type.Optional<number> {\r\n\t\treturn this._morphProgress;\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the polygon to its original appearance.\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param easing    Easing function\r\n\t * @return Animation\r\n\t */\r\n\tpublic morphBack(duration?: number, easing?: (value: number) => number): Animation {\r\n\t\tthis._morphToPointsReal = this._morphFromPointsReal;\r\n\t\tthis._morphFromPointsReal = this.morphable.currentPoints;\r\n\r\n\t\tif (!$type.hasValue(duration)) {\r\n\t\t\tduration = this.morphDuration;\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(easing)) {\r\n\t\t\teasing = this.morphEasing;\r\n\t\t}\r\n\r\n\t\tlet animation = new Animation(this, { property: \"morphProgress\", from: 0, to: 1 }, duration, easing);\r\n\t\tthis._disposers.push(animation);\r\n\t\tanimation.start()\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of morph animations currently being played.\r\n\t *\r\n\t * @return List of animations\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n}\r\n","/**\r\n * Polygon module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Morpher } from \"../utils/Morpher\";\r\nimport { IMorphable } from \"../defs/IMorphable\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Polygon]].\r\n */\r\nexport interface IPolygonProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * An array of X/Y coordinates for each elbow of the polygon.\r\n\t */\r\n\tpoints?: Array<Array<Array<IPoint>>>;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Polygon]].\r\n */\r\nexport interface IPolygonEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Polygon]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPolygonAdapters extends ISpriteAdapters, IPolygonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a polygon.\r\n *\r\n * @see {@link IPolygonEvents} for a list of available events\r\n * @see {@link IPolygonAdapters} for a list of available Adapters\r\n */\r\nexport class Polygon extends Sprite implements IMorphable {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPolygonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPolygonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPolygonEvents;\r\n\r\n\t/**\r\n\t * A morpher instance that is used to morph polygon into some other shape.\r\n\t */\r\n\tprotected _morpher: $type.Optional<Morpher>;\r\n\r\n\t/**\r\n\t * Current points that morpher uses. This is needed so that we don't\r\n\t * overwrite polygons original points.\r\n\t */\r\n\tprotected _currentPoints: Array<Array<Array<IPoint>>>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Polygon\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.shapeRendering = \"auto\";\r\n\t\tthis._currentPoints = [];\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * An array of X/Y coordinates for each elbow of the polygon.\r\n\t *\r\n\t * @todo Example\r\n\t * @param points  Polygon points\r\n\t */\r\n\tpublic set points(points: Array<Array<Array<IPoint>>>) {\r\n\t\tthis.setPropertyValue(\"points\", points, true);\r\n\t\tthis._currentPoints = points;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Polygon points\r\n\t */\r\n\tpublic get points(): Array<Array<Array<IPoint>>> {\r\n\t\tlet points = this.getPropertyValue(\"points\");\r\n\t\tlet path = this.path;\r\n\r\n\t\tif (path && (!points || points.length == 0)) {\r\n\r\n\t\t\tlet valueStr = path.slice(1, path.length - 1);\r\n\r\n\t\t\tlet segments: string[] = valueStr.split(\"ZM\");\r\n\r\n\t\t\tfor (let s = 0; s < segments.length; s++) {\r\n\t\t\t\tlet segment = segments[s];\r\n\t\t\t\tif (segment.length > 0) {\r\n\t\t\t\t\tlet areaHole = segment.split(\"M\");\r\n\r\n\t\t\t\t\tlet areaArr = areaHole[0];\r\n\t\t\t\t\tlet holeArr = areaHole[1];\r\n\r\n\t\t\t\t\tif (areaArr && areaArr.length > 0) {\r\n\r\n\t\t\t\t\t\tlet pointsArr = areaArr.split(\"L\");\r\n\t\t\t\t\t\tif (pointsArr.length > 0) {\r\n\r\n\t\t\t\t\t\t\tlet area: IPoint[] = [];\r\n\r\n\t\t\t\t\t\t\tlet areaAndHole: Array<Array<IPoint>> = [area];\r\n\t\t\t\t\t\t\tpoints.push(areaAndHole);\r\n\r\n\t\t\t\t\t\t\tfor (let p = 0; p < pointsArr.length; p++) {\r\n\t\t\t\t\t\t\t\tlet coords = pointsArr[p].split(\",\");\r\n\t\t\t\t\t\t\t\tarea.push({ x: +coords[0], y: +coords[1] });\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (holeArr && holeArr.length > 0) {\r\n\t\t\t\t\t\t\t\tlet pointsArr = holeArr.split(\"L\");\r\n\t\t\t\t\t\t\t\tif (pointsArr.length > 0) {\r\n\t\t\t\t\t\t\t\t\tlet hole: IPoint[] = [];\r\n\t\t\t\t\t\t\t\t\tareaAndHole.push(hole);\r\n\t\t\t\t\t\t\t\t\tfor (let p = pointsArr.length - 1; p >= 0; p--) {\r\n\t\t\t\t\t\t\t\t\t\tlet coords = pointsArr[p].split(\",\");\r\n\t\t\t\t\t\t\t\t\t\thole.push({ x: +coords[0], y: +coords[1] });\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setPropertyValue(\"points\", points);\r\n\t\t\tthis._currentPoints = points;\r\n\t\t}\r\n\t\treturn points;\r\n\t}\r\n\r\n\t/**\r\n\t * Current points. Used when morphing the element, so that original `points`\r\n\t * are not overwritten.\r\n\t *\r\n\t * @param points  Polygon points\r\n\t */\r\n\tpublic set currentPoints(points: Array<Array<Array<IPoint>>>) {\r\n\t\tif (this._currentPoints != points) {\r\n\t\t\tthis._currentPoints = points;\r\n\t\t\tthis.draw();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Polygon points\r\n\t */\r\n\tpublic get currentPoints(): Array<Array<Array<IPoint>>> {\r\n\t\tif((!this._currentPoints || this._currentPoints.length == 0) && this.path){\r\n\t\t\tthis._currentPoints = this.points;\r\n\t\t}\r\n\t\treturn this._currentPoints;\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tlet path: string = \"\";\r\n\t\tlet points: Array<Array<Array<IPoint>>> = this._currentPoints;\r\n\r\n\t\tlet left: $type.Optional<number>;\r\n\t\tlet right: $type.Optional<number>;\r\n\t\tlet top: $type.Optional<number>;\r\n\t\tlet bottom: $type.Optional<number>;\r\n\r\n\t\tif (points.length > 0) {\r\n\t\t\t// separate areas\r\n\t\t\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\t\t\t// surface\r\n\t\t\t\tlet surface: IPoint[] = points[i][0];\r\n\t\t\t\tlet hole: IPoint[] = points[i][1];\r\n\r\n\t\t\t\tif (surface && surface.length > 0) {\r\n\t\t\t\t\tlet point: IPoint = surface[0];\r\n\r\n\t\t\t\t\tpath += $path.moveTo(point);\r\n\r\n\t\t\t\t\tfor (let s: number = 0; s < surface.length; s++) {\r\n\t\t\t\t\t\tpoint = surface[s];\r\n\t\t\t\t\t\tpath += $path.lineTo(point);\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(right) || (right < point.x)) {\r\n\t\t\t\t\t\t\tright = point.x;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!$type.isNumber(left) || (left > point.x)) {\r\n\t\t\t\t\t\t\tleft = point.x;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(top) || (top > point.y)) {\r\n\t\t\t\t\t\t\ttop = point.y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!$type.isNumber(bottom) || (bottom < point.y)) {\r\n\t\t\t\t\t\t\tbottom = point.y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// hole\r\n\t\t\t\tif (hole && hole.length > 0) {\r\n\t\t\t\t\tlet point: IPoint = hole[0];\r\n\t\t\t\t\tpath += $path.moveTo(point);\r\n\r\n\t\t\t\t\tfor (let h = 0, hlen = hole.length; h < hlen; h++) {\r\n\t\t\t\t\t\tpoint = hole[h];\r\n\t\t\t\t\t\tpath += $path.lineTo(point);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (path) {\r\n\t\t\t\tpath += $path.closePath();\r\n\t\t\t}\r\n\r\n\t\t\tthis.bbox.x = left;\r\n\t\t\tthis.bbox.y = top;\r\n\t\t\tthis.bbox.width = right - left;\r\n\t\t\tthis.bbox.height = bottom - top;\r\n\r\n\t\t\tsuper.setPath(path);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setPath(value: string): boolean {\r\n\t\tif (super.setPath(value)) {\r\n\t\t\tthis.points = [];\r\n\t\t\tthis._bbox = this.group.getBBox();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Measures element\r\n\t */\r\n\tprotected measureElement(): void {\r\n\r\n\t\t// Overriding to avoid extra measurement.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A calculated center point for the shape.\r\n\t *\r\n\t * @readonly\r\n\t * @return Center\r\n\t */\r\n\tpublic get centerPoint(): IPoint {\r\n\t\treturn { x: this.bbox.x + this.bbox.width / 2, y: this.bbox.y + this.bbox.height / 2 };\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Morpher]] instance that is used to morph polygon into some other\r\n\t * shape.\r\n\t *\r\n\t * @readonly\r\n\t * @return Morpher instance\r\n\t */\r\n\tpublic get morpher(): Morpher {\r\n\t\tif (!this._morpher) {\r\n\t\t\tthis._morpher = new Morpher(this);\r\n\t\t\tthis._disposers.push(this._morpher);\r\n\t\t}\r\n\t\treturn this._morpher;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polygon\"] = Polygon;\r\n","/**\r\n * Polyspline (smoothed line) module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Polyline, IPolylineProperties, IPolylineAdapters, IPolylineEvents } from \"./Polyline\";\r\nimport { IPoint, IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Polyspline]].\r\n */\r\nexport interface IPolysplineProperties extends IPolylineProperties {\r\n\r\n\t/**\r\n\t * Horizontal tension for the spline.\r\n\t *\r\n\t * Used by the line smoothing algorithm.\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\ttensionX: number;\r\n\r\n\t/**\r\n\t * Vertical tension for the spline.\r\n\t *\r\n\t * Used by the line smoothing algorithm.\r\n\t *\r\n\t * @default 0.5\r\n\t */\r\n\ttensionY: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Polyspline]].\r\n */\r\nexport interface IPolysplineEvents extends IPolylineEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPolysplineAdapters extends IPolylineAdapters, IPolysplineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a polysline. (smoothed multi-sigment line)\r\n *\r\n * @see {@link IPolysplineEvents} for a list of available events\r\n * @see {@link IPolysplineAdapters} for a list of available Adapters\r\n */\r\nexport class Polyspline extends Polyline {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic _properties!: IPolysplineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic _adapter!: IPolysplineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPolysplineEvents;\r\n\r\n\t/**\r\n\t * Array of points of a spline with 1 px increment. used to get point by position\r\n\t */\r\n\tpublic allPoints: IOrientationPoint[];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Polyspline\";\r\n\r\n\t\tthis.tensionX = 0.5;\r\n\t\tthis.tensionY = 0.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creats and adds an SVG path for the arc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makePath(): void {\r\n\t\tthis._distance = 0;\r\n\t\tlet segments = this.segments;\r\n\r\n\t\tlet tensionX: number = this.tensionX;\r\n\t\tlet tensionY: number = this.tensionY;\r\n\r\n\t\tthis.allPoints = [];\r\n\r\n\t\tif (segments && segments.length > 0) {\r\n\t\t\tlet path: string = \"\";\r\n\t\t\tthis._realSegments = [];\r\n\r\n\t\t\tfor (let i = 0, len = segments.length; i < len; i++) {\r\n\t\t\t\tlet points: IPoint[] = segments[i];\r\n\t\t\t\tlet realPoints: IPoint[] = [];\r\n\t\t\t\tthis._realSegments.push(realPoints);\r\n\r\n\t\t\t\tif (points.length > 0) {\r\n\r\n\t\t\t\t\tlet first: IPoint = points[0];\r\n\t\t\t\t\tlet last: IPoint = points[points.length - 1];\r\n\r\n\t\t\t\t\tlet closed: boolean = false;\r\n\r\n\t\t\t\t\tif ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\r\n\t\t\t\t\t\tclosed = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpath += $path.moveTo(points[0]);\r\n\r\n\t\t\t\t\tfor (let p = 0; p < points.length - 1; p++) {\r\n\r\n\t\t\t\t\t\tlet p0: IPoint = points[p - 1];\r\n\r\n\t\t\t\t\t\tlet p1: IPoint = points[p];\r\n\r\n\t\t\t\t\t\tlet p2: IPoint = points[p + 1];\r\n\r\n\t\t\t\t\t\tlet p3: IPoint = points[p + 2];\r\n\r\n\t\t\t\t\t\tif (p === 0) {\r\n\t\t\t\t\t\t\tp0 = points[p];\r\n\t\t\t\t\t\t} else if (p == points.length - 2) {\r\n\t\t\t\t\t\t\tp3 = points[p + 1];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!p3) {\r\n\t\t\t\t\t\t\tp3 = p2;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (p === 0) {\r\n\t\t\t\t\t\t\tif (closed) {\r\n\t\t\t\t\t\t\t\tp0 = points[points.length - 2];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tp0 = points[i];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (p == points.length - 2) {\r\n\t\t\t\t\t\t\tif (closed) {\r\n\t\t\t\t\t\t\t\tp3 = points[1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tp3 = points[p + 1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet controlPointA: IPoint = $math.getCubicControlPointA(p0, p1, p2, p3, tensionX, tensionY);\r\n\t\t\t\t\t\tlet controlPointB: IPoint = $math.getCubicControlPointB(p0, p1, p2, p3, tensionX, tensionY);\r\n\r\n\t\t\t\t\t\tpath += $path.cubicCurveTo(p2, controlPointA, controlPointB);\r\n\r\n\t\t\t\t\t\t// now split to small segments so that we could have positionToPoint later\r\n\t\t\t\t\t\tlet stepCount: number = Math.ceil($math.getCubicCurveDistance(p1, p2, controlPointA, controlPointB, 20)) * 1.2;\r\n\t\t\t\t\t\tlet prevPoint: IPoint = p1;\r\n\r\n\r\n\t\t\t\t\t\tif (stepCount > 0) {\r\n\r\n\t\t\t\t\t\t\t// not good for curved charts\r\n\t\t\t\t\t\t\t//this.allPoints[0] = { x: points[0].x, y: points[0].y, angle: $math.getAngle(points[0], points[1]) };\r\n\t\t\t\t\t\t\t//realPoints.push(this.allPoints[0]);\r\n\r\n\r\n\t\t\t\t\t\t\tfor (let s = 0; s <= stepCount; s++) {\r\n\r\n\t\t\t\t\t\t\t\tlet point = $math.getPointOnCubicCurve(p1, p2, controlPointA, controlPointB, s / stepCount);\r\n\r\n\t\t\t\t\t\t\t\tif (point.x == prevPoint.x && point.y == prevPoint.y) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\trealPoints.push(point);\r\n\r\n\t\t\t\t\t\t\t\tlet angle = $math.round($math.getAngle(prevPoint, point), 5);\r\n\r\n\t\t\t\t\t\t\t\t//this.allPoints.push({ x: point.x, y: point.y, angle: angle });\r\n\t\t\t\t\t\t\t\tthis._distance += $math.getDistance(prevPoint, point);\r\n\r\n\t\t\t\t\t\t\t\tthis.allPoints[Math.floor(this._distance)] = { x: point.x, y: point.y, angle: angle };\r\n\t\t\t\t\t\t\t\tprevPoint = point;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\trealPoints.push(p0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet allPoints = this.allPoints;\r\n\t\t\t\tif (allPoints.length > 1) {\r\n\t\t\t\t\tfor (let i = 0; i < allPoints.length; i++) {\r\n\t\t\t\t\t\tif (!allPoints[i]) {\r\n\t\t\t\t\t\t\tif (i > 1) {\r\n\t\t\t\t\t\t\t\tallPoints[i] = allPoints[i - 1];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfor (let k = 1; k < allPoints.length; k++) {\r\n\t\t\t\t\t\t\t\t\tif (allPoints[k]) {\r\n\t\t\t\t\t\t\t\t\t\tallPoints[i] = allPoints[k];\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an index of the point that is closest to specified coordinates.\r\n\t * \r\n\t * @param   point  Reference point\r\n\t * @return         Index\r\n\t */\r\n\tpublic getClosestPointIndex(point: IPoint): number {\r\n\t\tlet points = this.allPoints;\r\n\r\n\t\tlet index: number;\r\n\r\n\t\tlet closest: number = Infinity;\r\n\t\tif (points.length > 1) {\r\n\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\tlet distance = $math.getDistance(point, points[p]);\r\n\t\t\t\tif (distance < closest) {\r\n\t\t\t\t\tindex = p;\r\n\t\t\t\t\tclosest = distance;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal tension for the spline.\r\n\t *\r\n\t * Used by the line smoothing algorithm.\r\n\t *\r\n\t * @default 0.5\r\n\t * @param value  Tension\r\n\t */\r\n\tpublic set tensionX(value: number) {\r\n\t\tthis.setPropertyValue(\"tensionX\", value);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tension\r\n\t */\r\n\tpublic get tensionX(): number {\r\n\t\treturn this.getPropertyValue(\"tensionX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical tension for the spline.\r\n\t *\r\n\t * Used by the line smoothing algorithm.\r\n\t *\r\n\t * @default 0.5\r\n\t * @param value  Tensions\r\n\t */\r\n\tpublic set tensionY(value: number) {\r\n\t\tthis.setPropertyValue(\"tensionY\", value, true);\r\n\t\tthis.makePath();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tension\r\n\t */\r\n\tpublic get tensionY(): number {\r\n\t\treturn this.getPropertyValue(\"tensionY\");\r\n\t}\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\r\n\tpublic positionToPoint(position: number, extend?: boolean): IOrientationPoint {\r\n\r\n\t\tlet deltaAngle: number = 0;\r\n\r\n\t\tlet allPoints = this.allPoints;\r\n\t\tlet len = allPoints.length;\r\n\r\n\t\tif (!$type.isNumber(position)) {\r\n\t\t\tposition = 0;\r\n\t\t}\r\n\r\n\t\tif (len > 1) {\r\n\r\n\t\t\tif (extend && len > 3) {\r\n\t\t\t\tif (position < 0) {\r\n\r\n\t\t\t\t\tif (position < -0.01) {\r\n\t\t\t\t\t\tposition = -0.01;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet f0 = allPoints[0];\r\n\t\t\t\t\tlet f1 = allPoints[1];\r\n\r\n\t\t\t\t\tlet x = f0.x - (f0.x - f1.x) * len * position;\r\n\t\t\t\t\tlet y = f0.y - (f0.y - f1.y) * len * position;\r\n\r\n\t\t\t\t\treturn { x: x, y: y, angle: $math.getAngle(f0, f1) };\r\n\t\t\t\t}\r\n\t\t\t\telse if (position > 1) {\r\n\r\n\t\t\t\t\tif (position > 1.01) {\r\n\t\t\t\t\t\tposition = 1.01;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet f0 = allPoints[allPoints.length - 2];\r\n\t\t\t\t\tlet f1 = allPoints[allPoints.length - 3];\r\n\r\n\t\t\t\t\tlet x = f0.x + (f0.x - f1.x) * len * (position - 1);\r\n\t\t\t\t\tlet y = f0.y + (f0.y - f1.y) * len * (position - 1);\r\n\r\n\t\t\t\t\treturn { x: x, y: y, angle: $math.getAngle(f0, { x: x, y: y }) };\r\n\t\t\t\t}\r\n\t\t\t\telse if (position == 1) {\r\n\t\t\t\t\tlet point = allPoints[allPoints.length - 1]\r\n\t\t\t\t\treturn { x: point.x, y: point.y, angle: point.angle };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (position < 0) {\r\n\t\t\t\t\tposition = Math.abs(position);\r\n\t\t\t\t\tdeltaAngle = 180;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (position >= 1) {\r\n\t\t\t\t\tposition = 0.9999999999999;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet point = allPoints[Math.floor(position * len)];\r\n\t\t\treturn { x: point.x, y: point.y, angle: point.angle + deltaAngle };\r\n\t\t}\r\n\t\telse if (len == 1) {\r\n\t\t\tlet point = allPoints[0];\r\n\t\t\treturn { x: point.x, y: point.y, angle: point.angle };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Polyspline\"] = Polyspline;\r\n","/**\r\n * Slice module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport { Percent } from \"../utils/Percent\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { RadialGradient } from \"../rendering/fills/RadialGradient\";\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Slice]].\r\n */\r\nexport interface ISliceProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Radius of the slice in pixels.\r\n\t */\r\n\tradius?: number;\r\n\r\n\t/**\r\n\t * Vertical radius for creating skewed slices.\r\n\t *\r\n\t * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half\r\n\t * the `radius`.\r\n\t */\r\n\tradiusY?: number;\r\n\r\n\t/**\r\n\t * Inner radius of the slice for creating cut out (donut) slices, in px or %\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * The angle at which left edge of the slice is drawn. (0-360)\r\n\t *\r\n\t * 0 is to the right of the center.\r\n\t */\r\n\tstartAngle?: number;\r\n\r\n\t/**\r\n\t * [arc description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tarc?: number;\r\n\r\n\t/**\r\n\t * [shiftRadius description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tshiftRadius?: number;\r\n\r\n\t/**\r\n\t * Radius of slice's outer corners in pixels.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tcornerRadius?: number;\r\n\r\n\t/**\r\n\t * Radius of slice's inner corners in pixels.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tinnerCornerRadius?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Slice]].\r\n */\r\nexport interface ISliceEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slice]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISliceAdapters extends IContainerAdapters, ISliceProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a wedged semi-circle - slice. Usually used for Pie/Donut charts.\r\n *\r\n * @see {@link ISliceEvents} for a list of available events\r\n * @see {@link ISliceAdapters} for a list of available Adapters\r\n */\r\nexport class Slice extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISliceProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISliceAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISliceEvents;\r\n\r\n\t/**\r\n\t * Main slice element.\r\n\t *\r\n\t * Slice itself is a [[Container]] so that [[Slice3D]] could extend it and\r\n\t * add 3D elements to it.\r\n\t */\r\n\tpublic slice: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Slice\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.setPropertyValue(\"cornerRadius\", 0);\r\n\t\tthis.setPropertyValue(\"startAngle\", 0);\r\n\t\tthis.setPercentProperty(\"innerRadius\", 0);\r\n\t\tthis.setPercentProperty(\"radius\", 0);\r\n\t\tthis.setPropertyValue(\"arc\", 0);\r\n\t\tthis.setPropertyValue(\"shiftRadius\", 0);\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.setPropertyValue(\"layout\", \"none\");\r\n\r\n\t\t// Create a slice wedge element\r\n\t\tthis.slice = this.createChild(Sprite);\r\n\t\tthis.slice.isMeasured = false;\r\n\r\n\t\tthis._disposers.push(this.slice);\r\n\r\n\t\t//this.element.attr({ \"stroke-linejoin\": \"round\" });\r\n\t\t//this.element.attr({ \"stroke-linecap\": \"round\" });\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet radiusY = this.radiusY;\r\n\t\tif(this.radius > 0 && radiusY == 0){\r\n\t\t\tradiusY = 0.01;\r\n\t\t}\r\n\t\tthis.slice.path = $path.arc(this.startAngle, this.arc, this.radius, this.pixelInnerRadius, radiusY, this.cornerRadius, this.innerCornerRadius);\r\n\t\tthis.slice.invalidate();\r\n\t\tthis.shiftRadius = this.shiftRadius;\r\n\r\n\t\tif (this.realFill instanceof RadialGradient) {\r\n\t\t\tthis.updateGradient(this.realFill);\r\n\t\t}\r\n\t\tif (this.realStroke instanceof RadialGradient) {\r\n\t\t\tthis.updateGradient(this.realStroke);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected updateGradient(gradient: RadialGradient) {\r\n\t\tgradient.element.attr({ \"gradientUnits\": \"userSpaceOnUse\" });\r\n\t\tgradient.element.attr({ \"r\": this.radius });\r\n\t\tgradient.cx = 0;\r\n\t\tgradient.cy = 0;\r\n\t\tgradient.element.attr({ radius: this.radius });\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\r\n\t\tif (this.isMeasured) {\r\n\t\t\tlet innerRect = $math.getArcRect(this.startAngle, this.startAngle + this.arc, this.pixelInnerRadius);\r\n\t\t\tlet outerRect = $math.getArcRect(this.startAngle, this.startAngle + this.arc, this.radius);\r\n\t\t\treturn $math.getCommonRectangle([innerRect, outerRect]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: 0, y: 0, width: 0, height: 0 };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The angle at which left edge of the slice is drawn. (0-360)\r\n\t *\r\n\t * 0 is to the right of the center.\r\n\t *\r\n\t * @param value  Angle (0-360)\r\n\t */\r\n\tpublic set startAngle(value: number) {\r\n\t\tthis.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle (0-360)\r\n\t */\r\n\tpublic get startAngle(): number {\r\n\t\treturn this.getPropertyValue(\"startAngle\");\r\n\t}\r\n\r\n\t/**\r\n\t * [arc description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set arc(value: number) {\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"arc\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get arc(): number {\r\n\t\treturn this.getPropertyValue(\"arc\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the slice in pixels.\r\n\t *\r\n\t * @param value  Radius (px)\r\n\t */\r\n\tpublic set radius(value: number) {\r\n\t\tthis.setPropertyValue(\"radius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px)\r\n\t */\r\n\tpublic get radius(): number {\r\n\t\tlet radius: number = this.getPropertyValue(\"radius\");\r\n\t\tif (!$type.isNumber(radius)) {\r\n\t\t\tradius = 0;\r\n\t\t}\r\n\t\treturn radius;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical radius for creating skewed slices.\r\n\t *\r\n\t * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half\r\n\t * the `radius`.\r\n\t *\r\n\t * @param value Vertical radius (0-1)\r\n\t */\r\n\tpublic set radiusY(value: number) {\r\n\t\tthis.setPropertyValue(\"radiusY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical radius (0-1)\r\n\t */\r\n\tpublic get radiusY(): number {\r\n\t\tlet value: number = this.getPropertyValue(\"radiusY\");\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = this.radius;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the slice for creating cut out (donut) slices.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Radius (px or %)\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px or %)\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius px\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn $utils.relativeToValue(this.innerRadius, this.radius);\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of slice's outer corners in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Radius (px)\r\n\t */\r\n\tpublic set cornerRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px)\r\n\t */\r\n\tpublic get cornerRadius(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of slice's inner corners in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Radius (px)\r\n\t */\r\n\tpublic set innerCornerRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"innerCornerRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px)\r\n\t */\r\n\tpublic get innerCornerRadius(): number {\r\n\t\treturn this.getPropertyValue(\"innerCornerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates how far (relatively to center) a slice should be moved.\r\n\t *\r\n\t * The value is relative to the radius of the slice. Meaning 0 no shift,\r\n\t * 1 - slice shifted outside by whole of its radius.\r\n\t *\r\n\t * @param  value  Radius shift\r\n\t */\r\n\tpublic set shiftRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"shiftRadius\", value);\r\n\r\n\t\tvalue = this.getPropertyValue(\"shiftRadius\");\r\n\r\n\t\tthis.dx = value * this.radius * this.ix;\r\n\t\tthis.dy = value * this.radiusY * this.iy;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius shift\r\n\t */\r\n\tpublic get shiftRadius(): number {\r\n\t\treturn this.getPropertyValue(\"shiftRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * [ix description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get ix(): number {\r\n\t\treturn $math.cos(this.middleAngle);\r\n\t}\r\n\r\n\t/**\r\n\t * [iy description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @return [description]\r\n\t */\r\n\tpublic get iy(): number {\r\n\t\treturn $math.sin(this.middleAngle);\r\n\t}\r\n\r\n\t/**\r\n\t * An angle of the slice's middle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Angle\r\n\t */\r\n\tpublic get middleAngle(): number {\r\n\t\treturn this.startAngle + this.arc / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @return X\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipX\");\r\n\r\n\t\tif($type.isNumber(value)){\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tlet p = 0.5;\r\n\t\tif(value instanceof Percent){\r\n\t\t\tp = value.value;\r\n\t\t}\r\n\t\tlet innerRadius = $utils.relativeToValue(this.innerRadius, this.radius);\r\n\t\treturn this.ix * (innerRadius + (this.radius - innerRadius) * p);\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @return Y\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tlet value = this.getPropertyValue(\"tooltipY\");\r\n\r\n\t\tif($type.isNumber(value)){\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tlet p = 0.5;\r\n\t\tif(value instanceof Percent){\r\n\t\t\tp = value.value;\r\n\t\t}\r\n\t\tlet innerRadius = $utils.relativeToValue(this.innerRadius, this.radius);\r\n\t\treturn this.iy * (innerRadius + (this.radius - innerRadius) * p) + this.slice.dy;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slice\"] = Slice;\r\n","/**\r\n * Preloader module.\r\n *\r\n * Preloader is a progress indicator.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Slice } from \"./Slice\";\r\nimport { Label } from \"./Label\";\r\nimport { registry } from \"../Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Preloader]].\r\n */\r\nexport interface IPreloaderProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Current preload progress. (0-1)\r\n\t *\r\n\t * * 0 - 0%\r\n\t * * 0.5 - 50%\r\n\t * * 1 - 100%\r\n\t */\r\n\tprogress?: number;\r\n\r\n\t/**\r\n\t * Delay display of preloader by X milliseconds.\r\n\t *\r\n\t * When loading starts (`progress` is set to <1) and finishes (`progress` is\r\n\t * set to 1) before `delay` ms, the loader is never shown.\r\n\t *\r\n\t * This is used to avoid brief flashing of the preload for very quick loads.\r\n\t *\r\n\t * @default 1000\r\n\t */\r\n\tdelay?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Preloader]].\r\n */\r\nexport interface IPreloaderEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Preloader]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPreloaderAdapters extends IContainerAdapters, IPreloaderProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IPreloaderEvents} for a list of available events\r\n * @see {@link IPreloaderAdapters} for a list of available Adapters\r\n */\r\nexport class Preloader extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPreloaderProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPreloaderAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPreloaderEvents;\r\n\r\n\t/**\r\n\t * A [[Slice]] element that indicates load progress.\r\n\t *\r\n\t * This can be used to modify appearance of the preloader elements.\r\n\t */\r\n\tpublic progressSlice: Slice;\r\n\r\n\t/**\r\n\t * A [[Slice]] element that shows the full ring. (background for the\r\n\t * `progressSlice`)\r\n\t *\r\n\t * This can be used to modify appearance of the preloader elements.\r\n\t */\r\n\tpublic backgroundSlice: Slice;\r\n\r\n\t/**\r\n\t * Label that displays progress in percent.\r\n\t *\r\n\t * This can be used to modify appearance of the preloader elements.\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * Logs the timestamp of when the loader was initiated. It will be used to\r\n\t * delay showing of the Preloader so for quick operations it does not even\r\n\t * appear on screen.\r\n\t */\r\n\tprotected _started: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Preloader\";\r\n\r\n\t\t// Set dimensions\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create main container\r\n\t\tlet sliceContainer: Container = this.createChild(Container);\r\n\t\tsliceContainer.shouldClone = false;\r\n\r\n\t\t// Add background (100%) slice\r\n\t\tlet backgroundSlice: Slice = sliceContainer.createChild(Slice);\r\n\t\tbackgroundSlice.shouldClone = false;\r\n\t\tbackgroundSlice.radius = 53;\r\n\t\tbackgroundSlice.arc = 360;\r\n\t\tbackgroundSlice.fill = interfaceColors.getFor(\"fill\");\r\n\t\tbackgroundSlice.fillOpacity = 0.8;\r\n\t\tbackgroundSlice.innerRadius = 42;\r\n\t\tbackgroundSlice.isMeasured = false;\r\n\t\tthis.backgroundSlice = backgroundSlice;\r\n\r\n\t\t// Add progress slice\r\n\t\tlet progressSlice: Slice = sliceContainer.createChild(Slice);\r\n\t\tprogressSlice.shouldClone = false;\r\n\t\tprogressSlice.radius = 50;\r\n\t\tprogressSlice.innerRadius = 45;\r\n\t\tprogressSlice.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tprogressSlice.fillOpacity = 0.2;\r\n\t\tprogressSlice.isMeasured = false;\r\n\t\tthis.progressSlice = progressSlice;\r\n\r\n\t\t// Add text label element\r\n\t\tlet label: Label = sliceContainer.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.isMeasured = false;\r\n\t\tlabel.fill = interfaceColors.getFor(\"text\");\r\n\t\tlabel.align = \"center\";\r\n\t\tlabel.valign = \"middle\";\r\n\t\tlabel.textAlign = \"middle\";\r\n\t\tlabel.fillOpacity = 0.4;\r\n\t\tthis.label = label;\r\n\r\n\t\t// Set defaults\r\n\t\tthis.background.opacity = 1;\r\n\t\tthis.background.fill = interfaceColors.getFor(\"background\");\r\n\t\tthis.contentAlign = \"center\";\r\n\t\tthis.contentValign = \"middle\";\r\n\t\tthis.delay = 300;\r\n\r\n\t\t// Create hidden state\r\n\t\tlet hiddenState = this.states.create(\"hidden\");\r\n\t\thiddenState.properties.opacity = 0;\r\n\r\n\t\t// Hide by default\r\n\t\tthis.visible = false;\r\n\t\tthis.hide(0);\r\n\t\tthis.__disabled = true;\r\n\r\n\t\t// Make it disposable\r\n\t\t// @todo Maybe it's enough to just dispose `sliceContainer`?\r\n\t\tthis._disposers.push(this.backgroundSlice);\r\n\t\tthis._disposers.push(this.progressSlice);\r\n\t\tthis._disposers.push(this.label);\r\n\t\tthis._disposers.push(sliceContainer);\r\n\t}\r\n\r\n\t/**\r\n\t * Current preload progress. (0-1)\r\n\t *\r\n\t * * 0 - 0%\r\n\t * * 0.5 - 50%\r\n\t * * 1 - 100%\r\n\t *\r\n\t * Setting this to a value less than 1, will automatically reveal the\r\n\t * preloader, while setting it to 1 (100%) will hide it.\r\n\t *\r\n\t * @param value Progress (0-1)\r\n\t */\r\n\tpublic set progress(value: number) {\r\n\t\tthis.__disabled = false;\r\n\r\n\t\tthis.validateLayout(); // show not in center without this\r\n\r\n\t\tthis.setPropertyValue(\"progress\", value);\r\n\r\n\t\t/*if (!this.visible && value == 1) {\r\n\t\t\treturn;\r\n\t\t}*/\r\n\r\n\t\tthis.progressSlice.arc = 360 * value;\r\n\r\n\t\tif (this.label) {\r\n\t\t\tthis.label.text = Math.round(value * 100) + \"%\";\r\n\t\t}\r\n\r\n\t\tif (value >= 1) {\r\n\r\n\t\t\t// Cancel the timeout\r\n\t\t\tif (this._started) {\r\n\t\t\t\tthis._started = undefined;\r\n\t\t\t}\r\n\r\n\t\t\t// TODO remove closure ?\r\n\t\t\tregistry.events.once(\"enterframe\", () => {\r\n\t\t\t\tlet animation = this.hide();\r\n\t\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\t\tanimation.events.once(\"animationended\", () => {\r\n\t\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.interactionsEnabled = false;\r\n\t\t\tthis.setPropertyValue(\"progress\", 0);\r\n\t\t}\r\n\t\telse if (value > 0) {\r\n\t\t\tif (this.delay) {\r\n\t\t\t\tif (!this._started) {\r\n\t\t\t\t\tthis._started = new Date().getTime();\r\n\t\t\t\t}\r\n\t\t\t\telse if ((this._started + this.delay) <= new Date().getTime()) {\r\n\t\t\t\t\tthis.__disabled = false;\r\n\t\t\t\t\tthis.show();\r\n\t\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.__disabled = false;\r\n\t\t\t\tthis.show();\r\n\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Progress (0-1)\r\n\t */\r\n\tpublic get progress(): number {\r\n\t\treturn this.getPropertyValue(\"progress\");\r\n\t}\r\n\r\n\t/**\r\n\t * Delay display of preloader by X milliseconds.\r\n\t *\r\n\t * When loading starts (`progress` is set to <1) and finishes (`progress` is\r\n\t * set to 1) before `delay` ms, the loader is never shown.\r\n\t *\r\n\t * This is used to avoid brief flashing of the preload for very quick loads.\r\n\t *\r\n\t * @default 1000\r\n\t * @param value  Delay (ms)\r\n\t */\r\n\tpublic set delay(value: number) {\r\n\t\tthis.setPropertyValue(\"delay\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Delay (ms)\r\n\t */\r\n\tpublic get delay(): number {\r\n\t\treturn this.getPropertyValue(\"delay\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Preloader\"] = Preloader;\r\n","/**\r\n * Zoom out button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CloseButton]].\r\n */\r\nexport interface ICloseButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[CloseButton]].\r\n */\r\nexport interface ICloseButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CloseButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICloseButtonAdapters extends IButtonAdapters, ICloseButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link ICloseButtonEvents} for a list of available events\r\n * @see {@link ICloseButtonAdapters} for a list of available Adapters\r\n */\r\nexport class CloseButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICloseButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICloseButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICloseButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"CloseButton\";\r\n\r\n\t\tthis.padding(8, 8, 8, 8);\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tthis.width = 30;\r\n\t\tthis.height = 30;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.cursorOverStyle = MouseCursorStyle.pointer;\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(20, 20, 20, 20);\r\n\r\n\t\tlet bgc = interfaceColors.getFor(\"background\");\r\n\t\tbackground.fill = bgc;\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.strokeOpacity = 1;\r\n\t\tbackground.strokeWidth = 1;\r\n\r\n\t\tlet downColor = interfaceColors.getFor(\"primaryButtonActive\")\r\n\r\n\t\tlet bhs =background.states.getKey(\"hover\");\r\n\t\tbhs.properties.strokeWidth = 3;\r\n\t\tbhs.properties.fill = bgc;\r\n\r\n\t\tlet bds = background.states.getKey(\"down\");\t\t\t\t\r\n\t\tbds.properties.stroke = downColor;\r\n\t\tbds.properties.fill = bgc;\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\t\ticon.stroke = background.stroke;\r\n\r\n\t\tthis.icon = icon;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tlet w = this.pixelWidth / 3;\r\n\t\tlet h = this.pixelHeight / 3;\r\n\r\n\t\tlet path = $path.moveTo({ x: -w / 2, y: -h / 2 });\r\n\t\tpath += $path.lineTo({ x: w / 2, y: h / 2 });\r\n\t\tpath += $path.moveTo({ x: w / 2, y: -h / 2 });\r\n\t\tpath += $path.lineTo({ x: -w / 2, y: h / 2 });\r\n\t\tthis.icon.path = path;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Close\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CloseButton\"] = CloseButton;\r\n","/**\r\n * Functionality for drawing simple SwitchButtons.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Label } from \"./Label\";\r\nimport { RoundedRectangle } from \"../elements/RoundedRectangle\";\r\nimport { Button } from \"../elements/Button\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SwitchButton]].\r\n */\r\nexport interface ISwitchButtonProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[SwitchButton]].\r\n */\r\nexport interface ISwitchButtonEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SwitchButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISwitchButtonAdapters extends IContainerAdapters, ISwitchButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * SwitchButton class is capable of drawing a simple rectangular SwitchButton with\r\n * optionally rounded corners and an icon in it.\r\n *\r\n * @see {@link ISwitchButtonEvents} for a list of available events\r\n * @see {@link ISwitchButtonAdapters} for a list of available Adapters\r\n */\r\nexport class SwitchButton extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISwitchButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISwitchButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISwitchButtonEvents;\r\n\r\n\t/**\r\n\t * Icon reference.\r\n\t */\r\n\tprotected _icon: Sprite;\r\n\r\n\t/**\r\n\t * [[Label]] element for SwitchButton content.\r\n\t */\r\n\tprotected _leftLabel: $type.Optional<Label>;\r\n\r\n\t/**\r\n\t * [[Label]] element for SwitchButton content.\r\n\t */\r\n\tprotected _rightLabel: $type.Optional<Label>;\r\n\r\n\t/**\r\n\t * A type for background.\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\tprotected _switchButton: Button;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SwitchButton\";\r\n\r\n\t\tthis.tooltipY = 0;\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"horizontal\";\r\n\t\tthis.contentAlign = \"center\";\r\n\t\tthis.contentValign = \"middle\";\r\n\t\tthis.padding(8, 16, 8, 16);\r\n\t\tthis.setStateOnChildren = true;\r\n\t\tthis.states.create(\"active\");\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create the label element\r\n\t\tlet leftLabel = new Label();\r\n\t\tleftLabel.fillOpacity = 0.3;\r\n\t\tlet llas = leftLabel.states.create(\"active\");\r\n\t\tllas.properties.fillOpacity = 1;\r\n\t\tleftLabel.isActive = true;\r\n\t\tthis.leftLabel = leftLabel;\r\n\r\n\t\tlet button = new Button();\r\n\t\tlet circle = new Circle();\r\n\t\tbutton.contentValign = \"none\";\r\n\t\tbutton.padding(0, 0, 0, 0);\r\n\t\tcircle.radius = 10;\r\n\t\tbutton.icon = circle;\r\n\t\tbutton.icon.valign = \"middle\";\r\n\t\tbutton.label = undefined;\r\n\t\tlet p100 = percent(100);\r\n\t\tbutton.background.cornerRadius(p100, p100, p100, p100);\r\n\t\tbutton.width = circle.radius * 3.5;\r\n\t\tbutton.height = circle.radius * 2.1;\r\n\t\tbutton.marginLeft = 8;\r\n\t\tbutton.marginRight = 8;\r\n\t\tbutton.togglable = true;\r\n\t\tcircle.dx = -circle.radius * 0.7;\r\n\t\tcircle.fill = interfaceColors.getFor(\"primaryButton\");\r\n\r\n\t\tlet hs = circle.states.create(\"hover\");\r\n\t\ths.properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\r\n\r\n\t\tlet as = circle.states.create(\"active\");\r\n\t\tas.properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\r\n\t\tas.properties.dx = circle.radius * 0.7;\r\n\r\n\t\tthis.switchButton = button;\r\n\r\n\t\tthis.events.on(\"toggled\", () => {\r\n\t\t\tthis.leftLabel.isActive = !this.isActive;\r\n\t\t\tthis.rightLabel.isActive = this.isActive;\r\n\t\t})\r\n\r\n\t\t// Create the label element\r\n\t\tlet rightLabel = new Label();\r\n\t\trightLabel.fillOpacity = 0.3;\r\n\r\n\t\tlet rlas = rightLabel.states.create(\"active\");\r\n\t\trlas.properties.fillOpacity = 1;\r\n\t\tthis.rightLabel = rightLabel;\r\n\r\n\t\t// Set up accessibility\r\n\t\t// A Button should be always focusable\r\n\t\tthis.role = \"button\";\r\n\t\tthis.focusable = true;\r\n\r\n\t\trightLabel.valign = \"middle\";\r\n\t\tleftLabel.valign = \"middle\";\r\n\t\tbutton.valign = \"middle\"\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] element to be used for left text.\r\n\t *\r\n\t * @param left label element\r\n\t */\r\n\tpublic set leftLabel(label: $type.Optional<Label>) {\r\n\t\tif (this._leftLabel) {\r\n\t\t\tthis.removeDispose(this._leftLabel);\r\n\t\t}\r\n\t\tthis._leftLabel = label;\r\n\t\tif (label) {\r\n\t\t\tlabel.parent = this;\r\n\t\t\tlabel.interactionsEnabled = false;\r\n\t\t\tlabel.shouldClone = false;\r\n\t\t\tthis._disposers.push(this._leftLabel);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Left label element\r\n\t */\r\n\tpublic get leftLabel(): $type.Optional<Label> {\r\n\t\treturn this._leftLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] element to be used for left text.\r\n\t *\r\n\t * @param rigth label element\r\n\t */\r\n\tpublic set rightLabel(label: $type.Optional<Label>) {\r\n\t\tif (this._rightLabel) {\r\n\t\t\tthis.removeDispose(this._rightLabel);\r\n\t\t}\r\n\t\tthis._rightLabel = label;\r\n\t\tif (label) {\r\n\t\t\tlabel.parent = this;\r\n\t\t\tlabel.interactionsEnabled = false;\r\n\t\t\tlabel.shouldClone = false;\r\n\t\t\tthis._disposers.push(this._rightLabel);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rigth label element\r\n\t */\r\n\tpublic get rightLabel(): $type.Optional<Label> {\r\n\t\treturn this._rightLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @deprecated Use `switchButton` instead\r\n\t */\r\n\tpublic get switch(): $type.Optional<Button> {\r\n\t\treturn this._switchButton;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Button]] element for switch.\r\n\t *\r\n\t * @param Button\r\n\t */\r\n\tpublic set switchButton(button: $type.Optional<Button>) {\r\n\t\tif (this._switchButton) {\r\n\t\t\tthis.removeDispose(this._switchButton);\r\n\t\t}\r\n\t\tthis._switchButton = button;\r\n\t\tif (button) {\r\n\t\t\tbutton.parent = this;\r\n\t\t\tbutton.shouldClone = false;\r\n\t\t\tthis._disposers.push(this._switchButton);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Button\r\n\t */\r\n\tpublic get switchButton(): $type.Optional<Button> {\r\n\t\treturn this._switchButton;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties and other attributes.\r\n\t *\r\n\t * @param source  Source\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (source.leftLabel) {\r\n\t\t\tthis.leftLabel.copyFrom(source.leftLabel)\r\n\t\t}\r\n\t\tif (source.rightLabel) {\r\n\t\t\tthis.rightLabel.copyFrom(source.rightLabel)\r\n\t\t}\r\n\t\tif (source.switchButton) {\r\n\t\t\tthis.switchButton.copyFrom(source.switchButton)\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SwitchButton\"] = SwitchButton;\r\n","/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar, IScrollbarProperties, IScrollbarAdapters, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { registry } from \"../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Slider]].\r\n */\r\nexport interface ISliderProperties extends IScrollbarProperties { }\r\n\r\n/**\r\n * Defines events for [[Slider]].\r\n */\r\nexport interface ISliderEvents extends IScrollbarEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slider]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISliderAdapters extends IScrollbarAdapters, ISliderProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n *\r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISliderProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISliderAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISliderEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Slider\";\r\n\r\n\t\tthis.thumb.opacity = 0;\r\n\t\tthis.thumb.interactionsEnabled = false;\r\n\t\tthis.endGrip.opacity = 0;\r\n\t\tthis.endGrip.interactionsEnabled = false;\r\n\r\n\t\tthis.startGrip.events.on(\"drag\", () => {\r\n\t\t\tthis.endGrip.x = this.startGrip.x;\r\n\t\t\tthis.endGrip.y = this.startGrip.y;\r\n\t\t})\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tprotected get __end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\tprotected set __end(value: number) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the end grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set end(position: number) {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the start grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set start(position: number) {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis.__start = position;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic get start(): number {\r\n\t\treturn this._start;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slider\"] = Slider;\r\n","/**\r\n * A module that defines Text element used to indicate links.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label, ILabelProperties, ILabelAdapters, ILabelEvents } from \"../../core/elements/Label\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[TextLink]].\r\n */\r\nexport interface ITextLinkProperties extends ILabelProperties { }\r\n\r\n/**\r\n * Defines events for [[TextLink]].\r\n */\r\nexport interface ITextLinkEvents extends ILabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[TextLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITextLinkAdapters extends ILabelAdapters, ITextLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a text element with a link.\r\n *\r\n * @see {@link ITextLinkEvents} for a list of available events\r\n * @see {@link ITextLinkAdapters} for a list of available Adapters\r\n */\r\nexport class TextLink extends Label {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITextLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITextLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITextLinkEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"TextLink\";\r\n\t\tthis.selectable = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"primaryButton\").brighten(0.3);\r\n\r\n\t\tlet hoverState = this.states.create(\"hover\");\r\n\t\thoverState.properties.fill = interfaceColors.getFor(\"primaryButtonHover\").brighten(0.3);\r\n\r\n\t\tlet downState = this.states.create(\"down\");\r\n\t\tdownState.properties.fill = interfaceColors.getFor(\"primaryButtonDown\").brighten(0.3);\r\n\r\n\t\tthis.cursorOverStyle = MouseCursorStyle.pointer;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TextLink\"] = TextLink;\r\n","/**\r\n * Functionality for drawing a trapezoid.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Trapezoid]].\r\n */\r\nexport interface ITrapezoidProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Wdith of the top side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t */\r\n\ttopSide?: number | Percent;\r\n\r\n\t/**\r\n\t * Wdith of the bottom side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t */\r\n\tbottomSide?: number | Percent;\r\n\r\n\t/**\r\n\t * Height of the left side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t */\r\n\tleftSide?: number | Percent;\r\n\r\n\t/**\r\n\t * Height of the right side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t */\r\n\trightSide?: number | Percent;\r\n\r\n\t/**\r\n\t * A relative vertical position of the \"neck\". If the top and bottom sides\r\n\t * are of different width, and `horizontalNeck` is set, a choke point\r\n\t * will be created at that position, creating a funnel shape.\r\n\t */\r\n\thorizontalNeck?: Percent;\r\n\r\n\t/**\r\n\t * A relative horizontal position of the \"neck\". If the left and right sides\r\n\t * are of different height, and `verticalNeck` is set, a choke point\r\n\t * will be created at that position, creating a funnel shape.\r\n\t */\r\n\tverticalNeck?: Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Trapezoid]].\r\n */\r\nexport interface ITrapezoidEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Trapezoid]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITrapezoidAdapters extends ISpriteAdapters, ITrapezoidProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a Trapezoid.\r\n *\r\n * @see {@link ITrapezoidEvents} for a list of available events\r\n * @see {@link ITrapezoidAdapters} for a list of available Adapters\r\n */\r\nexport class Trapezoid extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITrapezoidProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITrapezoidAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITrapezoidEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Trapezoid\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.topSide = percent(100);\r\n\t\tthis.bottomSide = percent(100);\r\n\t\tthis.leftSide = percent(100);\r\n\t\tthis.rightSide = percent(100);\r\n\r\n\t\tthis.isMeasured = false; // todo: add measureElement\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet w: number = this.pixelWidth;\r\n\t\tlet h: number = this.pixelHeight;\r\n\r\n\t\tlet ts: number = $utils.relativeToValue(this.topSide, w);\r\n\t\tlet bs: number = $utils.relativeToValue(this.bottomSide, w);\r\n\t\tlet ls: number = $utils.relativeToValue(this.leftSide, h);\r\n\t\tlet rs: number = $utils.relativeToValue(this.rightSide, h);\r\n\r\n\t\t// 1----2\r\n\t\t// |    |\r\n\t\t// 4----3\r\n\r\n\t\tlet x0: number = (w - ts) / 2;\r\n\t\tlet y0: number = (h - ls) / 2;\r\n\r\n\t\tlet x1: number = w - (w - ts) / 2;\r\n\t\tlet y1: number = (h - rs) / 2;\r\n\r\n\t\tlet x2: number = w - (w - bs) / 2;\r\n\t\tlet y2: number = h - (h - rs) / 2;\r\n\r\n\t\tlet x3: number = (w - bs) / 2;\r\n\t\tlet y3: number = h - (h - ls) / 2;\r\n\r\n\t\tlet mt: string = \"\";\r\n\t\tlet mr: string = \"\";\r\n\t\tlet mb: string = \"\";\r\n\t\tlet ml: string = \"\";\r\n\r\n\t\tif ($type.hasValue(this.horizontalNeck)) {\r\n\t\t\tlet hn: number = this.horizontalNeck.value;\r\n\t\t\tmt = $path.lineTo({ x: w * hn, y: Math.max(y0, y1) });\r\n\t\t\tmb = $path.lineTo({ x: w * hn, y: Math.min(y2, y3) });\r\n\t\t}\r\n\r\n\t\tif ($type.hasValue(this.verticalNeck)) {\r\n\t\t\tlet vn: number = this.verticalNeck.value;\r\n\t\t\tmr = $path.lineTo({ x: Math.min(x1, x2), y: h * vn });\r\n\t\t\tml = $path.lineTo({ x: Math.max(x0, x3), y: h * vn });\r\n\t\t}\r\n\r\n\r\n\t\tlet path: string = $path.moveTo({ x: x0, y: y0 })\r\n\t\t\t+ mt\r\n\t\t\t+ $path.lineTo({ x: x1, y: y1 })\r\n\t\t\t+ mr\r\n\t\t\t+ $path.lineTo({ x: x2, y: y2 })\r\n\t\t\t+ mb\r\n\t\t\t+ $path.lineTo({ x: x3, y: y3 })\r\n\t\t\t+ ml\r\n\t\tthis.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Wdith of the top side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param value  Width\r\n\t */\r\n\tpublic set topSide(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"topSide\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width\r\n\t */\r\n\tpublic get topSide(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"topSide\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wdith of the bottom side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param value  Width\r\n\t */\r\n\tpublic set bottomSide(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"bottomSide\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width\r\n\t */\r\n\tpublic get bottomSide(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"bottomSide\");\r\n\t}\r\n\r\n\t/**\r\n\t * Height of the left side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param value  Height\r\n\t */\r\n\tpublic set leftSide(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"leftSide\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Height\r\n\t */\r\n\tpublic get leftSide(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"leftSide\");\r\n\t}\r\n\r\n\t/**\r\n\t * Height of the right side. Absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param value  Height\r\n\t */\r\n\tpublic set rightSide(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"rightSide\", value, true, false, 10, false);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Height\r\n\t */\r\n\tpublic get rightSide(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"rightSide\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative vertical position of the \"neck\". If the top and bottom sides\r\n\t * are of different width, and `horizontalNeck` is set, a choke point\r\n\t * will be created at that position, creating a funnel shape.\r\n\t *\r\n\t * @param value  Horizontal neck position\r\n\t */\r\n\tpublic set horizontalNeck(value: Percent) {\r\n\t\tthis.setPropertyValue(\"horizontalNeck\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal neck position\r\n\t */\r\n\tpublic get horizontalNeck(): Percent {\r\n\t\treturn this.getPropertyValue(\"horizontalNeck\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative horizontal position of the \"neck\". If the left and right sides\r\n\t * are of different height, and `verticalNeck` is set, a choke point\r\n\t * will be created at that position, creating a funnel shape.\r\n\t *\r\n\t * @param value  Vertical neck position\r\n\t */\r\n\tpublic set verticalNeck(value: Percent) {\r\n\t\tthis.setPropertyValue(\"verticalNeck\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical neck position\r\n\t */\r\n\tpublic get verticalNeck(): Percent {\r\n\t\treturn this.getPropertyValue(\"verticalNeck\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Trapezoid\"] = Trapezoid;\r\n","/**\r\n * Functionality for drawing triangles.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Triangle]].\r\n */\r\nexport interface ITriangleProperties extends ISpriteProperties {\r\n\tdirection: \"left\" | \"right\" | \"top\" | \"bottom\"\r\n}\r\n\r\n/**\r\n * Defines events for [[Triangle]].\r\n */\r\nexport interface ITriangleEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Triangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITriangleAdapters extends ISpriteAdapters, ITriangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a triangle.\r\n *\r\n * @see {@link ITriangleEvents} for a list of available events\r\n * @see {@link ITriangleAdapters} for a list of available Adapters\r\n */\r\nexport class Triangle extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITriangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITriangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITriangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Triangle\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.direction = \"top\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet w: number = this.pixelWidth;\r\n\t\tlet h: number = this.pixelHeight;\r\n\r\n\t\tlet path: string;\r\n\r\n\r\n\r\n\t\tswitch (this.direction) {\r\n\t\t\tcase \"right\":\r\n\t\t\t\tpath = $path.moveTo({ x: 0, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w, y: h / 2 })\r\n\t\t\t\t\t+ $path.lineTo({ x: 0, y: h })\r\n\t\t\t\t\t+ $path.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"left\":\r\n\t\t\t\tpath = $path.moveTo({ x: w, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: 0, y: h / 2 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w, y: h })\r\n\t\t\t\t\t+ $path.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"bottom\":\r\n\t\t\t\tpath = $path.moveTo({ x: 0, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w / 2, y: h })\r\n\t\t\t\t\t+ $path.closePath();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"top\":\r\n\t\t\t\tpath = $path.moveTo({ x: w / 2, y: 0 })\r\n\t\t\t\t\t+ $path.lineTo({ x: w, y: h })\r\n\t\t\t\t\t+ $path.lineTo({ x: 0, y: h })\r\n\t\t\t\t\t+ $path.closePath();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets direction of a triangle\r\n\t *\r\n\t * @param value\r\n\t */\r\n\tpublic set direction(value: \"left\" | \"right\" | \"top\" | \"bottom\") {\r\n\t\tthis.setPropertyValue(\"direction\", value, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns direction of a triangle\r\n\t *\r\n\t * @return value\r\n\t */\r\n\tpublic get direction(): \"left\" | \"right\" | \"top\" | \"bottom\" {\r\n\t\treturn this.getPropertyValue(\"direction\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Triangle\"] = Triangle;\r\n","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { registry } from \"../Registry\";\nimport * as $path from \"./Path\";\nimport * as $array from \"../utils/Array\";\nimport * as $utils from \"../utils/Utils\";\nimport * as $math from \"../utils/Math\";\nimport { IPoint } from \"../defs/IPoint\";\n\n\n/**\n * ============================================================================\n * PATH FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface ISmoothing {\n\tsmooth(points: Array<IPoint>): string;\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class Tension implements ISmoothing {\n\n\t/**\n\t * [_tensionX description]\n\t *\n\t * @todo Description\n\t */\n\tprivate _tensionX: number;\n\n\t/**\n\t * [_tensionY description]\n\t *\n\t * @todo Description\n\t */\n\tprivate _tensionY: number;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param tensionX [description]\n\t * @param tensionY [description]\n\t */\n\tconstructor(tensionX: number, tensionY: number) {\n\t\tthis._tensionX = tensionX;\n\t\tthis._tensionY = tensionY;\n\t}\n\n\t/**\n\t * [smooth description]\n\t *\n\t * @ignore Exclude from docs\n\t * @todo Description\n\t * @param points  [description]\n\t * @return [description]\n\t */\n\tpublic smooth(points: Array<IPoint>): string {\n\n\t\tfor (let i = points.length - 1; i > 0; i--) {\n\t\t\tlet p0 = points[i];\n\t\t\tlet p1 = points[i - 1];\n\n\t\t\tif (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\n\t\t\t\tpoints.splice(i - 1, 1);\n\t\t\t}\n\t\t}\n\n\n\t\tlet tensionX = this._tensionX;\n\t\tlet tensionY = this._tensionY;\n\n\t\tif (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\n\t\t\treturn $path.polyline(points);\n\t\t}\n\n\t\tlet first: IPoint = points[0];\n\t\tlet last: IPoint = points[points.length - 1];\n\n\t\tlet closed: boolean = false;\n\n\t\tif ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\n\t\t\tclosed = true;\n\t\t}\n\n\t\t// Can't moveTo here, as it wont be possible to have fill then.\n\t\tlet path: string = \"\";\n\n\t\tfor (let i = 0, len = points.length - 1; i < len; i++) {\n\t\t\tlet p0: IPoint = points[i - 1];\n\n\t\t\tlet p1: IPoint = points[i];\n\n\t\t\tlet p2: IPoint = points[i + 1];\n\n\t\t\tlet p3: IPoint = points[i + 2];\n\n\t\t\tif (i === 0) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tp0 = points[points.length - 2];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tp0 = points[i];\n\t\t\t\t}\n\t\t\t} else if (i == points.length - 2) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tp3 = points[1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tp3 = points[i + 1];\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tlet controlPointA: IPoint = $math.getCubicControlPointA(p0, p1, p2, p3, tensionX, tensionY);\n\t\t\tlet controlPointB: IPoint = $math.getCubicControlPointB(p0, p1, p2, p3, tensionX, tensionY);\n\n\t\t\tpath += $path.cubicCurveTo(p2, controlPointA, controlPointB);\n\t\t}\n\n\t\treturn path;\n\t}\n}\n\n\n/**\n * Returns a waved line SVG path between two points.\n *\n * @ignore Exclude from docs\n * @param point1            Starting point\n * @param point2            Ending point\n * @param waveLength        Wave length\n * @param waveHeight        Wave height\n * @param adjustWaveLength  Adjust wave length based on the actual line length\n * @return SVG path\n */\nexport function wavedLine(point1: IPoint, point2: IPoint, waveLength: number, waveHeight: number, tension: number, adjustWaveLength?: boolean): string {\n\n\tlet x1: number = point1.x;\n\tlet y1: number = point1.y;\n\n\tlet x2: number = point2.x;\n\tlet y2: number = point2.y;\n\n\tlet distance: number = $math.getDistance(point1, point2);\n\n\tif (adjustWaveLength) {\n\t\twaveLength = distance / Math.round(distance / waveLength);\n\t}\n\n\tlet d: string = registry.getCache($utils.stringify([\"wavedLine\", point1.x, point2.x, point1.y, point2.y, waveLength, waveHeight]));\n\tif (!d) {\n\t\tif (distance > 0) {\n\t\t\tlet angle: number = Math.atan2(y2 - y1, x2 - x1);\n\n\t\t\tlet cos: number = Math.cos(angle);\n\t\t\tlet sin: number = Math.sin(angle);\n\n\t\t\tlet waveLengthX: number = waveLength * cos;\n\t\t\tlet waveLengthY: number = waveLength * sin;\n\n\t\t\tif (waveLength <= 1 || waveHeight <= 1) {\n\t\t\t\td = $path.lineTo(point2);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet halfWaveCount: number = Math.round(2 * distance / waveLength);\n\n\t\t\t\tlet points: IPoint[] = [];\n\t\t\t\tlet sign: number = 1;\n\n\t\t\t\tif (x2 < x1) {\n\t\t\t\t\tsign *= -1;\n\t\t\t\t}\n\n\t\t\t\tif (y2 < y1) {\n\t\t\t\t\tsign *= -1;\n\t\t\t\t}\n\n\t\t\t\tfor (let i: number = 0; i <= halfWaveCount; i++) {\n\t\t\t\t\tsign *= -1;\n\t\t\t\t\tlet x: number = x1 + i * waveLengthX / 2 + sign * waveHeight / 2 * sin;\n\t\t\t\t\tlet y: number = y1 + i * waveLengthY / 2 - sign * waveHeight / 2 * cos;\n\t\t\t\t\tpoints.push({ x: x, y: y });\n\t\t\t\t}\n\n\t\t\t\td = new Tension(tension, tension).smooth(points);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\td = \"\";\n\t\t}\n\n\t\tregistry.setCache($utils.stringify([\"wavedLine\", point1.x, point2.x, point1.y, point2.y, waveLength, waveHeight]), d);\n\t}\n\n\treturn d;\n}\n\n\nexport class Monotone implements ISmoothing {\n\tprivate _reversed: boolean;\n\tprivate _closed: boolean;\n\n\tconstructor(reversed: boolean, info: { closed: boolean }) {\n\t\tthis._reversed = reversed;\n\t\tthis._closed = info.closed;\n\t}\n\n\t// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\tprivate _curve(x0: number, x1: number, y0: number, y1: number, t0: number, t1: number): string {\n\t\tconst dx = (x1 - x0) / 3;\n\n\t\tif (this._reversed) {\n\t\t\treturn $path.cubicCurveTo(\n\t\t\t\t{ x: y1, y: x1 },\n\t\t\t\t{ x: y0 + dx * t0, y: x0 + dx },\n\t\t\t\t{ x: y1 - dx * t1, y: x1 - dx }\n\t\t\t);\n\n\t\t} else {\n\t\t\treturn $path.cubicCurveTo(\n\t\t\t\t{ x: x1, y: y1 },\n\t\t\t\t{ x: x0 + dx, y: y0 + dx * t0 },\n\t\t\t\t{ x: x1 - dx, y: y1 - dx * t1 }\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic smooth(points: Array<IPoint>): string {\n\t\tlet x0: number = NaN;\n\t\tlet x1: number = NaN;\n\t\tlet y0: number = NaN;\n\t\tlet y1: number = NaN;\n\t\tlet t0: number = NaN;\n\t\tlet point: number = 0;\n\n\t\tlet output = \"\";\n\n\t\t$array.each(points, ({ x, y }) => {\n\t\t\tif (this._reversed) {\n\t\t\t\tlet temp = x;\n\t\t\t\tx = y;\n\t\t\t\ty = temp;\n\t\t\t}\n\n\t\t\tlet t1 = NaN;\n\n\t\t\tif (!(x === x1 && y === y1)) {\n\t\t\t\tswitch (point) {\n\t\t\t\tcase 0:\n\t\t\t\t\tpoint = 1;\n\n\t\t\t\t\tif (this._reversed) {\n\t\t\t\t\t\toutput += $path.lineTo({ x: y, y: x });\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutput += $path.lineTo({ x, y });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tpoint = 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tpoint = 3;\n\t\t\t\t\toutput += this._curve(x0, x1, y0, y1, slope2(x0, x1, y0, y1, t1 = slope3(x0, x1, y0, y1, x, y)), t1);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\toutput += this._curve(x0, x1, y0, y1, t0, t1 = slope3(x0, x1, y0, y1, x, y));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tx0 = x1;\n\t\t\t\tx1 = x;\n\t\t\t\ty0 = y1;\n\t\t\t\ty1 = y;\n\t\t\t\tt0 = t1;\n\t\t\t}\n\t\t});\n\n\t\tswitch (point) {\n\t\tcase 2:\n\t\t\tif (this._reversed) {\n\t\t\t\toutput += $path.lineTo({ x: y1, y: x1 });\n\n\t\t\t} else {\n\t\t\t\toutput += $path.lineTo({ x: x1, y: y1 });\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\toutput += this._curve(x0, x1, y0, y1, t0, slope2(x0, x1, y0, y1, t0));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (this._closed) {\n\t\t\toutput += $path.closePath();\n\t\t}\n\n\t\treturn output;\n\t}\n}\n\n\n// TODO move this someplace else\nfunction sign(x: number): -1 | 1 {\n\treturn x < 0 ? -1 : 1;\n}\n\n\nfunction slope2(x0: number, x1: number, y0: number, y1: number, t: number): number {\n\tconst h = x1 - x0;\n\treturn h ? (3 * (y1 - y0) / h - t) / 2 : t;\n}\n\n\nfunction slope3(x0: number, x1: number, y0: number, y1: number, x2: number, y2: number): number {\n\tconst h0 = x1 - x0;\n\tconst h1 = x2 - x1;\n\tconst s0 = (y1 - y0) / (h0 || h1 < 0 && -0);\n\tconst s1 = (y2 - y1) / (h1 || h0 < 0 && -0);\n\tconst p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\treturn (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n\nexport class MonotoneX extends Monotone {\n\tconstructor(info: { closed: boolean }) {\n\t\tsuper(false, info);\n\t}\n}\n\nexport class MonotoneY extends Monotone {\n\tconstructor(info: { closed: boolean }) {\n\t\tsuper(true, info);\n\t}\n}\n\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class Basis implements ISmoothing {\n\n\t/**\n\t * [_closed description]\n\t *\n\t * @ignore Exclude from docs\n\t * @todo Description\n\t */\n\tprivate _closed: boolean;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param info  [description]\n\t */\n\tconstructor(info: { closed: boolean }) {\n\t\tthis._closed = info.closed;\n\t}\n\n\t/**\n\t * [smooth description]\n\t *\n\t * @ignore Exclude from docs\n\t * @todo Description\n\t * @param points  [description]\n\t * @return [description]\n\t */\n\tpublic smooth(points: Array<IPoint>): string {\n\t\tlet x0: number = NaN;\n\t\tlet x1: number = NaN;\n\t\tlet x2: number = NaN;\n\t\tlet x3: number = NaN;\n\t\tlet x4: number = NaN;\n\t\tlet y0: number = NaN;\n\t\tlet y1: number = NaN;\n\t\tlet y2: number = NaN;\n\t\tlet y3: number = NaN;\n\t\tlet y4: number = NaN;\n\t\tlet point: number = 0;\n\n\t\tlet output = \"\";\n\n\t\tconst pushCurve = (x: number, y: number): void => {\n\t\t\toutput += $path.cubicCurveTo(\n\t\t\t\t{\n\t\t\t\t\tx: (x0 + 4 * x1 + x) / 6\n\t\t\t\t\t, y: (y0 + 4 * y1 + y) / 6\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tx: (2 * x0 + x1) / 3\n\t\t\t\t\t, y: (2 * y0 + y1) / 3\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tx: (x0 + 2 * x1) / 3\n\t\t\t\t\t, y: (y0 + 2 * y1) / 3\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\n\t\tconst pushPoint = ({ x, y }: IPoint): void => {\n\t\t\tswitch (point) {\n\t\t\t\tcase 0:\n\t\t\t\t\tpoint = 1;\n\n\t\t\t\t\tif (this._closed) {\n\t\t\t\t\t\tx2 = x;\n\t\t\t\t\t\ty2 = y;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutput += $path.lineTo({ x, y });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tpoint = 2;\n\n\t\t\t\t\tif (this._closed) {\n\t\t\t\t\t\tx3 = x;\n\t\t\t\t\t\ty3 = y;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tpoint = 3;\n\n\t\t\t\t\tif (this._closed) {\n\t\t\t\t\t\tx4 = x;\n\t\t\t\t\t\ty4 = y;\n\t\t\t\t\t\toutput += $path.moveTo({ x: (x0 + 4 * x1 + x) / 6, y: (y0 + 4 * y1 + y) / 6 });\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\toutput += $path.lineTo({ x: (5 * x0 + x1) / 6, y: (5 * y0 + y1) / 6 });\n\t\t\t\t\t\t// fall-through\n\t\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tpushCurve(x, y);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tx0 = x1;\n\t\t\tx1 = x;\n\t\t\ty0 = y1;\n\t\t\ty1 = y;\n\t\t};\n\n\t\t$array.each(points, pushPoint);\n\n\t\tif (this._closed) {\n\t\t\tswitch (point) {\n\t\t\t\tcase 1:\n\t\t\t\t\toutput += $path.moveTo({ x: x2, y: y2 });\n\t\t\t\t\toutput += $path.closePath();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\toutput += $path.moveTo({ x: (x2 + 2 * x3) / 3, y: (y2 + 2 * y3) / 3 });\n\t\t\t\t\toutput += $path.lineTo({ x: (x3 + 2 * x2) / 3, y: (y3 + 2 * y2) / 3 });\n\t\t\t\t\toutput += $path.closePath();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tpushPoint({ x: x2, y: y2 });\n\t\t\t\t\tpushPoint({ x: x3, y: y3 });\n\t\t\t\t\tpushPoint({ x: x4, y: y4 });\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t} else {\n\t\t\tswitch (point) {\n\t\t\t\tcase 3:\n\t\t\t\t\tpushCurve(x1, y1);\n\t\t\t\t// fall-through\n\t\t\t\tcase 2:\n\t\t\t\t\toutput += $path.lineTo({ x: x1, y: y1 });\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\toutput += $path.closePath();\n\t\t}\n\n\t\treturn output;\n\t}\n\n}\n","/**\r\n * Functionality for drawing waved circles.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Circle, ICircleProperties, ICircleAdapters, ICircleEvents } from \"./Circle\";\r\nimport { IWavedShape } from \"../defs/IWavedShape\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Percent } from \"../utils/Percent\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $smoothing from \"../../core/rendering/Smoothing\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[WavedCircle]].\r\n */\r\nexport interface IWavedCircleProperties extends ICircleProperties {\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t */\r\n\twaveLength?: number;\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t */\r\n\twaveHeight?: number;\r\n\r\n\t/**\r\n\t * Wave tension.\r\n\t *\r\n\t * @default 0.8\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * Inner radius of the circle in pixels.\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[WavedCircle]].\r\n */\r\nexport interface IWavedCircleEvents extends ICircleEvents { }\r\n\r\n/**\r\n * Defines adapters for [[WavedCircle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWavedCircleAdapters extends ICircleAdapters, IWavedCircleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a waved circle.\r\n *\r\n * @see {@link IWavedCircleEvents} for a list of available events\r\n * @see {@link IWavedCircleAdapters} for a list of available Adapters\r\n */\r\nexport class WavedCircle extends Circle implements IWavedShape {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IWavedCircleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IWavedCircleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IWavedCircleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"WavedCircle\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.waveLength = 16;\r\n\t\tthis.waveHeight = 4;\r\n\r\n\t\tthis.fill = undefined;\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.tension = 0.8;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the waved line.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tlet path: string = \"\";\r\n\r\n\t\tlet radius: number = this.pixelRadius;\r\n\r\n\t\tif (radius > 0) {\r\n\t\t\tlet points: IPoint[] = this.getPoints(radius);\r\n\t\t\tpath = $path.moveTo(points[0]) + new $smoothing.Tension(this.tension, this.tension).smooth(points);\r\n\t\t}\r\n\r\n\t\tlet innerRadius: number = this.pixelInnerRadius;\r\n\t\tif (innerRadius > 0) {\r\n\t\t\tlet points: IPoint[] = this.getPoints(innerRadius);\r\n\t\t\tpoints.reverse();\r\n\t\t\tpath += $path.moveTo(points[0]) + new $smoothing.Tension(this.tension, this.tension).smooth(points);\r\n\t\t}\r\n\r\n\t\tthis.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns points that circle consists of.\r\n\t *\r\n\t * @param radius  Radius (px)\r\n\t * @return Points\r\n\t */\r\n\tprotected getPoints(radius: number): IPoint[] {\r\n\t\tlet circleLength: number = radius * Math.PI * 2;\r\n\t\tlet halfWaveHeight: number = this.waveHeight / 2;\r\n\r\n\t\tlet waveLength = circleLength / Math.round(circleLength / this.waveLength);\r\n\t\tlet halfWaveLength: number = waveLength / 2;\r\n\t\tlet points: IPoint[] = [];\r\n\r\n\t\tlet count = circleLength / waveLength;\r\n\t\tfor (let i = 0; i <= count; i++) {\r\n\t\t\tlet angle1: number = (i * waveLength) / circleLength * 360;\r\n\t\t\tlet angle2: number = (i * waveLength + halfWaveLength) / circleLength * 360;\r\n\r\n\t\t\tpoints.push({ x: (radius - halfWaveHeight) * $math.cos(angle1), y: (radius - halfWaveHeight) * $math.sin(angle1) });\r\n\t\t\tpoints.push({ x: (radius + halfWaveHeight) * $math.cos(angle2), y: (radius + halfWaveHeight) * $math.sin(angle2) });\r\n\t\t}\r\n\t\tpoints.pop();\r\n\t\treturn points;\r\n\t}\r\n\r\n\t/**\r\n\t * Inner radius of the circle in pixels (absolute) or [[Percent]] (relative).\r\n\t *\r\n\t * @param value  Inner radius\r\n\t */\r\n\tpublic set innerRadius(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inner radius\r\n\t */\r\n\tpublic get innerRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"innerRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Calculated inner radius of the circle in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Inner radius (px)\r\n\t */\r\n\tpublic get pixelInnerRadius(): number {\r\n\t\treturn $utils.relativeToValue(this.innerRadius, $math.min(this.innerWidth / 2, this.innerHeight / 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t * @param value  Wave length (px)\r\n\t */\r\n\tpublic set waveLength(value: number) {\r\n\t\tthis.setPropertyValue(\"waveLength\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave length (px)\r\n\t */\r\n\tpublic get waveLength(): number {\r\n\t\treturn this.getPropertyValue(\"waveLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t * @param value  Wave height (px)\r\n\t */\r\n\tpublic set waveHeight(value: number) {\r\n\t\tthis.setPropertyValue(\"waveHeight\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave height (px)\r\n\t */\r\n\tpublic get waveHeight(): number {\r\n\t\treturn this.getPropertyValue(\"waveHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tension of the wave.\r\n\t *\r\n\t * @default 0.8\r\n\t * @param value  Tension\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tension\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"WavedCircle\"] = WavedCircle;\r\n","/**\r\n * Functionality for drawing waved lines.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Line, ILineProperties, ILineAdapters, ILineEvents } from \"./Line\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IWavedShape } from \"../defs/IWavedShape\";\r\nimport { color } from \"../utils/Color\";\r\nimport { wavedLine } from \"../rendering/Smoothing\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available properties for [[WavedLine]].\r\n */\r\nexport interface IWavedLineProperties extends ILineProperties {\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t */\r\n\twaveLength?: number;\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t */\r\n\twaveHeight?: number;\r\n\r\n\t/**\r\n\t * Wave tension.\r\n\t *\r\n\t * @default 0.8\r\n\t */\r\n\ttension?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[WavedLine]].\r\n */\r\nexport interface IWavedLineEvents extends ILineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[WavedLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWavedLineAdapters extends ILineAdapters, IWavedLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a waved line.\r\n *\r\n * @see {@link IWavedLineEvents} for a list of available events\r\n * @see {@link IWavedLineAdapters} for a list of available Adapters\r\n */\r\nexport class WavedLine extends Line implements IWavedShape {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IWavedLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IWavedLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IWavedLineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"WavedLine\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.waveLength = 16;\r\n\t\tthis.waveHeight = 4;\r\n\t\tthis.tension = 0.8;\r\n\t\tthis.pixelPerfect = false;\r\n\r\n\t\tthis.fill = color();\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the waved line.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\t//super.draw();\r\n\t\tlet p1: IPoint = { x: this.x1, y: this.y1 };\r\n\t\tlet p2: IPoint = { x: this.x2, y: this.y2 };\r\n\r\n\t\tthis.path = $path.moveTo(p1) + wavedLine(p1, p2, this.waveLength, this.waveHeight, this.tension, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t * @param value  Wave length (px)\r\n\t */\r\n\tpublic set waveLength(value: number) {\r\n\t\tthis.setPropertyValue(\"waveLength\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave length (px)\r\n\t */\r\n\tpublic get waveLength(): number {\r\n\t\treturn this.getPropertyValue(\"waveLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t * @param value  Wave height (px)\r\n\t */\r\n\tpublic set waveHeight(value: number) {\r\n\t\tthis.setPropertyValue(\"waveHeight\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave height (px)\r\n\t */\r\n\tpublic get waveHeight(): number {\r\n\t\treturn this.getPropertyValue(\"waveHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tension of the wave.\r\n\t *\r\n\t * @default 0.8\r\n\t * @param value  Tension\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tension\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n}\r\n","/**\r\n * Functionality for drawing rectangles with waved edges.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Rectangle, IRectangleProperties, IRectangleAdapters, IRectangleEvents } from \"./Rectangle\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IWavedShape } from \"../defs/IWavedShape\";\r\nimport { wavedLine } from \"../rendering/Smoothing\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available properties for [[WavedRectangle]].\r\n */\r\nexport interface IWavedRectangleProperties extends IRectangleProperties {\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t */\r\n\twaveHeight?: number;\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t */\r\n\twaveLength?: number;\r\n\r\n\t/**\r\n\t * Wave tension.\r\n\t *\r\n\t * @default 0.8\r\n\t */\r\n\ttension?: number;\r\n\r\n\t/**\r\n\t * If right side of a rectangle should be waved.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\twavedRight?: boolean;\r\n\r\n\t/**\r\n\t * If left side of a rectangle should be waved.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\twavedLeft?: boolean;\r\n\r\n\t/**\r\n\t * If top side of a rectangle should be waved.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\twavedTop?: boolean;\r\n\r\n\t/**\r\n\t * If bottom side of a rectangle should be waved.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\twavedBottom?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[WavedRectangle]].\r\n */\r\nexport interface IWavedRectangleEvents extends IRectangleEvents { }\r\n\r\n/**\r\n * Defines adapters for [[WavedRectangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWavedRectangleAdapters extends IRectangleAdapters, IWavedRectangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a rectangle with waved edges.\r\n *\r\n * @see {@link IWavedRectangleEvents} for a list of available events\r\n * @see {@link IWavedRectangleAdapters} for a list of available Adapters\r\n */\r\nexport class WavedRectangle extends Rectangle implements IWavedShape {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IWavedRectangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IWavedRectangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IWavedRectangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"WavedRectangle\";\r\n\r\n\t\t// Add path element\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\t// Set defaults\r\n\t\tthis.waveLength = 16;\r\n\t\tthis.waveHeight = 4;\r\n\t\tthis.tension = 0.8;\r\n\r\n\t\tthis.setPropertyValue(\"wavedLeft\", true);\r\n\t\tthis.setPropertyValue(\"wavedRight\", true);\r\n\t\tthis.setPropertyValue(\"wavedTop\", true);\r\n\t\tthis.setPropertyValue(\"wavedBottom\", true);\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the waved rectangle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet w: number = this.pixelWidth;\r\n\t\tlet h: number = this.pixelHeight;\r\n\r\n\t\tif (w > 0 && h > 0) {\r\n\t\t\tlet p1: IPoint = { x: 0, y: 0 };\r\n\t\t\tlet p2: IPoint = { x: w, y: 0 };\r\n\t\t\tlet p3: IPoint = { x: w, y: h };\r\n\t\t\tlet p4: IPoint = { x: 0, y: h };\r\n\r\n\t\t\tlet waveLengthH: number = Math.min(w, this.waveLength);\r\n\t\t\tlet waveHeightH: number = Math.min(h, this.waveHeight);\r\n\r\n\t\t\tlet waveLengthV: number = Math.min(h, this.waveLength);\r\n\t\t\tlet waveHeightV: number = Math.min(w, this.waveHeight);\t\t\t\r\n\r\n\t\t\tlet td: string = \"\";\r\n\t\t\tlet rd: string = \"\";\r\n\t\t\tlet bd: string = \"\";\r\n\t\t\tlet ld: string = \"\";\r\n\r\n\t\t\tif (this.wavedTop) {\r\n\t\t\t\ttd = wavedLine(p1, p2, waveLengthH, waveHeightH, this.tension, true);\r\n\t\t\t}\r\n\t\t\tif (this.wavedRight) {\r\n\t\t\t\trd = wavedLine(p2, p3, waveLengthV, waveHeightV, this.tension, true);\r\n\t\t\t}\r\n\t\t\tif (this.wavedBottom) {\r\n\t\t\t\tbd = wavedLine(p3, p4, waveLengthH, waveHeightH, this.tension, true);\r\n\t\t\t}\r\n\t\t\tif (this.wavedLeft) {\r\n\t\t\t\tld = wavedLine(p4, p1, waveLengthV, waveHeightV, this.tension, true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.path = $path.moveTo(p1) + td + $path.lineTo(p2) + rd + $path.lineTo(p3) + bd + $path.lineTo(p4) + ld + \"z\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wave length in pixels.\r\n\t *\r\n\t * @default 16\r\n\t * @param value  Wave length (px)\r\n\t */\r\n\tpublic set waveLength(value: number) {\r\n\t\tthis.setPropertyValue(\"waveLength\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave length (px)\r\n\t */\r\n\tpublic get waveLength(): number {\r\n\t\treturn this.getPropertyValue(\"waveLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Wave height in pixels.\r\n\t *\r\n\t * @default 4\r\n\t * @param value  Wave height (px)\r\n\t */\r\n\tpublic set waveHeight(value: number) {\r\n\t\tthis.setPropertyValue(\"waveHeight\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave height (px)\r\n\t */\r\n\tpublic get waveHeight(): number {\r\n\t\treturn this.getPropertyValue(\"waveHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets which side should be waved or not. If particular side is set to\r\n\t * `false`, a straight line will be drawn on that side.\r\n\t *\r\n\t * @param top     Top waved?\r\n\t * @param right   Right side waved?\r\n\t * @param bottom  Bottom Waved?\r\n\t * @param left    Left side waved?\r\n\t */\r\n\tpublic setWavedSides(top: boolean, right: boolean, bottom: boolean, left: boolean): void {\r\n\t\tthis.wavedTop = top;\r\n\t\tthis.wavedRight = right;\r\n\t\tthis.wavedBottom = bottom;\r\n\t\tthis.wavedLeft = left;\r\n\t}\r\n\r\n\t/**\r\n\t * Tension of the wave.\r\n\t *\r\n\t * @default 0.8\r\n\t * @param value  Tension\r\n\t */\r\n\tpublic set tension(value: number) {\r\n\t\tthis.setPropertyValue(\"tension\", value);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tension\r\n\t */\r\n\tpublic get tension(): number {\r\n\t\treturn this.getPropertyValue(\"tension\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if right side should be waved.\r\n\t *\r\n\t * @default true\r\n\t * @param value Waved?\r\n\t */\r\n\tpublic set wavedRight(value: boolean) {\r\n\t\tthis.setPropertyValue(\"wavedRight\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave right side?\r\n\t */\r\n\tpublic get wavedRight(): boolean {\r\n\t\treturn this.getPropertyValue(\"wavedRight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if left side should be waved.\r\n\t *\r\n\t * @default true\r\n\t * @param value Waved?\r\n\t */\r\n\tpublic set wavedLeft(value: boolean) {\r\n\t\tthis.setPropertyValue(\"wavedLeft\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave left side?\r\n\t */\r\n\tpublic get wavedLeft(): boolean {\r\n\t\treturn this.getPropertyValue(\"wavedLeft\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if top side should be waved.\r\n\t *\r\n\t * @default true\r\n\t * @param value Waved?\r\n\t */\r\n\tpublic set wavedTop(value: boolean) {\r\n\t\tthis.setPropertyValue(\"wavedTop\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave top side?\r\n\t */\r\n\tpublic get wavedTop(): boolean {\r\n\t\treturn this.getPropertyValue(\"wavedTop\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if bottom side should be waved.\r\n\t *\r\n\t * @default true\r\n\t * @param value Waved?\r\n\t */\r\n\tpublic set wavedBottom(value: boolean) {\r\n\t\tthis.setPropertyValue(\"wavedBottom\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Wave bottom side?\r\n\t */\r\n\tpublic get wavedBottom(): boolean {\r\n\t\treturn this.getPropertyValue(\"wavedBottom\");\r\n\t}\r\n\r\n}\r\n","/**\r\n * Zoom out button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ZoomOutButton]].\r\n */\r\nexport interface IZoomOutButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[ZoomOutButton]].\r\n */\r\nexport interface IZoomOutButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ZoomOutButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IZoomOutButtonAdapters extends IButtonAdapters, IZoomOutButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IZoomOutButtonEvents} for a list of available events\r\n * @see {@link IZoomOutButtonAdapters} for a list of available Adapters\r\n */\r\nexport class ZoomOutButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IZoomOutButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IZoomOutButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IZoomOutButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ZoomOutButton\";\r\n\r\n\t\tthis.padding(9, 9, 9, 9);\r\n\t\t//this.dx = - 5;\r\n\t\t//this.dy = 5;\r\n\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(20, 20, 20, 20);\r\n\t\tbackground.fill = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\r\n\t\tbackground.strokeOpacity = 0;\r\n\r\n\t\tbackground.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\r\n\t\tbackground.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: 0, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 11, y: 0 });\r\n\t\ticon.path = path;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(8, 3, 8, 3);\r\n\t\ticon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n\t\tthis.icon = icon;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Zoom Out\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomOutButton\"] = ZoomOutButton;\r\n","/**\r\n * Play button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Triangle } from \"./Triangle\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PlayButton]].\r\n */\r\nexport interface IPlayButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[PlayButton]].\r\n */\r\nexport interface IPlayButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PlayButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPlayButtonAdapters extends IButtonAdapters, IPlayButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IPlayButtonEvents} for a list of available events\r\n * @see {@link IPlayButtonAdapters} for a list of available Adapters\r\n */\r\nexport class PlayButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPlayButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPlayButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPlayButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"PlayButton\";\r\n\r\n\t\tthis.padding(12, 12, 12, 12);\r\n\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(25, 25, 25, 25);\r\n\t\tbackground.fill = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\r\n\t\tbackground.strokeOpacity = 0;\r\n\r\n\t\tbackground.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\r\n\t\tbackground.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\r\n\r\n\t\t// Create a play icon\r\n\t\tlet playIcon: Triangle = new Triangle();\r\n\t\tplayIcon.direction = \"right\";\r\n\t\tplayIcon.width = 9;\r\n\t\tplayIcon.height = 11;\r\n\t\tplayIcon.marginLeft = 1;\r\n\t\tplayIcon.marginRight = 1;\r\n\t\tplayIcon.horizontalCenter = \"middle\";\r\n\t\tplayIcon.verticalCenter = \"middle\";\r\n\r\n\t\tplayIcon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n\t\tplayIcon.fill = playIcon.stroke;\r\n\t\tthis.icon = playIcon;\r\n\r\n\t\t// Create a play icon\r\n\t\tlet stopIcon: RoundedRectangle = new RoundedRectangle();\r\n\t\tstopIcon.width = 11;\r\n\t\tstopIcon.height = 11;\r\n\t\tstopIcon.horizontalCenter = \"middle\";\r\n\t\tstopIcon.verticalCenter = \"middle\";\r\n\t\tstopIcon.cornerRadius(0, 0, 0, 0);\r\n\r\n\t\tstopIcon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n\t\tstopIcon.fill = playIcon.stroke;\r\n\r\n\t\tthis.togglable = true;\r\n\r\n\t\tlet activeState = this.states.create(\"active\");\r\n\t\tactiveState.transitionDuration = 0;\r\n\t\tactiveState.properties.icon = stopIcon;\r\n\r\n\t\tthis.defaultState.transitionDuration = 0;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Play\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PlayButton\"] = PlayButton;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { LinearGradient } from \"./LinearGradient\";\r\nimport { RadialGradient } from \"./RadialGradient\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for color modifiers.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ColorModifier extends BaseObject {\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColorModifier\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies color value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Original color\r\n\t * @return Modified\r\n\t */\r\n\tpublic modify(value: Color): Color | LinearGradient | RadialGradient {\r\n\t\treturn value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorModifier\"] = ColorModifier;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColorModifier } from \"./ColorModifier\";\r\nimport { LinearGradient } from \"./LinearGradient\";\r\nimport { RadialGradient } from \"./RadialGradient\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class can be used to modify linear gradient steps, changing visual\r\n * properties like lightness, brightness, opacity of each set.\r\n *\r\n * It can also set offsets for each gradient step.\r\n *\r\n * E.g. if I want to fill a columns in a column series to be a solid fill from\r\n * top to 80% of height, then gradually fades out, I can use the following\r\n * gradient modifier as a `fillModifier`:\r\n *\r\n * ```TypeScript\r\n * let fillModifier = new am4core.GradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JavaScript\r\n * var fillModifier = new am4core.GradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JSON\r\n * \"series\": [{\r\n *   \"type\": \"ColumnSeries\",\r\n *   \"columns\": {\r\n *     \"fillModifier\": {\r\n *       \"type\": \"GradientModifier\",\r\n *       \"opacities\": [1, 1, 0],\r\n *       \"offsets\": [0, 0.8, 1]\r\n *     }\r\n *   }\r\n * }]\r\n * ```\r\n */\r\nexport class GradientModifier extends ColorModifier {\r\n\r\n\t/**\r\n\t * A reference to the gradient instance that this modifier is used for.\r\n\t */\r\n\tpublic gradient: LinearGradient | RadialGradient;\r\n\r\n\t/**\r\n\t * An array of lightness values for each step.\r\n\t */\r\n\tprotected _lightnesses!: number[];\r\n\r\n\t/**\r\n\t * An array of brightness values for each step.\r\n\t */\r\n\tprotected _brightnesses!: number[];\r\n\r\n\t/**\r\n\t * An array of opacity values for each step.\r\n\t */\r\n\tprotected _opacities!: number[];\r\n\r\n\t/**\r\n\t * An array of relative position (0-1) for each step.\r\n\t *\r\n\t * If not set, all steps will be of equal relative length.\r\n\t */\r\n\tprotected _offsets!: number[];\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.lightnesses = [];\r\n\t\tthis.brightnesses = [];\r\n\t\tthis.opacities = [];\r\n\t\tthis.offsets = [];\r\n\t\tthis.className = \"GradientModifier\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * An array of lightness values for each step.\r\n\t *\r\n\t * @param value  Lightness values\r\n\t */\r\n\tpublic set lightnesses(value: number[]) {\r\n\t\tthis._lightnesses = value;\r\n\t\tthis._brightnesses = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Lightness values\r\n\t */\r\n\tpublic get lightnesses(): number[] {\r\n\t\treturn this._lightnesses;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of brightness values for each step.\r\n\t *\r\n\t * @param value  Brightness values\r\n\t */\r\n\tpublic set brightnesses(value: number[]) {\r\n\t\tthis._brightnesses = value;\r\n\t\tthis._lightnesses = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Brightness values\r\n\t */\r\n\tpublic get brightnesses(): number[] {\r\n\t\treturn this._brightnesses;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of opacity values for each step.\r\n\t *\r\n\t * @param value  Opacity values\r\n\t */\r\n\tpublic set opacities(value: number[]) {\r\n\t\tthis._opacities = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacity values\r\n\t */\r\n\tpublic get opacities(): number[] {\r\n\t\treturn this._opacities;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of relative position (0-1) for each step.\r\n\t *\r\n\t * If not set, all steps will be of equal relative length.\r\n\t *\r\n\t * @param value  Offsets\r\n\t */\r\n\tpublic set offsets(value: number[]) {\r\n\t\tthis._offsets = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Offsets\r\n\t */\r\n\tpublic get offsets(): number[] {\r\n\t\treturn this._offsets;\r\n\t}\r\n\r\n\t/**\r\n\t * Modifies the color based on step setting.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Source color\r\n\t * @return A gradient that matches set modification rules\r\n\t */\r\n\tpublic modify(value: Color): Color | LinearGradient | RadialGradient {\r\n\r\n\t\t// Clear current gradient\r\n\t\tthis.gradient.clear();\r\n\r\n\t\t// Get step count\r\n\t\tlet count: number = 0;\r\n\t\tif (this.opacities) {\r\n\t\t\tcount = $math.max(count, this.opacities.length);\r\n\t\t}\r\n\t\tif (this.lightnesses) {\r\n\t\t\tcount = $math.max(count, this.lightnesses.length);\r\n\t\t}\r\n\t\tif (this.brightnesses) {\r\n\t\t\tcount = $math.max(count, this.brightnesses.length);\r\n\t\t}\r\n\r\n\t\t// Init step values\r\n\t\tlet opacity: number = 1,\r\n\t\t\tlightness: $type.Optional<number>,\r\n\t\t\tbrightness: $type.Optional<number>;\r\n\r\n\t\t// Apply steps\r\n\t\tfor (let i = 0; i < count; i++) {\r\n\r\n\t\t\t// Take base color\r\n\t\t\tlet color = value;\r\n\r\n\t\t\t// Check if there are any parameters for this step\r\n\t\t\tif (this.opacities && $type.isNumber(this.opacities[i])) {\r\n\t\t\t\topacity = this.opacities[i];\r\n\t\t\t}\r\n\t\t\tif (this.lightnesses && $type.isNumber(this.lightnesses[i])) {\r\n\t\t\t\tlightness = this.lightnesses[i];\r\n\t\t\t\tbrightness = undefined;\r\n\t\t\t}\r\n\t\t\tif (this.brightnesses && $type.isNumber(this.brightnesses[i])) {\r\n\t\t\t\tbrightness = this.brightnesses[i];\r\n\t\t\t\tlightness = undefined;\r\n\t\t\t}\r\n\r\n\t\t\t// Check if we need to brighten/lighten color\r\n\t\t\tif ($type.isNumber(brightness)) {\r\n\t\t\t\tcolor = value.brighten(this.brightnesses[i]);\r\n\t\t\t}\r\n\t\t\telse if ($type.isNumber(lightness)) {\r\n\t\t\t\tcolor = value.lighten(this.lightnesses[i]);\r\n\t\t\t}\r\n\r\n\t\t\t// Get offset (it's OK if it's undefined)\r\n\t\t\tlet offset: number = this.offsets[i];\r\n\r\n\t\t\t// Apply step\r\n\t\t\tthis.gradient.addColor(color, opacity, offset);\r\n\t\t}\r\n\t\treturn this.gradient;\r\n\t}\r\n\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tthis._offsets = source.offsets;\r\n\t\tthis._brightnesses = source.brightnesses;\r\n\t\tthis._lightnesses = source.lightnesses;\r\n\t\tthis._opacities = source.opacities;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GradientModifier\"] = GradientModifier;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { LinearGradient } from \"./LinearGradient\";\r\nimport { GradientModifier } from \"./GradientModifier\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class can be used to modify linear gradient steps, changing visual\r\n * properties like lightness, brightness, opacity of each set.\r\n *\r\n * It can also set offsets for each gradient step.\r\n *\r\n * E.g. if I want to fill a columns in a column series to be a solid fill from\r\n * top to 80% of height, then gradually fades out, I can use the following\r\n * gradient modifier as a `fillModifier`:\r\n *\r\n * ```TypeScript\r\n * let fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JavaScript\r\n * var fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JSON\r\n * \"series\": [{\r\n *   \"type\": \"ColumnSeries\",\r\n *   \"columns\": {\r\n *     \"fillModifier\": {\r\n *       \"type\": \"LinearGradientModifier\",\r\n *       \"opacities\": [1, 1, 0],\r\n *       \"offsets\": [0, 0.8, 1]\r\n *     }\r\n *   }\r\n * }]\r\n * ```\r\n */\r\nexport class LinearGradientModifier extends GradientModifier {\r\n\r\n\t/**\r\n\t * A reference to the gradient instance that this modifier is used for.\r\n\t */\r\n\tpublic gradient: LinearGradient;\r\n\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LinearGradientModifier\";\r\n\t\tthis.gradient = new LinearGradient();\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.gradient = source.gradient.clone();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinearGradientModifier\"] = LinearGradientModifier;\r\n","/**\r\n * Cone module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../Container\";\r\nimport { Sprite, visualProperties } from \"../../Sprite\";\r\nimport { Ellipse } from \"../../elements/Ellipse\";\r\nimport { LinearGradientModifier } from \"../../rendering/fills/LinearGradientModifier\";\r\nimport { percent, Percent } from \"../../utils/Percent\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $path from \"../../rendering/Path\";\r\nimport { Orientation } from \"../../defs/Orientation\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Cone]].\r\n */\r\nexport interface IConeProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t */\r\n\tangle?: number;\r\n\r\n\t/**\r\n\t * A relative radius of the cone's bottom (base).\r\n\t *\r\n\t * It is relevant to the inner width or height of the element.\r\n\t *\r\n\t * @default Percent(100)\r\n\t */\r\n\tradius?: Percent;\r\n\r\n\t/**\r\n\t * A relative radius of the cone's top (tip).\r\n\t *\r\n\t * It is relevant to the inner width or height of the element.\r\n\t *\r\n\t * @default Percent(0)\r\n\t */\r\n\ttopRadius?: Percent;\r\n\r\n\t/**\r\n\t * Orientation of the cone\r\n\t *\r\n\t * @default \"vertical\"\r\n\t */\r\n\torientation?: Orientation;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Cone]].\r\n */\r\nexport interface IConeEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Cone]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IConeAdapters extends IContainerAdapters, IConeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Builds a round cone/cylinder.\r\n *\r\n * @see {@link IConeEvents} for a list of available events\r\n * @see {@link IConeAdapters} for a list of available Adapters\r\n */\r\nexport class Cone extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IConeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IConeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IConeEvents;\r\n\r\n\t/**\r\n\t * Bottom ellement.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic bottom: Ellipse;\r\n\r\n\t/**\r\n\t * Top element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic top: Ellipse;\r\n\r\n\t/**\r\n\t * Body element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic body: Sprite;\r\n\r\n\t/**\r\n\t * Gradient for the fill of the body.\r\n\t */\r\n\tpublic bodyFillModifier: LinearGradientModifier;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Cone\";\r\n\r\n\t\tthis.angle = 30;\r\n\t\tthis.radius = percent(100);\r\n\t\tthis.topRadius = percent(100);\r\n\r\n\t\tthis.top = this.createChild(Ellipse);\r\n\t\tthis.top.shouldClone = false;\r\n\r\n\t\tthis.bottom = this.createChild(Ellipse);\r\n\t\tthis.bottom.shouldClone = false;\r\n\r\n\t\tthis.body = this.createChild(Sprite);\r\n\t\tthis.body.shouldClone = false;\r\n\r\n\t\tthis.body.setElement(this.paper.add(\"path\"));\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.bodyFillModifier = new LinearGradientModifier();\r\n\t\tthis.bodyFillModifier.lightnesses = [0, -0.25, 0];\r\n\t\tthis.body.fillModifier = this.bodyFillModifier;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\t$object.copyProperties(this, this.top, visualProperties);\r\n\t\t$object.copyProperties(this, this.bottom, visualProperties);\r\n\t\t$object.copyProperties(this, this.body, visualProperties);\r\n\r\n\t\tlet w: number = this.innerWidth;\r\n\t\tlet h: number = this.innerHeight;\r\n\r\n\t\tlet bottom: Ellipse = this.bottom;\r\n\t\tlet top: Ellipse = this.top;\r\n\r\n\t\tlet angle: number = this.angle;\r\n\t\tlet radiusBase: number;\r\n\t\tlet dx: number;\r\n\t\tlet dy: number;\r\n\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tradiusBase = h / 2;\r\n\t\t\tbottom.y = h / 2;\r\n\t\t\tbottom.x = 0;\r\n\t\t\ttop.y = h / 2;\r\n\t\t\ttop.x = w;\r\n\t\t\tdx = (90 - angle) / 90;\r\n\t\t\tdy = 0;\r\n\t\t\tthis.bodyFillModifier.gradient.rotation = 90;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdx = 0;\r\n\t\t\tdy = (90 - angle) / 90;\r\n\r\n\t\t\tradiusBase = w / 2;\r\n\t\t\tbottom.y = h;\r\n\t\t\tbottom.x = w / 2;\r\n\t\t\ttop.x = w / 2;\r\n\t\t\tthis.bodyFillModifier.gradient.rotation = 0;\r\n\t\t}\r\n\r\n\t\tlet radius: number = this.radius.value * radiusBase;\r\n\t\tlet topRadius: number = this.topRadius.value * radiusBase;\r\n\r\n\t\tbottom.radius = radius - radius * dx;\r\n\t\tbottom.radiusY = radius - radius * dy;\r\n\r\n\t\ttop.radius = topRadius - topRadius * dx;\r\n\t\ttop.radiusY = topRadius - topRadius * dy;\r\n\r\n\t\tlet path: string;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tpath = $path.moveTo({ x: 0, y: h / 2 - bottom.radiusY }) + $path.arcTo(-90, -180, bottom.radius, bottom.radiusY) + $path.lineTo({ x: w, y: h / 2 + top.radiusY }) + $path.arcTo(90, 180, top.radius, top.radiusY) + $path.closePath();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tpath = $path.moveTo({ x: w / 2 - top.radius, y: 0 }) + $path.arcTo(180, -180, top.radius, top.radiusY) + $path.lineTo({ x: w / 2 + bottom.radius, y: h }) + $path.arcTo(0, 180, bottom.radius, bottom.radiusY) + $path.closePath();\r\n\t\t}\r\n\r\n\t\tthis.body.path = path;\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative radius of the cone's bottom (base).\r\n\t *\r\n\t * It is relevant to the inner width or height of the element.\r\n\t *\r\n\t * @default Percent(100)\r\n\t * @param value  Bottom radius\r\n\t */\r\n\tpublic set radius(value: Percent) {\r\n\t\tthis.setPropertyValue(\"radius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bottom radius\r\n\t */\r\n\tpublic get radius(): Percent {\r\n\t\treturn this.getPropertyValue(\"radius\");\r\n\t}\r\n\r\n\t/**\r\n\t * A relative radius of the cone's top (tip).\r\n\t *\r\n\t * It is relevant to the inner width or height of the element.\r\n\t *\r\n\t * @default Percent(0)\r\n\t * @param value  Top radius\r\n\t */\r\n\tpublic set topRadius(value: Percent) {\r\n\t\tthis.setPropertyValue(\"topRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Top radius\r\n\t */\r\n\tpublic get topRadius(): Percent {\r\n\t\treturn this.getPropertyValue(\"topRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the cone\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param value  Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tthis.setPropertyValue(\"orientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n}\r\n","/**\r\n * Module for \"Lighten\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Lighten\" filter\r\n */\r\nexport interface LightenFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Lightness.\r\n\t */\r\n\tlightness: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Lighten\" filter.\r\n */\r\nexport class LightenFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: LightenFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link LightenFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<LightenFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feColorMatrix>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LightenFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.lightness = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Lightness of the target colors.\r\n\t *\r\n\t * If `lightness` is a positive number, the filter will make all colors\r\n\t * lighter.\r\n\t *\r\n\t * If `lightness` is negative, colors will be darkened.\r\n\t *\r\n\t * @param value  Lightness\r\n\t */\r\n\tpublic set lightness(value: number) {\r\n\t\tthis.properties[\"lightness\"] = value;\r\n\t\tlet v = value + 1;\r\n\t\tthis.feColorMatrix.attr({ \"values\": v + \" 0 0 0 0 0 \" + v + \" 0 0 0 0 0 \" + v + \" 0 0 0 0 0 1 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Lightness\r\n\t */\r\n\tpublic get lightness(): number {\r\n\t\treturn this.properties[\"lightness\"];\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LightenFilter\"] = LightenFilter;\r\n","/**\r\n * Creates a 3D rectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../Container\";\r\nimport { Sprite } from \"../../Sprite\";\r\nimport { IPoint } from \"../../defs/IPoint\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $path from \"../../rendering/Path\";\r\nimport { Color, color, toColor } from \"../../utils/Color\";\r\nimport { RadialGradient } from \"../../rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../../rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../../rendering/fills/Pattern\";\r\nimport { LightenFilter } from \"../../rendering/filters/LightenFilter\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Rectangle3D]].\r\n */\r\nexport interface Rectangle3DProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Depth (Z dimension) of the 3D rectangle in pixels.\r\n\t *\r\n\t * @default 30\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Rectangle3D]]\r\n */\r\nexport interface Rectangle3DEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Rectangle3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface Rectangle3DAdapters extends IContainerAdapters, Rectangle3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Builds a 3D rectangle\r\n * @see {@link IRectangle3DEvents} for a list of available events\r\n * @see {@link IRectangle3DAdapters} for a list of available Adapters\r\n */\r\nexport class Rectangle3D extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: Rectangle3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: Rectangle3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: Rectangle3DEvents;\r\n\r\n\t/**\r\n\t * Left side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideLeft: Sprite;\r\n\r\n\t/**\r\n\t * Right side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideRight: Sprite;\r\n\r\n\t/**\r\n\t * Top element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideTop: Sprite;\r\n\r\n\t/**\r\n\t * Bottom element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideBottom: Sprite;\r\n\r\n\t/**\r\n\t * Back element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideBack: Sprite;\r\n\r\n\t/**\r\n\t * Front element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideFront: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.angle = 30;\r\n\t\tthis.depth = 30;\r\n\t\tthis.className = \"Rectangle3D\";\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tlet sideBack: Sprite = this.createChild(Sprite);\r\n\t\tsideBack.shouldClone = false;\r\n\t\tsideBack.setElement(this.paper.add(\"path\"));\r\n\t\tsideBack.isMeasured = false;\r\n\r\n\t\tthis.sideBack = sideBack;\r\n\t\tthis._disposers.push(this.sideBack);\r\n\r\n\t\tlet sideBottom: Sprite = this.createChild(Sprite);\r\n\t\tsideBottom.shouldClone = false;\r\n\t\tsideBottom.setElement(this.paper.add(\"path\"));\r\n\t\tsideBottom.isMeasured = false;\r\n\t\tthis.sideBottom = sideBottom;\r\n\t\tthis._disposers.push(this.sideBottom);\r\n\r\n\t\tlet sideLeft: Sprite = this.createChild(Sprite);\r\n\t\tsideLeft.shouldClone = false;\r\n\t\tsideLeft.setElement(this.paper.add(\"path\"));\r\n\t\tsideLeft.isMeasured = false;\r\n\t\tthis.sideLeft = sideLeft;\r\n\t\tthis._disposers.push(this.sideLeft);\r\n\r\n\t\tlet sideRight: Sprite = this.createChild(Sprite);\r\n\t\tsideRight.shouldClone = false;\r\n\t\tsideRight.setElement(this.paper.add(\"path\"));\r\n\t\tsideRight.isMeasured = false;\r\n\t\tthis.sideRight = sideRight;\r\n\t\tthis._disposers.push(this.sideRight);\r\n\r\n\t\tlet sideTop: Sprite = this.createChild(Sprite);\r\n\t\tsideTop.shouldClone = false;\r\n\t\tsideTop.setElement(this.paper.add(\"path\"));\r\n\t\tsideTop.isMeasured = false;\r\n\t\tthis.sideTop = sideTop;\r\n\t\tthis._disposers.push(this.sideTop);\r\n\r\n\t\tlet sideFront: Sprite = this.createChild(Sprite);\r\n\t\tsideFront.shouldClone = false;\r\n\t\tsideFront.setElement(this.paper.add(\"path\"));\r\n\t\tsideFront.isMeasured = false;\r\n\t\tthis.sideFront = sideFront;\r\n\t\tthis._disposers.push(this.sideFront);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet w: number = this.innerWidth;\r\n\t\tlet h: number = this.innerHeight;\r\n\r\n\t\tlet depth: number = this.depth;\r\n\t\tlet angle: number = this.angle;\r\n\t\tlet sin: number = $math.sin(angle);\r\n\t\tlet cos: number = $math.cos(angle);\r\n\r\n\t\tlet a: IPoint = { x: 0, y: 0 };\r\n\t\tlet b: IPoint = { x: w, y: 0 };\r\n\t\tlet c: IPoint = { x: w, y: h };\r\n\t\tlet d: IPoint = { x: 0, y: h };\r\n\r\n\t\tlet ah: IPoint = { x: depth * cos, y: -depth * sin };\r\n\t\tlet bh: IPoint = { x: depth * cos + w, y: -depth * sin };\r\n\t\tlet ch: IPoint = { x: depth * cos + w, y: -depth * sin + h };\r\n\t\tlet dh: IPoint = { x: depth * cos, y: -depth * sin + h };\r\n\r\n\t\tthis.sideFront.path = $path.moveTo(a) + $path.lineTo(b) + $path.lineTo(c) + $path.lineTo(d) + $path.closePath();\r\n\t\tthis.sideBack.path = $path.moveTo(ah) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(dh) + $path.closePath();\r\n\t\tthis.sideLeft.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(dh) + $path.lineTo(d) + $path.closePath();\r\n\t\tthis.sideRight.path = $path.moveTo(b) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\r\n\t\tthis.sideBottom.path = $path.moveTo(d) + $path.lineTo(dh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\r\n\t\tthis.sideTop.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(bh) + $path.lineTo(b) + $path.closePath();\r\n\t}\r\n\r\n\t/**\r\n\t * Depth (Z dimension) of the 3D rectangle in pixels.\r\n\t *\r\n\t * @default 30\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\r\n\t\tif (!$type.isObject(value) || \"r\" in value) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tlet colorStr: string;\r\n\t\tif (value instanceof Color) {\r\n\t\t\tcolorStr = value.hex;\r\n\t\t}\r\n\t\telse if (value instanceof LinearGradient || value instanceof RadialGradient) {\r\n\t\t\tcolorStr = value.stops.getIndex(0).color.hex;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet filter = new LightenFilter();\r\n\t\t\tfilter.lightness = -0.2;\r\n\t\t\tthis.sideBack.filters.push(filter);\r\n\r\n\t\t\tlet filter2 = filter.clone()\r\n\t\t\tfilter2.lightness = -0.4;\r\n\t\t\tthis.sideLeft.filters.push(filter2);\r\n\r\n\t\t\tlet filter3 = filter.clone()\r\n\t\t\tfilter3.lightness = -0.2;\r\n\t\t\tthis.sideRight.filters.push(filter3);\r\n\r\n\t\t\tlet filter4 = filter.clone()\r\n\t\t\tfilter4.lightness = -0.1;\r\n\t\t\tthis.sideTop.filters.push(filter4);\r\n\r\n\t\t\tlet filter5 = filter.clone()\r\n\t\t\tfilter5.lightness = -0.5;\r\n\t\t\tthis.sideBottom.filters.push(filter5);\r\n\t\t}\r\n\r\n\t\tif (colorStr) {\r\n\t\t\tthis.sideBack.fill = color(colorStr).lighten(-0.2);\r\n\t\t\tthis.sideLeft.fill = color(colorStr).lighten(-0.4);\r\n\t\t\tthis.sideRight.fill = color(colorStr).lighten(-0.2);\r\n\t\t\tthis.sideTop.fill = color(colorStr).lighten(-0.1);\r\n\t\t\tthis.sideBottom.fill = color(colorStr).lighten(-0.5);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Rectangle3D.\r\n\t *\r\n\t * @param source Source Rectangle3D\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.sideBack.copyFrom(source.sideBack);\r\n\t\tthis.sideLeft.copyFrom(source.sideLeft);\r\n\t\tthis.sideRight.copyFrom(source.sideRight);\r\n\t\tthis.sideTop.copyFrom(source.sideTop);\r\n\t\tthis.sideBottom.copyFrom(source.sideBottom);\r\n\t}\r\n\r\n}\r\n","/**\r\n * 3D slice module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Slice, ISliceProperties, ISliceAdapters, ISliceEvents } from \"../Slice\";\r\nimport { Sprite } from \"../../Sprite\";\r\nimport { IPoint } from \"../../defs/IPoint\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $path from \"../../rendering/Path\";\r\nimport * as $type from \"../../utils/Type\";\r\nimport { Color, color } from \"../../utils/Color\";\r\nimport { RadialGradient } from \"../../rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../../rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../../rendering/fills/Pattern\";\r\nimport { LightenFilter } from \"../../rendering/filters/LightenFilter\";\r\n\r\n/**\r\n * Defines properties for [[Slice3D]].\r\n */\r\nexport interface ISlice3DProperties extends ISliceProperties {\r\n\r\n\t/**\r\n\t * Depth (height) of the 3D slice in pixels.\r\n\t *\r\n\t * @default 20\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Slice3D]].\r\n */\r\nexport interface ISlice3DEvents extends ISliceEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slice3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISlice3DAdapters extends ISliceAdapters, ISlice3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a 3D slice of a Pie chart.\r\n *\r\n * @see {@link ISlice3DEvents} for a list of available events\r\n * @see {@link ISlice3DAdapters} for a list of available Adapters\r\n */\r\nexport class Slice3D extends Slice {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISlice3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISlice3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISlice3DEvents;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic edge: Sprite;\r\n\r\n\t/**\r\n\t * Side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideA: Sprite;\r\n\r\n\t/**\r\n\t * Side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideB: Sprite;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Slice3D\";\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\t// Create edge container\r\n\t\tlet edge = this.createChild(Sprite);\r\n\t\tthis.edge = edge;\r\n\t\tedge.shouldClone = false;\r\n\t\tedge.isMeasured = false;\r\n\t\tedge.toBack();\r\n\r\n\t\t// Set defaults\r\n\t\tthis.angle = 30;\r\n\t\tthis.depth = 20;\r\n\r\n\t\t// Create side A element\r\n\t\tlet sideA = this.createChild(Sprite);\r\n\t\tthis.sideA = sideA;\r\n\t\tsideA.shouldClone = false;\r\n\t\tsideA.isMeasured = false;\r\n\t\t//sideA.setElement(this.paper.add(\"path\"));\r\n\t\t//sideA.strokeOpacity = 0;\r\n\r\n\t\t// Crate side B element\r\n\t\tlet sideB = this.createChild(Sprite);\r\n\t\tthis.sideB = sideB;\r\n\t\tsideB.shouldClone = false;\r\n\t\tsideB.isMeasured = false;\r\n\t\t//sideB.setElement(this.paper.add(\"path\"));\r\n\t\t//sideB.strokeOpacity = 0;\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\r\n\t\tlet colorStr: string;\r\n\t\tif (value instanceof Color) {\r\n\t\t\tcolorStr = value.hex;\r\n\t\t}\r\n\t\telse if (value instanceof LinearGradient || value instanceof RadialGradient) {\r\n\t\t\tcolorStr = value.stops.getIndex(0).color.hex;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet filter = new LightenFilter();\r\n\t\t\tfilter.lightness = -0.25;\r\n\t\t\tthis.edge.filters.push(filter);\r\n\t\t\tthis.sideA.filters.push(filter.clone());\r\n\t\t\tthis.sideB.filters.push(filter.clone());\r\n\t\t}\r\n\r\n\t\tif (colorStr) {\r\n\t\t\tlet edgeFill = color(colorStr).lighten(-0.25);\r\n\r\n\t\t\tthis.edge.fill = edgeFill;\r\n\t\t\tthis.sideA.fill = edgeFill;\r\n\t\t\tthis.sideB.fill = edgeFill;\r\n\r\n\t\t\tthis.edge.stroke = edgeFill;\r\n\t\t\tthis.sideA.stroke = edgeFill;\r\n\t\t\tthis.sideB.stroke = edgeFill;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.cornerRadius = 0;\r\n\t\tthis.innerCornerRadius = 0;\r\n\r\n\t\tsuper.draw();\r\n\r\n\t\tif (this.arc !== 0 && this.radius > 0 && this.depth > 0) {\r\n\t\t\tthis.sideB.show(0);\r\n\t\t\tthis.sideA.show(0);\r\n\t\t\tthis.edge.show(0);\r\n\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet arc = this.arc;\r\n\t\t\tlet innerRadius = this.pixelInnerRadius || 0;\r\n\t\t\tlet radiusY = this.radiusY || 0;\r\n\r\n\t\t\t//let cornerRadius = this.cornerRadius || 0;\r\n\t\t\t//let innerCornerRadius = this.innerCornerRadius;\r\n\t\t\tlet radius = this.radius;\r\n\r\n\t\t\t// this is code duplicate with $path.arc. @todo to think how to avoid it\r\n\r\n\t\t\tlet endAngle = startAngle + arc;\r\n\t\t\t//let crSin = $math.sin($math.min(arc, 45) / 2);\r\n\r\n\t\t\t//innerCornerRadius = innerCornerRadius || cornerRadius;\r\n\r\n\t\t\tlet innerRadiusY = (radiusY / radius) * innerRadius;\r\n\t\t\t//let cornerRadiusY = (radiusY / radius) * cornerRadius;\r\n\t\t\t//let innerCornerRadiusY = (radiusY / radius) * innerCornerRadius;\r\n\r\n\t\t\t//cornerRadius = $math.fitToRange(cornerRadius, 0, (radius - innerRadius) / 2);\r\n\t\t\t//cornerRadiusY = $math.fitToRange(cornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\t\t\t//innerCornerRadius = $math.fitToRange(innerCornerRadius, 0, (radius - innerRadius) / 2);\r\n\t\t\t//innerCornerRadiusY = $math.fitToRange(innerCornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\t\t\t//cornerRadius = $math.fitToRange(cornerRadius, 0, radius * crSin);\r\n\t\t\t//cornerRadiusY = $math.fitToRange(cornerRadiusY, 0, radiusY * crSin);\r\n\r\n\t\t\t//innerCornerRadius = $math.fitToRange(innerCornerRadius, 0, innerRadius * crSin);\r\n\t\t\t//innerCornerRadiusY = $math.fitToRange(innerCornerRadiusY, 0, innerRadiusY * crSin);\r\n\r\n\t\t\t//let crAngle: number = Math.asin(cornerRadius / radius / 2) * $math.DEGREES * 2;\r\n\t\t\t//let crAngleY: number = Math.asin(cornerRadiusY / radiusY / 2) * $math.DEGREES * 2;\r\n\r\n\t\t\t//if (innerRadius < innerCornerRadius) {\r\n\t\t\t//\tinnerRadius = innerCornerRadius;\r\n\t\t\t//}\r\n\r\n\t\t\t//if (innerRadiusY < innerCornerRadiusY) {\r\n\t\t\t//\tinnerRadiusY = innerCornerRadiusY;\r\n\t\t\t//}\r\n\r\n\t\t\t//let crInnerAngle: number = Math.asin(innerCornerRadius / innerRadius / 2) * $math.DEGREES * 2;\r\n\t\t\t//let crInnerAngleY: number = Math.asin(innerCornerRadiusY / innerRadiusY / 2) * $math.DEGREES * 2;\r\n\r\n\t\t\t//if (!$type.isNumber(crInnerAngle)) {\r\n\t\t\t//\tcrInnerAngle = 0;\r\n\t\t\t//}\r\n\t\t\t//if (!$type.isNumber(crInnerAngleY)) {\r\n\t\t\t//\tcrInnerAngleY = 0;\r\n\t\t\t//}\r\n\r\n\t\t\t//let middleAngle = startAngle + arc / 2;\r\n\t\t\t//let mPoint = { x: $math.round($math.cos(middleAngle) * innerRadius, 4), y: $math.round($math.sin(middleAngle) * innerRadiusY, 4) };\r\n\r\n\t\t\tlet a0 = { x: $math.cos(startAngle) * (innerRadius), y: $math.sin(startAngle) * (innerRadiusY) };\r\n\t\t\tlet b0 = { x: $math.cos(startAngle) * (radius), y: $math.sin(startAngle) * (radiusY) };\r\n\t\t\tlet c0 = { x: $math.cos(endAngle) * (radius), y: $math.sin(endAngle) * (radiusY) };\r\n\t\t\tlet d0 = { x: $math.cos(endAngle) * (innerRadius), y: $math.sin(endAngle) * (innerRadiusY) };\r\n\t\t\t// end of duplicate\r\n\r\n\t\t\tlet h: number = this.depth;\r\n\t\t\tlet ah: IPoint = { x: a0.x, y: a0.y - h };\r\n\t\t\tlet bh: IPoint = { x: b0.x, y: b0.y - h };\r\n\t\t\tlet ch: IPoint = { x: c0.x, y: c0.y - h };\r\n\t\t\tlet dh: IPoint = { x: d0.x, y: d0.y - h };\r\n\r\n\t\t\tlet edgePath = \"\";\r\n\t\t\tlet count = Math.ceil(arc / 5);\r\n\t\t\tlet step = arc / count;\r\n\t\t\tlet mangle = startAngle;\r\n\r\n\t\t\tlet prevPoint = bh;\r\n\r\n\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\tmangle += step;\r\n\t\t\t\tif (mangle > 0 && mangle < 180) {\r\n\t\t\t\t\tedgePath += $path.moveTo(prevPoint);\r\n\t\t\t\t\tlet pp = { x: $math.cos(mangle) * (radius), y: $math.sin(mangle) * (radiusY) - h };\r\n\t\t\t\t\tedgePath += $path.lineTo({ x: prevPoint.x, y: prevPoint.y + h });\r\n\t\t\t\t\tedgePath += $path.arcToPoint({ x: pp.x, y: pp.y + h }, radius, radiusY, true);\r\n\t\t\t\t\tedgePath += $path.lineTo(pp);\r\n\t\t\t\t\tedgePath += $path.arcToPoint(prevPoint, radius, radiusY);\r\n\t\t\t\t\tedgePath += \"z\";\r\n\t\t\t\t\tprevPoint = pp;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tedgePath += $path.moveTo(prevPoint);\r\n\t\t\t\t\tlet pp = { x: $math.cos(mangle) * (radius), y: $math.sin(mangle) * (radiusY) - h };\r\n\t\t\t\t\tedgePath += $path.arcToPoint(pp, radius, radiusY, true);\r\n\t\t\t\t\tedgePath += $path.lineTo({ x: pp.x, y: pp.y + h });\r\n\t\t\t\t\tedgePath += $path.arcToPoint({ x: prevPoint.x, y: prevPoint.y + h }, radius, radiusY);\r\n\t\t\t\t\tedgePath += $path.lineTo(prevPoint);\r\n\t\t\t\t\tedgePath += \"z\";\r\n\t\t\t\t\tprevPoint = pp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprevPoint = ah;\r\n\t\t\tmangle = startAngle;\r\n\r\n\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\tmangle += step;\r\n\t\t\t\tif (mangle > 0 && mangle < 180) {\r\n\t\t\t\t\tedgePath += $path.moveTo(prevPoint);\r\n\t\t\t\t\tlet pp = { x: $math.cos(mangle) * (innerRadius), y: $math.sin(mangle) * (innerRadiusY) - h };\r\n\t\t\t\t\tedgePath += $path.lineTo({ x: prevPoint.x, y: prevPoint.y + h });\r\n\t\t\t\t\tedgePath += $path.arcToPoint({ x: pp.x, y: pp.y + h }, innerRadius, innerRadiusY, true);\r\n\t\t\t\t\tedgePath += $path.lineTo(pp);\r\n\t\t\t\t\tedgePath += $path.arcToPoint(prevPoint, innerRadius, innerRadiusY);\r\n\t\t\t\t\tedgePath += \"z\";\r\n\t\t\t\t\tprevPoint = pp;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tedgePath += $path.moveTo(prevPoint);\r\n\t\t\t\t\tlet pp = { x: $math.cos(mangle) * (innerRadius), y: $math.sin(mangle) * (innerRadiusY) - h };\r\n\t\t\t\t\tedgePath += $path.arcToPoint(pp, innerRadius, innerRadiusY, true);\r\n\t\t\t\t\tedgePath += $path.lineTo({ x: pp.x, y: pp.y + h });\r\n\t\t\t\t\tedgePath += $path.arcToPoint({ x: prevPoint.x, y: prevPoint.y + h }, innerRadius, innerRadiusY);\r\n\t\t\t\t\tedgePath += $path.lineTo(prevPoint);\r\n\t\t\t\t\tedgePath += \"z\";\r\n\t\t\t\t\tprevPoint = pp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.edge.path = edgePath;\r\n/*\r\n\t\t\ta0 = { x: $math.cos(startAngle) * (innerRadius + innerCornerRadius), y: $math.sin(startAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n\t\t\tb0 = { x: $math.cos(startAngle) * (radius - cornerRadius), y: $math.sin(startAngle) * (radiusY - cornerRadiusY) };\r\n\t\t\tc0 = { x: $math.cos(endAngle) * (radius - cornerRadius), y: $math.sin(endAngle) * (radiusY - cornerRadiusY) };\r\n\t\t\td0 = { x: $math.cos(endAngle) * (innerRadius + innerCornerRadius), y: $math.sin(endAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n\t\t\t// end of duplicate\r\n\r\n\t\t\tah = { x: a0.x, y: a0.y - h };\r\n\t\t\tbh = { x: b0.x, y: b0.y - h };\r\n\t\t\tch = { x: c0.x, y: c0.y - h };\r\n\t\t\tdh = { x: d0.x, y: d0.y - h };\r\n*/\r\n\t\t\tthis.sideA.path = $path.moveTo(a0) + $path.lineTo(b0) + $path.lineTo(bh) + $path.lineTo(ah) + $path.closePath();\r\n\t\t\tthis.sideB.path = $path.moveTo(c0) + $path.lineTo(d0) + $path.lineTo(dh) + $path.lineTo(ch) + $path.closePath();\r\n\r\n\t\t\tif (this.startAngle < 90) {\r\n\t\t\t\tthis.sideA.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.sideA.toFront();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.startAngle + this.arc > 90) {\r\n\t\t\t\tthis.sideB.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.sideB.toFront();\r\n\t\t\t}\r\n\r\n\t\t\tthis.slice.dy = -h;\t\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sideA.hide(0);\r\n\t\t\tthis.sideB.hide(0);\r\n\t\t\tthis.edge.hide(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Depth (height) of the 3D slice in pixels.\r\n\t *\r\n\t * @default 20\r\n\t * @param depth  Depth (px)\r\n\t */\r\n\tpublic set depth(depth: number) {\r\n\t\tthis.setPropertyValue(\"depth\", depth, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\tlet angle: number = this.getPropertyValue(\"angle\");\r\n\t\tif (!$type.isNumber(angle)) {\r\n\t\t\tangle = 0;\r\n\t\t}\r\n\t\treturn angle;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical radius (0-1)\r\n\t */\r\n\tpublic get radiusY(): number {\r\n\t\tlet radiusY: number = this.getPropertyValue(\"radiusY\");\r\n\t\tif (!$type.isNumber(radiusY)) {\r\n\t\t\tradiusY = this.radius - this.radius * this.angle / 90;\r\n\t\t}\r\n\t\treturn radiusY;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical radius for creating skewed slices.\r\n\t *\r\n\t * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half\r\n\t * the `radius`.\r\n\t *\r\n\t * @param value Vertical radius (0-1)\r\n\t */\r\n\tpublic set radiusY(value: number) {\r\n\t\tthis.setPropertyValue(\"radiusY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.edge.copyFrom(source.edge);\r\n\t\tthis.sideA.copyFrom(source.sideA);\r\n\t\tthis.sideB.copyFrom(source.sideB);\r\n\t}\r\n\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadialGradient } from \"./RadialGradient\";\r\nimport { GradientModifier } from \"./GradientModifier\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class can be used to modify radial gradient steps, changing visual\r\n * properties like lightness, brightness, opacity of each set.\r\n *\r\n * It can also set offsets for each gradient step.\r\n *\r\n * E.g. if I want to fill a columns in a column series to be a solid fill from\r\n * top to 80% of height, then gradually fades out, I can use the following\r\n * gradient modifier as a `fillModifier`:\r\n *\r\n * ```TypeScript\r\n * let fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JavaScript\r\n * var fillModifier = new am4core.LinearGradientModifier();\r\n * fillModifier.opacities = [1, 1, 0];\r\n * fillModifier.offsets = [0, 0.8, 1];\r\n * columnSeries.columns.template.fillModifier = fillModifier;\r\n * ```\r\n * ```JSON\r\n * \"series\": [{\r\n *   \"type\": \"ColumnSeries\",\r\n *   \"columns\": {\r\n *     \"fillModifier\": {\r\n *       \"type\": \"LinearGradientModifier\",\r\n *       \"opacities\": [1, 1, 0],\r\n *       \"offsets\": [0, 0.8, 1]\r\n *     }\r\n *   }\r\n * }]\r\n * ```\r\n */\r\nexport class RadialGradientModifier extends GradientModifier {\r\n\t/**\r\n\t * A reference to the gradient instance that this modifier is used for.\r\n\t */\r\n\tpublic gradient: RadialGradient;\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RadialGradientModifier\";\r\n\t\tthis.gradient = new RadialGradient();\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.gradient = source.gradient.clone();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadialGradientModifier\"] = RadialGradientModifier;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern, PatternProperties } from \"./Pattern\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $path from \"../../rendering/Path\";\r\n\r\nexport interface LinePatternProperties extends PatternProperties {\r\n\tgap: number;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Line pattern.\r\n */\r\nexport class LinePattern extends Pattern {\r\n\r\n\t/**\r\n\t * SVG `<line>` element used for pattern.\r\n\t */\r\n\tprotected _line: AMElement;\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: LinePatternProperties;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.properties[\"gap\"] = 0;\r\n\t\tthis._line = this.paper.add(\"path\");\r\n\t\tthis.addElement(this._line);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the pattern.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (Math.round(this.rotation / 90) != this.rotation / 90) {\r\n\t\t\tthis.properties[\"shapeRendering\"] = \"auto\";\r\n\t\t}\r\n\t\tif (this._line) {\r\n\t\t\tlet w = this.width;\r\n\t\t\tlet h = this.height;\r\n\r\n\t\t\tlet path = \"\";\r\n\r\n\t\t\tif (!this.gap) {\r\n\t\t\t\tif (Math.round(this.rotation / 90) != this.rotation / 90) {\r\n\t\t\t\t\tpath = $path.moveTo({ x: -w, y: h / 2 }) + $path.lineTo({ x: w * 2, y: h / 2 });\r\n\r\n\t\t\t\t\tthis.properties[\"rotationX\"] = this.width / 2;\r\n\t\t\t\t\tthis.properties[\"rotationY\"] = this.height / 2;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpath = $path.moveTo({ x: 0, y: 0 }) + $path.lineTo({ x: w, y: 0 });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet step = this.gap + this.strokeWidth;\r\n\t\t\t\tlet count = this.height / step;\r\n\r\n\t\t\t\tfor (let i = -count / 2; i < count * 1.5; i++) {\r\n\t\t\t\t\tif (Math.round(this.rotation / 90) != this.rotation / 90) {\r\n\t\t\t\t\t\tpath += $path.moveTo({ x: -w, y: (i + 0.5) * step }) + $path.lineTo({ x: w * 2, y: (i + 0.5) * step });\r\n\r\n\t\t\t\t\t\tthis.properties[\"rotationX\"] = this.width / 2;\r\n\t\t\t\t\t\tthis.properties[\"rotationY\"] = this.height / 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpath += $path.moveTo({ x: -w, y: i * step }) + $path.lineTo({ x: w * 2, y: i * step });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._line.attr({ \"d\": path });\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Number of pixels between pattern lines.\r\n\t *\r\n\t * The pattern will automatically draw required number of lines to fill\r\n\t * pattern area maintaining `gap` distance between them.\r\n\t *\r\n\t * 0 (zero) means only single line will be drawn.\r\n\t *\r\n\t * @default 0\r\n\t * @since 4.7.7\r\n\t */\r\n\tpublic set gap(value: number) {\r\n\t\tthis.properties[\"gap\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return gap\r\n\t */\r\n\tpublic get gap(): number {\r\n\t\treturn this.properties[\"gap\"];\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinePattern\"] = LinePattern;\r\n","/**\r\n * Rectangular pattern module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern, PatternProperties } from \"./Pattern\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for circle pattern\r\n */\r\nexport interface CirclePatternProperties extends PatternProperties {\r\n\tradius: number;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Circular pattern\r\n */\r\nexport class CirclePattern extends Pattern {\r\n\r\n\t/**\r\n\t * Reference to `<circle>` element used in pattern.\r\n\t */\r\n\tprotected _circle: $type.Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: CirclePatternProperties;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.properties[\"radius\"] = 2;\r\n\t\tthis._circle = this.paper.add(\"circle\");\r\n\t\tthis.addElement(this._circle);\r\n\t\tthis.shapeRendering = \"auto\";\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the circle element.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (this._circle) {\r\n\t\t\tthis._circle.attr({ \"r\": this.radius, \"cx\": this.width / 2, \"cy\":this.height / 2});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Circle radius in pixels.\r\n\t *\r\n\t * @param value Radius (px)\r\n\t */\r\n\tpublic set radius(value: number) {\r\n\t\tthis.properties[\"radius\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px)\r\n\t */\r\n\tpublic get radius(): number {\r\n\t\treturn this.properties[\"radius\"];\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CirclePattern\"] = CirclePattern;\r\n","/**\r\n * Rectangular pattern module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern, PatternProperties } from \"./Pattern\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for rectangular pattern\r\n */\r\nexport interface RectPatternProperties extends PatternProperties {\r\n\trectWidth: number;\r\n\trectHeight: number;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Rectangular pattern\r\n */\r\nexport class RectPattern extends Pattern {\r\n\r\n\t/**\r\n\t * Reference to `<rect>` element used in pattern.\r\n\t */\r\n\tprotected _rect: $type.Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: RectPatternProperties;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.rectHeight = 1;\r\n\t\tthis.rectWidth = 1;\r\n\t\tthis._rect = this.paper.add(\"rect\");\r\n\t\tthis.addElement(this._rect);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the rectangular element.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tthis.properties[\"rotationX\"] = this.width / 2;\r\n\t\tthis.properties[\"rotationY\"] = this.height / 2;\t\t\r\n\t\tif (this._rect) {\r\n\t\t\tthis._rect.attr({ \"width\": this.rectWidth, \"height\": this.rectHeight, \"x\":(this.width - this.rectWidth) / 2, \"y\":(this.height - this.rectHeight) / 2 });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Rectangle width in pixels.\r\n\t *\r\n\t * @param value Width (px)\r\n\t */\r\n\tpublic set rectWidth(value: number) {\r\n\t\tthis.properties[\"rectWidth\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get rectWidth(): number {\r\n\t\treturn this.properties[\"rectWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Rectangle height in pixels.\r\n\t *\r\n\t * @param value Height (px)\r\n\t */\r\n\tpublic set rectHeight(value: number) {\r\n\t\tthis.properties[\"rectHeight\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Height (px)\r\n\t */\r\n\tpublic get rectHeight(): number {\r\n\t\treturn this.properties[\"rectHeight\"];\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;\r\n","/**\r\n * Module for \"Colorize\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Colorize\" filter.\r\n */\r\nexport interface ColorizeFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Color.\r\n\t */\r\n\tcolor?: Color;\r\n\r\n\t/**\r\n\t * Intensity. (0-1)\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tintensity: number;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Colorize\" filter.\r\n */\r\nexport class ColorizeFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: ColorizeFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link ColorizeFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<ColorizeFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feColorMatrix>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColorizeFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n\t\t//this.feColorMatrix.setAttribute(\"in\", \"SourceAlpha\");\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.intensity = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)applies colors to the already existing filter by modifying filyer's\r\n\t * color matrix element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyFilter(): void {\r\n\r\n\t\tlet i: number = this.intensity;\r\n\t\tlet ii = 1 - i;\r\n\r\n\t\tlet r: number;\r\n\t\tlet g: number;\r\n\t\tlet b: number;\r\n\r\n\t\tconst color = this.color;\r\n\r\n\t\tif (color && color.rgb) {\r\n\t\t\tr = color.rgb.r / 255 * i;\r\n\t\t\tg = color.rgb.g / 255 * i;\r\n\t\t\tb = color.rgb.b / 255 * i;\r\n\r\n\t\t} else {\r\n\t\t\tr = 0;\r\n\t\t\tg = 0;\r\n\t\t\tb = 0;\r\n\t\t}\r\n\r\n\t\tthis.feColorMatrix.attr({ \"values\": ii + \" 0 0 0 \" + r + \" 0 \" + ii + \" 0 0 \" + g + \" 0 0 \" + ii + \" 0 \" + b + \" 0 0 0 1 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * Target color to apply to the element.\r\n\t *\r\n\t * Depending on the `intensity`, all colors of the target element will steer\r\n\t * towards this color.\r\n\t *\r\n\t * E.g. setting to `am4core.color(\"greener\")` will make all colors greener.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set color(value: $type.Optional<Color>) {\r\n\t\tthis.properties[\"color\"] = value;\r\n\t\tthis.applyFilter();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): $type.Optional<Color> {\r\n\t\treturn this.properties[\"color\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Intensity of the color (0-1).\r\n\t *\r\n\t * The bigger the number the more of a `color` target's colors will become.\r\n\t *\r\n\t * 0 means the colors will remain as they are.\r\n\t * 1 means all colors will become the target `color`.\r\n\t *\r\n\t * @default 1\r\n\t * @param value  Intensity (0-1)\r\n\t */\r\n\tpublic set intensity(value: number) {\r\n\t\tthis.properties.intensity = value;\r\n\t\tthis.applyFilter();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Intensity (0-1)\r\n\t */\r\n\tpublic get intensity(): number {\r\n\t\treturn this.properties.intensity;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorizeFilter\"] = ColorizeFilter;\r\n","/**\r\n * Module for \"Desaturate\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Desaturate\" filter\r\n */\r\nexport interface DesaturateFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Saturation. (0-1)\r\n\t */\r\n\tsaturation: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creats a \"Desaturate\" filter\r\n */\r\nexport class DesaturateFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: DesaturateFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link DesaturateFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<DesaturateFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feColorMatrix>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DesaturateFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"type\": \"saturate\" });\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 120;\r\n\t\tthis.height = 120;\r\n\r\n\t\tthis.saturation = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Saturation.\r\n\t *\r\n\t * 0 - completely desaturated.\r\n\t * 1 - fully saturated (gray).\r\n\t *\r\n\t * @param value  Saturation (0-1)\r\n\t */\r\n\tpublic set saturation(value: number) {\r\n\t\tthis.properties[\"saturation\"] = value;\r\n\t\tthis.feColorMatrix.attr({ \"values\": value.toString() });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Saturation (0-1)\r\n\t */\r\n\tpublic get saturation(): number {\r\n\t\treturn this.properties[\"saturation\"];\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DesaturateFilter\"] = DesaturateFilter;\r\n","/**\r\n * Module for \"Blur\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Blur\" filter.\r\n */\r\nexport interface BlurFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tdx?: number;\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tdy?: number;\r\n\r\n\t/**\r\n\t * Blur value.\r\n\t */\r\n\tblur: number;\r\n\r\n\t/**\r\n\t * Opacity. (0-1)\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\topacity?: number;\r\n\r\n\t/**\r\n\t * Color.\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tcolor?: Color;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Blur\" filter.\r\n */\r\nexport class BlurFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: BlurFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link BlurFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<BlurFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feGaussianBlur>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feGaussianBlur: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"BlurFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\r\n\t\tthis.feGaussianBlur = this.paper.add(\"feGaussianBlur\");\r\n\t\tthis.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n\t\tthis.filterPrimitives.push(this.feGaussianBlur);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 200;\r\n\t\tthis.height = 200;\r\n\t\tthis.blur = 1.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Blur value.\r\n\t *\r\n\t * The bigger the value, the blurrier the target element will become.\r\n\t *\r\n\t * @default 1.5\r\n\t * @param value Blur\r\n\t */\r\n\tpublic set blur(value: number) {\r\n\t\tthis.properties.blur = value;\r\n\t\tthis.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Blur\r\n\t */\r\n\tpublic get blur(): number {\r\n\t\treturn this.properties.blur;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"BlurFilter\"] = BlurFilter;\r\n","/**\r\n * Module for \"Focus\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../Sprite\";\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Focus\" filter.\r\n */\r\nexport interface FocusFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Opacity of the outline. (0-1)\r\n\t */\r\n\topacity?: number;\r\n\r\n\t/**\r\n\t * Stroke (outline) color.\r\n\t */\r\n\tstroke?: Color;\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t */\r\n\tstrokeWidth?: number;\r\n\r\n\t/**\r\n\t * Stroke (outline) opacity. (0-1)\r\n\t */\r\n\tstrokeOpacity?: number;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Focus\" filter.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/accessibility/} more about accessibility\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/changing-appearance-of-focused-items/} cusomizing focus appearance\r\n */\r\nexport class FocusFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: FocusFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link FocusFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<FocusFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feFlood: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feMorphology>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feMorphology: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feColorMatrix: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feComposite>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feComposite: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feBlend: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FocusFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\t\tthis.feFlood = this.paper.add(\"feFlood\");\r\n\t\tthis.feFlood.attr({ \"flood-color\": new InterfaceColorSet().getFor(\"primaryButtonHover\"), \"result\": \"base\" });\r\n\t\tthis.filterPrimitives.push(this.feFlood);\r\n\r\n\t\tthis.feMorphology = this.paper.add(\"feMorphology\");\r\n\t\tthis.feMorphology.attr({ \"result\": \"bigger\", \"in\": \"SourceGraphic\", \"operator\": \"dilate\", \"radius\": \"2\" });\r\n\t\tthis.filterPrimitives.push(this.feMorphology);\r\n\r\n\t\tthis.feColorMatrix = this.paper.add(\"feColorMatrix\");\r\n\t\tthis.feColorMatrix.attr({ \"result\": \"mask\", \"in\": \"bigger\", \"type\": \"matrix\", \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0\" });\r\n\t\tthis.filterPrimitives.push(this.feColorMatrix);\r\n\r\n\t\tthis.feComposite = this.paper.add(\"feComposite\");\r\n\t\tthis.feComposite.attr({ \"result\": \"drop\", \"in\": \"base\", \"in2\": \"mask\", \"operator\": \"in\" });\r\n\t\tthis.filterPrimitives.push(this.feComposite);\r\n\r\n\t\tthis.feBlend = this.paper.add(\"feBlend\");\r\n\t\tthis.feBlend.attr({ \"in\": \"SourceGraphic\", \"in2\": \"drop\", \"mode\": \"normal\" });\r\n\t\tthis.filterPrimitives.push(this.feBlend);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 130;\r\n\t\tthis.height = 130;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) color.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set stroke(value: $type.Optional<Color>) {\r\n\t\tthis.properties[\"stroke\"] = value;\r\n\t\tthis.feFlood.attr({ \"flood-color\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get stroke(): $type.Optional<Color> {\r\n\t\treturn this.properties[\"stroke\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t *\r\n\t * @param value  Outline thickness (px)\r\n\t */\r\n\tpublic set strokeWidth(value: $type.Optional<number>) {\r\n\t\tthis.properties[\"strokeWidth\"] = value;\r\n\t\tthis.feMorphology.attr({ \"radius\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outline thickness (px)\r\n\t */\r\n\tpublic get strokeWidth(): $type.Optional<number> {\r\n\t\treturn this.properties[\"strokeWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Opacity of the outline. (0-1)\r\n\t *\r\n\t * @param value  Outline opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: $type.Optional<number>) {\r\n\t\tthis.properties[\"opacity\"] = value;\r\n\t\tthis.feColorMatrix.attr({ \"values\": \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \" + value + \" 0\" });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Outline opacity (0-1)\r\n\t */\r\n\tpublic get opacity(): $type.Optional<number> {\r\n\t\treturn this.properties[\"opacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets filter's target element.\r\n\t *\r\n\t * In addition it also disables built-in focus outline on element this\r\n\t * filter is applied to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Element filter is being attached to\r\n\t */\r\n\tprotected setSprite(value: Sprite): void {\r\n\t\tif (this._sprite && this._sprite != value) {\r\n\t\t\tthis._sprite.group.removeStyle(\"outline\");\r\n\t\t}\r\n\t\tvalue.group.addStyle({\r\n\t\t\t\"outline\": \"none\"\r\n\t\t});\r\n\t\tsuper.setSprite(value);\r\n\t}\r\n\r\n}\r\n","/**\r\n * This module contains PatternSet object definition\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { Color } from \"./Color\";\r\nimport { InterfaceColorSet } from \"./InterfaceColorSet\";\r\nimport { Pattern } from \"../rendering/fills/Pattern\";\r\nimport { LinePattern } from \"../rendering/fills/LinePattern\";\r\nimport { RectPattern } from \"../rendering/fills/RectPattern\";\r\nimport { CirclePattern } from \"../rendering/fills/CirclePattern\";\r\nimport { registry } from \"../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an interable list of distinctive patterns that can be used in\r\n * conjunction to colors to generate various fill patterns.\r\n *\r\n * @important\r\n * @since 4.7.5\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nexport class PatternSet extends BaseObject {\r\n\r\n\t/**\r\n\t * Holds the list of the colors in this set. (preset or auto-generated)\r\n\t */\r\n\tprotected _list: Pattern[] = [];\r\n\r\n\t/**\r\n\t * Current step.\r\n\t */\r\n\tprotected _currentStep: number = 0;\r\n\r\n\t/**\r\n\t * If set to non-zero value, the PatternSet will start iterating patterns from\r\n\t * that particular index, not the first pattern in the list.\r\n\t */\r\n\tprotected _startIndex: number = 0;\r\n\r\n\t/**\r\n\t * Current pass in cycle. Once all patterns in the list are iterated,\r\n\t * iteration restarts from beginning and currentPass is incremented.\r\n\t */\r\n\tprotected _currentPass: number = 0;\r\n\r\n\t/**\r\n\t * A base color. If there are no colors pre-set in the color list, ColorSet\r\n\t * will use this color as a base when generating new ones, applying\r\n\t * `stepOptions` and `passOptions` to this base color.\r\n\t */\r\n\tpublic baseColor: Color = new Color({\r\n\t\tr: 103,\r\n\t\tg: 183,\r\n\t\tb: 220\r\n\t});\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PatternSet\";\r\n\r\n\t\t// Set base color to be used for pattern elements\r\n\t\tconst interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Set default patterns\r\n\t\tthis.list = [\r\n\t\t\tthis.getLinePattern(1000, 45, 1, 6),\r\n\t\t\tthis.getRectPattern(10, 0, 4),\r\n\t\t\tthis.getLinePattern(1000, -45, 1, 6),\r\n\t\t\tthis.getCirclePattern(11, 2, true),\r\n\t\t\tthis.getLinePattern(6, 90, 1),\r\n\t\t\tthis.getRectPattern(12, 45, 6, true),\r\n\t\t\tthis.getLinePattern(6, 0, 1),\r\n\t\t\tthis.getRectPattern(7, 0, 4),\r\n\t\t\tthis.getLinePattern(1000, 45, 2, 3, \"4,2\"),\r\n\t\t\tthis.getCirclePattern(9, 3, false),\r\n\t\t\tthis.getLinePattern(1000, -45, 2, 3, \"4,2\"),\r\n\t\t\tthis.getRectPattern(10, 45, Math.sqrt(50)),\r\n\t\t\tthis.getLinePattern(1000, -45, 2, 1),\r\n\t\t\tthis.getRectPattern(10, 0, 9),\r\n\t\t\tthis.getLinePattern(1000, 45, 2, 1),\r\n\t\t\tthis.getLinePattern(1000, 0, 3, 1),\r\n\t\t\tthis.getRectPattern(10, 45, 10),\r\n\t\t\tthis.getLinePattern(1000, 90, 3, 1)\r\n\t\t];\r\n\r\n\t\tthis.baseColor = interfaceColors.getFor(\"stroke\");\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic getLinePattern(size: number, rotation: number, thickness: number, gap?: number, strokeDashArray?: string): LinePattern {\r\n\t\tlet pattern = new LinePattern();\r\n\t\tpattern.width = size;\r\n\t\tpattern.height = size;\r\n\t\tpattern.stroke = this.baseColor;\r\n\t\tpattern.gap = gap;\r\n\t\tpattern.strokeDasharray = strokeDashArray;\r\n\t\tpattern.strokeWidth = thickness;\r\n\t\tpattern.rotation = rotation;\r\n\t\treturn pattern;\r\n\t}\r\n\r\n\tpublic getRectPattern(size: number, rotation: number, thickness: number, outline?:boolean): RectPattern {\r\n\t\tlet pattern = new RectPattern();\r\n\t\tpattern.width = size;\r\n\t\tpattern.height = size;\r\n\t\tpattern.rectWidth = thickness;\r\n\t\tpattern.rectHeight = thickness;\r\n\r\n\t\tif(outline){\r\n\t\t\tpattern.stroke = this.baseColor;\r\n\t\t\tpattern.strokeWidth = 1;\r\n\t\t\tpattern.fillOpacity = 0;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tpattern.fill = this.baseColor;\r\n\t\t\tpattern.strokeWidth = 0;\r\n\t\t}\r\n\r\n\t\tif(rotation != 0){\r\n\t\t\tpattern.shapeRendering = \"auto\";\r\n\t\t}\r\n\r\n\t\tpattern.rotation = rotation;\r\n\t\treturn pattern;\r\n\t}\r\n\r\n\tpublic getCirclePattern(size: number, radius: number, outline:boolean): CirclePattern {\r\n\t\tlet pattern = new CirclePattern();\r\n\t\tpattern.width = size;\r\n\t\tpattern.height = size;\r\n\t\tpattern.shapeRendering = \"auto\";\r\n\t\tpattern.radius = radius;\r\n\t\tif(outline){\r\n\t\t\tpattern.stroke = this.baseColor;\r\n\t\t\tpattern.strokeWidth = 1;\r\n\t\t\tpattern.fillOpacity = 0;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tpattern.fill = this.baseColor;\r\n\t\t\tpattern.strokeWidth = 0;\r\n\t\t}\r\n\t\treturn pattern;\r\n\t}\r\n\r\n\t/**\r\n\t * List of pre-defined patterns to be used in set.\r\n\t *\r\n\t * @param value Pattern list\r\n\t */\r\n\tpublic set list(value: Pattern[]) {\r\n\t\tthis._list = value;\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pattern list\r\n\t */\r\n\tpublic get list(): Pattern[] {\r\n\t\treturn this._list;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the next pattern in list.\r\n\t *\r\n\t * @return Pattern\r\n\t */\r\n\tpublic next(): Pattern {\r\n\t\tconst pattern = this.getIndex(this.currentStep);\r\n\t\tthis._currentStep++;\r\n\t\treturn pattern;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a color at specific index in the list.\r\n\t *\r\n\t * @param  i  Index\r\n\t * @return Pattern\r\n\t */\r\n\tpublic getIndex(i: number): Pattern {\r\n\t\tlet pattern;\r\n\t\twhile (this.list.length <= i) {\r\n\t\t\tthis.generatePatterns();\r\n\t\t}\r\n\t\tpattern = this.list[i];\r\n\t\treturn pattern.clone();\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a new set of patterns.\r\n\t */\r\n\tprivate generatePatterns(): void {\r\n\t\tconst count = this.list.length / (this._currentPass + 1);\r\n\t\tthis._currentPass++;\r\n\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\tthis.list.push(this.list[i].clone());\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Resets internal iterator.\r\n\t *\r\n\t * Calling `next()` after this will return the very first color in the color\r\n\t * list, even if it was already returned before.\r\n\t */\r\n\tpublic reset(): void {\r\n\t\tthis._currentStep = this._startIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current color iteration. You can use this property to skip some\r\n\t * colors from iteration. E.g. setting it to `10` will skip first ten\r\n\t * colors.\r\n\t *\r\n\t * Please note that the number is zero-based.\r\n\t *\r\n\t * @param value  Step\r\n\t */\r\n\tpublic set currentStep(value: number) {\r\n\t\tthis._currentStep = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get currentStep(): number {\r\n\t\treturn this._currentStep;\r\n\t}\r\n\r\n\t/**\r\n\t * If set to non-zero value, the ColorSet will start iterating colors from\r\n\t * that particular index, not the first color in the list.\r\n\t *\r\n\t * @default 0\r\n\t * @param  value  Index\r\n\t */\r\n\tpublic set startIndex(value: number) {\r\n\t\tthis._startIndex = value;\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Index\r\n\t */\r\n\tpublic get startIndex(): number {\r\n\t\treturn this._startIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\t// if (config) {\r\n\r\n\t\t// \t// Set up axis ranges\r\n\t\t// \tif ($type.hasValue(config.list) && $type.isArray(config.list)) {\r\n\t\t// \t\tfor (let i = 0, len = config.list.length; i < len; i++) {\r\n\t\t// \t\t\tif (!(config.list[i] instanceof Color)) {\r\n\t\t// \t\t\t\tconfig.list[i] = color(config.list[i]);\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PatternSet\"] = PatternSet;","/**\r\n * AmChartsLogo module.\r\n *\r\n * AmChartsLogo shows amCharts logo for non-commercial users of a library.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Polyspline } from \"./Polyspline\";\r\nimport { color } from \"../utils/Color\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { DesaturateFilter } from \"../rendering/filters/DesaturateFilter\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AmChartsLogo]].\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IAmChartsLogoProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[AmChartsLogo]].\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IAmChartsLogoEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AmChartsLogo]].\r\n *\r\n * @see {@link Adapter}\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IAmChartsLogoAdapters extends IContainerAdapters, IAmChartsLogoProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IAmChartsLogoEvents} for a list of available events\r\n * @see {@link IAmChartsLogoAdapters} for a list of available Adapters\r\n * @ignore Exclude from docs\r\n */\r\nexport class AmChartsLogo extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAmChartsLogoProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAmChartsLogoAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAmChartsLogoEvents;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AmChartsLogo\";\r\n\r\n\t\tthis.valign = \"bottom\";\r\n\r\n\t\tlet d = 0.3;\r\n\t\tthis.opacity = 0.3;\r\n\t\tthis.defaultState.properties.opacity = 0.4;\r\n\t\tthis.url = \"https://www.amcharts.com/\";\r\n\t\tthis.urlTarget = \"_blank\";\r\n\r\n\t\tthis.showSystemTooltip = true;\r\n\t\tthis.readerTitle = \"Chart created using amCharts library\";\r\n\t\tthis.width = 220 * d;\r\n\t\tthis.height = 70 * d;\r\n\t\tthis.background.opacity = 0;\r\n\r\n\t\tlet aColor = color(\"#474758\");\r\n\t\tif (new InterfaceColorSet().getFor(\"background\").alternative.hex == \"#ffffff\") {\r\n\t\t\taColor = color(\"#ffffff\");\r\n\t\t}\r\n\r\n\t\tlet aGradient = new LinearGradient();\r\n\r\n\t\taGradient.addColor(aColor);\r\n\t\taGradient.addColor(aColor, 1, 0.75);\r\n\t\taGradient.addColor(color(\"#3cabff\"), 1, 0.755);\r\n\t\taGradient.rotation = -10;\r\n\r\n\t\tlet aStroke = aGradient;\r\n\r\n\t\tlet m = this.createChild(Polyspline)\r\n\t\tm.shouldClone = false;\r\n\t\tm.isMeasured = false;\r\n\t\tm.segments = [[{ x: 50 * d, y: 50 * d }, { x: 90 * d, y: 50 * d }, { x: 120 * d, y: 20 * d }, { x: 135 * d, y: 35 * d }, { x: 150 * d, y: 20 * d }, { x: 180 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]]\r\n\t\tm.strokeWidth = 6 * d;\r\n\t\tm.tensionX = 0.8;\r\n\t\tm.tensionY = 1;\r\n\r\n\t\tm.stroke = color(\"#3cabff\");\r\n\r\n\t\tlet a = this.createChild(Polyspline);\r\n\t\ta.shouldClone = false;\r\n\t\ta.isMeasured = false;\r\n\t\ta.segments = [[{ x: 20 * d, y: 50 * d }, { x: 50 * d, y: 50 * d }, { x: 90 * d, y: 12 * d }, { x: 133 * d, y: 50 * d }, { x: 170 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]]\r\n\t\ta.strokeWidth = 6 * d;\r\n\t\ta.tensionX = 0.75;\r\n\t\ta.tensionY = 1;\r\n\t\ta.stroke = aStroke;\r\n\r\n\t\tthis._disposers.push(a);\r\n\r\n\t\tlet desaturateFilter = new DesaturateFilter();\r\n\t\tthis.filters.push(desaturateFilter);\r\n\r\n\t\tlet desaturateFilterHover = new DesaturateFilter();\r\n\t\tdesaturateFilterHover.saturation = 1;\r\n\r\n\t\tlet hoverState = this.states.create(\"hover\");\r\n\t\thoverState.properties.opacity = 1;\r\n\t\thoverState.filters.push(desaturateFilterHover);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n","/**\r\n * A plugin base class.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Optional } from \"./Type\";\r\nimport { IDisposer } from \"./Disposer\";\r\nimport { Sprite } from \"../Sprite\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport interface IPlugin extends IDisposer {\r\n\ttarget: Optional<Sprite>;\r\n\tinit(): void;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This is a base class that provides core functionality for plugins.\r\n *\r\n * The easiest way to start off with a new plugin is to extend this class.\r\n *\r\n * It will provide all the mandatory functionality, such as disposers.\r\n *\r\n * @since 4.2.2\r\n */\r\nexport class Plugin implements IPlugin {\r\n\r\n\r\n\t/**\r\n\t * A target object plugin is for.\r\n\t */\r\n\tpublic target: Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Is this object disposed?\r\n\t */\r\n\tprotected _disposed: boolean = false;\r\n\r\n\t/**\r\n\t * List of IDisposer which will be disposed when the BaseObject is disposed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _disposers: Array<IDisposer> = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t// Nothing to do here\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates series with required events and adapters used to hijack its\r\n\t * data.\r\n\t */\r\n\tpublic init(): void {\r\n\t\t// Does nothing\r\n\t\t// Override it\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this element is already disposed.\r\n\t *\r\n\t * @return Is disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes this object and related stuff.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tthis._disposed = true;\r\n\r\n\t\t\tconst a = this._disposers;\r\n\r\n\t\t\tthis._disposers = <any>null;\r\n\r\n\t\t\twhile (a.length !== 0) {\r\n\t\t\t\tconst disposer = a.shift();\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { system } from \"../System\";\r\nimport { registry } from \"../Registry\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\r\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\r\nimport { ITheme } from \"../../themes/ITheme\";\r\nimport { Tooltip } from \"../elements/Tooltip\";\r\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\r\nimport { percent } from \"./Percent\";\r\nimport { options } from \"../Options\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport * as $dom from \"./DOM\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $log from \"./Log\";\r\n\r\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\r\nfunction createChild<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\tlet htmlContainer = $dom.getElement(htmlElement);\r\n\r\n\t// If there's no container available yet, we create a fake one\r\n\tlet tmpContainer = false;\r\n\tif (!htmlContainer) {\r\n\t\thtmlContainer = document.createElement(\"div\");\r\n\t\thtmlContainer.style.width = \"200px\";\r\n\t\thtmlContainer.style.height = \"200px\";\r\n\t\thtmlContainer.style.top = \"0\";\r\n\t\thtmlContainer.style.left = \"0\";\r\n\t\thtmlContainer.style.visibility = \"hidden\";\r\n\t\thtmlContainer.style.position = \"absolute\";\r\n\t\tdocument.body.appendChild(htmlContainer);\r\n\t\ttmpContainer = true;\r\n\t}\r\n\r\n\tif (htmlContainer) {\r\n\r\n\t\thtmlContainer.innerHTML = \"\";\r\n\t\t//htmlContainer.style.overflow = \"hidden\";\r\n\r\n\t\tlet svgDiv = new SVGContainer(htmlContainer);\r\n\t\tlet paper = new Paper(svgDiv.SVGContainer, \"svg-\" + (svgContainers.length - 1));\r\n\r\n\t\t// the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\r\n\t\t// svg area - this is often needed when working with small charts.\r\n\r\n\t\t// main container which holds content container and tooltips container\r\n\t\tlet container = new Container();\r\n\t\tcontainer.htmlContainer = htmlContainer;\r\n\t\tcontainer.svgContainer = svgDiv;\r\n\t\tcontainer.width = percent(100);\r\n\t\tcontainer.height = percent(100);\r\n\t\tcontainer.background.fillOpacity = 0;\r\n\t\tcontainer.paper = paper;\r\n\t\tpaper.append(container.group);\r\n\r\n\t\t// Set up moving to proper element container if it's not yet ready at call time\r\n\t\tif (tmpContainer) {\r\n\t\t\t$dom.ready(() => {\r\n\t\t\t\tcontainer.moveHtmlContainer(htmlElement);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// this is set from parent container, but this one doesn't have, so do it manually.\r\n\t\tcontainer.relativeWidth = 1;\r\n\t\tcontainer.relativeHeight = 1;\r\n\r\n\t\tsvgDiv.container = container;\r\n\r\n\t\t// creating classType instance\r\n\t\tlet sprite = container.createChild(classType);\r\n\t\tsprite.topParent = container;\r\n\t\tlet uid = sprite.uid;\r\n\r\n\t\tregistry.invalidSprites[uid] = [];\r\n\t\tregistry.invalidDatas[uid] = [];\r\n\t\tregistry.invalidPositions[uid] = [];\r\n\t\tregistry.invalidLayouts[uid] = [];\r\n\r\n\t\tcontainer.baseId = uid;\r\n\r\n\t\tsprite.isBaseSprite = true;\r\n\t\tsprite.focusFilter = new FocusFilter();\r\n\t\tregistry.baseSprites.push(sprite);\r\n\t\tregistry.baseSpritesByUid[uid] = sprite;\r\n\r\n\t\tsprite.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv.width || 0, 0), height: Math.max(svgDiv.height || 0, 0) };\r\n\r\n\t\t// this solves issues with display:none, as all children are measured as 0x0\r\n\t\tcontainer.events.on(\"maxsizechanged\", (event) => {\r\n\t\t\tif (event.previousWidth == 0 || event.previousHeight == 0) {\r\n\t\t\t\tcontainer.deepInvalidate();\r\n\t\t\t}\r\n\t\t\tif (sprite.maskRectangle) {\r\n\t\t\t\tsprite.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv.width || 0, 0), height: Math.max(svgDiv.height || 0, 0) };\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet loopTimer: number | null = null;\r\n\r\n\t\t// Checks to see whether the chart was properly disposed or not\r\n\t\tconst loop = () => {\r\n\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\tif ($dom.getRoot(sprite.dom) == null) {\r\n\t\t\t\t\tif (options.autoDispose) {\r\n\t\t\t\t\t\tcontainer.htmlContainer = undefined;\r\n\t\t\t\t\t\tsvgDiv.htmlElement = undefined;\r\n\t\t\t\t\t\tsprite.dispose();\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$log.warn(\"Chart was not disposed\", sprite.uid);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tloopTimer = null;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tloopTimer = window.setTimeout(loop, 1000);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tloopTimer = null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tloop();\r\n\r\n\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\tif (loopTimer !== null) {\r\n\t\t\t\tclearTimeout(loopTimer);\r\n\t\t\t}\r\n\t\t\t$array.remove(registry.baseSprites, sprite);\r\n\t\t\tregistry.baseSpritesByUid[sprite.uid] = undefined;\r\n\t\t}));\r\n\r\n\t\t// TODO figure out a better way of doing this\r\n\t\tsprite.addDisposer(container);\r\n\r\n\t\t// tooltip container\r\n\t\tlet tooltipContainer: Container = container.createChild(Container);\r\n\t\ttooltipContainer.topParent = container;\r\n\t\ttooltipContainer.width = percent(100);\r\n\t\ttooltipContainer.height = percent(100);\r\n\t\ttooltipContainer.isMeasured = false;\r\n\t\tcontainer.tooltipContainer = tooltipContainer;\r\n\r\n\t\tsprite.tooltip = new Tooltip();\r\n\t\tsprite.tooltip.hide(0);\r\n\t\tsprite.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\r\n\t\ttooltipContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\t$type.getValue(sprite.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\t\t}, undefined, false)\r\n\r\n\t\t//@todo: maybe we don't need to create one by default but only on request?\r\n\r\n\t\tlet preloader = new Preloader();\r\n\t\tpreloader.events.on(\"inited\", () => {\r\n\t\t\tpreloader.__disabled = true;\r\n\t\t}, undefined, false);\r\n\t\tcontainer.preloader = preloader;\r\n\r\n\t\t//if (!options.commercialLicense) {\r\n\t\tif (sprite instanceof Container && !sprite.hasLicense()) {\r\n\t\t\tlet logo = tooltipContainer.createChild(AmChartsLogo);\r\n\t\t\ttooltipContainer.events.on(\"maxsizechanged\", (ev) => {\r\n\t\t\t\tif ((tooltipContainer.maxWidth <= 100) || (tooltipContainer.maxHeight <= 50)) {\r\n\t\t\t\t\tlogo.hide();\r\n\t\t\t\t}\r\n\t\t\t\telse if (logo.isHidden || logo.isHiding) {\r\n\t\t\t\t\tlogo.show();\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false);\r\n\t\t\tsprite.logo = logo;\r\n\t\t\tlogo.align = \"left\";\r\n\t\t\tlogo.valign = \"bottom\";\r\n\t\t}\r\n\r\n\t\t$utils.used(sprite.numberFormatter); // need to create one.\r\n\r\n\t\t// Set this as an autonomouse instance\r\n\t\t// Controls like Preloader, Export will use this.\r\n\t\tcontainer.isStandaloneInstance = true;\r\n\r\n\t\tif (options.onlyShowOnViewport) {\r\n\t\t\tif (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t\tsprite.tooltipContainer.__disabled = true;\r\n\r\n\t\t\t\tlet disposers = [\r\n\t\t\t\t\t$dom.addEventListener(window, \"DOMContentLoaded\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"load\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"resize\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"scroll\", function() { viewPortHandler(sprite); })\r\n\t\t\t\t];\r\n\r\n\t\t\t\tif (options.viewportTarget) {\r\n\t\t\t\t\tconst targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\r\n\t\t\t\t\tfor (let i = 0; i < targets.length; i++) {\r\n\t\t\t\t\t\tconst target = targets[i];\r\n\t\t\t\t\t\tdisposers.push($dom.addEventListener(target, \"resize\", function() { viewPortHandler(sprite); }));\r\n\t\t\t\t\t\tdisposers.push($dom.addEventListener(target, \"scroll\", function() { viewPortHandler(sprite); }));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet disposer = new MultiDisposer(disposers);\r\n\r\n\t\t\t\tsprite.addDisposer(disposer);\r\n\t\t\t\tsprite.vpDisposer = disposer;\r\n\t\t\t}\r\n\t\t\telse if (options.queue) {\r\n\t\t\t\taddToQueue(sprite);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (options.queue) {\r\n\t\t\taddToQueue(sprite);\r\n\t\t}\r\n\r\n\t\treturn sprite;\r\n\t}\r\n\telse {\r\n\t\tsystem.log(\"html container not found\");\r\n\t\tthrow new Error(\"html container not found\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Disposes all of the currently active charts.\r\n */\r\nexport function disposeAllCharts(): void {\r\n\twhile (registry.baseSprites.length !== 0) {\r\n\t\tregistry.baseSprites.pop().dispose();\r\n\t}\r\n}\r\n\r\nexport function addToQueue(sprite: Sprite) {\r\n\tif (registry.queue.indexOf(sprite) == -1) {\r\n\t\tsprite.__disabled = true;\r\n\t\tsprite.tooltipContainer.__disabled = true;\r\n\t\tsprite.events.disableType(\"appeared\");\r\n\r\n\t\tif (registry.queue.length == 0) {\r\n\t\t\tregistry.events.once(\"exitframe\", () => {\r\n\t\t\t\tqueueHandler(sprite);\r\n\t\t\t})\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\r\n\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\tremoveFromQueue(sprite);\r\n\t\t}))\r\n\r\n\t\tregistry.queue.push(sprite);\r\n\t}\r\n}\r\n\r\nexport function removeFromQueue(sprite: Sprite) {\r\n\tlet index = registry.queue.indexOf(sprite);\r\n\tif (index >= 0) {\r\n\t\tregistry.queue.splice(registry.queue.indexOf(sprite), 1);\r\n\t\tlet nextSprite = registry.queue[index];\r\n\t\tif (nextSprite) {\r\n\t\t\tqueueHandler(nextSprite);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks whether the chart was not initialized fully due to setting\r\n * of `onlyShowOnViewport`. If it hasn't and is now in the viewport\r\n * the chart will be initialized.\r\n *\r\n * @since 4.9.12\r\n * @param  sprite  Top-level chart object\r\n */\r\nexport function viewPortHandler(sprite: Sprite) {\r\n\tif (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\r\n\r\n\t\tif (sprite.vpDisposer) {\r\n\t\t\tsprite.vpDisposer.dispose();\r\n\t\t}\r\n\r\n\t\taddToQueue(sprite);\r\n\t}\r\n}\r\n\r\nexport function queueHandler(sprite: Sprite) {\r\n\tif (sprite && sprite.tooltipContainer) {\r\n\t\tsprite.__disabled = false;\r\n\t\tsprite.tooltipContainer.__disabled = false;\r\n\t\tsprite.events.enableType(\"appeared\");\r\n\t\tsprite.dispatch(\"removedfromqueue\");\r\n\r\n\t\tif (sprite.showOnInit) {\r\n\t\t\tsprite.events.on(\"appeared\", () => {\r\n\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (sprite.vpDisposer) {\r\n\t\t\tsprite.vpDisposer.dispose();\r\n\t\t}\r\n\t\tif (sprite instanceof Container) {\r\n\t\t\tsprite.invalidateLabels();\r\n\t\t}\r\n\r\n\t\tif (sprite.tooltipContainer) {\r\n\t\t\tsprite.tooltipContainer.invalidateLayout();\r\n\t\t}\r\n\t\tif (sprite instanceof Component) {\r\n\t\t\tsprite.invalidateData();\r\n\t\t\tsprite.reinit();\r\n\r\n\t\t\tsprite.events.once(\"datavalidated\", () => {\r\n\t\t\t\tif (sprite.showOnInit) {\r\n\t\t\t\t\tsprite.appear();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsprite.reinit();\r\n\t\t\tsprite.events.once(\"inited\", () => {\r\n\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t})\r\n\t\t\tif (sprite.showOnInit) {\r\n\t\t\t\tsprite.appear();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\r\nexport function create<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\r\n\t// This is a nasty hack for the benefit of vanilla JS users, who do not\r\n\t// enjoy benefits of type-check anyway.\r\n\t// We're allowing passing in a name of the class rather than type reference\r\n\t// itself.\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType)) {\r\n\t\tif ($type.hasValue(registry.registeredClasses[classType])) {\r\n\t\t\tclassType = registry.registeredClasses[classType];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclassType = registry.registeredClasses[\"Container\"];\r\n\t\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, classType);\r\n\r\n\t// Error?\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\r\nexport function createFromConfig(config: { [index: string]: any }, htmlElement?: string | HTMLElement, classType?: { new(): Sprite; } | string): Sprite {\r\n\r\n\t// Extract chart type from config if necessary\r\n\tif (!$type.hasValue(classType)) {\r\n\t\tclassType = config.type;\r\n\t\tdelete config.type;\r\n\t}\r\n\r\n\t// Extract element from config if necessary\r\n\tif (!$type.hasValue(htmlElement)) {\r\n\t\thtmlElement = config.container;\r\n\t\tdelete config.container;\r\n\t}\r\n\r\n\t// Check if we need to extract actual type reference\r\n\tlet finalType;\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\r\n\t\tfinalType = registry.registeredClasses[classType];\r\n\t}\r\n\telse if (typeof classType !== \"function\") {\r\n\t\tfinalType = Container;\r\n\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t}\r\n\telse {\r\n\t\tfinalType = classType;\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, finalType);\r\n\r\n\t// Set config\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\telse {\r\n\t\tchart.config = config;\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * Useful in creating real queues form mult-chart creation.\r\n *\r\n * Accepts a reference to a function which crates and returns actual chart\r\n * object.\r\n *\r\n * It returns a `Promise` which you can use to catch chart instance once it's\r\n * created.\r\n *\r\n * ```TypeScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   let chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   let chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   var chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   var chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n * @since 4.10.0\r\n * @param  callback  Callback function that creates chart\r\n * @param  scope     Scope to call callback in\r\n * @param  ...rest   Parameters to pass into callback\r\n * @return           Promise with chart instance\r\n */\r\nexport function createDeferred(callback: (...args: Array<any>) => Sprite, scope?: any, ...rest: Array<any>): Promise<Sprite> {\r\n\treturn new Promise<Sprite>((resolve, reject) => {\r\n\t\tregistry.deferred.push({\r\n\t\t\tscope: scope,\r\n\t\t\tcallback: callback,\r\n\t\t\targs: rest,\r\n\t\t\tresolve: resolve\r\n\t\t});\r\n\t\tif (registry.deferred.length == 1) {\r\n\t\t\tprocessNextDeferred();\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction processNextDeferred(): void {\r\n\tlet next = registry.deferred[0];\r\n\tif (next) {\r\n\t\tlet sprite = next.callback.call(next.scope, ...next.args);\r\n\t\tsprite.events.on(\"ready\", () => {\r\n\t\t\tnext.resolve(sprite);\r\n\t\t\tregistry.deferred.shift();\r\n\t\t\tif (options.deferredDelay) {\r\n\t\t\t\tsetTimeout(processNextDeferred, options.deferredDelay);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprocessNextDeferred();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function useTheme(value: ITheme): void {\r\n\tif (registry.themes.indexOf(value) === -1) {\r\n\t\tregistry.themes.push(value);\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function unuseTheme(value: ITheme): void {\r\n\t$array.remove(registry.themes, value);\r\n}\r\n\r\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\r\nexport function unuseAllThemes(): void {\r\n\tregistry.themes = [];\r\n}\r\n\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license: string): void {\r\n\toptions.licenses.push(license);\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AMElement } from \"./AMElement\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates an SVG `<g>` element.\r\n *\r\n * SVG groups are used for elements that need more elements just one.\r\n *\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g} About `<g>` element\r\n */\r\nexport class Group extends AMElement {\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param elementName Element type (should be \"g\")\r\n\t */\r\n\tconstructor(elementName: string) {\r\n\t\tsuper(elementName);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to group.\r\n\t *\r\n\t * This will manipulate DOM. `element` will be physically moved into group.\r\n\t *\r\n\t * @param element  Element\r\n\t */\r\n\tpublic add(element: AMElement): void {\r\n\t\tif (element) {\r\n\t\t\tthis.node.appendChild(element.node);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to group.\r\n\t *\r\n\t * This will manipulate DOM. `element` will be physically moved into group.\r\n\t *\r\n\t * @param element  Element\r\n\t */\r\n\tpublic addToBack(element: AMElement): void {\r\n\t\tif (element) {\r\n\t\t\tlet first = this.node.childNodes[0];\r\n\t\t\tif (first) {\r\n\t\t\t\tif (first != element.node) {\r\n\t\t\t\t\tthis.node.insertBefore(element.node, first);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.node.appendChild(element.node);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the `element` from group.\r\n\t *\r\n\t * Please note that this will not dispose the element itself, it will just\r\n\t * remove it from the group.\r\n\t *\r\n\t * @param element  Element\r\n\t */\r\n\tpublic removeElement(element: AMElement): void {\r\n\t\t// todo: not sure about the speed, need to investigate, maybe it's faster to check if node is a child\r\n\t\tif (element) {\r\n\t\t\ttry {\r\n\t\t\t\tif (element.node && element.node.parentNode == this.node) {\r\n\t\t\t\t\tthis.node.removeChild(element.node);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Checks if this group already has the child element added\r\n\t *\r\n\t * @param element\r\n\t * @return {boolean}\r\n\t */\r\n\tpublic hasChild(element:AMElement):boolean {\r\n\t\tfor(let i = 0; i < this.node.childNodes.length; i++){\r\n\t\t\tif(this.node.childNodes[i] == element.node){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Content of the group element.\r\n\t *\r\n\t * Can be used to add a lot of proprietary SVG markup into group.\r\n\t *\r\n\t * @param value  SVG markup\r\n\t */\r\n\tpublic set content(value: string) {\r\n\t\tthis.node.innerHTML = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return SVG markup\r\n\t */\r\n\tpublic get content(): string {\r\n\t\treturn this.node.innerHTML;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all children from the group.\r\n\t */\r\n\tpublic removeChildren(): void {\r\n\t\tif (this.node.childNodes) {\r\n\t\t\twhile (this.node.childNodes.length > 0) {\r\n\t\t\t\tlet childNode = this.node.firstChild;\r\n\t\t\t\tif (childNode && childNode.parentNode) {\r\n\t\t\t\t\tchildNode.parentNode.removeChild(childNode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic removeChildrenByTag(tag: string): void {\r\n\t\tif (this.node.childNodes) {\r\n\t\t\tconst remove = this.node.getElementsByTagName(tag);\r\n\t\t\tfor(let i = 0; i < remove.length; i++) {\r\n\t\t\t\tthis.node.removeChild(remove[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport { Optional } from \"./Type\";\r\n\r\n/**\r\n * Defines interface for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IDisposer {\r\n\tisDisposed(): boolean;\r\n\tdispose(): void;\r\n}\r\n\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Disposer implements IDisposer {\r\n\r\n\t/**\r\n\t * Is object disposed?\r\n\t */\r\n\tprivate _disposed: boolean;\r\n\r\n\t/**\r\n\t * Method that disposes the object.\r\n\t */\r\n\tprivate _dispose: () => void;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param dispose  Function that disposes object\r\n\t */\r\n\tconstructor(dispose: () => void) {\r\n\t\tthis._disposed = false;\r\n\t\tthis._dispose = dispose;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if object is disposed.\r\n\t *\r\n\t * @return Disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tthis._disposed = true;\r\n\t\t\tthis._dispose();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class MultiDisposer extends Disposer {\r\n\tconstructor(disposers: Array<IDisposer>) {\r\n\t\tsuper(() => {\r\n\t\t\t$array.each(disposers, (x) => {\r\n\t\t\t\tx.dispose();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class MutableValueDisposer<T extends IDisposer> extends Disposer {\r\n\r\n\t/**\r\n\t * Current disposer.\r\n\t */\r\n\tprivate _disposer: Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Current value.\r\n\t */\r\n\tprivate _value: Optional<T>;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper(() => {\r\n\t\t\tif ($type.hasValue(this._disposer)) {\r\n\t\t\t\tthis._disposer.dispose();\r\n\t\t\t\tthis._disposer = undefined;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current value.\r\n\t *\r\n\t * @return Value\r\n\t */\r\n\tpublic get(): Optional<T> {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets value and disposes previous disposer if it was set.\r\n\t *\r\n\t * @param value     New value\r\n\t * @param disposer  Disposer\r\n\t */\r\n\tpublic set(value: Optional<T>, disposer: Optional<IDisposer>): void {\r\n\t\tif ($type.hasValue(this._disposer)) {\r\n\t\t\tthis._disposer.dispose();\r\n\t\t}\r\n\r\n\t\tthis._disposer = disposer;\r\n\t\tthis._value = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the disposer value.\r\n\t */\r\n\tpublic reset(): void {\r\n\t\tthis.set(undefined, undefined);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class CounterDisposer extends Disposer {\r\n\r\n\t/**\r\n\t * [_counter description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprivate _counter: number = 0;\r\n\r\n\t/**\r\n\t * [increment description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic increment() {\r\n\t\t// TODO throw an error if it is disposed\r\n\t\t++this._counter;\r\n\r\n\t\t// TODO make this more efficient\r\n\t\treturn new Disposer(() => {\r\n\t\t\t--this._counter;\r\n\r\n\t\t\tif (this._counter === 0) {\r\n\t\t\t\tthis.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Pointed rectangle module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PointedShape, IPointedShapeProperties, IPointedShapeAdapters, IPointedShapeEvents } from \"./PointedShape\";\r\nimport * as $math from \"../utils/Math\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PointedRectangle]].\r\n */\r\nexport interface IPointedRectangleProperties extends IPointedShapeProperties {\r\n\r\n\t/**\r\n\t * Radius of rectangle's border in pixels.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tcornerRadius?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PointedRectangle]].\r\n */\r\nexport interface IPointedRectangleEvents extends IPointedShapeEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PointedRectangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPointedRectangleAdapters extends IPointedShapeAdapters, IPointedRectangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link IPointedRectangleEvents} for a list of available events\r\n * @see {@link IPointedRectangleAdapters} for a list of available Adapters\r\n */\r\nexport class PointedRectangle extends PointedShape {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPointedRectangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPointedRectangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPointedRectangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PointedRectangle\";\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\t\tthis.cornerRadius = 6;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tlet cr = this.cornerRadius;\r\n\t\tlet w = this.innerWidth;\r\n\t\tlet h = this.innerHeight;\r\n\t\tif (w > 0 && h > 0) {\r\n\t\t\tlet x = this.pointerX;\r\n\t\t\tlet y = this.pointerY;\r\n\t\t\tlet bwh = this.pointerBaseWidth / 2;\r\n\r\n\t\t\tlet maxcr: number = $math.min(w / 2, h / 2);\r\n\t\t\tlet crtl: number = $math.fitToRange(cr, 0, maxcr);\r\n\t\t\tlet crtr: number = $math.fitToRange(cr, 0, maxcr);\r\n\t\t\tlet crbr: number = $math.fitToRange(cr, 0, maxcr);\r\n\t\t\tlet crbl: number = $math.fitToRange(cr, 0, maxcr);\r\n\r\n\t\t\t// corner coordinates\r\n\t\t\t// top left\r\n\t\t\tlet xtl = 0;\r\n\t\t\tlet ytl = 0;\r\n\t\t\t// top right\r\n\t\t\tlet xtr = w;\r\n\t\t\tlet ytr = 0;\r\n\t\t\t// bottom right\r\n\t\t\tlet xbr = w;\r\n\t\t\tlet ybr = h;\r\n\t\t\t// bottom left\r\n\t\t\tlet xbl = 0;\r\n\t\t\tlet ybl = h;\r\n\r\n\t\t\tlet lineT;\r\n\t\t\tlet lineR;\r\n\t\t\tlet lineB;\r\n\t\t\tlet lineL;\r\n\r\n\t\t\t// find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n\t\t\t// d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n\t\t\tlet d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n\t\t\tlet d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n\r\n\t\t\t// top\r\n\t\t\tif (d1 > 0 && d2 > 0) {\r\n\t\t\t\tlet stemX = $math.fitToRange(x, crtl + bwh, w - bwh - crtr);\r\n\t\t\t\ty = $math.fitToRange(y, -Infinity, 0);\r\n\t\t\t\tlineT = \"M\" + crtl + \",0 L\" + (stemX - bwh) + \",0 L\" + x + \",\" + y + \" L\" + (stemX + bwh) + \",0 L\" + (w - crtr) + \",0\";\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineT = \"M\" + crtl + \",0 L\" + (w - crtr) + \",0\";\r\n\t\t\t}\r\n\t\t\t// bottom\r\n\t\t\tif (d1 < 0 && d2 < 0) {\r\n\t\t\t\tlet stemX = $math.fitToRange(x, crbl + bwh, w - bwh - crbr);\r\n\t\t\t\ty = $math.fitToRange(y, h, Infinity);\r\n\t\t\t\tlineB = \" L\" + (w - crbr) + \",\" + h + \" L\" + (stemX + bwh) + \",\" + h + \" L\" + x + \",\" + y + \" L\" + (stemX - bwh) + \",\" + h + \" L\" + crbl + \",\" + h;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineB = \" L\" + crbl + \",\" + h;\r\n\t\t\t}\r\n\t\t\t// left\r\n\t\t\tif (d1 < 0 && d2 > 0) {\r\n\t\t\t\tlet stemY = $math.fitToRange(y, crtl + bwh, h - crbl - bwh);\r\n\t\t\t\tx = $math.fitToRange(x, -Infinity, 0);\r\n\t\t\t\tlineL = \" L0,\" + (h - crbl) + \" L0,\" + (stemY + bwh) + \" L\" + x + \",\" + y + \" L0,\" + (stemY - bwh) + \" L0,\" + crtl;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineL = \" L0,\" + crtl;\r\n\t\t\t}\r\n\t\t\t// right\r\n\t\t\tif (d1 > 0 && d2 < 0) {\r\n\t\t\t\tlet stemY = $math.fitToRange(y, crtr + bwh, h - bwh - crbr);\r\n\t\t\t\tx = $math.fitToRange(x, w, Infinity);\r\n\t\t\t\tlineR = \" L\" + w + \",\" + crtr + \" L\" + w + \",\" + (stemY - bwh) + \" L\" + x + \",\" + y + \" L\" + w + \",\" + (stemY + bwh) + \" L\" + w + \",\" + (h - crbr);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlineR = \" L\" + w + \",\" + (h - crbr);\r\n\t\t\t}\r\n\r\n\t\t\tlet arcTR = \" a\" + crtr + \",\" + crtr + \" 0 0 1 \" + crtr + \",\" + crtr;\r\n\t\t\tlet arcBR = \" a\" + crbr + \",\" + crbr + \" 0 0 1 -\" + crbr + \",\" + crbr;\r\n\t\t\tlet arcBL = \" a\" + crbl + \",\" + crbl + \" 0 0 1 -\" + crbl + \",-\" + crbl;\r\n\t\t\tlet arcTL = \" a\" + crtl + \",\" + crtl + \" 0 0 1 \" + crtl + \",-\" + crtl;\r\n\r\n\t\t\tthis.path = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of rectangle's border in pixels.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Corner radius (px)\r\n\t */\r\n\tpublic set cornerRadius(value: number) {\r\n\t\tthis.setPropertyValue(\"cornerRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Corner radius (px)\r\n\t */\r\n\tpublic get cornerRadius(): number {\r\n\t\treturn this.getPropertyValue(\"cornerRadius\");\r\n\t}\r\n\r\n}\r\n","/**\r\n * Pattern module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { Group } from \"../Group\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Paper, getGhostPaper } from \"../Paper\";\r\nimport { ShapeRendering } from \"../../defs/ShapeRendering\";\r\nimport { List, ListDisposer } from \"../../utils/List\";\r\nimport { Animation, IAnimatable, IAnimationOptions, AnimationDisposer } from \"../../utils/Animation\";\r\nimport { registry } from \"../../Registry\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available units to measure patterns.\r\n */\r\nexport type PatternUnits = \"userSpaceOnUse\" | \"objectBoundingBox\";\r\n\r\n/**\r\n * Defines properties for [[Pattern]].\r\n */\r\nexport interface PatternProperties {\r\n\tx: number;\r\n\ty: number;\r\n\twidth: number;\r\n\theight: number;\r\n\tbackgroundOpacity: number;\r\n\tbackgroundFill: Color;\r\n\tfillOpacity: number;\r\n\tfill: Color;\r\n\tstroke: Color;\r\n\tstrokeOpacity: number;\r\n\tstrokeWidth: number;\r\n\tshapeRendering: ShapeRendering;\r\n\trotation: number;\r\n\trotationX: number;\r\n\trotationY: number;\r\n\tpatternUnits: PatternUnits;\r\n\tstrokeDashArray:string;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define patterns.\r\n */\r\nexport class Pattern extends BaseObject implements IAnimatable {\r\n\r\n\t/**\r\n\t * List of available animations currently running on a pattern.\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * An SVG `<group>` element to put sub-elements into.\r\n\t */\r\n\tpublic element: Group;\r\n\r\n\t/**\r\n\t * Reference to [[Paper]] instance.\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * List of elements the pattern consists of.\r\n\t */\r\n\tprotected _elements: List<AMElement> = new List<AMElement>();\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: PatternProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link PatternProperties}\r\n\t */\r\n\tpublic properties: this[\"_properties\"] = <any>{};\r\n\t//public propertyValues = new Dictionary<PatternProperties, any>();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Pattern\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.width = 10;\r\n\t\tthis.height = 10;\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\t\tthis.patternUnits = \"userSpaceOnUse\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.backgroundFill = interfaceColors.getFor(\"background\");\r\n\t\tthis.backgroundOpacity = 0;\r\n\r\n\t\tthis.fillOpacity = 1;\r\n\t\tthis.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.strokeWidth = 1;\r\n\t\tthis.shapeRendering = \"crispEdges\";\r\n\t\tthis.rotation = 0;\r\n\r\n\t\t// Create main group to store pattern elements inelements\r\n\t\tthis.element = this.paper.addGroup(\"pattern\");\r\n\t\tthis.id = \"pattern-\" + registry.getUniqueId();\r\n\t\tthis.element.attr({ \"id\": this.id });\r\n\t\tthis._disposers.push(this.element);\r\n\r\n\t\t// Make elements disposable\r\n\t\tthis._disposers.push(new ListDisposer(this._elements));\r\n\r\n\t\t// Request again to trigger getter/setter code\r\n\t\tthis.patternUnits = this.patternUnits;\r\n\t\tthis.width = this.width;\r\n\t\tthis.height = this.height;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the pattern.\r\n\t */\r\n\tprotected draw(): void {\r\n\r\n\t\tlet patternElement: Group = this.element;\r\n\t\tif (patternElement) {\r\n\r\n\t\t\tpatternElement.removeChildNodes();\r\n\r\n\t\t\tlet background = this.paper.add(\"rect\");\r\n\t\t\tbackground.attr({ \"width\": this.width, \"height\": this.height, \"shape-rendering\": \"crispEdges\", \"fill\": this.backgroundFill.hex, \"fill-opacity\": this.backgroundOpacity, \"stroke\": this.backgroundFill.hex, \"stroke-opacity\": 0 });\r\n\t\t\tpatternElement.add(background);\r\n\r\n\t\t\tpatternElement.attr({ \"x\": this.x, \"y\": this.y, \"width\": this.width, \"height\": this.height, \"stroke\": this.stroke.hex, \"fill\": this.fill.hex, \"fill-opacity\": this.fillOpacity, \"stroke-opacity\": this.strokeOpacity, \"stroke-width\": this.strokeWidth, \"shape-rendering\": this.shapeRendering, \"patternUnits\": this.patternUnits, \"stroke-dasharray\":this.strokeDasharray });\r\n\r\n\t\t\t$iter.each(this._elements.iterator(), (element) => {\r\n\t\t\t\telement.rotation = this.rotation;\r\n\t\t\t\telement.rotationX = this.properties[\"rotationX\"];\r\n\t\t\t\telement.rotationY = this.properties[\"rotationY\"];\r\n\t\t\t\tthis.element.add(element);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Animate pattern properties.\r\n\t *\r\n\t * @see {@link Animation}\r\n\t * @param animationOptions  Animation options\r\n\t * @param duration          Duration (ms)\r\n\t * @param easing            Easing function\r\n\t * @return Animation instance\r\n\t */\r\n\tpublic animate(animationOptions: IAnimationOptions[] | IAnimationOptions, duration: number, easing?: (value: number) => number): Animation {\r\n\t\treturn new Animation(this, animationOptions, duration, easing).start();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an element to the pattern.\r\n\t *\r\n\t * @param element  Element\r\n\t */\r\n\tpublic addElement(element: AMElement): void {\r\n\t\tthis._elements.push(element);\r\n\t\tthis._disposers.push(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove an element from the pattern.\r\n\t *\r\n\t * @param element  Element\r\n\t */\r\n\tpublic removeElement(element: AMElement): void {\r\n\t\tthis._elements.removeValue(element);\r\n\t\tthis.removeDispose(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the list of SVG elements comprising the pattern.\r\n\t *\r\n\t * @return Pattern elements\r\n\t */\r\n\tpublic get elements(): List<AMElement> {\r\n\t\treturn this._elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern fill opacity. (0-1)\r\n\t *\r\n\t * @param value  Opacity (0-1)\r\n\t */\r\n\tpublic set fillOpacity(value: number) {\r\n\t\tthis.properties[\"fillOpacity\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacity (0-1)\r\n\t */\r\n\tpublic get fillOpacity(): number {\r\n\t\treturn this.properties[\"fillOpacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Fill color of the pattern.\r\n\t *\r\n\t * @param value  Fill color\r\n\t */\r\n\tpublic set fill(value: Color) {\r\n\t\tthis.properties[\"fill\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Fill color\r\n\t */\r\n\tpublic get fill(): Color {\r\n\t\treturn this.properties[\"fill\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern background fill color.\r\n\t *\r\n\t * @param value  Background color\r\n\t */\r\n\tpublic set backgroundFill(value: Color) {\r\n\t\tthis.properties[\"backgroundFill\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Background color\r\n\t */\r\n\tpublic get backgroundFill(): Color {\r\n\t\treturn this.properties[\"backgroundFill\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern backgorund opacity. (0-1)\r\n\t *\r\n\t * @param value  Background opacity (0-1)\r\n\t */\r\n\tpublic set backgroundOpacity(value: number) {\r\n\t\tthis.properties[\"backgroundOpacity\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Background opacity (0-1)\r\n\t */\r\n\tpublic get backgroundOpacity(): number {\r\n\t\treturn this.properties[\"backgroundOpacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern stroke (border) color.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set stroke(value: Color) {\r\n\t\tthis.properties[\"stroke\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get stroke(): Color {\r\n\t\treturn this.properties[\"stroke\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern stroke opacity. (0-1)\r\n\t *\r\n\t * @param value  Opacity (0-1)\r\n\t */\r\n\tpublic set strokeOpacity(value: number) {\r\n\t\tthis.properties[\"strokeOpacity\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacity (0-1)\r\n\t */\r\n\tpublic get strokeOpacity(): number {\r\n\t\treturn this.properties[\"strokeOpacity\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern stroke thickness in pixels.\r\n\t *\r\n\t * @param value  Stroke thickness (px)\r\n\t */\r\n\tpublic set strokeWidth(value: number) {\r\n\t\tthis.properties[\"strokeWidth\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Stroke thickness (px)\r\n\t */\r\n\tpublic get strokeWidth(): number {\r\n\t\treturn this.properties[\"strokeWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Shape rendering\r\n\t * @param value [description]\r\n\t */\r\n\tpublic set shapeRendering(value: ShapeRendering) {\r\n\t\tthis.properties[\"shapeRendering\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get shapeRendering(): ShapeRendering {\r\n\t\treturn this.properties[\"shapeRendering\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern rotation in degrees.\r\n\t *\r\n\t * @param value  Rotation\r\n\t */\r\n\tpublic set rotation(value: number) {\r\n\t\tthis.properties[\"rotation\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get rotation(): number {\r\n\t\treturn this.properties[\"rotation\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern measuring units.\r\n\t *\r\n\t * Available options: \"userSpaceOnUse\" | \"objectBoundingBox\".\r\n\t *\r\n\t * @param value  Units\r\n\t */\r\n\tpublic set patternUnits(value: \"userSpaceOnUse\" | \"objectBoundingBox\") {\r\n\t\tthis.properties[\"patternUnits\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Units\r\n\t */\r\n\tpublic get patternUnits(): \"userSpaceOnUse\" | \"objectBoundingBox\" {\r\n\t\treturn this.properties[\"patternUnits\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern width in pixels.\r\n\t *\r\n\t * @param value  Width (px)\r\n\t */\r\n\tpublic set width(value: number) {\r\n\t\tthis.properties[\"width\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get width(): number {\r\n\t\treturn this.properties[\"width\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Pattern height in pixels.\r\n\t *\r\n\t * @param value Height (px)\r\n\t */\r\n\tpublic set height(value: number) {\r\n\t\tthis.properties[\"height\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Height (px)\r\n\t */\r\n\tpublic get height(): number {\r\n\t\treturn this.properties[\"height\"];\r\n\t}\r\n\r\n\t/**\r\n\t * X position. (pixels)\r\n\t *\r\n\t * @param value X (px)\r\n\t */\r\n\tpublic set x(value: number) {\r\n\t\tthis.properties[\"x\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return X (px)\r\n\t */\r\n\tpublic get x(): number {\r\n\t\treturn this.properties[\"x\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Y position (px).\r\n\t *\r\n\t * @param value Y (px)\r\n\t */\r\n\tpublic set y(value: number) {\r\n\t\tthis.properties[\"y\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y (px)\r\n\t */\r\n\tpublic get y(): number {\r\n\t\treturn this.properties[\"y\"];\r\n\t}\r\n\r\n\t/**\r\n\t * [[Paper]] instance to draw pattern in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tif (this._paper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\t\t\tthis.draw();\r\n\t\t\tpaper.appendDef(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties from another Pattern instance.\r\n\t *\r\n\t * @param source  Source pattern\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\t$object.each(source.properties, (key, value) => {\r\n\t\t\t(<any>this)[key] = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of animations currently running on the patter.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Animation list\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * A `stroke-dasharray` for the stroke (outline).\r\n\t *\r\n\t * \"Dasharray\" allows setting rules to make lines dashed, dotted, etc.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`\r\n\t * @param value  `stroke-dasharray`\r\n\t */\r\n\tpublic set strokeDasharray(value: string) {\r\n\t\tthis.properties[\"strokeDashArray\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return `stroke-dasharray`\r\n\t */\r\n\tpublic get strokeDasharray(): string {\r\n\t\treturn this.properties[\"strokeDashArray\"];\r\n\t}\t\t\r\n\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.elements) && $type.isArray(config.elements)) {\r\n\t\t\t\tfor (let i = 0, len = config.elements.length; i < len; i++) {\r\n\t\t\t\t\tlet element = config.elements[i];\r\n\t\t\t\t\tif ($type.hasValue(element[\"type\"])) {\r\n\t\t\t\t\t\tlet sprite = this.createEntryInstance(element);\r\n\t\t\t\t\t\tif (sprite instanceof BaseObject) {\r\n\t\t\t\t\t\t\tsprite.config = element;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.addElement(\r\n\t\t\t\t\t\t\t$type.hasValue(element[\"typeProperty\"])\r\n\t\t\t\t\t\t\t? sprite[element[\"typeProperty\"]]\r\n\t\t\t\t\t\t\t: sprite.element\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Pattern\"] = Pattern;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $type from \"./Type\";\r\nimport { Ordering } from \"./Order\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns an iterator for all entries in object.\r\n *\r\n * Can be used to safely iterate through all properties of the object.\r\n *\r\n * @param object  Source object\r\n * @returns Iterator\r\n */\r\nexport function entries<Object>(object: Object): $iter.Iterator<[$type.Keyof<Object>, Object[$type.Keyof<Object>]]> {\r\n\treturn (push) => {\r\n\t\t// TODO make this more efficient ?\r\n\t\tfor (let key in object) {\r\n\t\t\tif (hasKey(object, key)) {\r\n\t\t\t\tif (!push([key as $type.Keyof<Object>, object[key] as Object[$type.Keyof<Object>]])) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns an array of object's property names.\r\n *\r\n * @param object  Source object\r\n * @returns Object property names\r\n */\r\nexport function keys<Object>(object: Object): Array<$type.Keyof<Object>> {\r\n\tconst output = [];\r\n\r\n\tfor (let key in object) {\r\n\t\tif (hasKey(object, key)) {\r\n\t\t\toutput.push(key as $type.Keyof<Object>);\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered<Object>(object: Object, order: (a: $type.Keyof<Object>, b: $type.Keyof<Object>) => Ordering): Array<$type.Keyof<Object>> {\r\n\treturn keys(object).sort(order);\r\n}\r\n\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey<Object, Key extends keyof Object>(object: Object, key: Key): boolean {\r\n\treturn {}.hasOwnProperty.call(object, key);\r\n}\r\n\r\n/**\r\n * Returns value of the specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Key value\r\n */\r\nexport function getKey<Object, Key extends keyof Object>(object: Object, key: Key): Object[Key] {\r\n\treturn object[key];\r\n}\r\n\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue<Object>(object: Object, fn: <Key extends $type.Keyof<Object>>(key: Key, value: Object[Key]) => boolean): void {\r\n\tfor (let key in object) {\r\n\t\tif (hasKey(object, key)) {\r\n\t\t\tif (!fn(key as $type.Keyof<Object>, object[key] as Object[$type.Keyof<Object>])) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function each<Object>(object: Object, fn: <Key extends $type.Keyof<Object>>(key: Key, value: Object[Key]) => void): void {\r\n\teachContinue(object, (key, value) => {\r\n\t\tfn(key, value);\r\n\t\treturn true;\r\n\t});\r\n}\r\n\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered<Object>(object: Object, fn: <Key extends $type.Keyof<Object>>(key: Key, value: Object[Key]) => void, ord: (a: $type.Keyof<Object>, b: $type.Keyof<Object>) => Ordering): void {\r\n\t$array.each(keysOrdered(object, ord), (key) => {\r\n\t\tfn(key, object[key]);\r\n\t});\r\n}\r\n\r\n/**\r\n * Returns a copy of the object.\r\n *\r\n * @param object  Source object\r\n * @returns Copy of the object\r\n */\r\nexport function copy<Object>(object: Object): Object {\r\n\treturn Object.assign({}, object);\r\n}\r\n\r\n/**\r\n * Merges two objects and returns a new object that contains properties from\r\n * both source objects.\r\n *\r\n * @param object1  Source object #1\r\n * @param object2  Source object #2\r\n * @returns Combined object\r\n */\r\nexport function merge<Object1, Object2>(object1: Object1, object2: Object2): Object1 & Object2 {\r\n\treturn Object.assign({}, object1, object2);\r\n}\r\n\r\n/**\r\n * Returns object clone.\r\n *\r\n * @param object  Source object\r\n * @returns       Clone\r\n */\r\nexport function clone<Object>(object: Object): Object {\r\n\treturn JSON.parse(JSON.stringify(object));\r\n}\r\n/**\r\n * Copies a list of properties from one object to another.\r\n *\r\n * Will not copy empty properties.\r\n *\r\n * @param source  Source object\r\n * @param target    Target object\r\n * @param keys  List of keys to copy\r\n */\r\nexport function copyProperties(source: { [key: string]: any }, target: { [key: string]: any }, keys: Array<string>): void {\r\n\t$array.each(keys, (key) => {\r\n\t\tif ($type.hasValue(source[key])) {\r\n\t\t\ttarget[key] = source[key];\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Copies a list of properties from one object to another only if target does't have value of the property set.\r\n *\r\n * Will not copy empty properties.\r\n *\r\n * @param source  Source object\r\n * @param target    Target object\r\n * @param keys  List of keys to copy\r\n */\r\nexport function softCopyProperties(source: { [key: string]: any }, target: { [key: string]: any }, keys: Array<string>): void {\r\n\t$array.each(keys, (key) => {\r\n\t\tif ($type.hasValue(source[key]) && !($type.hasValue((<any>target)[key]))) {\r\n\t\t\ttarget[key] = source[key];\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Copies a list of properties from one object to another.\r\n *\r\n * Will copy empty properties.\r\n *\r\n * @param source  Source object\r\n * @param target    Target object\r\n * @param keys  List of keys to copy\r\n */\r\nexport function forceCopyProperties(source: { [key: string]: any }, target: { [key: string]: any }, keys: Array<string>): void {\r\n\t$array.each(keys, (key) => {\r\n\t\ttarget[key] = source[key];\r\n\t});\r\n}\r\n\r\n/**\r\n * Copies all properties from one object to another.\r\n *\r\n * @param from  Source object\r\n * @param to    Target object\r\n */\r\nexport function copyAllProperties(from: { [key: string]: any }, to: { [key: string]: any }): void {\r\n\tcopyProperties(from, to, keys(from));\r\n}\r\n","/**\r\n * Rounded rectangle module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport { Percent } from \"../utils/Percent\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[RoundedRectangle]].\r\n */\r\nexport interface IRoundedRectangleProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Radius of the top-left corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t */\r\n\tcornerRadiusTopLeft?: number;\r\n\r\n\t/**\r\n\t * Radius of the top-right corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t */\r\n\tcornerRadiusTopRight?: number;\r\n\r\n\t/**\r\n\t * Radius of the bottom-right corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t */\r\n\tcornerRadiusBottomRight?: number;\r\n\r\n\t/**\r\n\t * Radius of the bottom-left corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t */\r\n\tcornerRadiusBottomLeft?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[RoundedRectangle]].\r\n */\r\nexport interface IRoundedRectangleEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[RoundedRectangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRoundedRectangleAdapters extends ISpriteAdapters, IRoundedRectangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link IRoundedRectangleEvents} for a list of available events\r\n * @see {@link IRoundedRectangleAdapters} for a list of available Adapters\r\n */\r\nexport class RoundedRectangle extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRoundedRectangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRoundedRectangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRoundedRectangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"RoundedRectangle\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tthis.cornerRadius(3, 3, 3, 3);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet w: number = this.innerWidth;\r\n\t\tlet h: number = this.innerHeight;\r\n\r\n\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\r\n\r\n\t\t\tlet minSide = $math.min(w, h) / 2;\r\n\r\n\t\t\tlet cornerRadiusTopLeft = $utils.relativeToValue(this.cornerRadiusTopLeft, minSide);\r\n\t\t\tlet cornerRadiusTopRight = $utils.relativeToValue(this.cornerRadiusTopRight, minSide);\r\n\t\t\tlet cornerRadiusBottomRight = $utils.relativeToValue(this.cornerRadiusBottomRight, minSide);\r\n\t\t\tlet cornerRadiusBottomLeft = $utils.relativeToValue(this.cornerRadiusBottomLeft, minSide);\r\n\r\n\t\t\tlet maxcr: number = $math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n\t\t\tlet crtl: number = $math.fitToRange(cornerRadiusTopLeft, 0, maxcr);\r\n\t\t\tlet crtr: number = $math.fitToRange(cornerRadiusTopRight, 0, maxcr);\r\n\t\t\tlet crbr: number = $math.fitToRange(cornerRadiusBottomRight, 0, maxcr);\r\n\t\t\tlet crbl: number = $math.fitToRange(cornerRadiusBottomLeft, 0, maxcr);\r\n\r\n\t\t\tlet lineT: string = \"M\" + crtl + \",0 L\" + (w - crtr) + \",0\";\r\n\t\t\tlet lineB: string = \" L\" + crbl + \",\" + h;\r\n\t\t\tlet lineL: string = \" L0,\" + crtl;\r\n\t\t\tlet lineR: string = \" L\" + w + \",\" + (h - crbr);\r\n\r\n\t\t\tlet arcTR: string = \" a\" + crtr + \",\" + crtr + \" 0 0 1 \" + crtr + \",\" + crtr;\r\n\t\t\tlet arcBR: string = \" a\" + crbr + \",\" + crbr + \" 0 0 1 -\" + crbr + \",\" + crbr;\r\n\t\t\tlet arcBL: string = \" a\" + crbl + \",\" + crbl + \" 0 0 1 -\" + crbl + \",-\" + crbl;\r\n\t\t\tlet arcTL: string = \" a\" + crtl + \",\" + crtl + \" 0 0 1 \" + crtl + \",-\" + crtl;\r\n\r\n\r\n\t\t\tlet path: string = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL + \" Z\";\r\n\r\n\t\t\tthis.path = path;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets radius for all four corners at ones.\r\n\t *\r\n\t * All numbers are in pixels.\r\n\t *\r\n\t * @param tl  Top-left corner\r\n\t * @param tr  Top-right corner\r\n\t * @param bl  Bottom-left corner\r\n\t * @param br  Bottom-right corner\r\n\t */\r\n\tpublic cornerRadius(tl: number | Percent, tr: number | Percent, bl: number | Percent, br: number | Percent) {\r\n\t\tthis.cornerRadiusTopLeft = tl;\r\n\t\tthis.cornerRadiusTopRight = tr;\r\n\t\tthis.cornerRadiusBottomLeft = bl;\r\n\t\tthis.cornerRadiusBottomRight = br;\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the top-left corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @param value  Radius (px or Percent)\r\n\t */\r\n\tpublic set cornerRadiusTopLeft(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"cornerRadiusTopLeft\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px or Percent)\r\n\t */\r\n\tpublic get cornerRadiusTopLeft(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"cornerRadiusTopLeft\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the top-right corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @param value  Radius (px or Percent)\r\n\t */\r\n\tpublic set cornerRadiusTopRight(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"cornerRadiusTopRight\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px or Percent)\r\n\t */\r\n\tpublic get cornerRadiusTopRight(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"cornerRadiusTopRight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the bottom-right corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @param value  Radius (px or Percent)\r\n\t */\r\n\tpublic set cornerRadiusBottomRight(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"cornerRadiusBottomRight\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px or Percent)\r\n\t */\r\n\tpublic get cornerRadiusBottomRight(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"cornerRadiusBottomRight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Radius of the bottom-left corner in pixels.\r\n\t *\r\n\t * @default 3\r\n\t * @param value  Radius (px or Percent)\r\n\t */\r\n\tpublic set cornerRadiusBottomLeft(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"cornerRadiusBottomLeft\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Radius (px or Percent)\r\n\t */\r\n\tpublic get cornerRadiusBottomLeft(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"cornerRadiusBottomLeft\");\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\r\n\t\tif (this.isMeasured) {\r\n\t\t\treturn {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this.innerWidth,\r\n\t\t\t\theight: this.innerHeight\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: 0, y: 0, width: 0, height: 0 };\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RoundedRectangle\"] = RoundedRectangle;\r\n","/**\r\n * Mouse-related functionality\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IStyleProperty } from \"../defs/IStyleProperty\";\r\n\r\n/**\r\n * Defines static methods that hold style list for various mouse cursor styles,\r\n * maintaining browser compatibility.\r\n */\r\nexport class MouseCursorStyle {\r\n\r\n\t/**\r\n\t * Styles for \"grab\" mouse cursor.\r\n\t */\r\n\tstatic grab: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"move\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"grab\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"-webkit-grab\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for \"grabbing\" mouse cursor.\r\n\t */\r\n\tstatic grabbing: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"move\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"grabbing\"\r\n\t}, {\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"-webkit-grabbing\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for \"pointer\" mouse cursor. (usually used for links)\r\n\t */\r\n\tstatic pointer: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"pointer\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for default mouse cursor. (browser determines style)\r\n\t */\r\n\tstatic default: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"default\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for horizontal bi-directional resize mouse cursor.\r\n\t */\r\n\tstatic horizontalResize: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"ew-resize\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for vertical bi-directional mouse cursor.\r\n\t */\r\n\tstatic verticalResize: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"ns-resize\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for \"no-allowed\" cursor.\r\n\t * @since 4.7.15\r\n\t */\r\n\tstatic notAllowed: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"not-allowed\"\r\n\t}];\r\n\r\n\t/**\r\n\t * Styles for \"text\" cursor.\r\n\t * @since 4.9.12\r\n\t */\r\n\tstatic text: Array<IStyleProperty> = [{\r\n\t\t\"property\": \"cursor\",\r\n\t\t\"value\": \"text\"\r\n\t}];\r\n\r\n}\r\n","/**\r\n * JSON parser.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DataParser, IDataParserOptions } from \"./DataParser\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * Defines options for JSON format parser\r\n */\r\nexport interface IJSONOptions extends IDataParserOptions {\r\n\r\n\t/**\r\n\t * A list of fields that should be treaded as numeric.\r\n\t *\r\n\t * Any information container in such fields will be converted to `number`.\r\n\t */\r\n\tnumberFields?: string[];\r\n\r\n\t/**\r\n\t * A list of fields that hold date/time infromation.\r\n\t *\r\n\t * Parser will try to convert such fields into `Date` objects.\r\n\t */\r\n\tdateFields?: string[];\r\n\r\n\t/**\r\n\t * A date formatted to be used when parsing dates.\r\n\t */\r\n\tdateFormatter?: DateFormatter;\r\n\r\n}\r\n\r\n/**\r\n * A parser for JSON.\r\n *\r\n * @important\r\n */\r\nexport class JSONParser extends DataParser {\r\n\r\n\t/**\r\n\t * Tests if the data is valid JSON.\r\n\t *\r\n\t * @param data  Source data\r\n\t * @return Is it JSON?\r\n\t */\r\n\tstatic isJSON(data: string): boolean {\r\n\t\ttry {\r\n\r\n\t\t\t// Try parsing JSON\r\n\t\t\tJSON.parse(data);\r\n\r\n\t\t\t// If we got to this point it means it's a valid JSON\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Content-type suitable for JSON format.\r\n\t */\r\n\tpublic contentType: string = \"application/json\";\r\n\r\n\t/**\r\n\t * Parser options.\r\n\t *\r\n\t * @see {@link IJSONOptions} for description of each option\r\n\t */\r\n\tpublic options: IJSONOptions = {};\r\n\r\n\t/**\r\n\t * Parses and returns data.\r\n\t *\r\n\t * @param data  Unparsed data\r\n\t * @return Parsed data\r\n\t */\r\n\tpublic parse(data: string): any {\r\n\r\n\t\t// Init return\r\n\t\tlet res: any;\r\n\r\n\t\t// Try parsing\r\n\t\ttry {\r\n\t\t\tif ($type.hasValue(JSON)) {\r\n\t\t\t\tres = JSON.parse(data);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\t// Do we need to cast some fields to numbers or dates?\r\n\t\tlet empty = $type.hasValue(this.options.emptyAs);\r\n\t\tlet numbers = this.parsableNumbers;\r\n\t\tlet dates = this.parsableDates;\r\n\t\tif (Array.isArray(res) && (numbers || dates || empty)) {\r\n\r\n\t\t\t// Iterate through the data and check if it needs to be converted\r\n\t\t\tfor (let i = 0, len = res.length; i < len; i++) {\r\n\t\t\t\tlet row = res[i];\r\n\t\t\t\t$object.each(row, (key, value) => {\r\n\t\t\t\t\tif (empty) {\r\n\t\t\t\t\t\trow[key] = this.maybeToEmpty(row[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (numbers) {\r\n\t\t\t\t\t\trow[key] = this.maybeToNumber(key, row[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (dates) {\r\n\t\t\t\t\t\trow[key] = this.maybeToDate(key, row[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Convert to array\r\n\t\t//return Array.isArray(res) ? res : [res];\r\n\t\treturn res;\r\n\r\n\t}\r\n\r\n}\r\n","/**\r\n * Pointed shape module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PointedShape]].\r\n */\r\nexport interface IPointedShapeProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * A width of the pinter's (stem's) thick end (base) in pixels.\r\n\t *\r\n\t * @default 15\r\n\t */\r\n\tpointerBaseWidth?: number;\r\n\r\n\t/**\r\n\t * A length of the pinter (stem) in pixels.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tpointerLength?: number;\r\n\r\n\t/**\r\n\t * X coordinate the shape is pointing to.\r\n\t */\r\n\tpointerX?: number;\r\n\r\n\t/**\r\n\t * Y coordinate the shape is pointing to.\r\n\t */\r\n\tpointerY?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[PointedShape]].\r\n */\r\nexport interface IPointedShapeEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[PointedShape]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IPointedShapeAdapters extends ISpriteAdapters, IPointedShapeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a shape with a pointer.\r\n *\r\n * @see {@link IPointedShapeEvents} for a list of available events\r\n * @see {@link IPointedShapeAdapters} for a list of available Adapters\r\n */\r\nexport class PointedShape extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPointedShapeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPointedShapeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPointedShapeEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"PointedShape\";\r\n\t\tthis.pointerBaseWidth = 15;\r\n\t\tthis.pointerLength = 10;\r\n\t\tthis.pointerY = 0;\r\n\t\tthis.pointerX = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\t\tif (!$type.isNumber(this.pointerX)) {\r\n\t\t\tthis.pointerX = this.pixelWidth / 2;\r\n\t\t}\r\n\t\tif (!$type.isNumber(this.pointerY)) {\r\n\t\t\tthis.pointerY = this.pixelHeight + 10;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A width of the pinter's (stem's) thick end (base) in pixels.\r\n\t *\r\n\t * @default 15\r\n\t * @param value  Width (px)\r\n\t */\r\n\tpublic set pointerBaseWidth(value: number) {\r\n\t\tthis.setPropertyValue(\"pointerBaseWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * A length of the pinter (stem) in pixels.\r\n\t *\r\n\t * @default 10\r\n\t * @param value  Length (px)\r\n\t */\r\n\tpublic set pointerLength(value: number) {\r\n\t\tthis.setPropertyValue(\"pointerLength\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Length (px)\r\n\t */\r\n\tpublic get pointerLength(): number {\r\n\t\treturn this.getPropertyValue(\"pointerLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pointerBaseWidth(): number {\r\n\t\treturn this.getPropertyValue(\"pointerBaseWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate the shape is pointing to.\r\n\t *\r\n\t * @param value  X\r\n\t */\r\n\tpublic set pointerX(value: number) {\r\n\t\tthis.setPropertyValue(\"pointerX\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return X\r\n\t */\r\n\tpublic get pointerX(): number {\r\n\t\treturn this.getPropertyValue(\"pointerX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate the shape is pointing to.\r\n\t *\r\n\t * @param value  Y\r\n\t */\r\n\tpublic set pointerY(value: number) {\r\n\t\tthis.setPropertyValue(\"pointerY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y\r\n\t */\r\n\tpublic get pointerY(): number {\r\n\t\treturn this.getPropertyValue(\"pointerY\");\r\n\t}\r\n\r\n}\r\n","/**\r\n * Functionality related simulating of dragging of elements using keyboard.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { getInteraction } from \"./Interaction\";\r\nimport { InteractionObject } from \"./InteractionObject\";\r\nimport { IAnimationObject } from \"../utils/Animation\";\r\nimport { system } from \"../System\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport * as $array from \"../utils/Array\";\r\n\r\n/**\r\n * [[InteractionKeyboardObject]] is used to simulate dragging of the `draggable`\r\n * element using keyboard arrows.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class InteractionKeyboardObject implements IAnimationObject, IDisposer {\r\n\r\n\t/**\r\n\t * A [[InteractionObject]] representation of an element we're performing\r\n\t * animation on.\r\n\t */\r\n\tpublic interaction: InteractionObject;\r\n\r\n\t/**\r\n\t * Indicates if this object has already been deleted. Any\r\n\t * destruction/disposal code should take this into account when deciding\r\n\t * wheter to run potentially costly disposal operations if they already have\r\n\t * been run.\r\n\t */\r\n\tprotected _disposed: boolean = false;\r\n\r\n\t/**\r\n\t * Timestamp on when animation started.\r\n\t */\r\n\tprivate _startedOn: number;\r\n\r\n\t/**\r\n\t * Indicates direction of current horizontal movement.\r\n\t *\r\n\t * 0 - not moving horizontally\r\n\t * 1 - moving right\r\n\t * -1 - moving left\r\n\t */\r\n\tpublic directionX: 0 | 1 | -1 = 0;\r\n\r\n\t/**\r\n\t * Indicates direction of current vertical movement.\r\n\t *\r\n\t * 0 - not moving vertically\r\n\t * 1 - moving down\r\n\t * -1 - moving up\r\n\t */\r\n\tpublic directionY: 0 | 1 | -1 = 0;\r\n\r\n\t/**\r\n\t * Holds reference to original keyboard event.\r\n\t */\r\n\tpublic keyboardEvent: KeyboardEvent;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param io An InteractionObject\r\n\t */\r\n\tconstructor(io: InteractionObject, ev: KeyboardEvent) {\r\n\t\tthis.interaction = io;\r\n\t\tthis.keyboardEvent = ev;\r\n\t\tthis._startedOn = new Date().getTime();\r\n\t\tgetInteraction().processDragStart(io);\r\n\t\tsystem.animations.push(this);\r\n\t\tthis.update();\r\n\t}\r\n\r\n\t/**\r\n\t * It's an update method which is called by the system if\r\n\t * [[InteractionObject]] is used as animation.\r\n\t *\r\n\t * This will update coordinates of the element based on the movement\r\n\t * directions.\r\n\t */\r\n\tpublic update(): void {\r\n\r\n\t\t// Init and get settings\r\n\t\tlet io = this.interaction;\r\n\t\tlet speed = getInteraction().getKeyboardOption(io, \"speed\"),\r\n\t\t\taccelleration = getInteraction().getKeyboardOption(io, \"accelleration\"),\r\n\t\t\taccellerationDelay = getInteraction().getKeyboardOption(io, \"accellerationDelay\"),\r\n\t\t\tshift: IPoint = {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t};\r\n\r\n\t\t// If SHIFT key is pressed we slash speed by half and disable accelleration\r\n\t\tif (this.keyboardEvent.shiftKey) {\r\n\t\t\tspeed *= 0.5;\r\n\t\t\taccelleration = 1;\r\n\t\t}\r\n\t\t// If CTRL is pressed we increase speed by x2\r\n\t\telse if (this.keyboardEvent.ctrlKey) {\r\n\t\t\tspeed *= 2;\r\n\t\t}\r\n\r\n\t\t// Get elapsed time\r\n\t\tlet ms = new Date().getTime() - this._startedOn;\r\n\t\tlet accelleratedMs = ms - accellerationDelay;\r\n\r\n\t\t// Add accellerated movement\r\n\t\tif ((accelleration > 0) && (accelleratedMs > 0)) {\r\n\t\t\tlet accellerationFactor = ms / accellerationDelay;\r\n\t\t\tms = accellerationDelay;\r\n\t\t\tshift.x += this.directionX * (speed * accelleration * accellerationFactor * accelleratedMs);\r\n\t\t\tshift.y += this.directionY * (speed * accelleration * accellerationFactor * accelleratedMs);\r\n\t\t}\r\n\r\n\t\t// Calculate position\r\n\t\tshift.x += this.directionX * (speed * ms);\r\n\t\tshift.y += this.directionY * (speed * ms);\r\n\r\n\t\t// Simulate move on Interaction\r\n\t\tgetInteraction().handleTransformMove(io, shift, { x: 0, y: 0 }, this.keyboardEvent, true, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this object has been already been disposed.\r\n\t *\r\n\t * @return Is disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes this object. Removes from system animations.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tgetInteraction().processDragStop(this.interaction);\r\n\t\t\t$array.remove(system.animations, this);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { StyleRule } from \"../utils/DOM\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"../utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../utils/InterfaceColorSet\";\r\n\r\n\r\nconst rules = new Dictionary<string, CounterDisposer>();\r\n\r\n/**\r\n * Default CSS for Popup.\r\n *\r\n * @ignore Exclude from docs\r\n * @param prefix  Prefix for CSS classes\r\n * @return Disposer for the CSS definition\r\n */\r\nexport default function(element: ShadowRoot | null, prefix?: string): IDisposer {\r\n\tif (!prefix) {\r\n\t\tprefix = \"ampopup\";\r\n\t}\r\n\r\n\tconst cs = new InterfaceColorSet();\r\n\tconst fg = cs.getFor(\"text\");\r\n\tconst bg = cs.getFor(\"background\");\r\n\tbg.alpha = 0.8;\r\n\tconst abg = cs.getFor(\"alternativeBackground\");\r\n\tabg.alpha = 0.05;\r\n\r\n\tconst counter = rules.insertKeyIfEmpty(prefix, () => {\r\n\t\tconst disposer = new MultiDisposer([\r\n\t\t\tnew StyleRule(element, `.${prefix}`, {\r\n\t\t\t\t//\"width\": \"100%\",\r\n\t\t\t\t//\"height\": \"100%\",\r\n\t\t\t\t\"overflow\": \"visible\",\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"0\",\r\n\t\t\t\t\"left\": \"0\",\r\n\t\t\t\t\"z-index\": \"2000\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${prefix}-curtain`, {\r\n\t\t\t\t\"width\": \"100%\",\r\n\t\t\t\t\"height\": \"100%\",\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"0\",\r\n\t\t\t\t\"left\": \"0\",\r\n\t\t\t\t\"z-index\": \"2001\",\r\n\t\t\t\t\"background-color\": bg.hex,\r\n\t\t\t\t\"opacity\": \"0.5\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${prefix}-header`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"width\": \"100%\",\r\n\t\t\t\t\"min-height\": \"1.8em\",\r\n\t\t\t\t\"background\": abg.rgba\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${prefix}-title`, {\r\n\t\t\t\t\"font-weight\": \"bold\",\r\n\t\t\t\t\"font-size\": \"110%\",\r\n\t\t\t\t\"padding\": \"0.5em 1.2em 0.5em 1em\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${prefix}-content`, {\r\n\t\t\t\t/*\"width\": \"100%\",\r\n\t\t\t\t\"height\": \"100%\",*/\r\n\t\t\t\t// \"padding\": \"2em 1em 1em 1em\",\r\n\t\t\t\t\"background\": bg.hex,\r\n\t\t\t\t\"background-color\": bg.rgba,\r\n\t\t\t\t\"color\": fg.hex,\r\n\t\t\t\t\"display\": \"inline-block\",\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"0\",\r\n\t\t\t\t\"left\": \"0\",\r\n\t\t\t\t\"max-width\": \"90%\",\r\n\t\t\t\t\"max-height\": \"90%\",\r\n\t\t\t\t\"overflow\": \"auto\",\r\n\t\t\t\t\"z-index\": \"2002\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${prefix}-inside`, {\r\n\t\t\t\t\"padding\": \"1em\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${prefix}-close`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"0.3em\",\r\n\t\t\t\t\"right\": \"0.3em\",\r\n\t\t\t\t\"background-color\": \"rgb(100, 100, 100)\",\r\n\t\t\t\t\"background\": \"rgba(100, 100, 100, 0.1) url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyBoZWlnaHQ9IjUxMiIgdmVyc2lvbj0iMSIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHdpZHRoPSI1MTIiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PHBhdGggZD0iTTQ0NS4yIDEwOS4ybC00Mi40LTQyLjRMMjU2IDIxMy42IDEwOS4yIDY2LjhsLTQyLjQgNDIuNEwyMTMuNiAyNTYgNjYuOCA0MDIuOGw0Mi40IDQyLjRMMjU2IDI5OC40bDE0Ni44IDE0Ni44IDQyLjQtNDIuNEwyOTguNCAyNTYiLz48L3N2Zz4=) no-repeat center\",\r\n\t\t\t\t\"background-size\": \"80%\",\r\n\t\t\t\t\"width\": \"1.2em\",\r\n\t\t\t\t\"height\": \"1.2em\",\r\n\t\t\t\t\"cursor\": \"pointer\"\r\n\t\t\t}),\r\n\r\n\t\t]);\r\n\r\n\t\treturn new CounterDisposer(() => {\r\n\t\t\trules.removeKey(prefix);\r\n\t\t\tdisposer.dispose();\r\n\t\t});\r\n\t});\r\n\r\n\treturn counter.increment();\r\n}\r\n","/**\r\n * Popup class is used to display information over chart area.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport popupCSS from \"./PopupCSS\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { InteractionObject } from \"../interaction/InteractionObject\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { Percent } from \"../utils/Percent\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport { getShadowRoot } from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n/**\r\n * Represents a list of available adapters for Export.\r\n */\r\nexport interface IPopupAdapters {\r\n\r\n\t/**\r\n\t * Applied to the class prefixes.\r\n\t */\r\n\tclassPrefix: string,\r\n\r\n\t/**\r\n\t * Applied to popup content before it is shown.\r\n\t */\r\n\tcontent: string,\r\n\r\n\t/**\r\n\t * Applied to popup title before it is shown.\r\n\t */\r\n\ttitle: string,\r\n\r\n\t/**\r\n\t * Applied to the screen reader title.\r\n\t */\r\n\treaderTitle: string,\r\n\r\n\t/**\r\n\t * Applied to default `defaultStyles` property before it is retrieved.\r\n\t */\r\n\tdefaultStyles: boolean,\r\n\r\n\t/**\r\n\t * Applied to default `showCurtain` property before it is retrieved.\r\n\t */\r\n\tshowCurtain: boolean,\r\n\r\n\t/**\r\n\t * Applied to default `draggable` property before it is retrieved.\r\n\t */\r\n\tdraggable: boolean,\r\n\r\n\t/**\r\n\t * Applied to `closable` property before it is retrieved.\r\n\t */\r\n\tclosable: boolean,\r\n\r\n\t/**\r\n\t * Applied to `dynamicResize` property before it is retrieved.\r\n\t */\r\n\tdynamicResize: boolean,\r\n\r\n\t/**\r\n\t * Applied to `fitTo` property before it's retrieved.\r\n\t *\r\n\t * @ignore Feature not yet implemented\r\n\t */\r\n\tfitTo: \"none\" | \"container\" | \"window\",\r\n\r\n\t/**\r\n\t * Applied to horizontal alignment of the popup.\r\n\t */\r\n\talign: Optional<Align>;\r\n\r\n\t/**\r\n\t * Applied to vertical alignment of the popup.\r\n\t */\r\n\tverticalAlign: Optional<VerticalAlign>;\r\n\r\n\t/**\r\n\t * Applied to `left` position value.\r\n\t */\r\n\tleft: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `right` position value.\r\n\t */\r\n\tright: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `top` position value.\r\n\t */\r\n\ttop: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `bottom` position value.\r\n\t */\r\n\tbottom: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to class names list that are added as class for various popup\r\n\t * elements.\r\n\t */\r\n\tclassNames: {\r\n\t\twrapperClass: string,\r\n\t\ttitleClass: string,\r\n\t\theaderClass: string,\r\n\t\tcontentClass: string,\r\n\t\tinsideClass: string,\r\n\t\tcurtainClass: string,\r\n\t\tcloseClass: string\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines events for Popup.\r\n */\r\nexport interface IPopupEvents {\r\n\r\n\t/**\r\n\t * Invoked when Popup is opened.\r\n\t */\r\n\topened: {};\r\n\r\n\t/**\r\n\t * Invoked when Popup is closed.\r\n\t */\r\n\tclosed: {};\r\n\r\n}\r\n\r\n/**\r\n * Shows an HTML popup which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n * @todo Positioning over whole window\r\n */\r\nexport class Popup extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPopupEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPopupAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter: Adapter<Popup, IPopupAdapters> = new Adapter<Popup, IPopupAdapters>(this);\r\n\r\n\t/**\r\n\t * A reference to an HTML element to be used for container. If not set, popup\r\n\t * will cover the whole window.\r\n\t */\r\n\tpublic container: $type.Optional<HTMLElement | Document>;\r\n\r\n\t/**\r\n\t * A parent element this Popup belongs to.\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds references to various HTML elements, Popup consists of.\r\n\t */\r\n\tprotected _elements: {\r\n\t\twrapper?: HTMLElement;\r\n\t\ttitle?: HTMLElement;\r\n\t\theader?: HTMLElement;\r\n\t\tcontent?: HTMLElement;\r\n\t\tclose?: HTMLElement;\r\n\t\tcurtain?: HTMLElement;\r\n\t} = {};\r\n\r\n\t/**\r\n\t * Holdes Interaction objects for various Popup's elements.\r\n\t */\r\n\tprotected _IOs: {\r\n\t\twrapper?: InteractionObject;\r\n\t\tcontent?: InteractionObject;\r\n\t\theader?: InteractionObject;\r\n\t\tclose?: InteractionObject;\r\n\t\tcurtain?: InteractionObject;\r\n\t} = {};\r\n\r\n\t/**\r\n\t * Contents of popup window.\r\n\t */\r\n\tprotected _content: string = \"\";\r\n\r\n\t/**\r\n\t * Title of the popup window.\r\n\t */\r\n\tprotected _title: string = \"\";\r\n\r\n\t/**\r\n\t * Prefix to apply to class names for popup elements.\r\n\t */\r\n\tprotected _classPrefix: string = \"ampopup\"\r\n\r\n\t/**\r\n\t * If set to `true` [[Popup]] will use default styles.\r\n\t */\r\n\tprotected _defaultStyles: boolean = true;\r\n\r\n\t/**\r\n\t * If set to `true` [[Popup]] will dim out all chart content behind it by\r\n\t * showing a semi-transparent fill. (curtain)\r\n\t */\r\n\tprotected _showCurtain: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether popup can be dragged.\r\n\t */\r\n\tprotected _draggable: boolean = true;\r\n\r\n\t/**\r\n\t * Horizontal position of the content window.\r\n\t */\r\n\tprotected _align: Optional<Align> = \"center\";\r\n\r\n\t/**\r\n\t * Resize popup as images are being loaded.\r\n\t */\r\n\tprotected _dynamicResize: boolean = true;\r\n\r\n\t/**\r\n\t * Vertical position of the content window.\r\n\t */\r\n\tprotected _verticalAlign: Optional<VerticalAlign> = \"middle\";\r\n\r\n\t/**\r\n\t * Shift in position of the element. (used for dragging)\r\n\t */\r\n\tprotected _shift: IPoint = {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t};\r\n\r\n\t/**\r\n\t * Temporary shift in position of the element. (used for dragging)\r\n\t */\r\n\tprotected _tempShift: IPoint = {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t};\r\n\r\n\t/**\r\n\t * \"left\" position of the popup content.\r\n\t */\r\n\tprotected _left: number | Percent;\r\n\r\n\t/**\r\n\t * \"right\" position of the popup content.\r\n\t */\r\n\tprotected _right: number | Percent;\r\n\r\n\t/**\r\n\t * \"top\" position of the popup content.\r\n\t */\r\n\tprotected _top: number | Percent;\r\n\r\n\t/**\r\n\t * \"bottom\" position of the popup content.\r\n\t */\r\n\tprotected _bottom: number | Percent;\r\n\r\n\t/**\r\n\t * A title for screen readers. It is very highly recommended to set that title\r\n\t * so that people using screen reader tools can get an immediate summary of\r\n\t * the information in the popup.\r\n\t */\r\n\tpublic _readerTitle: string = \"\";\r\n\r\n\t/**\r\n\t * Is popup closable?\r\n\t */\r\n\tprivate _closable: boolean = true;\r\n\r\n\t/**\r\n\t * Was CSS already loaded?\r\n\t */\r\n\tprivate _cssLoaded: boolean = false;\r\n\r\n\t/**\r\n\t * If set to other than \"none\" will try to re-adjust the position of the\r\n\t * popop to fit within chart container or browser window.\r\n\t *\r\n\t * @ignore Feature not yet implemented\r\n\t * @todo Implement\r\n\t */\r\n\tprivate _fitTo: \"none\" | \"container\" | \"window\" = \"window\";\r\n\r\n\t/**\r\n\t * Used to log original value of `interactionsEnabled` so that it can be restored\r\n\t * after temporarily disabling it.\r\n\t */\r\n\tprivate _spriteInteractionsEnabled: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if the element was already sized and should not be measured for\r\n\t * size again, saving some precious resources.\r\n\t */\r\n\tprivate _sized: boolean = false;\r\n\r\n\t/**\r\n\t * Cached bounding rectangle info.\r\n\t */\r\n\tprivate _bbox: $type.Optional<DOMRect | ClientRect>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Popup\";\r\n\t}\r\n\r\n\t/**\r\n\t * Shows popup window.\r\n\t */\r\n\tpublic open(): void {\r\n\t\tif (this.container) {\r\n\t\t\tif (this._elements.wrapper) {\r\n\t\t\t\tthis.container.appendChild(this._elements.wrapper);\r\n\t\t\t}\r\n\t\t\tif (this._elements.curtain) {\r\n\t\t\t\tthis.container.appendChild(this._elements.curtain);\r\n\t\t\t\tthis.showCurtain = this.showCurtain;\r\n\t\t\t}\r\n\t\t\tthis.positionElement();\r\n\t\t\tthis.dispatchImmediately(\"opened\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides popup window.\r\n\t */\r\n\tpublic close(): void {\r\n\t\tif (this._elements.wrapper) {\r\n\t\t\tif (this._elements.wrapper.parentElement) {\r\n\t\t\t\tthis._elements.wrapper.parentElement.removeChild(this._elements.wrapper);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._elements.curtain) {\r\n\t\t\tif (this._elements.curtain.parentElement) {\r\n\t\t\t\tthis._elements.curtain.parentElement.removeChild(this._elements.curtain);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.dispatchImmediately(\"closed\");\r\n\t\tthis.releasePointers();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy (dispose) popup.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.close();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Positions content element in the center of popup based on its actual size.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic positionElement(forceResize: boolean = true): void {\r\n\r\n\t\tif (!this._elements.wrapper) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (!this._elements.wrapper) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (forceResize || !this._sized) {\r\n\t\t\t\tthis._elements.wrapper.style.opacity = \"0.01\";\r\n\t\t\t\tthis._elements.wrapper.style.left = \"0\";\r\n\t\t\t\tthis._elements.wrapper.style.top = \"0\";\r\n\t\t\t\tthis._elements.wrapper.style.margin = \"0 0 0 0\";\r\n\r\n\t\t\t\tthis._elements.wrapper.style.width = \"\";\r\n\t\t\t\tthis._elements.wrapper.style.height = \"\";\r\n\r\n\t\t\t\tlet bbox = this._elements.wrapper.getBoundingClientRect();\r\n\t\t\t\tthis._elements.wrapper.style.width = bbox.width + \"px\";\r\n\t\t\t\tthis._elements.wrapper.style.height = bbox.height + \"px\";\r\n\r\n\t\t\t\tthis._sized = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Check for any images that are not yet loaded\r\n\t\t\tif (this.dynamicResize) {\r\n\t\t\t\tconst images = this._elements.wrapper.getElementsByTagName(\"img\");\r\n\t\t\t\tfor (let i = 0; i < images.length; i++) {\r\n\t\t\t\t\tconst image = images[i];\r\n\t\t\t\t\tif (!image.complete) {\r\n\t\t\t\t\t\t// Resize popup once again when image is loaded\r\n\t\t\t\t\t\timage.addEventListener(\"load\", () => {\r\n\t\t\t\t\t\t\tthis.positionElement(true);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// Do this for one image only as it will be checked again next time\r\n\t\t\t\t\t\t// anyway\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (!this._elements.wrapper) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet bbox: DOMRect | ClientRect;\r\n\t\t\t\tif ((forceResize || !this._sized) && this._bbox) {\r\n\t\t\t\t\tbbox = this._bbox;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbbox = this._elements.wrapper.getBoundingClientRect();\r\n\t\t\t\t\tthis._elements.wrapper.style.opacity = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set horizontal positioning\r\n\t\t\t\tswitch (this.align) {\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"50%\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(Math.round(-bbox.width / 2) + (this._shift.x + this._tempShift.x));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = this.toStyle(this.left) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = this.toStyle(this.right) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set vertical positioning\r\n\t\t\t\tswitch (this.verticalAlign) {\r\n\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"50%\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(Math.round(-bbox.height / 2) + (this._shift.y + this._tempShift.y));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = this.toStyle(this.top) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = this.toStyle(this.bottom) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}, 1);\r\n\t\t}, 1);\r\n\r\n\t}\r\n\r\n\tprotected setupDragging(): void {\r\n\t\tif (this.draggable) {\r\n\t\t\tif (!this._IOs.header.events.has(\"drag\")) {\r\n\t\t\t\tthis._IOs.header.events.on(\"drag\", (ev) => {\r\n\t\t\t\t\tthis._tempShift.x = ev.shift.x;\r\n\t\t\t\t\tthis._tempShift.y = ev.shift.y;\r\n\t\t\t\t\tthis.positionElement(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (!this._IOs.header.events.has(\"dragstop\")) {\r\n\t\t\t\tthis._IOs.header.events.on(\"dragstop\", (ev) => {\r\n\t\t\t\t\tthis._shift.x += this._tempShift.x;\r\n\t\t\t\t\tthis._shift.y += this._tempShift.y;\r\n\t\t\t\t\tthis._tempShift.x = 0;\r\n\t\t\t\t\tthis._tempShift.y = 0;\r\n\t\t\t\t\tthis.positionElement(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._IOs.header) {\r\n\t\t\t\tgetInteraction().unprepElement(this._IOs.header);\r\n\t\t\t\tif (this._IOs.header.events.has(\"drag\")) {\r\n\t\t\t\t\tthis._IOs.header.events.off(\"drag\");\r\n\t\t\t\t}\r\n\t\t\t\tif (this._IOs.header.events.has(\"dragstop\")) {\r\n\t\t\t\t\tthis._IOs.header.events.off(\"dragstop\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toStyle(value: number | Percent): string | null {\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\telse if ($type.isNumber(value)) {\r\n\t\t\treturn \"\" + value + \"px\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value.toString();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A prefix that is applied to class names of various popup elements.\r\n\t *\r\n\t * @return Class name prefix\r\n\t */\r\n\tpublic get classPrefix(): string {\r\n\t\treturn this.adapter.apply(\"classPrefix\", this._classPrefix);\r\n\t}\r\n\r\n\t/**\r\n\t * @param value Class name prefix\r\n\t */\r\n\tpublic set classPrefix(value: string) {\r\n\t\tthis._classPrefix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns raw prefix (without adapters applied).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Class name prefix\r\n\t */\r\n\tpublic get classPrefixRaw(): string {\r\n\t\treturn this._classPrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * Popup content.\r\n\t *\r\n\t * Popup content can be any valid HTML, including CSS.\r\n\t *\r\n\t * @param value Popup content\r\n\t */\r\n\tpublic set content(value: string) {\r\n\t\tif (this._content != value) {\r\n\t\t\tthis._content = value;\r\n\t\t\tif (!this._elements.content) {\r\n\t\t\t\tthis.createContentElement();\r\n\t\t\t}\r\n\t\t\tthis._elements.content.innerHTML = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Popup content\r\n\t */\r\n\tpublic get content(): string {\r\n\t\treturn this.adapter.apply(\"content\", this._content);\r\n\t}\r\n\r\n\tprotected getClassNames() {\r\n\t\treturn this.adapter.apply(\"classNames\", {\r\n\t\t\twrapperClass: this.classPrefix + \"\",\r\n\t\t\theaderClass: this.classPrefix + \"-header\",\r\n\t\t\ttitleClass: this.classPrefix + \"-title\",\r\n\t\t\tcontentClass: this.classPrefix + \"-content\",\r\n\t\t\tinsideClass: this.classPrefix + \"-inside\",\r\n\t\t\tcurtainClass: this.classPrefix + \"-curtain\",\r\n\t\t\tcloseClass: this.classPrefix + \"-close\"\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Creates content element.\r\n\t */\r\n\tprotected createContentElement(): void {\r\n\r\n\t\t// Check if it's created already\r\n\t\tif (this._elements.wrapper) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get class names for popup elements\r\n\t\tlet classNames = this.getClassNames();\r\n\r\n\t\t// Create content element\r\n\t\tlet wrapper = document.createElement(\"div\");\r\n\t\twrapper.className = classNames.contentClass;\r\n\t\twrapper.style.opacity = \"0.01\";\r\n\r\n\t\t// Create close button\r\n\t\tlet close = document.createElement(\"a\");\r\n\t\tclose.className = classNames.closeClass;\r\n\r\n\t\t// header title\r\n\t\tconst header = document.createElement(\"div\");\r\n\t\theader.className = classNames.headerClass;\r\n\r\n\t\t// Content title\r\n\t\tlet title = document.createElement(\"div\");\r\n\t\ttitle.innerHTML = this.title;\r\n\t\ttitle.className = classNames.titleClass;\r\n\t\tif (!this.title) {\r\n\t\t\ttitle.style.display = \"none\";\r\n\t\t}\r\n\r\n\t\t// Content div\r\n\t\tlet content = document.createElement(\"div\");\r\n\t\tcontent.className = classNames.insideClass;\r\n\t\tcontent.innerHTML = this.content;\r\n\r\n\t\t// Set up events for content\r\n\t\tthis._IOs.wrapper = getInteraction().getInteraction(wrapper);\r\n\t\tthis._IOs.header = getInteraction().getInteraction(header);\r\n\t\tthis._disposers.push(this._IOs.wrapper);\r\n\r\n\t\t// Set hover/out events\r\n\t\tthis._IOs.wrapper.events.on(\"over\", this.disablePointers, this);\r\n\t\tthis._IOs.wrapper.events.on(\"out\", this.releasePointers, this);\r\n\r\n\t\t// Create an InteractionObject for close\r\n\t\tthis._IOs.close = getInteraction().getInteraction(close);\r\n\t\tthis._disposers.push(this._IOs.close);\r\n\r\n\t\t// Hide close for now\r\n\t\tclose.style.visibility = \"hidden\";\r\n\r\n\t\t// Add accessible stuff\r\n\t\twrapper.setAttribute(\"role\", \"dialog\");\r\n\r\n\t\t// Add to wrapper\r\n\t\theader.appendChild(close);\r\n\t\theader.appendChild(title);\r\n\t\twrapper.appendChild(header);\r\n\t\twrapper.appendChild(content);\r\n\t\tthis.container.appendChild(wrapper);\r\n\r\n\t\t// Save for later access\r\n\t\tthis._elements.wrapper = wrapper;\r\n\t\tthis._elements.header = header;\r\n\t\tthis._elements.content = content;\r\n\t\tthis._elements.title = title;\r\n\t\tthis._elements.close = close;\r\n\r\n\t\t// Load CSS\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis.loadDefaultCSS();\r\n\t\t}\r\n\r\n\t\t// Create curtain as well\r\n\t\tthis.createCurtainElement();\r\n\r\n\t\t// Apply events\r\n\t\tthis.applyEvents();\r\n\r\n\t\tthis.applyReaderSettings();\r\n\r\n\t\t// Draggable?\r\n\t\tthis.setupDragging();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Popup title.\r\n\t *\r\n\t * Popup title can be any valid HTML, including CSS.\r\n\t *\r\n\t * @param value  Popup title\r\n\t */\r\n\tpublic set title(value: string) {\r\n\t\tif (this._title != value) {\r\n\t\t\tthis._title = value;\r\n\t\t\tif (!this._elements.content) {\r\n\t\t\t\tthis.createContentElement();\r\n\t\t\t}\r\n\t\t\tthis._elements.title.innerHTML = value;\r\n\t\t\tthis.positionElement();\r\n\t\t\tthis.applyReaderSettings();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Popup title\r\n\t */\r\n\tpublic get title(): string {\r\n\t\treturn this.adapter.apply(\"title\", this._title);\r\n\t}\r\n\r\n\t/**\r\n\t * A title for screen readers. It is very highly recommended to set that title\r\n\t * so that people using screen reader tools can get an immediate summary of\r\n\t * the information in the popup.\r\n\t *\r\n\t * @param value  Reader title\r\n\t */\r\n\tpublic set readerTitle(value: string) {\r\n\t\tif (this._readerTitle != value) {\r\n\t\t\tthis._readerTitle = value;\r\n\t\t\tthis.applyReaderSettings();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Popup content\r\n\t */\r\n\tpublic get readerTitle(): string {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"readerTitle\",\r\n\t\t\tthis._readerTitle != \"\" ? this._readerTitle : this.title\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Is popup closable?\r\n\t *\r\n\t * If it is, it can be closed in a number of ways, e.g. by hitting ESC key,\r\n\t * clicking curtain, or clicking the close button.\r\n\t *\r\n\t * If it is not closable, the only way to close it is via `close()` call.\r\n\t *\r\n\t * @param value Closable?\r\n\t */\r\n\tpublic set closable(value: boolean) {\r\n\t\tif (value !== this._closable) {\r\n\t\t\tthis._closable = value;\r\n\t\t\tthis.applyEvents();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Closable?\r\n\t */\r\n\tpublic get closable(): boolean {\r\n\t\treturn this.adapter.apply(\"closable\", this._closable);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to other than \"none\" will try to re-adjust the position of the\r\n\t * popop to fit within chart container or browser window.\r\n\t *\r\n\t * @ignore\r\n\t * @todo Implement\r\n\t * @default \"window\"\r\n\t * @param value  Fit option\r\n\t */\r\n\tpublic set fitTo(value: \"none\" | \"container\" | \"window\") {\r\n\t\tif (value != this._fitTo) {\r\n\t\t\tthis._fitTo = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo Implement\r\n\t * @return Fit option\r\n\t */\r\n\tpublic get fitTo(): \"none\" | \"container\" | \"window\" {\r\n\t\treturn this.adapter.apply(\"fitTo\", this._fitTo);\r\n\t}\r\n\r\n\t/**\r\n\t * Should popup use default CSS?\r\n\t *\r\n\t * If default CSS is disabled, an external CSS should handle the look of the\r\n\t * popup, since it will look quite out of place otherwise.\r\n\t *\r\n\t * @default true\r\n\t * @param Use default CSS?\r\n\t */\r\n\tpublic set defaultStyles(value: boolean) {\r\n\t\tif (this._defaultStyles != value) {\r\n\t\t\tthis._defaultStyles = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default CSS?\r\n\t */\r\n\tpublic get defaultStyles(): boolean {\r\n\t\treturn this.adapter.apply(\"defaultStyles\", this._defaultStyles);\r\n\t}\r\n\r\n\t/**\r\n\t * Should popup use dim out all content behind it?\r\n\t *\r\n\t * @default false\r\n\t * @param Show curtain?\r\n\t */\r\n\tpublic set showCurtain(value: boolean) {\r\n\t\tif (this._showCurtain != value) {\r\n\t\t\tthis._showCurtain = value;\r\n\t\t\tif (this._elements.curtain) {\r\n\t\t\t\tthis._elements.curtain.style.display = value ? \"block\" : \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Show curtain?\r\n\t */\r\n\tpublic get showCurtain(): boolean {\r\n\t\treturn this.adapter.apply(\"showCurtain\", this._showCurtain);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates curtain element.\r\n\t */\r\n\tprotected createCurtainElement(): void {\r\n\r\n\t\t// Get class names for popup elements\r\n\t\tlet classNames = this.getClassNames();\r\n\r\n\t\t// Create the curtain\r\n\t\tlet curtain = document.createElement(\"div\");\r\n\t\tcurtain.className = classNames.curtainClass;\r\n\r\n\t\t// Append curtain to wrapper\r\n\t\tthis.container.appendChild(curtain);\r\n\r\n\t\t// Create an InteractionObject for curtain because we might need to\r\n\t\t// set interactions on it\r\n\t\tthis._IOs.curtain = getInteraction().getInteraction(curtain);\r\n\r\n\t\t// Add Curtain IO to disposers\r\n\t\tthis._disposers.push(this._IOs.curtain);\r\n\r\n\t\t// Set events to disable underlying interactivity\r\n\t\tthis._IOs.curtain.events.on(\"over\", this.disablePointers, this);\r\n\t\tthis._IOs.curtain.events.on(\"out\", this.releasePointers, this);\r\n\r\n\t\t// Hide it?\r\n\t\tcurtain.style.display = this.showCurtain ? \"block\" : \"none\";\r\n\r\n\t\t// Save for later\r\n\t\tthis._elements.curtain = curtain;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Can the popup be dragged with a pointer?\r\n\t *\r\n\t * @default false\r\n\t * @param Show curtain?\r\n\t */\r\n\tpublic set draggable(value: boolean) {\r\n\t\tif (this._draggable != value) {\r\n\t\t\tthis._draggable = value;\r\n\t\t\tthis.setupDragging();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Show curtain?\r\n\t */\r\n\tpublic get draggable(): boolean {\r\n\t\treturn this.adapter.apply(\"draggable\", this._draggable);\r\n\t}\r\n\r\n\t/**\r\n\t * Resize popup as images are being loaded.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.17\r\n\t * @param Resize dynamically?\r\n\t */\r\n\tpublic set dynamicResize(value: boolean) {\r\n\t\tif (this._dynamicResize != value) {\r\n\t\t\tthis._dynamicResize = value;\r\n\t\t\tthis.positionElement(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Resize dynamically?\r\n\t */\r\n\tpublic get dynamicResize(): boolean {\r\n\t\treturn this.adapter.apply(\"dynamicResize\", this._dynamicResize);\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal positioning of the content window.\r\n\t *\r\n\t * Available options: \"left\", \"center\" (default), \"right\", and \"none\".\r\n\t *\r\n\t * @default \"center\"\r\n\t * @param Horizontal position\r\n\t */\r\n\tpublic set align(value: Align) {\r\n\t\tif (this._align != value) {\r\n\t\t\tthis._align = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal position\r\n\t */\r\n\tpublic get align(): Align {\r\n\t\treturn this.adapter.apply(\"align\", this._align);\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical positioning of the content window.\r\n\t *\r\n\t * Available options: \"top\", \"middle\" (default), \"bottom\", and \"none\".\r\n\t *\r\n\t * @default \"middle\"\r\n\t * @param Vertical position\r\n\t */\r\n\tpublic set verticalAlign(value: VerticalAlign) {\r\n\t\tif (this._verticalAlign != value) {\r\n\t\t\tthis._verticalAlign = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical position\r\n\t */\r\n\tpublic get verticalAlign(): VerticalAlign {\r\n\t\treturn this.adapter.apply(\"verticalAlign\", this._verticalAlign);\r\n\t}\r\n\r\n\t/**\r\n\t * \"left\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `align` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Left\r\n\t */\r\n\tpublic set left(value: number | Percent) {\r\n\t\tif (this.left != value) {\r\n\t\t\tthis._left = value;\r\n\t\t\tthis._align = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Left\r\n\t */\r\n\tpublic get left(): number | Percent {\r\n\t\treturn this.adapter.apply(\"left\", this._left);\r\n\t}\r\n\r\n\t/**\r\n\t * \"right\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `align` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Right\r\n\t */\r\n\tpublic set right(value: number | Percent) {\r\n\t\tif (this.right != value) {\r\n\t\t\tthis._right = value;\r\n\t\t\tthis._align = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Right\r\n\t */\r\n\tpublic get right(): number | Percent {\r\n\t\treturn this.adapter.apply(\"right\", this._right);\r\n\t}\r\n\r\n\t/**\r\n\t * \"top\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `verticalAlign` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Top\r\n\t */\r\n\tpublic set top(value: number | Percent) {\r\n\t\tif (this.top != value) {\r\n\t\t\tthis._top = value;\r\n\t\t\tthis._verticalAlign = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Top\r\n\t */\r\n\tpublic get top(): number | Percent {\r\n\t\treturn this.adapter.apply(\"top\", this._top);\r\n\t}\r\n\r\n\t/**\r\n\t * \"bottom\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `verticalAlign` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Bottom\r\n\t */\r\n\tpublic set bottom(value: number | Percent) {\r\n\t\tif (this.bottom != value) {\r\n\t\t\tthis._bottom = value;\r\n\t\t\tthis._verticalAlign = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bottom\r\n\t */\r\n\tpublic get bottom(): number | Percent {\r\n\t\treturn this.adapter.apply(\"bottom\", this._bottom);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object with references to various elements of the Popup.\r\n\t *\r\n\t * * `wrapper`\r\n\t * * `title`\r\n\t * * `content`\r\n\t * * `close`\r\n\t * * `curtain`\r\n\t */\r\n\tpublic get elements(): {\r\n\t\twrapper?: HTMLElement;\r\n\t\ttitle?: HTMLElement;\r\n\t\tcontent?: HTMLElement;\r\n\t\tclose?: HTMLElement;\r\n\t\tcurtain?: HTMLElement;\r\n\t} {\r\n\t\treturn this._elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads popup CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic loadDefaultCSS(): void {\r\n\t\tif (!this._cssLoaded) {\r\n\t\t\tthis._disposers.push(popupCSS(getShadowRoot(this.container), this.classPrefix));\r\n\t\t\t$object.each(this._elements, (key, el) => {\r\n\t\t\t\tel.style.display = \"\";\r\n\t\t\t});\r\n\t\t\tthis._cssLoaded = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If popup is closable, this method adds various events to popup elements.\r\n\t */\r\n\tprotected applyEvents(): void {\r\n\t\tif (this._IOs.close) {\r\n\t\t\tif (this.closable) {\r\n\t\t\t\tthis._IOs.close.element.style.visibility = \"visible\";\r\n\r\n\t\t\t\tlet disposers = [\r\n\t\t\t\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\t\t\tif (keyboard.isKey(ev.event, \"esc\") && this.closable) {\r\n\t\t\t\t\t\t\tthis.close()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis._IOs.close.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\t\tthis.close();\r\n\t\t\t\t\t})\r\n\t\t\t\t];\r\n\t\t\t\tdisposers.push(this._IOs.curtain.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\tif (this.showCurtain && this.closable) {\r\n\t\t\t\t\t\tthis.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tthis._disposers.push(new MultiDisposer(disposers));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._IOs.close.element.style.visibility = \"hidden\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disables interactivity on parent chart.\r\n\t */\r\n\tprotected disablePointers(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n\t\t\tthis.sprite.interactionsEnabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Releases temporarily disabled pointers on parent chart.\r\n\t */\r\n\tprotected releasePointers(): void {\r\n\t\tif ($type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n\t\t\tthis._spriteInteractionsEnabled = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets screen reader related settings.\r\n\t */\r\n\tprotected applyReaderSettings(): void {\r\n\t\tthis.elements.wrapper.setAttribute(\"aria-label\", this.readerTitle);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from different element.\r\n\t *\r\n\t * @param object Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.container = source.container;\r\n\t\tthis.sprite = source.sprite;\r\n\t\tthis.classPrefix = source.classPrefixRaw;\r\n\t\tthis.content = source.content;\r\n\t\tthis.title = source.title;\r\n\t\tthis.readerTitle = source.readerTitle;\r\n\t\tthis.defaultStyles = source.defaultStyles;\r\n\t\tthis.showCurtain = source.showCurtain;\r\n\t\tthis.align = source.align;\r\n\t\tthis.verticalAlign = source.verticalAlign;\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.adapter.copyFrom(source.adapter);\r\n\t}\r\n\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"./Container\";\r\nimport { List, IListEvents, ListDisposer } from \"./utils/List\";\r\nimport { OrderedListTemplate, ISortedListEvents } from \"./utils/SortedList\";\r\nimport { Animation } from \"./utils/Animation\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { IDisposer, Disposer, MultiDisposer } from \"./utils/Disposer\";\r\nimport { Export, IExportAdapters } from \"./export/Export\";\r\nimport { DataSource } from \"./data/DataSource\";\r\nimport { Responsive } from \"./utils/Responsive\";\r\nimport { system } from \"./System\";\r\n\r\nimport { DataItem } from \"./DataItem\";\r\nimport { registry } from \"./Registry\";\r\nimport { Preloader } from \"./elements/Preloader\";\r\nimport { IRange } from \"./defs/IRange\";\r\n\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $ease from \"./utils/Ease\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $iter from \"./utils/Iterator\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A list of available types for calculated values.\r\n */\r\nexport type CalculatedValue =\r\n\t\"value\" |\r\n\t\"percent\" |\r\n\t\"change\" |\r\n\t\"changePercent\" |\r\n\t\"startChangePercent\" |\r\n\t\"startChange\" |\r\n\t\"previousChangePercent\" |\r\n\t\"previousChange\" |\r\n\t\"sum\" |\r\n\t\"absoluteSum\" |\r\n\t\"average\" |\r\n\t\"open\" |\r\n\t\"close\" |\r\n\t\"low\" |\r\n\t\"high\" |\r\n\t\"count\" |\r\n\t\"total\" |\r\n\t\"totalPercent\" |\r\n\t\"stack\" |\r\n\t\"stackTrue\"\r\n\r\n/**\r\n * Defines properties for [[Component]].\r\n */\r\nexport interface IComponentProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Maximum zoom factor of a component.\r\n\t */\r\n\tmaxZoomFactor?: number;\r\n\r\n\t/**\r\n\t * Maximum zoom declination (how much out of 0-1 range it will allow to step out)\r\n\t *\r\n\t * @ignore\r\n\t * @default 0.5\r\n\t */\r\n\tmaxZoomDeclination?: number;\r\n\r\n\t/**\r\n\t * Use this for [[CategoryAxis]] or [[DateAxis]].\r\n\t *\r\n\t * Allows restricting zoom in beyond certain number of categories or base\r\n\t * intervals.\r\n\t *\r\n\t * The chart will not zoom in beyond this number of items.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tminZoomCount?: number;\r\n\r\n\t/**\r\n\t * Use this for [[CategoryAxis]] or [[DateAxis]].\r\n\t *\r\n\t * Limits how many categories or base intervals can be shown at the same\r\n\t * time.\r\n\t *\r\n\t * If there are more items in the chart, the chart will auto-zoom.\r\n\t *\r\n\t * @default 0 (no limit)\r\n\t */\r\n\tmaxZoomCount?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines data fields for [[Component]].\r\n */\r\nexport interface IComponentDataFields {\r\n\r\n\t/**\r\n\t * Data.\r\n\t */\r\n\tdata?: string;\r\n\r\n\t/**\r\n\t * ID.\r\n\t */\r\n\tid?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Component]].\r\n */\r\nexport interface IComponentEvents extends IContainerEvents {\r\n\r\n\t/**\r\n\t * Invoked when range of the currently selected data is validated.\r\n\t *\r\n\t * @todo: change to datarangevalidated?\r\n\t */\r\n\tdatarangechanged: {};\r\n\r\n\t/**\r\n\t * Invoked when the raw data for the component changes.\r\n\t */\r\n\tdatavalidated: {};\r\n\r\n\t/**\r\n\t * Invoked when value(s) of the element's data items are validated.\r\n\t */\r\n\tdataitemsvalidated: {};\r\n\r\n\t/**\r\n\t * Invoked just before element is validated (after changes).\r\n\t */\r\n\tbeforedatavalidated: {};\r\n\r\n\t/**\r\n\t * Invoked when range change animation starts\r\n\t */\r\n\trangechangestarted: {};\r\n\r\n\t/**\r\n\t * Invoked when range change animation ends\r\n\t */\r\n\trangechangeended: {};\r\n\r\n\t/**\r\n\t * Invoked when start position changes.\r\n\t *\r\n\t * Please note that `startchanged` event is dispatched immediately after\r\n\t * zoom occurs, so some related properties (e.g. `minZoomed` on [[ValueAxis]])\r\n\t * might not be yet updated.\r\n\t *\r\n\t * Use `startendchanged` event instead if you need to rely on updated\r\n\t * zoom-related values.\r\n\t */\r\n\tstartchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when end position changes\r\n\t *\r\n\t * Please note that `endhanged` event is dispatched immediately after\r\n\t * zoom occurs, so some related properties (e.g. `maxZoomed` on [[ValueAxis]])\r\n\t * might not be yet updated.\r\n\t *\r\n\t * Use `startendchanged` event instead if you need to rely on updated\r\n\t * zoom-related values.\r\n\t */\r\n\tendchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when start or end position changes, unlike startchanged/endchanged\r\n\t * this event is fired not immediately but at the end of a cycle.\r\n\t */\r\n\tstartendchanged: {};\r\n}\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IComponentAdapters extends IContainerAdapters, IComponentProperties {\r\n\r\n\t/**\r\n\t * Applied after [[Component]] retrieves data value from data context\r\n\t * (raw data), but before it is provided to [[DataItem]].\r\n\t */\r\n\tdataContextValue: {\r\n\t\tvalue: any,\r\n\t\tfield: string,\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n\t/**\r\n\t * Applied to chart's data before it is retrieved for use.\r\n\t */\r\n\tdata: any[];\r\n\r\n\tstart: number;\r\n\r\n\tend: number;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A Component represents an independent functional element or control, that\r\n * can have it's own behavior, children, data, etc.\r\n *\r\n * A few examples of a Component: [[Legend]], [[Series]], [[Scrollbar]].\r\n *\r\n * @see {@link IComponentEvents} for a list of available events\r\n * @see {@link IComponentAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Component extends Container {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields!: IComponentDataFields;\r\n\r\n\t/**\r\n\t * Holds data field names.\r\n\t *\r\n\t * Data fields define connection beween [[DataItem]] and actual properties\r\n\t * in raw data.\r\n\t */\r\n\tpublic dataFields: this[\"_dataFields\"] = {};\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IComponentProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IComponentAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IComponentEvents;\r\n\r\n\t/**\r\n\t * Holds the data for the component.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _data: $type.Optional<any[]>;\r\n\r\n\t/**\r\n\t * A [[Component]] which provides data to this component (like Chart provides\r\n\t * data for Series).\r\n\t */\r\n\tpublic dataProvider: $type.Optional<Component>;\r\n\r\n\t/**\r\n\t * A list of [[DataSource]] definitions of external data source.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dataSources: { [index: string]: DataSource } = {};\r\n\r\n\t/**\r\n\t * An instance of [[Responsive]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _responsive: $type.Optional<Responsive>;\r\n\r\n\t/**\r\n\t * This is used when only new data is invalidated (if added using `addData`\r\n\t * method).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _parseDataFrom: number = 0;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _dataUsers: $type.Optional<List<Component>>;\r\n\r\n\t/**\r\n\t * Holds the disposers for the dataItems and dataUsers\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dataDisposers: Array<IDisposer> = [];\r\n\r\n\r\n\t/**\r\n\t * Identifies the type of the [[DataItem]] used in this element.\r\n\t */\r\n\tpublic _dataItem!: DataItem;\r\n\r\n\t/**\r\n\t * List of element's source data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dataItems: $type.Optional<OrderedListTemplate<this[\"_dataItem\"]>>;\r\n\r\n\t/**\r\n\t * Holds aggregated data items.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic _dataSets: Dictionary<string, OrderedListTemplate<this[\"_dataItem\"]>>;\r\n\r\n\t/**\r\n\t * Currently selected \"data set\".\r\n\t *\r\n\t * If it's set to `\"\"`, main data set (unaggregated data) is used.\r\n\t */\r\n\tprotected _currentDataSetId: string = \"\";\r\n\r\n\t/**\r\n\t * [_startIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _startIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_endIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _endIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_start description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _start: number = 0;\r\n\r\n\t/**\r\n\t * [_end description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _end: number = 1;\r\n\r\n\t/**\r\n\t * [_finalStart description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _finalStart: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_finalEnd description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _finalEnd: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * If set to `true`, changing data range in element will not trigger\r\n\t * `daterangechanged` event.\r\n\t */\r\n\tpublic skipRangeEvent: boolean = false;\r\n\r\n\t/**\r\n\t * Whenever selected scope changes (chart is zoomed or panned), for example\r\n\t * by interaction from a Scrollbar, or API, a chart needs to reposition\r\n\t * its contents.\r\n\t *\r\n\t * `rangeChangeDuration` influences how this is performed.\r\n\t *\r\n\t * If set to zero (0), the change will happen instantenously.\r\n\t *\r\n\t * If set to non-zero value, the chart will gradually animate into new\r\n\t * position for the set amount of milliseconds.\r\n\t *\r\n\t * @default 0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tpublic rangeChangeDuration: number = 0;\r\n\r\n\t/**\r\n\t * An easing function to use for range change animation.\r\n\t *\r\n\t * @see {@link Ease}\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tpublic rangeChangeEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * A reference to a currently playing range change [[Animation]] object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rangeChangeAnimation: $type.Optional<Animation>;\r\n\r\n\t/**\r\n\t * A duration (ms) of each data parsing step. A Component parses its data in\r\n\t * chunks in order to avoid completely freezing the machine when large data\r\n\t * sets are used. This setting will control how many milliseconds should pass\r\n\t * when parsing data until parser stops for a brief moment to let other\r\n\t * processes catch up.\r\n\t */\r\n\tpublic parsingStepDuration: number = 50;\r\n\r\n\t/**\r\n\t * [dataInvalid description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataInvalid: boolean = false;\r\n\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rawDataInvalid: boolean = false;\r\n\r\n\t/**\r\n\t * [dataRangeInvalid description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataRangeInvalid: boolean = false;\r\n\r\n\t/**\r\n\t * [dataItemsInvalid description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataItemsInvalid: boolean = false;\r\n\r\n\t/**\r\n\t * If set to a non-zero number the element will \"animate\" data values of its\r\n\t * children.\r\n\t *\r\n\t * This will happen on first load and whenever data values change.\r\n\t *\r\n\t * Enabling interpolation will mean that elements will transit smoothly into\r\n\t * new values rather than updating instantly.\r\n\t *\r\n\t * @default 0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tpublic interpolationDuration: number = 0;\r\n\r\n\t/**\r\n\t * An easing function to use for interpolating values when transiting from\r\n\t * one source value to another.\r\n\t *\r\n\t * @default cubicOut\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t * @see {@link Ease}\r\n\t */\r\n\tpublic interpolationEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * Indicates whether transition between data item's values should start and\r\n\t * play out all at once, or with a small delay (as defined by\r\n\t * `sequencedInterpolationDelay`) for each subsequent data item.\r\n\t *\r\n\t * @default true\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tpublic sequencedInterpolation: boolean = true;\r\n\r\n\t/**\r\n\t * A delay (ms) to wait between animating each subsequent data item's\r\n\t * interpolation animation.\r\n\t *\r\n\t * Relative only if `sequencedInterpolation = true`.\r\n\t *\r\n\t * @default 0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tpublic sequencedInterpolationDelay: number = 0;\r\n\r\n\t/**\r\n\t * A progress (0-1) for the data validation process.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic dataValidationProgress: number = 0;\r\n\r\n\t/**\r\n\t * [_prevStartIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevStartIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_prevEndIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevEndIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Sometimes we need to process more dataItems then actually is\r\n\t * selected (for example, not to cut lines at the end/beginning).\r\n\t * However when calculating averages, min, max, etc we need not to include\r\n\t * them. So we store `workingStartIndex` and `workingEndIndex` to know which\r\n\t * dataItems should be included and which should not.\r\n\t */\r\n\r\n\t/**\r\n\t * [_workingStartIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _workingStartIndex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * [_workingEndIndex description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _workingEndIndex: $type.Optional<number>;\r\n\r\n\tprotected _addAllDataItems: boolean = true;\r\n\r\n\tprotected _showOnInitDisposer2: IDisposer;\r\n\r\n\tprotected _usesData: boolean = true;\r\n\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Component\";\r\n\r\n\t\tthis.minZoomCount = 1;\r\n\t\tthis.maxZoomCount = 0;\r\n\r\n\t\tthis._dataItems = new OrderedListTemplate<DataItem>(this.createDataItem());\r\n\t\tthis._dataItems.events.on(\"inserted\", this.handleDataItemAdded, this, false);\r\n\t\tthis._dataItems.events.on(\"removed\", this.handleDataItemRemoved, this, false);\r\n\t\tthis._disposers.push(new ListDisposer(this._dataItems));\r\n\t\tthis._disposers.push(this._dataItems.template);\r\n\r\n\t\tthis.invalidateData();\r\n\r\n\t\t// TODO what about remove ?\r\n\t\tthis.dataUsers.events.on(\"inserted\", this.handleDataUserAdded, this, false);\r\n\r\n\t\t// Set up disposers\r\n\t\tthis._disposers.push(new MultiDisposer(this._dataDisposers));\r\n\r\n\t\tthis._start = 0;\r\n\t\tthis._end = 1;\r\n\r\n\t\tthis.maxZoomDeclination = 1;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new DataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataUserAdded description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param event Event object\r\n\t */\r\n\tprotected handleDataUserAdded(event: IListEvents<Component>[\"inserted\"]) {\r\n\t\tlet dataUser = event.newValue;\r\n\t\tdataUser.dataProvider = this;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic handleDataItemValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (!this.dataItemsInvalid) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingLocationChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingLocationChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemCalculatedValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemCalculatedValueChange(dataItem?: this[\"_dataItem\"], name?: string) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemPropertyChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemPropertyChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Populates a [[DataItem]] width data from data source.\r\n\t *\r\n\t * Loops through all the fields and if such a field is found in raw data\r\n\t * object, a corresponding value on passed in `dataItem` is set.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item\r\n\t */\r\n\tprotected processDataItem(dataItem: this[\"_dataItem\"], dataContext?: Object): void {\r\n\t\tif (dataItem) {\r\n\t\t\tif (!dataContext) {\r\n\t\t\t\tdataContext = {};\r\n\t\t\t}\r\n\r\n\t\t\t// store reference to original data item\r\n\t\t\tdataItem.dataContext = dataContext;\r\n\r\n\t\t\tlet hasSomeValues = false;\r\n\r\n\t\t\t$object.each(this.dataFields, (key, fieldValue) => {\r\n\t\t\t\tconst fieldName: string = <string>key;\r\n\r\n\t\t\t\tlet value: any = (<any>dataContext)[fieldValue];\r\n\t\t\t\t// Apply adapters to a retrieved value\r\n\t\t\t\tif (this._adapterO) {\r\n\t\t\t\t\tif (this._adapterO.isEnabled(\"dataContextValue\")) {\r\n\t\t\t\t\t\tvalue = this._adapterO.apply(\"dataContextValue\", {\r\n\t\t\t\t\t\t\tfield: fieldName,\r\n\t\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\t\tdataItem: dataItem\r\n\t\t\t\t\t\t}).value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\thasSomeValues = true;\r\n\r\n\t\t\t\t\tif (dataItem.hasChildren[fieldName]) {\r\n\t\t\t\t\t\tlet template = this.createDataItem();\r\n\t\t\t\t\t\ttemplate.copyFrom(this.mainDataSet.template);\r\n\t\t\t\t\t\tlet children = new OrderedListTemplate<DataItem>(template);\r\n\t\t\t\t\t\tchildren.events.on(\"inserted\", this.handleDataItemAdded, this, false);\r\n\t\t\t\t\t\tchildren.events.on(\"removed\", this.handleDataItemRemoved, this, false);\r\n\t\t\t\t\t\tthis._dataDisposers.push(new ListDisposer(children));\r\n\t\t\t\t\t\tlet count = value.length;\r\n\t\t\t\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\t\t\t\tlet rawDataItem = value[i];\r\n\t\t\t\t\t\t\tlet childDataItem: this[\"_dataItem\"] = children.create();\r\n\t\t\t\t\t\t\tchildDataItem.parent = dataItem;\r\n\t\t\t\t\t\t\tthis.processDataItem(childDataItem, rawDataItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet anyDataItem = <any>dataItem;\r\n\t\t\t\t\t\tanyDataItem[fieldName] = <any>children;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// data is converted to numbers/dates in each dataItem\r\n\t\t\t\t\t\t(<any>dataItem)[fieldName] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$object.each(this.propertyFields, (key, fieldValue) => {\r\n\t\t\t\tconst f: string = <string>key;\r\n\t\t\t\tlet value: any = (<any>dataContext)[fieldValue];\r\n\r\n\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\thasSomeValues = true;\r\n\t\t\t\t\tdataItem.setProperty(f, value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// @todo we might need some flag which would tell whether we should create empty data items or not.\r\n\t\t\tif (!this._addAllDataItems && !hasSomeValues) {\r\n\t\t\t\tthis.mainDataSet.remove(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * When validating raw data, instead of processing data item, we update it\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item\r\n\t */\r\n\tprotected updateDataItem(dataItem: this[\"_dataItem\"]): void {\r\n\t\tif (dataItem) {\r\n\r\n\t\t\tlet dataContext = dataItem.dataContext;\r\n\r\n\t\t\t$object.each(this.dataFields, (key, fieldValue) => {\r\n\t\t\t\tconst fieldName: string = <string>key;\r\n\r\n\t\t\t\tlet value: any = (<any>dataContext)[fieldValue];\r\n\t\t\t\t// Apply adapters to a retrieved value\r\n\t\t\t\tif (this._adapterO) {\r\n\t\t\t\t\tvalue = this._adapterO.apply(\"dataContextValue\", {\r\n\t\t\t\t\t\tfield: fieldName,\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tdataItem: dataItem\r\n\t\t\t\t\t}).value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\tif (dataItem.hasChildren[fieldName]) {\r\n\t\t\t\t\t\tlet anyDataItem = <any>dataItem;\r\n\t\t\t\t\t\tlet children = <OrderedListTemplate<this[\"_dataItem\"]>><any>(anyDataItem[fieldName]);\r\n\t\t\t\t\t\tchildren.each((child) => {\r\n\t\t\t\t\t\t\tthis.updateDataItem(child);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// data is converted to numbers/dates in each dataItem\t\t\t\t\t\r\n\t\t\t\t\t\t(<any>dataItem)[fieldName] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$object.each(this.propertyFields, (key, fieldValue) => {\r\n\t\t\t\tconst f: string = <string>key;\r\n\t\t\t\tlet value: any = (<any>dataContext)[fieldValue];\r\n\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\tdataItem.setProperty(f, value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected validateDataElements() {\r\n\t\tlet count = this.endIndex;\r\n\r\n\t\tfor (let i = this.startIndex; i < count; i++) {\r\n\t\t\tconst dataItem = this.dataItems.getIndex(i);\r\n\r\n\t\t\t// TODO is this correct\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tthis.validateDataElement(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates this element and its related elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tthis.validateDataElements();\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem [description]\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds one or several (array) of data items to the existing data.\r\n\t *\r\n\t * @param rawDataItem One or many raw data item objects\r\n\t */\r\n\tpublic addData(rawDataItem: Object | Object[], removeCount?: number, skipRaw?: boolean): void {\r\n\r\n\t\t// need to check if data is invalid, as addData might be called multiple times\r\n\t\tif (!this.dataInvalid && this.inited) {\r\n\t\t\tthis._parseDataFrom = this.data.length; // save length of parsed data\r\n\t\t}\r\n\r\n\t\tif (!skipRaw) {\r\n\t\t\tif (rawDataItem instanceof Array) {\r\n\t\t\t\t// can't use concat because new array is returned\r\n\t\t\t\t$array.each(rawDataItem, (dataItem) => {\r\n\t\t\t\t\tthis.data.push(dataItem);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.data.push(rawDataItem); // add to raw data array\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.inited) {\r\n\t\t\tthis.removeData(removeCount, skipRaw);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif ($type.isNumber(removeCount)) {\r\n\t\t\t\twhile (removeCount > 0) {\r\n\t\t\t\t\tthis.data.shift();\r\n\t\t\t\t\tremoveCount--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * Removes elements from the beginning of data\r\n\t *\r\n\t * @param count number of elements to remove\r\n\t */\r\n\tpublic removeData(count: $type.Optional<number>, skipRaw?: boolean) {\r\n\t\tif ($type.isNumber(count) && count > 0) {\r\n\t\t\twhile (count > 0) {\r\n\t\t\t\tlet dataItem = this.mainDataSet.getIndex(0);\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tthis.mainDataSet.remove(dataItem);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\t\t\tif (!dataUser.data || dataUser.data.length == 0) {\r\n\t\t\t\t\t\tlet dataItem = dataUser.mainDataSet.getIndex(0);\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\tdataUser.mainDataSet.remove(dataItem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (!skipRaw) {\r\n\t\t\t\t\tthis.data.shift();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._parseDataFrom > 0) {\r\n\t\t\t\t\tthis._parseDataFrom--;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcount--;\r\n\t\t\t}\r\n\t\t\t// changed from invalidateData since 4.7.19 to solve #51551\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers a data (re)parsing.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateData(): void {\r\n\t\tif (this.disabled || this.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//if(!this.dataInvalid){\r\n\t\tregistry.addToInvalidComponents(this);\r\n\t\tsystem.requestFrame();\r\n\t\tthis.dataInvalid = true;\r\n\r\n\t\t$iter.each(this.dataUsers.iterator(), (x) => {\r\n\t\t\tx.invalidateDataItems();\r\n\t\t});\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * [invalidateDataUsers description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic invalidateDataUsers(): void {\r\n\t\t$iter.each(this.dataUsers.iterator(), (x) => {\r\n\t\t\tx.invalidate();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates data values. When data array is not changed, but values within\r\n\t * it changes, we invalidate data so that component would process changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateDataItems(): void {\r\n\t\tif (this.disabled || this.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//if(!this.dataItemsInvalid){\r\n\t\t$array.move(registry.invalidDataItems, this);\r\n\t\tsystem.requestFrame();\r\n\r\n\t\tthis.dataItemsInvalid = true;\r\n\r\n\t\t$iter.each(this.dataUsers.iterator(), (x) => {\r\n\t\t\tx.invalidateDataItems();\r\n\t\t});\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates data range. This is done when data which must be shown\r\n\t * changes (chart is zoomed for example).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateDataRange(): void {\r\n\t\tif (this.disabled || this.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//if(!this.dataRangeInvalid){\r\n\t\tthis.dataRangeInvalid = true;\r\n\t\t$array.move(registry.invalidDataRange, this);\r\n\t\tsystem.requestFrame();\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data range.\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataRange(): void {\r\n\t\t$array.remove(registry.invalidDataRange, this);\r\n\t\tthis.dataRangeInvalid = false;\r\n\r\n\t\tif (this.startIndex != this._prevStartIndex || this.endIndex != this._prevEndIndex) {\r\n\t\t\tthis.rangeChangeUpdate();\r\n\t\t\tthis.appendDataItems();\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.dispatchImmediately(\"datarangechanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [sliceData description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected sliceData() {\r\n\t\tthis._workingStartIndex = this.startIndex;\r\n\t\tthis._workingEndIndex = this.endIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tthis.sliceData();\r\n\t\tthis._prevStartIndex = this.startIndex;\r\n\t\tthis._prevEndIndex = this.endIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * [appendDataItems description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected appendDataItems() {\r\n\t\t// TODO use an iterator instead\r\n\t\tlet count = this.endIndex;\r\n\t\tfor (let i: number = this.startIndex; i < count; i++) {\r\n\r\n\t\t\t// data item\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this.startIndex; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = this.endIndex; i < this.dataItems.length; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If you want to have a smooth transition from one data values to another, you change your raw data and then you must call this method.\r\n\t * then instead of redrawing everything, the chart will check raw data and smoothly transit from previous to new data\r\n\t */\r\n\tpublic invalidateRawData(): void {\r\n\t\tif (this.disabled || this.isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//if(!this.rawDataInvalid){\r\n\t\t$array.move(registry.invalidRawDatas, this);\r\n\t\tsystem.requestFrame();\r\n\r\n\t\tthis.rawDataInvalid = true;\r\n\r\n\t\t$iter.each(this.dataUsers.iterator(), (x) => {\r\n\t\t\tx.invalidateRawData();\r\n\t\t});\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic validateRawData() {\r\n\t\t$array.remove(registry.invalidRawDatas, this);\r\n\t\t$iter.each(this.mainDataSet.iterator(), (dataItem) => {\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tthis.updateDataItem(dataItem);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tthis.mainDataSet.template.clones.clear();\r\n\t\t$object.each(this._dataSources, (key, source) => {\r\n\t\t\tthis.removeDispose(source);\r\n\t\t});\r\n\t\tthis.disposeData();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeData() {\r\n\t\tthis.mainDataSet.template.clones.clear();\r\n\r\n\t\t$array.each(this._dataDisposers, (x) => {\r\n\t\t\tx.dispose();\r\n\t\t});\r\n\r\n\t\t// and for all components\r\n\t\t$iter.each(this.dataUsers.iterator(), (dataUser) => {\r\n\t\t\tdataUser.disposeData();\r\n\t\t});\r\n\r\n\t\tthis._dataDisposers.length = 0;\r\n\r\n\t\tthis._startIndex = undefined;\r\n\t\tthis._endIndex = undefined;\r\n\r\n\t\t// dispose old\r\n\t\tthis.mainDataSet.clear();\r\n\r\n\t\tthis.mainDataSet.template.clones.clear();\r\n\r\n\t\tif (this._dataSets) {\r\n\t\t\tthis._dataSets.clear();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected getDataItem(dataContext?: any): this[\"_dataItem\"] {\r\n\t\treturn this.mainDataSet.create();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tthis.dispatchImmediately(\"beforedatavalidated\");\r\n\r\n\t\tthis.dataInvalid = false;\r\n\r\n\t\tregistry.removeFromInvalidComponents(this);\r\n\r\n\t\tif (this.__disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.dataValidationProgress = 0;\r\n\t\t// need this to slice new data\r\n\t\tthis._prevStartIndex = undefined;\r\n\t\tthis._prevEndIndex = undefined;\r\n\r\n\t\t// todo: this needs some overthinking, maybe some extra settings like zoomOotonDataupdate like in v3 or so. some charts like pie chart probably should act like this always\r\n\t\tthis._startIndex = undefined;\r\n\t\tthis._endIndex = undefined;\r\n\r\n\t\tif (this.dataFields.data && this.dataItem) {\r\n\t\t\tlet dataContext = <any>this.dataItem.dataContext;\r\n\t\t\tthis._data = dataContext[this.dataFields.data];\r\n\t\t}\r\n\r\n\t\t// data items array is reset only if all data is validated, if _parseDataFrom is not 0, we append new data only\r\n\t\t// check heatmap demo if uncommented\r\n\t\t// fixed both issues by adding && this.data.length > 0\r\n\t\t// check adding series example if changed\r\n\t\tif (this._parseDataFrom === 0 && this.data.length > 0) {\r\n\t\t\tthis.disposeData();\r\n\t\t}\r\n\r\n\t\tif (this.data.length > 0) {\r\n\t\t\tlet preloader: $type.Optional<Preloader> = this.preloader;\r\n\r\n\t\t\t// and for all components\r\n\t\t\t$iter.each(this.dataUsers.iterator(), (dataUser) => {\r\n\t\t\t\t// todo: this needs some overthinking, maybe some extra settings like zoomOUtonDataupdate like in v3 or so. some charts like pie chart probably should act like this always\r\n\t\t\t\tdataUser._startIndex = undefined;\r\n\t\t\t\tdataUser._endIndex = undefined;\r\n\t\t\t});\r\n\r\n\t\t\tlet counter: number = 0;\r\n\t\t\tlet startTime: number = Date.now();\r\n\t\t\t// parse data\r\n\t\t\tlet i = this._parseDataFrom;\r\n\t\t\tlet n = this.data.length;\r\n\r\n\t\t\tfor (i; i < n; i++) {\r\n\t\t\t\tlet rawDataItem = this.data[i];\r\n\t\t\t\tif (this._usesData) {\r\n\t\t\t\t\tlet dataItem: this[\"_dataItem\"] = this.getDataItem(rawDataItem);\r\n\t\t\t\t\tthis.processDataItem(dataItem, rawDataItem);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\t\t\tif (dataUser.data.length == 0) { // checking if data is not set directly\r\n\t\t\t\t\t\tlet dataUserDataItem: DataItem = dataUser.getDataItem(rawDataItem);\r\n\t\t\t\t\t\tdataUser.processDataItem(dataUserDataItem, rawDataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tcounter++;\r\n\r\n\t\t\t\t// show preloader if this takes too many time\r\n\t\t\t\tif (counter == 100) { // no need to check it on each data item\r\n\t\t\t\t\tcounter = 0;\r\n\t\t\t\t\tlet elapsed: number = Date.now() - startTime;\r\n\r\n\t\t\t\t\tif (elapsed > this.parsingStepDuration) {\r\n\t\t\t\t\t\tif (i < this.data.length - 10) {\r\n\t\t\t\t\t\t\tthis._parseDataFrom = i + 1;\r\n\r\n\t\t\t\t\t\t\t// update preloader\r\n\t\t\t\t\t\t\tif (preloader) {\r\n\t\t\t\t\t\t\t\tif (i / this.data.length > 0.5 && !preloader.visible) {\r\n\t\t\t\t\t\t\t\t\t// do not start showing\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tpreloader.progress = i / this.data.length;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.dataValidationProgress = i / this.data.length;\r\n\r\n\t\t\t\t\t\t\ti = this.data.length; // stops cycle\r\n\t\t\t\t\t\t\tthis.invalidateData();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 1;\r\n\t\t\t}\r\n\r\n\t\t\tthis.dataUsers.each((dataUser:any) => {\r\n\t\t\t\tif (dataUser.hidden || (dataUser.appeared && !dataUser.visible && dataUser.stacked)) {\r\n\t\t\t\t\tdataUser.hide(0);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.dataValidationProgress = 1;\r\n\t\tthis._parseDataFrom = 0; // reset this index, it is set to dataItems.length if addData() method was used.\r\n\r\n\t\tthis.invalidateDataItems();\r\n\r\n\t\tif (!this._internalDefaultsApplied) {\r\n\t\t\tthis.applyInternalDefaults();\r\n\t\t}\r\n\r\n\t\tthis.dispatch(\"datavalidated\"); // can't zoom chart if dispatched immediately\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\t\t$array.remove(registry.invalidDataItems, this);\r\n\r\n\t\tthis.dataItemsInvalid = false;\r\n\r\n\t\tthis.invalidateDataRange();\r\n\t\tthis.invalidate();\r\n\t\tthis.dispatch(\"dataitemsvalidated\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets source (raw) data for the element. The \"data\" is always an `Array`\r\n\t * of objects.\r\n\t *\r\n\t * IMPORTANT: The order of data items in `data` array is important as it\r\n\t * might affect chart look and behavior. [More details](https://www.amcharts.com/docs/v4/concepts/data/#Order_of_data_items).\r\n\t *\r\n\t * @param value Data\r\n\t */\r\n\tpublic set data(value: any[]) {\r\n\t\tthis.setData(value);\r\n\t}\r\n\r\n\tprotected setData(value: any[]) {\r\n\t\t// array might be the same, but there might be items added\r\n\t\t// todo: check if array changed, toString maybe?\r\n\t\tif (!this.isDisposed()) {\r\n\t\t\tthis._parseDataFrom = 0;\r\n\t\t\tthis.disposeData();\r\n\t\t\tthis._data = value;\r\n\t\t\tif (value && value.length > 0) {\r\n\t\t\t\tthis.invalidateData();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.dispatchImmediately(\"beforedatavalidated\");\r\n\t\t\t\tthis.dispatch(\"datavalidated\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's source (raw) data.\r\n\t *\r\n\t * @return Data\r\n\t */\r\n\tpublic get data(): any[] {\r\n\t\tif (!this._data) {\r\n\t\t\tthis._data = [];\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._data;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"data\", this._data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns (creates if necessary) a [[DataSource]] bound to any specific\r\n\t * property.\r\n\t *\r\n\t * For example if I want to bind `data` to an external JSON file, I'd create\r\n\t * a DataSource for it.\r\n\t *\r\n\t * @param property  Property to bind external data to\r\n\t * @return A DataSource for property\r\n\t */\r\n\tpublic getDataSource(property: string): DataSource {\r\n\t\tif (!$type.hasValue(this._dataSources[property])) {\r\n\t\t\tthis._dataSources[property] = new DataSource();\r\n\t\t\tthis._dataSources[property].component = this;\r\n\t\t\tthis.setDataSourceEvents(this._dataSources[property], property);\r\n\t\t\tthis._dataSources[property].adapter.add(\"dateFields\", (val) => {\r\n\t\t\t\treturn this.dataSourceDateFields(val);\r\n\t\t\t});\r\n\t\t\tthis._dataSources[property].adapter.add(\"numberFields\", (val) => {\r\n\t\t\t\treturn this.dataSourceNumberFields(val);\r\n\t\t\t});\r\n\t\t\tthis.events.on(\"inited\", () => {\r\n\t\t\t\tthis.loadData(property);\r\n\t\t\t}, this, false);\r\n\t\t}\r\n\t\treturn this._dataSources[property];\r\n\t}\r\n\r\n\t/**\r\n\t *A [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/loading-external-data/} for more on loading external data\r\n\t * @param value  Data source\r\n\t */\r\n\tpublic set dataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"data\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"data\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"data\"] = value;\r\n\t\tthis._dataSources[\"data\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"data\")\r\n\t\t}, this, false);\r\n\t\tthis.setDataSourceEvents(value, \"data\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data source\r\n\t */\r\n\tpublic get dataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"data\"]) {\r\n\t\t\tthis.getDataSource(\"data\");\r\n\t\t}\r\n\t\treturn this._dataSources[\"data\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates loading of the external data via [[DataSource]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected loadData(property: string): void {\r\n\t\tthis._dataSources[property].load();\r\n\t}\r\n\r\n\t/**\r\n\t * This function is called by the [[DataSource]]'s `dateFields` adapater\r\n\t * so that particular chart types can popuplate this setting with their\r\n\t * own type-specific data fields so they are parsed properly.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Array of date fields\r\n\t * @return Array of date fields populated with chart's date fields\r\n\t */\r\n\tprotected dataSourceDateFields(value: string[]): string[] {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * This function is called by the [[DataSource]]'s `numberFields` adapater\r\n\t * so that particular chart types can popuplate this setting with their\r\n\t * own type-specific data fields so they are parsed properly.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Array of number fields\r\n\t * @return Array of number fields populated with chart's number fields\r\n\t */\r\n\tprotected dataSourceNumberFields(value: string[]): string[] {\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param list        [description]\r\n\t * @param dataFields  [description]\r\n\t * @param targetList  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected populateDataSourceFields(list: string[], dataFields: { [index: string]: string }, targetList: string[]): string[] {\r\n\t\t$array.each(targetList, (value: string) => {\r\n\t\t\tif (dataFields[value] && $array.indexOf(list, dataFields[value]) === -1) {\r\n\t\t\t\tlist.push(dataFields[value]);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets events on a [[DataSource]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected setDataSourceEvents(ds: DataSource, property?: string): void {\r\n\t\tds.events.on(\"started\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 0;\r\n\t\t\t\t//preloader.label.text = this.language.translate(\"Loading\");\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"loadstarted\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 0.25;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"loadended\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 0.5;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"parseended\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 0.75;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"ended\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 1;\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\t\tds.events.on(\"error\", (ev) => {\r\n\t\t\tconst preloader = this.preloader;\r\n\t\t\tif (preloader) {\r\n\t\t\t\tpreloader.progress = 1;\r\n\t\t\t}\r\n\t\t\tthis.openModal(ev.message);\r\n\t\t}, undefined, false);\r\n\r\n\t\tif (property) {\r\n\t\t\tds.events.on(\"done\", (ev) => {\r\n\t\t\t\tconst preloader = this.preloader;\r\n\t\t\t\tif (preloader) {\r\n\t\t\t\t\tpreloader.progress = 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (property == \"data\" && !$type.isArray(ev.data)) {\r\n\t\t\t\t\tev.data = [ev.data];\r\n\t\t\t\t}\r\n\t\t\t\tif (ds.incremental && property == \"data\" && this.data.length) {\r\n\t\t\t\t\tthis.addData(ev.data, ds.keepCount ? ev.data.length : 0);\r\n\t\t\t\t}\r\n\t\t\t\telse if (ds.updateCurrentData && property == \"data\" && this.data.length) {\r\n\t\t\t\t\t// cycle through existing data items\r\n\t\t\t\t\t$array.each(this.data, (item, index) => {\r\n\t\t\t\t\t\tif ($type.hasValue(ev.data[index])) {\r\n\t\t\t\t\t\t\t$object.each(item, (key, val) => {\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(ev.data[index][key])) {\r\n\t\t\t\t\t\t\t\t\titem[key] = ev.data[index][key];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.invalidateRawData();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t(<any>this)[property] = ev.data;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Responsive]] instance to be used when applying conditional\r\n\t * property values.\r\n\t *\r\n\t * NOTE: Responsive features are currently in development and may not work\r\n\t * as expected, if at all.\r\n\t *\r\n\t * @param value  Responsive rules handler\r\n\t */\r\n\tpublic set responsive(value: Responsive) {\r\n\t\tthis._responsive = value;\r\n\t\tthis._responsive.component = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Responsive rules handler\r\n\t */\r\n\tpublic get responsive(): Responsive {\r\n\t\tif (!this._responsive) {\r\n\t\t\tthis._responsive = new Responsive();\r\n\t\t\tthis._responsive.component = this;\r\n\t\t}\r\n\t\treturn this._responsive;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current zoom.\r\n\t *\r\n\t * The range uses relative values from 0 to 1, with 0 marking beginning and 1\r\n\t * marking end of the available data range.\r\n\t *\r\n\t * This method will not have any effect when called on a chart object.\r\n\t * Since the chart can have a number of axes and series, each with its own\r\n\t * data, the meaning of \"range\" is very ambiguous.\r\n\t *\r\n\t * To zoom the chart use `zoom*` methods on its respective axes.\r\n\t *\r\n\t * @param range          Range\r\n\t * @param skipRangeEvent Should rangechanged event not be triggered?\r\n\t * @param instantly      Do not animate?\r\n\t * @return Actual modidied range (taking `maxZoomFactor` into account)\r\n\t */\r\n\tpublic zoom(range: IRange, skipRangeEvent: boolean = false, instantly: boolean = false, declination?: number): IRange {\r\n\t\tlet start: $type.Optional<number> = range.start;\r\n\t\tlet end = range.end;\r\n\t\tlet priority = range.priority;\r\n\r\n\t\tif (range.start == range.end) {\r\n\t\t\trange.start = range.start - 0.5 / this.maxZoomFactor;\r\n\t\t\trange.end = range.end + 0.5 / this.maxZoomFactor;\r\n\t\t}\r\n\r\n\t\tif (priority == \"end\" && end == 1 && start != 0) {\r\n\t\t\tif (start < this.start) {\r\n\t\t\t\tpriority = \"start\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (priority == \"start\" && start == 0) {\r\n\t\t\tif (end > this.end) {\r\n\t\t\t\tpriority = \"end\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(declination)) {\r\n\t\t\tdeclination = this.maxZoomDeclination;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(start) || !$type.isNumber(end)) {\r\n\t\t\treturn { start: this.start, end: this.end };\r\n\t\t}\r\n\r\n\t\tif (this._finalStart != start || this._finalEnd != end) {\r\n\r\n\t\t\tlet maxZoomFactor: number = this.maxZoomFactor / this.minZoomCount;\r\n\t\t\tlet minZoomFactor: number = this.maxZoomFactor / this.maxZoomCount;\r\n\r\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n\r\n\t\t\tif (priority == \"start\") {\r\n\r\n\t\t\t\tif (this.maxZoomCount > 0) {\r\n\t\t\t\t\t// add to the end\r\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\r\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// add to the end\r\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\r\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\r\n\t\t\t\t}\r\n\t\t\t\t//unless end is > 0\r\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\r\n\t\t\t\t\t//end = 1;\r\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// most likely we are dragging right, so we modify left\r\n\t\t\telse {\r\n\r\n\t\t\t\tif (this.maxZoomCount > 0) {\r\n\t\t\t\t\t// add to the end\r\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\r\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// remove from start\r\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\r\n\t\t\t\t\tif(start <= 0){\r\n\t\t\t\t\t\tend = start + 1 / maxZoomFactor;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tstart = end - 1 / maxZoomFactor;\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\r\n\t\t\t\t\t//start = 0;\r\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (start < - declination) {\r\n\t\t\t\tstart = - declination;\r\n\t\t\t}\r\n\r\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\t\t\t\t\r\n\t\t\t\tend = start + 1 / maxZoomFactor;\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (end > 1 + declination) {\r\n\t\t\t\tend = 1 + declination;\r\n\t\t\t}\r\n\r\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\r\n\t\t\t\tstart = end - 1 / maxZoomFactor;\r\n\t\t\t}\r\n\r\n\t\t\tthis._finalEnd = end;\r\n\t\t\tthis._finalStart = start;\r\n\r\n\t\t\tthis.skipRangeEvent = skipRangeEvent;\r\n\r\n\t\t\tthis.dispatchImmediately(\"rangechangestarted\");\r\n\r\n\t\t\tif (this.rangeChangeDuration > 0 && !instantly) {\r\n\r\n\t\t\t\t// todo: maybe move this to Animation\r\n\t\t\t\tlet rangeChangeAnimation: $type.Optional<Animation> = this.rangeChangeAnimation;\r\n\t\t\t\tif (rangeChangeAnimation && rangeChangeAnimation.progress < 1) {\r\n\t\t\t\t\tlet options = rangeChangeAnimation.animationOptions;\r\n\t\t\t\t\tif (options.length > 1) {\r\n\t\t\t\t\t\tif (options[0].to == start && options[1].to == end) {\r\n\t\t\t\t\t\t\treturn { start: start, end: end };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (!rangeChangeAnimation.isDisposed()) {\r\n\t\t\t\t\t\t\t\trangeChangeAnimation.stop();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.rangeChangeAnimation) {\r\n\t\t\t\t\tthis.rangeChangeAnimation.kill();\r\n\t\t\t\t}\r\n\r\n\t\t\t\trangeChangeAnimation = this.animate([{ property: \"start\", to: start }, { property: \"end\", to: end }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n\t\t\t\tthis.rangeChangeAnimation = rangeChangeAnimation;\r\n\r\n\t\t\t\tif (rangeChangeAnimation && !rangeChangeAnimation.isFinished()) {\r\n\t\t\t\t\trangeChangeAnimation.events.on(\"animationended\", () => {\r\n\t\t\t\t\t\tthis.dispatchImmediately(\"rangechangeended\");\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.dispatchImmediately(\"rangechangeended\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.start = start;\r\n\t\t\t\tthis.end = end;\r\n\t\t\t\tthis.dispatch(\"rangechangeended\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { start: start, end: end };\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to specific data items using their index in data.\r\n\t *\r\n\t * This method will not have any effect when called on a chart object.\r\n\t * Since the chart can have a number of axes and series, each with its own\r\n\t * data, the meaning of \"index\" is very ambiguous.\r\n\t *\r\n\t * To zoom the chart use `zoom*` methods on its respective axes.\r\n\t *\r\n\t * @param startIndex     Index of the starting data item\r\n\t * @param endIndex       Index of the ending data item\r\n\t * @param skipRangeEvent Should rangechanged event not be triggered?\r\n\t * @param instantly      Do not animate?\r\n\t */\r\n\tpublic zoomToIndexes(startIndex: number, endIndex: number, skipRangeEvent?: boolean, instantly?: boolean) {\r\n\t\tif (!$type.isNumber(startIndex) || !$type.isNumber(endIndex)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet start: number = startIndex / this.dataItems.length;\r\n\t\tlet end: number = endIndex / this.dataItems.length;\r\n\r\n\t\tthis.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n\t}\r\n\r\n\t/**\r\n\t * A current zoom factor (0-1). 1 meaning fully zoomed out. (showing all of\r\n\t * the available data)\r\n\t *\r\n\t * @return Zoom factor\r\n\t */\r\n\tpublic get zoomFactor(): number {\r\n\t\treturn $math.fitToRange(1 / (this.end - this.start), 1, this.maxZoomFactor);\r\n\t}\r\n\r\n\t/**\r\n\t * Max available `zoomFactor`.\r\n\t *\r\n\t * The element will not allow zoom to occur beyond this factor.\r\n\t *\r\n\t * [[DateAxis]] and [[CategoryAxis]] calculate this atutomatically so that\r\n\t * category axis could be zoomed to one category and date axis allows to be\r\n\t * zoomed up to one base interval.\r\n\t *\r\n\t * In case you want to restrict category or date axis to be zoomed to more\r\n\t * than one category or more than one base interval, use `minZoomCount`\r\n\t * property (set it to `> 1`).\r\n\t *\r\n\t * Default value of [[ValueAxis]]'s `maxZoomFactor` is `1000`.\r\n\t *\r\n\t * Feel free to modify it to allow bigger zoom or to restrict zooming.\r\n\t *\r\n\t * @param value  Maximum zoomFactor\r\n\t */\r\n\tpublic set maxZoomFactor(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxZoomFactor\", value)) {\r\n\t\t\tif (value == 1) {\r\n\t\t\t\tthis.maxZoomDeclination = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum zoomFactor\r\n\t */\r\n\tpublic get maxZoomFactor(): number {\r\n\t\treturn this.getPropertyValue(\"maxZoomFactor\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Max zoom declination.\r\n\t *\r\n\t * @ignore\r\n\t * @default 1\r\n\t * @param value  Maximum zoom declination\r\n\t */\r\n\tpublic set maxZoomDeclination(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxZoomDeclination\", value)) {\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Maximum zoom declination\r\n\t */\r\n\tpublic get maxZoomDeclination(): number {\r\n\t\treturn this.getPropertyValue(\"maxZoomDeclination\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current starting index.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Start index\r\n\t */\r\n\tpublic set startIndex(value: number) {\r\n\t\tthis._startIndex = $math.fitToRange(Math.round(value), 0, this.dataItems.length);\r\n\t\t//this._workingStartIndex = this._startIndex; // not good, breaks adjusted working start index of line series\r\n\t\tthis.start = this.indexToPosition(this._startIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo:review description\r\n\t * returns item's relative position by the index of the item\r\n\t * @param index\r\n\t */\r\n\tpublic indexToPosition(index: number) {\r\n\t\treturn index / this.dataItems.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Current starting index.\r\n\t *\r\n\t * @return Start index\r\n\t */\r\n\tpublic get startIndex(): number {\r\n\t\tif (!$type.isNumber(this._startIndex)) {\r\n\t\t\tthis._startIndex = 0;\r\n\t\t}\r\n\r\n\t\treturn this._startIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current ending index.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value End index\r\n\t */\r\n\tpublic set endIndex(value: number) {\r\n\t\tthis._endIndex = $math.fitToRange(Math.round(value), 0, this.dataItems.length);\r\n\t\t//this._workingEndIndex = this._endIndex; // not good, breaks adjusted workingend index of line series\r\n\t\tthis.end = this.indexToPosition(this._endIndex);\r\n\t}\r\n\r\n\t/**\r\n\t * Current ending index.\r\n\t *\r\n\t * @return End index\r\n\t */\r\n\tpublic get endIndex(): number {\r\n\t\tlet count = this.dataItems.length;\r\n\t\tif (!$type.isNumber(this._endIndex) || this._endIndex > count) {\r\n\t\t\tthis._endIndex = count;\r\n\t\t}\r\n\t\treturn this._endIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Start of the current data range (zoom).\r\n\t *\r\n\t * These are relative values from 0 (beginning) to 1 (end).\r\n\t *\r\n\t * @param value Start (0-1)\r\n\t */\r\n\tpublic set start(value: number) {\r\n\t\t// value = $math.round(value, 10); not good\r\n\r\n\t\t//if (1 / (this.end - value) > this.maxZoomFactor) {\r\n\t\t//\tvalue = this.end - 1 / this.maxZoomFactor;\r\n\t\t//}\r\n\t\tif (this._start != value) {\r\n\t\t\tthis._start = value;\r\n\t\t\tlet startIndex = Math.max(0, Math.floor(this.dataItems.length * value) || 0);\r\n\t\t\tthis._startIndex = Math.min(startIndex, this.dataItems.length);\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.dispatchImmediately(\"startchanged\");\r\n\t\t\tthis.dispatch(\"startendchanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start (0-1)\r\n\t */\r\n\tpublic get start(): number {\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._start;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"start\", this._start);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * End of the current data range (zoom).\r\n\t *\r\n\t * These are relative values from 0 (beginning) to 1 (end).\r\n\t *\r\n\t * @param value End (0-1)\r\n\t */\r\n\tpublic set end(value: number) {\r\n\t\t// value = $math.round(value, 10); // not good\r\n\r\n\t\t//if (1 / (value - this.start) > this.maxZoomFactor) {\r\n\t\t//\tvalue = 1 / this.maxZoomFactor + this.start;\r\n\t\t//}\r\n\r\n\t\tif (this._end != value) {\r\n\t\t\tthis._end = value;\r\n\t\t\tthis._endIndex = Math.min(this.dataItems.length, Math.ceil(this.dataItems.length * value) || 0);\r\n\t\t\tthis.invalidateDataRange();\r\n\t\t\tthis.invalidate();\r\n\t\t\tthis.dispatchImmediately(\"endchanged\");\r\n\t\t\tthis.dispatch(\"startendchanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End (0-1)\r\n\t */\r\n\tpublic get end(): number {\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._end;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"end\", this._end);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * [removeFromInvalids description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected removeFromInvalids(): void {\r\n\t\tsuper.removeFromInvalids();\r\n\t\tregistry.removeFromInvalidComponents(this);\r\n\t\t$array.remove(registry.invalidDataItems, this);\r\n\t\t$array.remove(registry.invalidDataRange, this);\r\n\t\t$array.remove(registry.invalidRawDatas, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of source [[DataItem]] objects currently used in the chart.\r\n\t *\r\n\t * @return List of data items\r\n\t */\r\n\tpublic get dataItems(): OrderedListTemplate<this[\"_dataItem\"]> {\r\n\t\tif (this._currentDataSetId != \"\") {\r\n\t\t\tlet dataItems = this.dataSets.getKey(this._currentDataSetId);\r\n\t\t\tif (dataItems) {\r\n\t\t\t\treturn dataItems;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._dataItems;\r\n\t}\r\n\r\n\t/**\r\n\t * Holds data items for data sets (usually aggregated data).\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t * @return  Data sets\r\n\t */\r\n\tpublic get dataSets(): Dictionary<string, OrderedListTemplate<this[\"_dataItem\"]>> {\r\n\t\tif (!this._dataSets) {\r\n\t\t\tthis._dataSets = new Dictionary();\r\n\t\t}\r\n\t\treturn this._dataSets;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes the chart use particular data set.\r\n\t *\r\n\t * If `id` is not provided or there is no such data set, main data will be\r\n\t * used.\r\n\t *\r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t * @param  id  Data set id\r\n\t */\r\n\tpublic setDataSet(id: string): boolean {\r\n\r\n\t\tif (this._currentDataSetId != id) {\r\n\t\t\tlet dataSet = this.dataSets.getKey(id);\r\n\t\t\tif (!dataSet) {\r\n\t\t\t\tif (this._currentDataSetId != \"\") {\r\n\t\t\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tthis._currentDataSetId = \"\";\r\n\r\n\t\t\t\t\tthis.invalidateDataRange();\r\n\r\n\t\t\t\t\tthis._prevStartIndex = undefined;\r\n\r\n\t\t\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\t\tdataItem.__disabled = true;\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis._currentDataSetId = id;\r\n\r\n\t\t\t\tthis.invalidateDataRange();\r\n\r\n\t\t\t\tthis._prevStartIndex = undefined;\r\n\r\n\t\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\t\tdataItem.__disabled = false;\r\n\t\t\t\t})\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\t/**\r\n\t * Returns id of the currently used data set, or `undefined` if main data set\r\n\t * is in use.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @return Current data set id\r\n\t */\r\n\tpublic get currentDataSetId(): string {\r\n\t\treturn this._currentDataSetId;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns reference to \"main\" data set (unaggregated data as it was supplied\r\n\t * in `data`).\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @return Main data set\r\n\t */\r\n\tpublic get mainDataSet(): OrderedListTemplate<this[\"_dataItem\"]> {\r\n\t\treturn this._dataItems;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the indexes for the dataItems\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _updateDataItemIndexes(startIndex: number): void {\r\n\t\tconst dataItems = this.mainDataSet.values;\r\n\t\tconst length = dataItems.length;\r\n\r\n\t\tfor (let i = startIndex; i < length; ++i) {\r\n\t\t\tdataItems[i]._index = i;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes newly added [[DataItem]] as well as triggers data re-validation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event [description]\r\n\t */\r\n\tprotected handleDataItemAdded(event: ISortedListEvents<DataItem>[\"inserted\"]) {\r\n\t\tevent.newValue.component = this;\r\n\r\n\t\tthis._updateDataItemIndexes(event.index);\r\n\r\n\t\tif (!this.dataItemsInvalid) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * removes [[DataItem]] as well as triggers data re-validation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event [description]\r\n\t */\r\n\tprotected handleDataItemRemoved(event: ISortedListEvents<DataItem>[\"removed\"]) {\r\n\t\t//\t\tevent.oldValue.component = undefined; // not good, as some items might be not removed from component lists\r\n\r\n\t\tthis._updateDataItemIndexes(event.index);\r\n\r\n\t\tif (!this.dataItemsInvalid) {\r\n\t\t\tthis.invalidateDataItems();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Binds a data element's field to a specific field in raw data.\r\n\t * For example, for the very basic column chart you'd want to bind a `value`\r\n\t * field to a field in data, such as `price`.\r\n\t *\r\n\t * Some more advanced Components, like [[CandlestickSeries]] need several\r\n\t * data fields bound to data, such as ones for open, high, low and close\r\n\t * values.\r\n\t *\r\n\t * @todo Example\r\n\t * @param field  Field name\r\n\t * @param value  Field name in data\r\n\t */\r\n\tpublic bindDataField<Key extends keyof this[\"_dataFields\"]>(field: Key, value: this[\"_dataFields\"][Key]) {\r\n\t\tthis.dataFields[field] = value;\r\n\t\tthis.invalidateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates processed data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateProcessedData(): void {\r\n\t\tthis.resetProcessedRange();\r\n\t\tthis.invalidateDataRange();\r\n\t}\r\n\r\n\t/**\r\n\t * [resetProcessedRange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic resetProcessedRange(): void {\r\n\t\tthis._prevEndIndex = null;\r\n\t\tthis._prevStartIndex = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all other [[Component]] objects that are using this element's\r\n\t * data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (review)\r\n\t * @return [description]\r\n\t */\r\n\tpublic get dataUsers(): List<Component> {\r\n\t\tif (!this._dataUsers) {\r\n\t\t\tthis._dataUsers = new List<Component>();\r\n\r\n\t\t\t//this._disposers.push(new ListDisposer(this._dataUsers));\r\n\r\n\t\t\t// TODO better way of handling this? e.g. move into another module ?\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\t// TODO clear the list ?\r\n\t\t\t\t$iter.each(this._dataUsers.iterator(), (x) => {\r\n\t\t\t\t\tx.dispose();\r\n\t\t\t\t});\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn this._dataUsers;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a clone of this element.\r\n\t *\r\n\t * @return Clone\r\n\t */\r\n\tpublic clone(): this {\r\n\t\tlet component: this = super.clone();\r\n\t\tcomponent.dataFields = $utils.copyProperties(this.dataFields, {});\r\n\t\treturn component;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Component]].\r\n\t *\r\n\t * @param source Source Component\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.data = source.data;\r\n\t\tthis.sequencedInterpolation = source.sequencedInterpolation;\r\n\t\tthis.sequencedInterpolationDelay = source.sequencedInterpolationDelay;\r\n\t\tthis.interpolationDuration = source.interpolationDuration;\r\n\t\tthis.interpolationEasing = source.interpolationEasing;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the whole element, including all its children, causing\r\n\t * complete re-parsing of data and redraw.\r\n\t *\r\n\t * Use sparingly!\r\n\t */\r\n\tpublic reinit(): void {\r\n\t\tthis._inited = false;\r\n\t\tthis.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Add an adapter for data.\r\n\t *\r\n\t * @return Exporting\r\n\t */\r\n\tprotected getExporting(): Export {\r\n\t\tconst _export = super.getExporting();\r\n\t\tif (!_export.adapter.has(\"data\", this._exportData, -1, this)) {\r\n\t\t\t_export.adapter.add(\"data\", this._exportData, -1, this);\r\n\t\t\tthis.events.on(\"datavalidated\", (ev) => {\r\n\t\t\t\t_export.handleDataUpdated();\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn _export;\r\n\t}\r\n\r\n\tprivate _exportData(arg: IExportAdapters[\"data\"]): IExportAdapters[\"data\"] {\r\n\t\targ.data = this.data;\r\n\t\treturn arg;\r\n\t}\r\n\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif (changed) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setShowOnInit(value: boolean) {\r\n\t\tif (value != this.getPropertyValue(\"showOnInit\")) {\r\n\t\t\tif (value && !this.inited && !this.hidden) {\r\n\t\t\t\tthis._showOnInitDisposer2 = this.events.once(\"dataitemsvalidated\", this.hideInitially, this, false);\r\n\t\t\t\tthis._disposers.push(this._showOnInitDisposer2);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._showOnInitDisposer2) {\r\n\t\t\t\t\tthis.removeDispose(this._showOnInitDisposer2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// important order here\r\n\t\tsuper.setShowOnInit(value);\r\n\t}\r\n\r\n\tprotected setBaseId(value: string) {\r\n\t\tif (value != this._baseId) {\r\n\t\t\tif (this.dataInvalid) {\r\n\t\t\t\tthis.dataInvalid = false;\r\n\t\t\t\tregistry.removeFromInvalidComponents(this);\r\n\t\t\t\tthis._baseId = value;\r\n\t\t\t\tthis.invalidateData();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper.setBaseId(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Use this for [[CategoryAxis]] or [[DateAxis]].\r\n\t *\r\n\t * Allows restricting zoom in beyond certain number of categories or base\r\n\t * intervals.\r\n\t *\r\n\t * @default 1\r\n\t * @param value  Min zoom count\r\n\t */\r\n\tpublic set minZoomCount(value: number) {\r\n\t\tthis.setPropertyValue(\"minZoomCount\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Min zoom count\r\n\t */\r\n\tpublic get minZoomCount(): number {\r\n\t\treturn this.getPropertyValue(\"minZoomCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Use this for [[CategoryAxis]] or [[DateAxis]].\r\n\t *\r\n\t * Limits how many categories or base intervals can be shown at the same\r\n\t * time.\r\n\t *\r\n\t * If there are more items in the chart, the chart will auto-zoom.\r\n\t *\r\n\t * @default 0 (no limit)\r\n\t * @since 4.6.2\r\n\t * @param value  Max zoom count\r\n\t */\r\n\tpublic set maxZoomCount(value: number) {\r\n\t\tthis.setPropertyValue(\"maxZoomCount\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max zoom count\r\n\t */\r\n\tpublic get maxZoomCount(): number {\r\n\t\treturn this.getPropertyValue(\"maxZoomCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Called during the System.update method\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _systemCheckIfValidate(): boolean {\r\n\t\tif (this.dataInvalid || (this.dataProvider && this.dataProvider.dataInvalid)) {\r\n\t\t\treturn false;\r\n\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds easing functions to \"function\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn field == \"interpolationEasing\" || field == \"rangeChangeEasing\" || super.asIs(field);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Component\"] = Component;\r\n","/**\r\n * CSV parser.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DataParser, IDataParserOptions } from \"./DataParser\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $array from \"../utils/Array\";\r\n\r\n/**\r\n * Defines options for CSV format parser\r\n */\r\nexport interface ICSVOptions extends IDataParserOptions {\r\n\r\n\t/**\r\n\t * A delimiter character for columns.\r\n\t *\r\n\t * @default ','\r\n\t */\r\n\tdelimiter?: string;\r\n\r\n\t/**\r\n\t * The data is in reverse order.\r\n\t *\r\n\t * If iset to `true`, parser will invert the order of the data items before\r\n\t * passing back the data.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\treverse?: boolean;\r\n\r\n\t/**\r\n\t * Skip a number of rows from the beginning of the data.\r\n\t *\r\n\t * Useful if your data contains non-data headers, such as column names or\r\n\t * empty rows.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tskipRows?: number;\r\n\r\n\t/**\r\n\t * Skip empty rows.\r\n\t *\r\n\t * If set to `false`, parser will generate empty data points for empty rows\r\n\t * in data.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tskipEmpty?: boolean;\r\n\r\n\t/**\r\n\t * Use the first row in data to generte column names.\r\n\t *\r\n\t * Normally, parser will name each column `col0`, `col1`, etc.\r\n\t *\r\n\t * Setting this to `true` will make the parser look at the first row, for\r\n\t * actual column names.\r\n\t *\r\n\t * Please note that if you use it with `skipRows`, the specified number of\r\n\t * rows will be removed, then the parser will look for column names in the\r\n\t * first row of what's left.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * A list of fields that should be treaded as numeric.\r\n\t *\r\n\t * Any information container in such fields will be converted to `number`.\r\n\t */\r\n\tnumberFields?: string[];\r\n\r\n\t/**\r\n\t * A list of fields that hold date/time infromation.\r\n\t *\r\n\t * Parser will try to convert such fields into `Date` objects.\r\n\t */\r\n\tdateFields?: string[];\r\n\r\n\t/**\r\n\t * A date formatted to be used when parsing dates.\r\n\t */\r\n\tdateFormatter?: DateFormatter;\r\n}\r\n\r\n/**\r\n * Define possible separators.\r\n */\r\nlet separators = [\",\", \";\", \"\\t\"];\r\n\r\n/**\r\n * A parser for CSV format.\r\n *\r\n * @important\r\n */\r\nexport class CSVParser extends DataParser {\r\n\r\n\t/**\r\n\t * Tests if the format is CSV.\r\n\t *\r\n\t * @param data  Source data\r\n\t * @return Is it CSV?\r\n\t */\r\n\tstatic isCSV(data: string): boolean {\r\n\t\treturn CSVParser.getDelimiterFromData(data) ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to determine a column separator.\r\n\t *\r\n\t * @param data  Source data\r\n\t * @return Separator\r\n\t */\r\n\tstatic getDelimiterFromData(data: string): string {\r\n\r\n\t\t// We're going to take first few lines of the CSV with different\r\n\t\t// possible separators and check if it results in same number of columns.\r\n\t\t// If it does, we're going to assume it's a CSV\r\n\t\tlet lines = data.split(\"\\n\");\r\n\t\tlet len = lines.length;\r\n\t\tlet separator: string;\r\n\r\n\t\t$array.each(separators, (sep) => {\r\n\t\t\tlet columns = 0,\r\n\t\t\t\tlineColums = 0;\r\n\r\n\t\t\t// TODO replace with iterators\r\n\t\t\tfor (let i = 0; i < len; ++i) {\r\n\r\n\t\t\t\t// Get number of columns in a line\r\n\t\t\t\tcolumns = lines[i].split(sep).length;\r\n\r\n\t\t\t\tif (columns > 1) {\r\n\r\n\t\t\t\t\t// More than one column - possible candidate\r\n\t\t\t\t\tif (lineColums === 0) {\r\n\t\t\t\t\t\t// First line\r\n\t\t\t\t\t\tlineColums = columns;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (columns != lineColums) {\r\n\t\t\t\t\t\t// Incorrect number of columns, give up on this separator\r\n\t\t\t\t\t\tlineColums = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// Not this separator\r\n\t\t\t\t\t// Not point in continuing\r\n\t\t\t\t\tlineColums = 0;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Check if we have a winner\r\n\t\t\tif (lineColums) {\r\n\t\t\t\tseparator = sep;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn separator;\r\n\t}\r\n\r\n\t/**\r\n\t * Content-type suitable for CSV format.\r\n\t */\r\n\tpublic contentType: string = \"text/csv\";\r\n\r\n\t/**\r\n\t * Parser options.\r\n\t *\r\n\t * @see {@link ICSVOptions} for description of each option\r\n\t */\r\n\tpublic options: ICSVOptions = {\r\n\t\tdelimiter: \"\",\r\n\t\treverse: false,\r\n\t\tskipRows: 0,\r\n\t\tskipEmpty: true,\r\n\t\tuseColumnNames: false\r\n\t};\r\n\r\n\t/**\r\n\t * Parses and returns data.\r\n\t *\r\n\t * @param data  Unparsed data\r\n\t * @return Parsed data\r\n\t */\r\n\tpublic parse(csv: string): any[] {\r\n\r\n\t\t// Check if we have delimiter set\r\n\t\tif (!this.options.delimiter) {\r\n\t\t\tthis.options.delimiter = CSVParser.getDelimiterFromData(csv);\r\n\t\t}\r\n\r\n\t\t// Get CSV data as array\r\n\t\tlet data = this.CSVToArray(csv, this.options.delimiter);\r\n\r\n\t\t// Do we need to cast some fields to numbers?\r\n\t\tlet empty = $type.hasValue(this.options.emptyAs);\r\n\t\tlet numbers = this.parsableNumbers;\r\n\t\tlet dates = this.parsableDates;\r\n\r\n\t\t// Init resuling array\r\n\t\tlet res: any[] = [],\r\n\t\t\tcols: string[] = [],\r\n\t\t\tcol: string,\r\n\t\t\ti: number;\r\n\r\n\t\t// Skip rows\r\n\t\tfor (i = 0; i < this.options.skipRows; i++) {\r\n\t\t\tdata.shift();\r\n\t\t}\r\n\r\n\t\t// First row holds column names?\r\n\t\tif (this.options.useColumnNames) {\r\n\t\t\tcols = data.shift();\r\n\r\n\t\t\t// Normalize column names\r\n\t\t\tfor (let x = 0; x < cols.length; x++) {\r\n\t\t\t\t// trim\r\n\t\t\t\tcol = $type.hasValue(cols[x]) ? cols[x].replace(/^\\s+|\\s+$/gm, \"\") : \"\";\r\n\r\n\t\t\t\t// Check for empty\r\n\t\t\t\tif (\"\" === col) {\r\n\t\t\t\t\tcol = \"col\" + x;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcols[x] = col;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Iterate through the result set\r\n\t\tlet row;\r\n\t\twhile (true) {\r\n\t\t\trow = this.options.reverse ? data.pop() : data.shift();\r\n\r\n\t\t\tif (!row) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.skipEmpty && row.length === 1 && row[0] === \"\") {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tlet dataPoint: any = {};\r\n\t\t\tfor (i = 0; i < row.length; i++) {\r\n\t\t\t\tcol = undefined === cols[i] ? \"col\" + i : cols[i];\r\n\t\t\t\tdataPoint[col] = row[i] === \"\" ? this.options.emptyAs : row[i];\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tif (empty) {\r\n\t\t\t\t\tdataPoint[col] = this.maybeToEmpty(dataPoint[col]);\r\n\t\t\t\t}\r\n\t\t\t\tif (numbers) {\r\n\t\t\t\t\tdataPoint[col] = this.maybeToNumber(col, dataPoint[col]);\r\n\t\t\t\t}\r\n\t\t\t\tif (dates) {\r\n\t\t\t\t\tdataPoint[col] = this.maybeToDate(col, dataPoint[col]);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tres.push(dataPoint);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n \t * Converts CSV into array.\r\n \t *\r\n \t * The functionality of this function is taken from here:\r\n \t * http://www.bennadel.com/blog/1504-ask-ben-parsing-csv-strings-with-javascript-exec-regular-expression-command.htm\r\n \t *\r\n \t * @param data       Source data\r\n \t * @param delimiter  Column delimiter\r\n \t * @return Parsed array\r\n \t */\r\n\tpublic CSVToArray(data: string, delimiter: string): any[] {\r\n\r\n\t\t// Check to see if the delimiter is defined. If not,\r\n\t\t// then default to comma.\r\n\t\tdelimiter = (delimiter || ',');\r\n\r\n\t\t// Create a regular expression to parse the CSV values.\r\n\t\tlet objPattern = new RegExp(\r\n\t\t\t(\r\n\t\t\t\t// Delimiters.\r\n\t\t\t\t\"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\r\n\r\n\t\t\t\t// Quoted fields.\r\n\t\t\t\t\"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\r\n\r\n\t\t\t\t// Standard fields.\r\n\t\t\t\t\"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\"\r\n\t\t\t),\r\n\t\t\t\"gi\"\r\n\t\t);\r\n\r\n\r\n\t\t// Create an array to hold our data. Give the array\r\n\t\t// a default empty first row.\r\n\t\tlet arrData: any[] = [\r\n\t\t\t[]\r\n\t\t];\r\n\r\n\t\t// Create an array to hold our individual pattern\r\n\t\t// matching groups.\r\n\t\tlet arrMatches = null;\r\n\r\n\t\t// Keep looping over the regular expression matches\r\n\t\t// until we can no longer find a match.\r\n\t\twhile (true) {\r\n\t\t\tarrMatches = objPattern.exec(data);\r\n\r\n\t\t\tif (!arrMatches) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Get the delimiter that was found.\r\n\t\t\tlet strMatchedDelimiter = arrMatches[1];\r\n\r\n\t\t\t// Check to see if the given delimiter has a length\r\n\t\t\t// (is not the start of string) and if it matches\r\n\t\t\t// field delimiter. If id does not, then we know\r\n\t\t\t// that this delimiter is a row delimiter.\r\n\t\t\tif (\r\n\t\t\t\tstrMatchedDelimiter.length &&\r\n\t\t\t\t(strMatchedDelimiter !== delimiter)\r\n\t\t\t) {\r\n\r\n\t\t\t\t// Since we have reached a new row of data,\r\n\t\t\t\t// add an empty row to our data array.\r\n\t\t\t\tarrData.push([]);\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Now that we have our delimiter out of the way,\r\n\t\t\t// let's check to see which kind of value we\r\n\t\t\t// captured (quoted or unquoted).\r\n\t\t\tlet strMatchedValue;\r\n\t\t\tif (arrMatches[2]) {\r\n\r\n\t\t\t\t// We found a quoted value. When we capture\r\n\t\t\t\t// this value, unescape any double quotes.\r\n\t\t\t\tstrMatchedValue = arrMatches[2].replace(\r\n\t\t\t\t\tnew RegExp(\"\\\"\\\"\", \"g\"),\r\n\t\t\t\t\t\"\\\"\"\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// We found a non-quoted value.\r\n\t\t\t\tstrMatchedValue = arrMatches[3];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Now that we have our value string, let's add\r\n\t\t\t// it to the data array.\r\n\t\t\tarrData[arrData.length - 1].push(strMatchedValue);\r\n\t\t}\r\n\r\n\t\t// Return the parsed data.\r\n\t\treturn (arrData);\r\n\t}\r\n\r\n}\r\n","/**\r\n * Number formatting-related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { ITextChunk, getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $math from \"../utils/Math\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport interface INumberSuffix {\r\n\tnumber: number;\r\n\tsuffix: string;\r\n}\r\n\r\n/**\r\n * NumberFormatter class. Formats numbers according to specified formats.\r\n *\r\n * @todo Apply translations to suffixes/prefixes\r\n */\r\nexport class NumberFormatter extends BaseObject {\r\n\r\n\t/**\r\n\t * A base value for negative numbers. Will treat all numbers below this value\r\n\t * as negative numbers.\r\n\t */\r\n\tprotected _negativeBase: number = 0;\r\n\r\n\t/**\r\n\t * Holds number format.\r\n\t *\r\n\t * @default #,###.#####\r\n\t */\r\n\tprotected _numberFormat: string | Intl.NumberFormatOptions = \"#,###.#####\";\r\n\r\n\t/**\r\n\t * Locales to use when formatting using Intl.NumberFormatter\r\n\t */\r\n\tprotected _intlLocales: string;\r\n\r\n\t/**\r\n\t * Output format to produce. If the format calls for applying color to the\r\n\t * formatted value, this setting will determine what markup to use: SVG or\r\n\t * HTML.\r\n\t *\r\n\t * Available options: svg, html.\r\n\t *\r\n\t * @default \"svg\"\r\n\t */\r\n\tprotected _outputFormat: string = \"svg\";\r\n\r\n\t/**\r\n\t * Holds big number prefixes to apply to numbers if `a` modifier is used in\r\n\t * format.\r\n\t */\r\n\tprotected _bigNumberPrefixes: INumberSuffix[];\r\n\r\n\t/**\r\n\t * Holds small number prefixes to apply to numbers if `a` modifier is used in\r\n\t * format.\r\n\t */\r\n\tprotected _smallNumberPrefixes: INumberSuffix[];\r\n\r\n\t/**\r\n\t * Any number smaller than this will be considered \"small\" number, which will\r\n\t * trigger special formatting if \"a\" format modifier is used.\r\n\t */\r\n\tprotected _smallNumberThreshold: number = 1.00;\r\n\r\n\t/**\r\n\t * Holds prefixes to apply to data size numbers if `b` modifier is used in\r\n\t * format.\r\n\t */\r\n\tprotected _bytePrefixes: INumberSuffix[];\r\n\r\n\tprotected _forceLTR: boolean = false;\r\n\r\n\t/**\r\n\t * Holds reference to parent [[Sprite]] object.\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Language]] object.\r\n\t */\r\n\tprivate _language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"NumberFormatter\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this.language) {\r\n\t\t\tthis.language.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to [[Language]] instance.\r\n\t *\r\n\t * Formatter will use language to translate various items, like number\r\n\t * suffixes, etc.\r\n\t *\r\n\t * @param value  Language\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Language\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tif (!this._language) {\r\n\t\t\tif (this.sprite) {\r\n\t\t\t\tthis._language = this.sprite.language;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._language = new Language;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._language;\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the number according to specific format.\r\n\t *\r\n\t * @param value   Value to format\r\n\t * @param format  Format to apply\r\n\t * @return Formatted number\r\n\t */\r\n\tpublic format(value: number | string, format?: string | Intl.NumberFormatOptions, precision?: number): string {\r\n\r\n\t\t// no format passed in or \"Number\"\r\n\t\tif (typeof format === \"undefined\" || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n\t\t\tformat = this._numberFormat;\r\n\t\t}\r\n\r\n\t\t// Init return value\r\n\t\tlet formatted;\r\n\r\n\t\t// Cast to number just in case\r\n\t\t// TODO: maybe use better casting\r\n\t\tlet source: number = Number(value);\r\n\r\n\t\t// Is it a built-in format or Intl.NumberFormatOptions\r\n\t\tif ($type.isObject(format)) {\r\n\t\t\ttry {\r\n\t\t\t\tif (this.intlLocales) {\r\n\t\t\t\t\treturn new Intl.NumberFormat(this.intlLocales, <Intl.NumberFormatOptions>format).format(source);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn new Intl.NumberFormat(undefined, <Intl.NumberFormatOptions>format).format(source);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\treturn \"Invalid\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Clean format\r\n\t\t\tformat = $utils.cleanFormat(format);\r\n\r\n\t\t\t// Get format info (it will also deal with parser caching)\r\n\t\t\tlet info = this.parseFormat(format, this.language);\r\n\r\n\r\n\t\t\t// format and replace the number\r\n\t\t\tlet details;\r\n\t\t\tif (source > this._negativeBase) {\r\n\t\t\t\tdetails = info.positive;\r\n\t\t\t}\r\n\t\t\telse if (source < this._negativeBase) {\r\n\t\t\t\tdetails = info.negative;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdetails = info.zero;\r\n\t\t\t}\r\n\r\n\t\t\t// Adjust precision\r\n\t\t\tif ($type.hasValue(precision) && !details.mod) {\r\n\t\t\t\tdetails = $object.clone(details);\r\n\t\t\t\tdetails.decimals.active = source == 0 ? 0: precision;\r\n\t\t\t}\r\n\r\n\t\t\t// Format\r\n\t\t\tformatted = details.template.split($strings.PLACEHOLDER).join(this.applyFormat(source, details));\r\n\r\n\t\t}\r\n\r\n\t\tif (this.forceLTR) {\r\n\t\t\tformatted = \"‎\" + formatted;\r\n\t\t}\r\n\r\n\t\treturn formatted;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses supplied format into structured object which can be used to format\r\n\t * the number.\r\n\t *\r\n\t * @param format Format string, i.e. \"#,###.00\"\r\n\t * @param language Language\r\n\t */\r\n\tprotected parseFormat(format: string, language: Language): any {\r\n\r\n\t\t// Check cache\r\n\t\tlet cached = this.getCache(format);\r\n\t\tif ($type.hasValue(cached)) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\r\n\t\t// init format parse info holder\r\n\t\tlet info: any = {\r\n\t\t\t\"positive\": {\r\n\t\t\t\t\"thousands\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"interval\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_thousandSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"decimals\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_decimalSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"parsed\": false\r\n\t\t\t},\r\n\t\t\t\"negative\": {\r\n\t\t\t\t\"thousands\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"interval\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_thousandSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"decimals\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_decimalSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"parsed\": false\r\n\t\t\t},\r\n\t\t\t\"zero\": {\r\n\t\t\t\t\"thousands\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"interval\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_thousandSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"decimals\": {\r\n\t\t\t\t\t\"active\": -1,\r\n\t\t\t\t\t\"passive\": -1,\r\n\t\t\t\t\t\"separator\": language.translateEmpty(\"_decimalSeparator\")\r\n\t\t\t\t},\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"parsed\": false\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Escape double vertical bars (that mean display one vertical bar)\r\n\t\tformat = format.replace(\"||\", $strings.PLACEHOLDER2);\r\n\r\n\t\t// Split it up and deal with different formats\r\n\t\tlet parts = format.split(\"|\");\r\n\t\tinfo.positive.source = parts[0];\r\n\r\n\t\tif (typeof parts[2] === \"undefined\") {\r\n\t\t\tinfo.zero = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.zero.source = parts[2];\r\n\t\t}\r\n\r\n\t\tif (typeof parts[1] === \"undefined\") {\r\n\t\t\tinfo.negative = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.negative.source = parts[1];\r\n\t\t}\r\n\r\n\t\t// Parse each\r\n\t\t$object.each(info, (part, item) => {\r\n\t\t\t// Already parsed\r\n\t\t\tif (item.parsed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check cached\r\n\t\t\tif (typeof this.getCache(item.source) !== \"undefined\") {\r\n\t\t\t\tinfo[part] = this.getCache(item.source);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Begin parsing\r\n\t\t\tlet partFormat: string = item.source;\r\n\r\n\t\t\t// Just \"Number\"?\r\n\t\t\tif (partFormat.toLowerCase() === \"number\") {\r\n\t\t\t\tpartFormat = $type.isString(this._numberFormat) ? this._numberFormat : \"#,###.#####\";\r\n\t\t\t}\r\n\r\n\t\t\t// Let TextFormatter split into chunks\r\n\t\t\tlet chunks: ITextChunk[] = getTextFormatter().chunk(partFormat, true);\r\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\t\tlet chunk: ITextChunk = chunks[i];\r\n\r\n\t\t\t\t// replace back double vertical bar\r\n\t\t\t\tchunk.text = chunk.text.replace($strings.PLACEHOLDER2, \"|\");\r\n\r\n\t\t\t\tif (chunk.type === \"value\") {\r\n\t\t\t\t\t// Parse format\r\n\r\n\t\t\t\t\t// Look for codes\r\n\t\t\t\t\tlet matches: string[] | null = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\r\n\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\tif (matches === null || matches[0] === \"\") {\r\n\t\t\t\t\t\t\t// no codes here - assume string\r\n\t\t\t\t\t\t\t// nothing to do here\r\n\t\t\t\t\t\t\titem.template += chunk.text;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t// look for the format modifiers at the end\r\n\t\t\t\t\t\t\tlet mods: string[] | null = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\r\n\r\n\t\t\t\t\t\t\tif (mods) {\r\n\t\t\t\t\t\t\t\titem.mod = mods[0].toLowerCase();\r\n\t\t\t\t\t\t\t\titem.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// break the format up\r\n\t\t\t\t\t\t\tlet a = matches[0].split(\".\");\r\n\r\n\t\t\t\t\t\t\t// Deal with thousands\r\n\t\t\t\t\t\t\tif (a[0] === \"\") {\r\n\t\t\t\t\t\t\t\t// No directives for thousands\r\n\t\t\t\t\t\t\t\t// Leave default settings (no formatting)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t// Counts\r\n\t\t\t\t\t\t\t\titem.thousands.active = (a[0].match(/0/g) || []).length;\r\n\t\t\t\t\t\t\t\titem.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n\r\n\t\t\t\t\t\t\t\t// Separator interval\r\n\t\t\t\t\t\t\t\tlet b = a[0].split(\",\");\r\n\t\t\t\t\t\t\t\tif (b.length === 1) {\r\n\t\t\t\t\t\t\t\t\t// No thousands separators\r\n\t\t\t\t\t\t\t\t\t// Do nothing\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// Use length fo the last chunk as thousands length\r\n\t\t\t\t\t\t\t\t\titem.thousands.interval = $type.getValue(b.pop()).length;\r\n\r\n\t\t\t\t\t\t\t\t\tif (item.thousands.interval === 0) {\r\n\t\t\t\t\t\t\t\t\t\titem.thousands.interval = -1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Deal with decimals\r\n\t\t\t\t\t\t\tif (typeof (a[1]) === \"undefined\") {\r\n\t\t\t\t\t\t\t\t// No directives for decimals\r\n\t\t\t\t\t\t\t\t// Leave at defaults (no formatting)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t// Counts\r\n\t\t\t\t\t\t\t\titem.decimals.active = (a[1].match(/0/g) || []).length;\r\n\t\t\t\t\t\t\t\titem.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Add special code to template\r\n\t\t\t\t\t\t\titem.template += chunk.text.split(matches[0]).join($strings.PLACEHOLDER);\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Quoted string - take it as it is\r\n\t\t\t\t\titem.template += chunk.text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Apply style formatting\r\n\t\t\t//item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n\r\n\t\t\t// Save cache\r\n\t\t\tthis.setCache(item.source, item);\r\n\r\n\t\t\t// Mark this as parsed\r\n\t\t\titem.parsed = true;\r\n\r\n\t\t});\r\n\r\n\t\t// Save cache (the whole thing)\r\n\t\tthis.setCache(format, info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies parsed format to a numeric value.\r\n\t *\r\n\t * @param value    Value\r\n\t * @param details  Parsed format as returned by parseFormat()\r\n\t * @return Formatted number\r\n\t */\r\n\tprotected applyFormat(value: number, details: any): string {\r\n\r\n\t\t// Use absolute values\r\n\t\tlet negative: boolean = value < 0;\r\n\t\tvalue = Math.abs(value);\r\n\r\n\t\t// Recalculate according to modifier\r\n\t\tlet prefix: string = \"\", suffix: string = \"\";\r\n\t\tlet mods: string[] = details.mod ? details.mod.split(\"\") : [];\r\n\t\tif (mods.indexOf(\"b\") !== -1) {\r\n\t\t\tlet a = this.applyPrefix(value, this.bytePrefixes, mods.indexOf(\"!\") !== -1);\r\n\t\t\tvalue = a[0];\r\n\t\t\tprefix = a[1];\r\n\t\t\tsuffix = a[2];\r\n\t\t\tif (details.modSpacing) {\r\n\t\t\t\tsuffix = \" \" + suffix;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (mods.indexOf(\"a\") !== -1) {\r\n\t\t\tlet a = this.applyPrefix(value, value < this.smallNumberThreshold ? this.smallNumberPrefixes : this.bigNumberPrefixes, mods.indexOf(\"!\") !== -1);\r\n\t\t\tvalue = a[0];\r\n\t\t\tprefix = a[1];\r\n\t\t\tsuffix = a[2];\r\n\t\t\tif (details.modSpacing) {\r\n\t\t\t\tsuffix = \" \" + suffix;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (mods.indexOf(\"p\") !== -1) {\r\n\t\t\tlet ol = Math.min(value.toString().length + 2, 21);\r\n\t\t\t//value *= 100;\r\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\r\n\t\t\tprefix = this.language.translate(\"_percentPrefix\") || \"\";\r\n\t\t\tsuffix = this.language.translate(\"_percentSuffix\") || \"\";\r\n\t\t\tif (prefix == \"\" && suffix == \"\") {\r\n\t\t\t\tsuffix = \"%\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (mods.indexOf(\"%\") !== -1) {\r\n\t\t\tlet ol = $math.min(value.toString().length + 2, 21);\r\n\t\t\tvalue *= 100;\r\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\r\n\t\t\tsuffix = \"%\";\r\n\t\t}\r\n\t\telse if (mods.indexOf(\"‰\") !== -1) {\r\n\t\t\tlet ol = $math.min(value.toString().length + 3, 21);\r\n\t\t\tvalue *= 1000;\r\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\r\n\t\t\tsuffix = \"‰\";\r\n\t\t}\r\n\r\n\t\t// Round to passive\r\n\t\tif (mods.indexOf(\"e\") !== -1) {\r\n\t\t\t// convert the value to exponential\r\n\t\t\tlet exp: string[];\r\n\t\t\tif (details.decimals.passive >= 0) {\r\n\t\t\t\texp = value.toExponential(details.decimals.passive).split(\"e\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\texp = value.toExponential().split(\"e\");\r\n\t\t\t}\r\n\t\t\tvalue = Number(exp[0]);\r\n\t\t\tsuffix = \"e\" + exp[1];\r\n\t\t\tif (details.modSpacing) {\r\n\t\t\t\tsuffix = \" \" + suffix;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (details.decimals.passive === 0) {\r\n\t\t\tvalue = Math.round(value);\r\n\t\t}\r\n\t\telse if (details.decimals.passive > 0) {\r\n\t\t\tlet d: number = Math.pow(10, details.decimals.passive);\r\n\t\t\tvalue = Math.round(value * d) / d;\r\n\t\t}\r\n\r\n\t\t// Init return value\r\n\t\tlet res: string = \"\";\r\n\r\n\t\t// Calc integer and decimal parts\r\n\t\tlet a = $utils.numberToString(value).split(\".\");\r\n\r\n\t\t// Format integers\r\n\t\tlet ints = a[0];\r\n\r\n\t\t// Pad integers to active length\r\n\t\tif (ints.length < details.thousands.active) {\r\n\t\t\tints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n\t\t}\r\n\r\n\t\t// Insert thousands separators\r\n\t\tif (details.thousands.interval > 0) {\r\n\t\t\tlet ip: string[] = [];\r\n\t\t\tlet intsr: string = ints.split(\"\").reverse().join(\"\");\r\n\t\t\tfor (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n\t\t\t\tlet c: string = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n\t\t\t\tif (c !== \"\") {\r\n\t\t\t\t\tip.unshift(c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tints = ip.join(details.thousands.separator);\r\n\t\t}\r\n\r\n\t\t// Add integers\r\n\t\tres += ints;\r\n\r\n\t\t// Add decimals\r\n\t\tif (a.length === 1) {\r\n\t\t\ta.push(\"\");\r\n\t\t}\r\n\t\tlet decs: string = a[1];\r\n\r\n\t\t// Fill zeros?\r\n\t\tif (decs.length < details.decimals.active) {\r\n\t\t\tdecs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n\t\t}\r\n\r\n\t\tif (decs !== \"\") {\r\n\t\t\tres += details.decimals.separator + decs;\r\n\t\t}\r\n\r\n\t\t// Can't have empty return value\r\n\t\tif (res === \"\") {\r\n\t\t\tres = \"0\";\r\n\t\t}\r\n\r\n\t\t// Add minus sign back\r\n\t\tif (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n\t\t\tres = \"-\" + res;\r\n\t\t}\r\n\r\n\t\t// Add suffixes/prefixes\r\n\t\tif (prefix) {\r\n\t\t\tres = prefix + res;\r\n\t\t}\r\n\t\tif (suffix) {\r\n\t\t\tres += suffix;\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Chooses appropriate prefix and suffix based on the passed in rules.\r\n\t *\r\n\t * @param  value     Value\r\n\t * @param  prefixes  Prefix array\r\n\t * @param  force     Force application of a first prefix (@sice 4.5.4)\r\n\t * @return Result\r\n\t */\r\n\tprotected applyPrefix(value: number, prefixes: any[], force: boolean = false): any[] {\r\n\t\tlet newvalue = value;\r\n\t\tlet prefix = \"\";\r\n\t\tlet suffix = \"\";\r\n\t\tlet applied = false;\r\n\t\tlet k = 1;\r\n\r\n\t\tfor (let i = 0, len = prefixes.length; i < len; i++) {\r\n\t\t\tif (prefixes[i].number <= value) {\r\n\t\t\t\tif (prefixes[i].number === 0) {\r\n\t\t\t\t\tnewvalue = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewvalue = value / prefixes[i].number;\r\n\t\t\t\t\tk = prefixes[i].number;\r\n\t\t\t\t}\r\n\t\t\t\tprefix = prefixes[i].prefix;\r\n\t\t\t\tsuffix = prefixes[i].suffix;\r\n\t\t\t\tapplied = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tif (!applied && force && prefixes.length && value != 0) {\r\n\t\t\t// Prefix was not applied. Use the first prefix.\r\n\t\t\tnewvalue = value / prefixes[0].number;\r\n\t\t\tprefix = prefixes[0].prefix;\r\n\t\t\tsuffix = prefixes[0].suffix;\r\n\t\t\tapplied = true;\r\n\t\t}\r\n\r\n\t\tif (applied) {\r\n\t\t\tnewvalue = parseFloat(\r\n\t\t\t\tnewvalue.toPrecision(\r\n\t\t\t\t\t$math.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn [newvalue, prefix, suffix];\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the parent [[Sprite]] object.\r\n\t */\r\n\tprotected invalidateSprite(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis.sprite.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Number format.\r\n\t *\r\n\t * @default \"#,###.#####\"\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n\t * @param format  A format to use for number formatting\r\n\t */\r\n\tpublic set numberFormat(format: string | Intl.NumberFormatOptions) {\r\n\t\tthis._numberFormat = format;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A format to use for number formatting\r\n\t */\r\n\tpublic get numberFormat(): string | Intl.NumberFormatOptions {\r\n\t\treturn this._numberFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Locales if you are using date formats in `Intl.NumberFormatOptions` syntax.\r\n\t * \r\n\t * @see (@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat) about using Intl for number formatting\r\n\t * @param value Locales\r\n\t */\r\n\tpublic set intlLocales(value: string) {\r\n\t\tthis._intlLocales = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date format\r\n\t */\r\n\tpublic get intlLocales(): string {\r\n\t\treturn this._intlLocales;\r\n\t}\r\n\r\n\t/**\r\n\t * Negative base for negative numbers.\r\n\t *\r\n\t * @default 0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n\t * @param format  A format to use for number formatting\r\n\t */\r\n\tpublic set negativeBase(value: number) {\r\n\t\tthis._negativeBase = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A format to use for number formatting\r\n\t */\r\n\tpublic get negativeBase(): number {\r\n\t\treturn this._negativeBase;\r\n\t}\r\n\r\n\t/**\r\n\t * Prefixes for big numbers.\r\n\t *\r\n\t * It's an array of objects of number/prefix pairs.\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { \"number\": 1e+3, \"suffix\": \"K\" },\r\n\t *   { \"number\": 1e+6, \"suffix\": \"M\" },\r\n\t *   { \"number\": 1e+9, \"suffix\": \"G\" },\r\n\t *   { \"number\": 1e+12, \"suffix\": \"T\" },\r\n\t *   { \"number\": 1e+15, \"suffix\": \"P\" },\r\n\t *   { \"number\": 1e+18, \"suffix\": \"E\" },\r\n\t *   { \"number\": 1e+21, \"suffix\": \"Z\" },\r\n\t *   { \"number\": 1e+24, \"suffix\": \"Y\" }\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * If the number is bigger than the `number` ir will be converted to the\r\n\t * appropriate bigger number with prefix.\r\n\t *\r\n\t * E.g. as per above `1500` will be converted to `1.5K`.\r\n\t *\r\n\t * Please note that for this transformation to be enabled, you need to\r\n\t * enable it specific modifier in your format setting.\r\n\t *\r\n\t * The modifier for big/small number modification is \"a\":\r\n\t *\r\n\t * ```Text\r\n\t * {myfield.formatNumber(\"#,###.00a\")}\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n\t * @param prefixes  Prefixes for big numbers\r\n\t */\r\n\tpublic set bigNumberPrefixes(prefixes: INumberSuffix[]) {\r\n\t\tthis._bigNumberPrefixes = prefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Prefixes for big numbers\r\n\t */\r\n\tpublic get bigNumberPrefixes(): INumberSuffix[] {\r\n\t\tif (!$type.hasValue(this._bigNumberPrefixes)) {\r\n\t\t\tthis._bigNumberPrefixes = [\r\n\t\t\t\t{ \"number\": 1e+3, \"suffix\": this.language.translate(\"_big_number_suffix_3\") },\r\n\t\t\t\t{ \"number\": 1e+6, \"suffix\": this.language.translate(\"_big_number_suffix_6\") },\r\n\t\t\t\t{ \"number\": 1e+9, \"suffix\": this.language.translate(\"_big_number_suffix_9\") },\r\n\t\t\t\t{ \"number\": 1e+12, \"suffix\": this.language.translate(\"_big_number_suffix_12\") },\r\n\t\t\t\t{ \"number\": 1e+15, \"suffix\": this.language.translate(\"_big_number_suffix_15\") },\r\n\t\t\t\t{ \"number\": 1e+18, \"suffix\": this.language.translate(\"_big_number_suffix_18\") },\r\n\t\t\t\t{ \"number\": 1e+21, \"suffix\": this.language.translate(\"_big_number_suffix_21\") },\r\n\t\t\t\t{ \"number\": 1e+24, \"suffix\": this.language.translate(\"_big_number_suffix_24\") }\r\n\t\t\t]\r\n\t\t}\r\n\t\treturn this._bigNumberPrefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * Prefixes for big numbers.\r\n\t *\r\n\t * It's an array of objects of number/prefix pairs.\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { \"number\": 1e-24, \"suffix\": \"y\" },\r\n\t *   { \"number\": 1e-21, \"suffix\": \"z\" },\r\n\t *   { \"number\": 1e-18, \"suffix\": \"a\" },\r\n\t *   { \"number\": 1e-15, \"suffix\": \"f\" },\r\n\t *   { \"number\": 1e-12, \"suffix\": \"p\" },\r\n\t *   { \"number\": 1e-9, \"suffix\": \"n\" },\r\n\t *   { \"number\": 1e-6, \"suffix\": \"μ\" },\r\n\t *   { \"number\": 1e-3, \"suffix\": \"m\" }\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * If the number is smaller than the `number` ir will be converted to the\r\n\t * appropriate smaller number with prefix.\r\n\t *\r\n\t * E.g. as per above `0.0015` will be converted to `1.5m`.\r\n\t *\r\n\t * Please note that for this transformation to be enabled, you need to\r\n\t * enable it specific modifier in your format setting.\r\n\t *\r\n\t * The modifier for big/small number modification is \"a\":\r\n\t *\r\n\t * ```Text\r\n\t * {myfield.formatNumber(\"#,###.00a\")}\r\n\t * ```\r\n\t *\r\n\t * IMPORTANT: The order of the suffixes is important. The list must start\r\n\t * from the smallest number and work towards bigger ones.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n\t * @param prefixes  Prefixes for small numbers\r\n\t */\r\n\tpublic set smallNumberPrefixes(prefixes: INumberSuffix[]) {\r\n\t\tthis._smallNumberPrefixes = prefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Prefixes for small numbers\r\n\t */\r\n\tpublic get smallNumberPrefixes(): INumberSuffix[] {\r\n\t\tif (!$type.hasValue(this._smallNumberPrefixes)) {\r\n\t\t\tthis._smallNumberPrefixes = [\r\n\t\t\t\t{ \"number\": 1e-24, \"suffix\": this.language.translate(\"_small_number_suffix_24\") },\r\n\t\t\t\t{ \"number\": 1e-21, \"suffix\": this.language.translate(\"_small_number_suffix_21\") },\r\n\t\t\t\t{ \"number\": 1e-18, \"suffix\": this.language.translate(\"_small_number_suffix_18\") },\r\n\t\t\t\t{ \"number\": 1e-15, \"suffix\": this.language.translate(\"_small_number_suffix_15\") },\r\n\t\t\t\t{ \"number\": 1e-12, \"suffix\": this.language.translate(\"_small_number_suffix_12\") },\r\n\t\t\t\t{ \"number\": 1e-9, \"suffix\": this.language.translate(\"_small_number_suffix_9\") },\r\n\t\t\t\t{ \"number\": 1e-6, \"suffix\": this.language.translate(\"_small_number_suffix_6\") },\r\n\t\t\t\t{ \"number\": 1e-3, \"suffix\": this.language.translate(\"_small_number_suffix_3\") }\r\n\t\t\t]\r\n\t\t}\r\n\t\treturn this._smallNumberPrefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * Any number smaller than this will be considered \"small\" number, which will\r\n\t * trigger special formatting if \"a\" format modifier is used.\r\n\t *\r\n\t * @since 4.6.8\r\n\t * @param  value  Small number threshold\r\n\t */\r\n\tpublic set smallNumberThreshold(value: number) {\r\n\t\tthis._smallNumberThreshold = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Small number threshold\r\n\t */\r\n\tpublic get smallNumberThreshold(): number {\r\n\t\treturn this._smallNumberThreshold;\r\n\t}\r\n\r\n\t/**\r\n\t * Basically the same as `bigNumberPrefixes`, except base for calculation\r\n\t * is not thousand but byte (1024).\r\n\t *\r\n\t * The modifier is \"b\".\r\n\t *\r\n\t *  ```Text\r\n\t * {myfield.formatNumber(\"#,###.00b\")}\r\n\t * ```\r\n\t *\r\n\t * The above `2048` will change to `2K`.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n\t * @param prefixes  Prefixes for byte-size formatting\r\n\t */\r\n\tpublic set bytePrefixes(prefixes: INumberSuffix[]) {\r\n\t\tthis._bytePrefixes = prefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Prefixes for byte-size formatting\r\n\t */\r\n\tpublic get bytePrefixes(): INumberSuffix[] {\r\n\t\tif (!$type.hasValue(this._bytePrefixes)) {\r\n\t\t\tthis._bytePrefixes = [\r\n\t\t\t\t{ \"number\": 1, suffix: this.language.translate(\"_byte_suffix_B\") },\r\n\t\t\t\t{ \"number\": 1024, suffix: this.language.translate(\"_byte_suffix_KB\") },\r\n\t\t\t\t{ \"number\": 1048576, suffix: this.language.translate(\"_byte_suffix_MB\") },\r\n\t\t\t\t{ \"number\": 1073741824, suffix: this.language.translate(\"_byte_suffix_GB\") },\r\n\t\t\t\t{ \"number\": 1099511627776, suffix: this.language.translate(\"_byte_suffix_TB\") },\r\n\t\t\t\t{ \"number\": 1125899906842624, suffix: this.language.translate(\"_byte_suffix_PB\") }\r\n\t\t\t]\r\n\t\t}\r\n\t\treturn this._bytePrefixes;\r\n\t}\r\n\r\n\t/**\r\n\t * Ooutput format: \"svg\" or \"html\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Output format\r\n\t */\r\n\tpublic set outputFormat(outputFormat: string) {\r\n\t\tthis._outputFormat = outputFormat.toLowerCase();\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Output format\r\n\t */\r\n\tpublic get outputFormat(): string {\r\n\t\treturn this._outputFormat;\r\n\t}\r\n\r\n\tpublic set forceLTR(value: boolean) {\r\n\t\tthis._forceLTR = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\tpublic get forceLTR(): boolean {\r\n\t\treturn this._forceLTR;\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces brackets with temporary placeholders.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text  Input text\r\n\t * @return Escaped text\r\n\t */\r\n\tpublic escape(text: string): string {\r\n\t\treturn text.replace(\"||\", $strings.PLACEHOLDER2);\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces placeholders back to brackets.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text  Escaped text\r\n\t * @return Unescaped text\r\n\t */\r\n\tpublic unescape(text: string): string {\r\n\t\treturn text.replace($strings.PLACEHOLDER2, \"|\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NumberFormatter\"] = NumberFormatter;\r\n","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Ordering } from \"./Order\";\n\n\n/**\n * ============================================================================\n * COMPARING FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Comparing function used for ordering.\n *\n * @ignore Exclude from docs\n * @todo Use localeCompare\n * @param a  Item 1\n * @param b  Item 2\n * @return Result\n */\nexport function order(a: string, b: string): Ordering {\n\tif (a === b) {\n\t\treturn 0;\n\n\t} else if (a < b) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\n\n/**\n * ============================================================================\n * OTHER FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Repeats a `string` number of times as set in `amount`.\n *\n * @ignore Exclude from docs\n * @todo Make this faster\n * @param string  Source string\n * @param amount  Number of times to repeat string\n * @return New string\n */\nexport function repeat(string: string, amount: number): string {\n\treturn new Array(amount + 1).join(string);\n}\n\n/**\n * Generates a random string `characters` length.\n *\n * @param chars  Number of characters\n * @return Random string\n */\nexport function random(chars: number): string {\n\tlet res = \"\";\n\tlet choice = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\tfor (let i = 0; i < chars; i++) {\n\t\tres += choice.charAt(Math.floor(Math.random() * choice.length));\n\t}\n\treturn res;\n}\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Ordering } from \"./Order\";\r\nimport { Optional } from \"./Type\";\r\nimport * as $math from \"./Math\";\r\nimport * as $type from \"./Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf<A>(array: ArrayLike<A>, value: A): number {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\t// TODO handle NaN\r\n\t\tif (array[i] === value) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn -1;\r\n}\r\n\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any<A>(array: ArrayLike<A>, test: (value: A) => boolean): boolean {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tif (test(array[i])) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map<A, B>(array: ArrayLike<A>, fn: (value: A, index: number) => B): Array<B> {\r\n\tconst length = array.length;\r\n\tconst output = new Array(length);\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\toutput[i] = fn(array[i], i);\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each<A>(array: ArrayLike<A>, fn: (value: A, index: number) => void): void {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tfn(array[i], i);\r\n\t}\r\n}\r\n\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse<A>(array: ArrayLike<A>, fn: (value: A, index: number) => void): void {\r\n\tlet i = array.length;\r\n\r\n\twhile (i--) {\r\n\t\tfn(array[i], i);\r\n\t}\r\n}\r\n\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue<A>(array: ArrayLike<A>, fn: (value: A, index: number) => boolean): void {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tif (!fn(array[i], i)) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft<A>(array: Array<A>, index: number): void {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = index; i < length; ++i) {\r\n\t\tarray[i - index] = array[i];\r\n\t}\r\n\r\n\tarray.length = length - index;\r\n}\r\n\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last<A>(array: Array<A>): Optional<A> {\r\n\tconst length = array.length;\r\n\treturn length ? array[length - 1] : undefined;\r\n}\r\n\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first<A>(array: Array<A>): Optional<A> {\r\n\treturn array[0];\r\n}\r\n\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert<A>(array: Array<A>, element: A, index: number): void {\r\n\t//if (array) {\r\n\tindex = $math.fitToRange(index, 0, array.length);\r\n\tarray.splice(index, 0, element);\r\n\t//}\r\n}\r\n\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex<A>(array: Array<A>, element: A, index: number): void {\r\n\tremove(array, element);\r\n\tinsert(array, element, index);\r\n}\r\n\r\n\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll<A>(array: Array<A>, input: Array<A>) {\r\n\tconst length = input.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tarray.push(input[i]);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove<A>(array: Array<A>, element: A): boolean {\r\n\tlet found: boolean = false;\r\n\tlet index: number = array.indexOf(element);\r\n\r\n\tif (index !== -1) {\r\n\t\tfound = true;\r\n\t\tarray.splice(index, 1);\r\n\r\n\t\tlet length: number = array.length;\r\n\r\n\t\twhile (index < length) {\r\n\t\t\t// TODO handle NaN\r\n\t\t\tif (array[index] === element) {\r\n\t\t\t\tarray.splice(index, 1);\r\n\t\t\t\t--length;\r\n\r\n\t\t\t} else {\r\n\t\t\t\t++index;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn found;\r\n}\r\n\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move<A>(array: Array<A>, element: A, toIndex?: number): void {\r\n\t// @todo this implementation must be the same as the List.moveValue method\r\n\t// @todo don't do anything if the desired index is the same as the current index\r\n\tlet index = indexOf(array, element);\r\n\r\n\t// @todo remove all old values rather than only the first ?\r\n\tif (index !== -1) {\r\n\t\tremoveIndex(array, index);\r\n\t}\r\n\r\n\tif (toIndex == null) {\r\n\t\tarray.push(element);\r\n\t} else {\r\n\t\tinsertIndex(array, toIndex, element);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add<A>(array: Array<A>, element: A, index?: number): void {\r\n\t// Append to the end if index is not set\r\n\tif (!$type.isNumber(index)) {\r\n\t\tarray.push(element);\r\n\t}\r\n\r\n\t// Add to the beginning of array if index is 0\r\n\telse if (index === 0) {\r\n\t\tarray.unshift(element);\r\n\t}\r\n\t// Add to indicated place if index is set\r\n\telse {\r\n\t\tarray.splice(index, 0, element);\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace<A>(array: Array<A>, element: A, index?: number): void {\r\n\t// check if exists\r\n\tlet ind: number = array.indexOf(element);\r\n\r\n\t// remove if exists\r\n\tif (ind !== -1) {\r\n\t\tarray.splice(ind, 1);\r\n\t}\r\n\r\n\t// add to end if index is not set\r\n\tif (!$type.isNumber(index)) {\r\n\t\tarray.push(element);\r\n\t}\r\n\t// add to indicated place if index is set\r\n\telse {\r\n\t\tarray.splice(index, 0, element);\r\n\t}\r\n}\r\n\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray<A>(input: Array<A> | A): Array<A> {\r\n\tif (Array.isArray(input)) {\r\n\t\treturn input;\r\n\t}\r\n\telse {\r\n\t\treturn [input];\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has<A>(array: ArrayLike<A>, element: A): boolean {\r\n\treturn indexOf(array, element) !== -1;\r\n}\r\n\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy<A>(array: ArrayLike<A>): Array<A> {\r\n\tconst length = array.length;\r\n\r\n\t// It's faster to create the array with a pre-defined length\r\n\tconst output = new Array(length);\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\t// Because the array has a pre-defined length, we have to assign rather than push\r\n\t\t// This is also faster than pushing\r\n\t\toutput[i] = array[i];\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\n\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice<A>(array: ArrayLike<A>, start: number, end: number = array.length): Array<A> {\r\n\tconst output = new Array(end - start);\r\n\r\n\tfor (let i = start; i < end; ++i) {\r\n\t\toutput[i - start] = array[i];\r\n\t}\r\n\r\n\treturn output;\r\n}\r\n\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex<A>(array: Array<A>, index: number, value: A): void {\r\n\tarray.splice(index, 0, value);\r\n}\r\n\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex<A>(array: Array<A>, index: number): void {\r\n\tarray.splice(index, 1);\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport interface SortResult {\r\n\tfound: boolean;\r\n\tindex: number\r\n}\r\n\r\n/**\r\n * Orders an array using specific `ordering` function and returns index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @param value     Value to search for\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex<A>(array: ArrayLike<A>, ordering: (left: A, right: A) => Ordering, value: A): SortResult {\r\n\tlet start = 0;\r\n\tlet end   = array.length;\r\n\tlet found = false;\r\n\r\n\twhile (start < end) {\r\n\t\t// TODO is this faster/slower than using Math.floor ?\r\n\t\tconst pivot = (start + end) >> 1;\r\n\r\n\t\tconst order = ordering(value, array[pivot]);\r\n\r\n\t\t// less\r\n\t\tif (order < 0) {\r\n\t\t\tend = pivot;\r\n\r\n\t\t// equal\r\n\t\t} else if (order === 0) {\r\n\t\t\tfound = true;\r\n\t\t\tstart = pivot + 1;\r\n\r\n\t\t// more\r\n\t\t} else {\r\n\t\t\tstart = pivot + 1;\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tfound: found,\r\n\t\tindex: (found ? start - 1 : start)\r\n\t};\r\n}\r\n\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): number {\r\n\tconst length = array.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tif (matches(array[i], i)) {\r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\r\n\treturn -1;\r\n}\r\n\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): A | undefined {\r\n\tconst index = findIndex(array, matches);\r\n\r\n\tif (index !== -1) {\r\n\t\treturn array[index];\r\n\t}\r\n}\r\n\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle<A>(array: Array<A>) {\r\n\t// https://stackoverflow.com/a/2450976/449477\r\n\tlet currentIndex = array.length,\r\n\t\ttemporaryValue,\r\n\t\trandomIndex;\r\n\r\n\t// While there remain elements to shuffle...\r\n\twhile (0 !== currentIndex) {\r\n\t\t// Pick a remaining element...\r\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\tcurrentIndex -= 1;\r\n\r\n\t\t// And swap it with the current element.\r\n\t\ttemporaryValue = array[currentIndex];\r\n\t\tarray[currentIndex] = array[randomIndex];\r\n\t\tarray[randomIndex] = temporaryValue;\r\n\t}\r\n}\r\n\r\n\r\nexport function keepIf<A>(array: Array<A>, keep: (value: A) => boolean): void {\r\n\tlet length = array.length;\r\n\tlet i = 0;\r\n\r\n\twhile (i < length) {\r\n\t\tif (keep(array[i])) {\r\n\t\t\t++i;\r\n\r\n\t\t} else {\r\n\t\t\tarray.splice(i, 1);\r\n\t\t\t--length;\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * This is the main class that encapsulates every object on the chart.\r\n *\r\n * If it's an element that is to be displayed on the screen at some point, its\r\n * class must extend [[Sprite]] class.\r\n */\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SpriteState } from \"./SpriteState\";\r\nimport { ISpriteEvents, SpriteEventDispatcher, AMEvent } from \"./SpriteEvents\";\r\nexport { ISpriteEvents, SpriteEventDispatcher, AMEvent };\r\n\r\nimport { BaseObjectEvents } from \"./Base\";\r\nimport { Adapter, globalAdapter } from \"./utils/Adapter\";\r\nimport { ITheme } from \"../themes/ITheme\";\r\nimport { Dictionary, IDictionaryEvents, DictionaryTemplate, DictionaryDisposer } from \"./utils/Dictionary\";\r\nimport { ListTemplate, ListDisposer, List } from \"./utils/List\";\r\nimport { EventDispatcher } from \"./utils/EventDispatcher\";\r\nimport { MultiDisposer, IDisposer, Disposer, MutableValueDisposer } from \"./utils/Disposer\";\r\nimport { Animation, IAnimatable, IAnimationOptions, AnimationDisposer } from \"./utils/Animation\";\r\nimport { Optional } from \"./utils/Type\";\r\nimport { Group } from \"./rendering/Group\";\r\nimport { Paper, getGhostPaper } from \"./rendering/Paper\";\r\nimport { DataItem } from \"./DataItem\";\r\nimport { Container } from \"./Container\";\r\nimport { Pattern } from \"./rendering/fills/Pattern\";\r\nimport { LinearGradient } from \"./rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"./rendering/fills/RadialGradient\";\r\nimport { SVGContainer } from \"./rendering/SVGContainer\";\r\nimport { Align } from \"./defs/Align\";\r\nimport { Roles, AriaLive } from \"./defs/Accessibility\";\r\nimport { IPlugin } from \"./utils/Plugin\";\r\nimport { Popup } from \"./elements/Popup\";\r\nimport { Modal } from \"./elements/Modal\";\r\nimport { Color, color, toColor } from \"./utils/Color\";\r\nimport { Ordering } from \"./utils/Order\";\r\n\r\nimport { HorizontalCenter } from \"./defs/HorizontalCenter\";\r\nimport { VerticalCenter } from \"./defs/VerticalCenter\";\r\nimport { VerticalAlign } from \"./defs/VerticalAlign\";\r\nimport { ShapeRendering } from \"./defs/ShapeRendering\";\r\nimport { AMElement } from \"./rendering/AMElement\";\r\nimport { Filter } from \"./rendering/filters/Filter\";\r\n\r\nimport { ColorModifier } from \"./rendering/fills/ColorModifier\";\r\n\r\nimport { getInteraction } from \"./interaction/Interaction\";\r\nimport { InteractionObject } from \"./interaction/InteractionObject\";\r\n\r\nimport { IInertiaOptions, ISwipeOptions, IHitOptions, IHoverOptions, ICursorOptions, IKeyboardOptions, IMouseOptions } from \"./interaction/InteractionOptions\";\r\nimport { IPointer } from \"./interaction/Pointer\";\r\nimport { MouseCursorStyle } from \"./interaction/Mouse\";\r\nimport { InertiaTypes } from \"./interaction/Inertia\";\r\nimport { IStyleProperty } from \"./defs/IStyleProperty\";\r\n\r\nimport { options } from \"./Options\";\r\nimport { registry } from \"./Registry\";\r\nimport { IPoint } from \"./defs/IPoint\";\r\nimport { IRectangle } from \"./defs/IRectangle\";\r\nimport { Tooltip } from \"./elements/Tooltip\";\r\n\r\nimport { NumberFormatter } from \"./formatters/NumberFormatter\";\r\nimport { DateFormatter } from \"./formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"./formatters/DurationFormatter\";\r\nimport { getTextFormatter } from \"./formatters/TextFormatter\";\r\nimport { Language } from \"./utils/Language\";\r\nimport { Export } from \"./export/Export\";\r\nimport { AmChartsLogo } from \"./elements/AmChartsLogo\";\r\n\r\n\r\nimport { ISVGAttribute } from \"./rendering/AMElement\";\r\n\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $strings from \"./utils/Strings\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $iter from \"./utils/Iterator\";\r\n\r\nimport { system } from \"./System\";\r\n\r\nimport { Percent, percent } from \"./utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Sprite]]\r\n */\r\nexport interface ISpriteProperties {\r\n\tdisabled?: boolean;\r\n\tx?: number | Percent;\r\n\ty?: number | Percent;\r\n\twidth?: number | Percent;\r\n\theight?: number | Percent;\r\n\tscale?: number;\r\n\trotation?: number;\r\n\tpixelPerfect?: boolean;\r\n\tmarginLeft?: number;\r\n\tmarginRight?: number;\r\n\tmarginTop?: number;\r\n\tmarginBottom?: number;\r\n\tfillOpacity?: number;\r\n\tfill?: Color | LinearGradient | RadialGradient | Pattern;\r\n\topacity?: number;\r\n\tstroke?: Color | LinearGradient | RadialGradient | Pattern;\r\n\tstrokeOpacity?: number;\r\n\tstrokeWidth?: number;\r\n\tstrokeDasharray?: string;\r\n\tstrokeDashoffset?: number;\r\n\tstrokeLinecap?: \"butt\" | \"square\" | \"round\";\r\n\tstrokeLinejoin?: \"miter\" | \"round\" | \"bevel\";\r\n\tshapeRendering?: ShapeRendering;\r\n\tdraggable?: boolean;\r\n\tinert?: boolean;\r\n\tresizable?: boolean;\r\n\tswipeable?: boolean;\r\n\ttrackable?: boolean;\r\n\thoverable?: boolean;\r\n\tclickable?: boolean;\r\n\ttogglable?: boolean;\r\n\twheelable?: boolean;\r\n\tfocusable?: boolean;\r\n\ttabindex?: number;\r\n\tcontextMenuDisabled?: boolean;\r\n\tvisible?: boolean;\r\n\ttooltipText?: string;\r\n\ttooltipHTML?: string;\r\n\ttooltipX?: number | Percent;\r\n\ttooltipY?: number | Percent;\r\n\talwaysShowTooltip?: boolean;\r\n\ttooltipPosition?: \"fixed\" | \"pointer\";\r\n\tshowTooltipOn?: \"hover\" | \"hit\" | \"always\";\r\n\tinteractionsEnabled?: boolean;\r\n\thorizontalCenter?: HorizontalCenter;\r\n\tverticalCenter?: VerticalCenter;\r\n\talign?: Align;\r\n\tvalign?: VerticalAlign;\r\n\tpaddingLeft?: number;\r\n\tpaddingRight?: number;\r\n\tpaddingTop?: number;\r\n\tpaddingBottom?: number;\r\n\tminX?: number;\r\n\tminY?: number;\r\n\tmaxX?: number;\r\n\tmaxY?: number;\r\n\tdx?: number;\r\n\tdy?: number;\r\n\trole?: Roles;\r\n\treaderDescribedBy?: string;\r\n\treaderLabelledBy?: string;\r\n\treaderLive?: AriaLive;\r\n\treaderControls?: string;\r\n\treaderChecked?: boolean;\r\n\treaderHidden?: boolean;\r\n\treaderDescription?: string;\r\n\treaderTitle?: string;\r\n\treaderOrientation?: string;\r\n\treaderValueNow?: string;\r\n\treaderValueText?: string;\r\n\tnonScaling?: boolean;\r\n\tnonScalingStroke?: boolean;\r\n\tzIndex?: number;\r\n\tminWidth?: number;\r\n\tmaxWidth?: number;\r\n\tminHeight?: number;\r\n\tmaxHeight?: number;\r\n\tfillModifier?: ColorModifier;\r\n\tstrokeModifier?: ColorModifier;\r\n\thoverOnFocus?: boolean;\r\n\tpath?: string;\r\n\turlTarget?: string;\r\n\turl?: string;\r\n\thidden?: boolean;\r\n\tshowOnInit?: boolean;\r\n\tid?: string;\r\n\tisActive?: boolean;\r\n\tisHover?: boolean;\r\n\tuserClassName?: string;\r\n}\r\n\r\n/**\r\n * Defines animation options\r\n */\r\nexport interface ISpriteAnimationOptions {\r\n\tfrom?: Percent | Color | number | string;\r\n\tto: Percent | Color | number | string;\r\n\tproperty: any; // todo: this[\"_properties\"] can not be used here, think.\r\n}\r\n\r\n/**\r\n * Defines list ofvisual properties\r\n */\r\nexport const visualProperties: (keyof ISpriteProperties)[] = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeOpacity\", \"strokeWidth\", \"strokeDasharray\", \"strokeDashoffset\", \"strokeLinecap\", \"strokeLinejoin\"]; // do not add opacity here, as it is used for showing/hiding\r\n\r\n/**\r\n * Represents a list of available adapters for [[Sprite]]\r\n */\r\nexport interface ISpriteAdapters extends ISpriteProperties {\r\n\r\n\tpixelHeight: number;\r\n\tpixelWidth: number;\r\n\trelativeHeight: number\r\n\trelativeWidth: number;\r\n\tmeasuredHeight: number;\r\n\tmeasuredWidth: number;\r\n\touterHeight: number;\r\n\touterWidth: number;\r\n\tinnerHeight: number;\r\n\tinnerWidth: number;\r\n\tglobalScale: number;\r\n\tpixelMarginRight: number;\r\n\trelativeMarginRight: number;\r\n\tpixelMarginLeft: number;\r\n\trelativeMarginLeft: number;\r\n\tpixelMarginTop: number;\r\n\trelativeMarginTop: number;\r\n\tpixelMarginBottom: number;\r\n\trelativeMarginBottom: number;\r\n\tpixelX: number;\r\n\trelativeX: number;\r\n\tpixelY: number;\r\n\trelativeY: number;\r\n\tmask: Sprite;\r\n\tpopulateString: string;\r\n\r\n\tinertiaOptions: Dictionary<InertiaTypes, IInertiaOptions>;\r\n\thitOptions: IHitOptions;\r\n\thoverOptions: IHoverOptions;\r\n\tswipeOptions: ISwipeOptions;\r\n\tkeyboardOptions: IKeyboardOptions;\r\n\tmouseOptions: IMouseOptions;\r\n\tcursorOptions: ICursorOptions;\r\n\tcriticalError: Error;\r\n};\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Sprite represents any displayable element.\r\n *\r\n * This is the main class that encapsulates every object on the chart.\r\n *\r\n * If it's an element that is to be displayed on the screen at some point, its\r\n * class must extend [[Sprite]] class.\r\n *\r\n * [[Sprite]] class represents the a hierarchical structure. Every object that\r\n * extends [[Sprite]] can have children, that would inherit their properties,\r\n * such as language, formatters, etc.\r\n *\r\n * @see {@link SpriteState}\r\n * @see {@link ISpriteEvents} for a list of available events\r\n * @see {@link ISpriteAdapters} for a list of available Adapters\r\n *\r\n * @todo Review child elements that need to go into `_disposers`\r\n * @important\r\n */\r\nexport class Sprite extends BaseObjectEvents implements IAnimatable {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: ISpriteProperties;\r\n\r\n\t/**\r\n\t * Defines state type.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\t//public _state: SpriteState;\r\n\r\n\t/**\r\n\t * Defines type used in the Sprite.\r\n\t */\r\n\tpublic _adapter!: ISpriteAdapters;\r\n\r\n\t/**\r\n\t * Holds values for Sprite's properties.\r\n\t */\r\n\tpublic properties: this[\"_properties\"] = {};\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISpriteEvents;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _eventDispatcher: SpriteEventDispatcher<AMEvent<this, this[\"_events\"]>> = new SpriteEventDispatcher(this);\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/event-listeners/} for more info about Events\r\n\t */\r\n\tpublic get events(): SpriteEventDispatcher<AMEvent<this, this[\"_events\"]>> {\r\n\t\treturn this._eventDispatcher;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _adapterO: Adapter<this, this[\"_adapter\"]>;\r\n\r\n\t/**\r\n\t * Holds Adapter.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/adapters/} for more info about Adapters\r\n\t */\r\n\tpublic get adapter(): Adapter<this, this[\"_adapter\"]> {\r\n\t\tif (!this._adapterO) {\r\n\t\t\tthis._adapterO = new Adapter<this, this[\"_adapter\"]>(this);\r\n\t\t}\r\n\t\treturn this._adapterO;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprivate _bindings: { [key: string]: IDisposer } = {};\r\n\r\n\t/**\r\n\t * Holds indicator if this Sprite is a \"template\" to be used for creating\r\n\t * other Sprites from and should not be treated as full-fledged element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _isTemplate: boolean = false;\r\n\r\n\tprotected _isPath: boolean = false;\r\n\r\n\t/**\r\n\t * Holds collection of Sprite States.\r\n\t */\r\n\tpublic _states: $type.Optional<DictionaryTemplate<string, SpriteState<this[\"_properties\"], this[\"_adapter\"]>>>;\r\n\r\n\t/**\r\n\t * Holds indicator whether this sprite was already initialized.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _inited: boolean = false;\r\n\r\n\t/**\r\n\t * Holds indicator whether this sprite was already initialized and ready.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _ready: boolean = false;\r\n\r\n\t/**\r\n\t * A reference to a Tooltip for this Sprite.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _tooltip: $type.Optional<Tooltip>;\r\n\r\n\t/**\r\n\t * A special data item which tooltip will use when formatting data. In case\r\n\t * it is not set, dataItem will be used.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _tooltipDataItem: $type.Optional<DataItem>;\r\n\r\n\t/**\r\n\t * A reference to another sprite or sprite template from which tooltip should take colors if getFillFromObject or getStrokeFromObject are set to true.\r\n\t * Mostly used when we need to adjust tooltip color for a series, depending on column or bullet color.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _tooltipColorSource: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * If `sprite.hide()` is called and we have \"hidden\" state and\r\n\t * `transitionDuration > 0`, we set `isHiding` flag to `true` in order to\r\n\t * avoid restarting animations in case `hide()` method is called multiple\r\n\t * times.\r\n\t */\r\n\tpublic isHiding: boolean = false;\r\n\r\n\t/**\r\n\t * If `sprite.hide()` is called, we set isHidden to true when sprite is hidden.\r\n\t * This was added becaus hidden state might have visibility set to true and so\r\n\t * there would not be possible to find out if a sprite is technically hidden or not.\r\n\t */\r\n\tprotected _isHidden: boolean = false;\r\n\r\n\t/**\r\n\t * This property indicates if Sprite is currently being revealed from hidden\r\n\t * state. This is used to prevent multiple calls to `sprite.show()` to\r\n\t * restart reveal animation. (if enabled)\r\n\t */\r\n\tpublic isShowing: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if this element is a standalone instance. A \"standalone\r\n\t * instance\" means this is a autonomous object which maintains its own\r\n\t * set of controls like Preloader, Export, etc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic isStandaloneInstance: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if togglable Sprite is currently active (toggled on).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _isActive: boolean = false;\r\n\r\n\t/**\r\n\t * A Sprite element to use as a mask for this Sprite.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _mask = new MutableValueDisposer<Sprite>();\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _clipPath: Optional<Group>;\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _clipElement: $type.Optional<AMElement>;\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected _positionPrecision: number = 3;\r\n\r\n\t/**\r\n\t * Holds reference to Sprite's [[InteractionObject]]. Sprite does not\r\n\t * perform any user interactions directly, it happens via [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _interaction: $type.Optional<InteractionObject>;\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _language = new MutableValueDisposer<Language>();\r\n\r\n\t/**\r\n\t * An instance of [[NumberFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFormatter: $type.Optional<NumberFormatter>;\r\n\r\n\t/**\r\n\t * An instance of [[DateFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFormatter: $type.Optional<DateFormatter>;\r\n\r\n\t/**\r\n\t * An instance of [[DurationFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFormatter: $type.Optional<DurationFormatter>;\r\n\r\n\t/**\r\n\t * An HTML element to which [[svgContainer]] is added.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _htmlContainer: $type.Optional<HTMLElement>;\r\n\r\n\t/**\r\n\t * An HTML element to which all chart elements are added.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _svgContainer: $type.Optional<SVGContainer>;\r\n\r\n\t/**\r\n\t * A [[Container]] instance to place this element's [[Tooltip]] elements in\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _tooltipContainer: $type.Optional<Container>;\r\n\r\n\r\n\tprotected _urlDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Should this element be measured when measuring its parent container's\r\n\t * dimentions?\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _isMeasured: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * Indicates if the chart should follow right-to-left rules.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _rtl: boolean;\r\n\r\n\t/**\r\n\t * Holds [[Export]] object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _exporting = new MutableValueDisposer<Export>();\r\n\r\n\t/**\r\n\t * Should this Sprite be included when exporting?\r\n\t */\r\n\tprotected _exportable: boolean = true;\r\n\r\n\t/**\r\n\t * A reference to a top-level SVG node for this Sprite element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _element: Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Holds Sprite's main SVG group (`<g>`) element. Other Sprite's elements\r\n\t * are all placed in this group.\r\n\t */\r\n\tpublic group: Group;\r\n\r\n\t/**\r\n\t * A reference to [[Paper]] SVG renderer used to create SVG nodes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * Elements's top-level [[Container]].\r\n\t *\r\n\t *\r\n\t * @return Top-level ascendant\r\n\t */\r\n\tprotected _topParent: Optional<Container>;\r\n\r\n\t/**\r\n\t * Data item assigned to the sprite. It might contain information defining\r\n\t * some style properties.\r\n\t */\r\n\tpublic _dataItem: $type.Optional<DataItem>;\r\n\r\n\t/**\r\n\t * Parent container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _parent: Container;\r\n\r\n\t/**\r\n\t * Sprite's \"virtual\" parent.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _virtualParent: Sprite;\r\n\r\n\t/**\r\n\t * Defines bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _bbox: IRectangle = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n\t/**\r\n\t * Base tab index for the Sprite. Used for TAB-key selection order.\r\n\t *\r\n\t * Use accessors `tabIndex` to set and retrieve.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _tabindex: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Should system tooltips be allowed to be displayed if the element has\r\n\t * `readerTitle` set?\r\n\t *\r\n\t * Use accessors `showSystemTooltip` to set and retrieve.\r\n\t *\r\n\t * This is an accessibility feature.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _showSystemTooltip: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * List of animations currently playing for this Sprite.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * A link to [[Disposer]] for event handler which is attached to hide\r\n\t * animation. In some cases we need to cancel this event. This property is\r\n\t * used to hold the reference to disposer of this event so that we can\r\n\t * cancel it by calling its `dispose()` method.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _showHideDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * If element is currently hiding, this property will hold a reference to\r\n\t * [[Animation]] instance, which is handling hiding animation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _hideAnimation: $type.Optional<Animation>;\r\n\r\n\t/**\r\n\t * List of [[Filter]] items that are currently applied to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _filters: $type.Optional<List<Filter>>;\r\n\r\n\t/**\r\n\t * A shortcut to the special \"Focus\" filter which is applied when the element\r\n\t * gains focus.\r\n\t *\r\n\t * This is an accessibility feature.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _focusFilter: $type.Optional<Filter>;\r\n\r\n\t/**\r\n\t * Indicates if this element is invalid and should be re-validated (redrawn).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalid: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if this elements position is invalid and should be repositioned\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic positionInvalid: boolean = false;\r\n\r\n\t/**\r\n\t * A collection of key/value pairs that can be used to bind specific Sprite\r\n\t * properties to [[DataItem]].\r\n\t *\r\n\t * For example: `fill` property can be bound to `myCustomColor` field in\r\n\t * DataItem. The Sprite will automatically get the value for `fill` from its\r\n\t * DataItem.\r\n\t *\r\n\t * Can be set for each [[SpriteState]] individually to override default\r\n\t * bindings.\r\n\t *\r\n\t * @see {@link SpriteState}\r\n\t */\r\n\tpublic propertyFields: { [index in keyof this[\"_properties\"]]?: string } = {};\r\n\t//public propertyFields: Dictionary<keyof this[\"_properties\"], string> = new Dictionary<keyof this[\"_properties\"], string>();\r\n\r\n\t/**\r\n\t * Element's relative width.\r\n\t *\r\n\t * Do not set this property directly. Use `width` accessor with [[Percent]]\r\n\t * value instead.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic percentWidth: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Element's relative height.\r\n\t *\r\n\t * Do not set this property directly. Use `height` accessor with [[Percent]]\r\n\t * value instead.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic percentHeight: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * An SVG group element that is used to put all SVG filters to.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic filterElement: $type.Optional<Group>;\r\n\r\n\t/**\r\n\t * A field in data context of element's `dataItem` that holds config values\r\n\t * for this element.\r\n\t *\r\n\t * This is a very powerful feature, allowing changing virtually any setting,\r\n\t * including those for element's children, for the element via data.\r\n\t *\r\n\t * Example data:\r\n\t *\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"value\": 100,\r\n\t *   \"config\": {\r\n\t *     \"fill\": \"#F00\"\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * If you set element's `configField = \"config\"`, the element for this\r\n\t * specific data point will have a red fill.\r\n\t */\r\n\tpublic configField: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * Reference to element's `<title>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _titleElement: Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Reference to element's `<description>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _descriptionElement: Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Specifies if property changes on this object should be propagated to the\r\n\t * objects cloned from this object.\r\n\t *\r\n\t * This setting affects property changes *after* cloning, since at the moment\r\n\t * of cloning all of properties from source object are copied to the clone\r\n\t * anyway.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic applyOnClones: boolean = false;\r\n\r\n\t/**\r\n\t * a reference to an object which should be used when populating string. used for tooltip label mostly.\r\n\t * @ignore\r\n\t */\r\n\tpublic populateStringFrom: any;\r\n\r\n\t/**\r\n\t * Internal storage properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\r\n\tprotected _measuredWidth: number;\r\n\tprotected _measuredHeight: number;\r\n\r\n\t// unrotated unscaled\r\n\tprotected _measuredWidthSelf: number = 0;\r\n\tprotected _measuredHeightSelf: number = 0;\r\n\r\n\tprotected _prevMeasuredWidth: number;\r\n\tprotected _prevMeasuredHeight: number;\r\n\r\n\tprotected _pixelWidth: $type.Optional<number>;\r\n\tprotected _pixelHeight: $type.Optional<number>;\r\n\r\n\tprotected _relativeWidth: $type.Optional<number>;\r\n\tprotected _relativeHeight: $type.Optional<number>;\r\n\r\n\t// read only, sprite extreme coordinates\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxLeft: number = 0;\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxRight: number = 0;\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxTop: number = 0;\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxBottom: number = 0;\r\n\r\n\t// not rotated and not scaled\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxLeftSelf: number = 0;\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxRightSelf: number = 0;\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxTopSelf: number = 0;\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic maxBottomSelf: number = 0;\r\n\r\n\tprotected _isDragged: boolean = false;\r\n\r\n\tprotected _isResized: boolean = false;\r\n\r\n\t/**\r\n\t * @deprecated Moved to [[SpriteProperties]]\r\n\t */\r\n\tprotected _disabled: boolean = false;\r\n\r\n\tprotected _internalDisabled: boolean = false;\r\n\r\n\tprotected _updateDisabled: boolean = false;\r\n\r\n\tprotected _maskRectangle: $type.Optional<IRectangle>;\r\n\r\n\tprotected _internalDefaultsApplied: boolean = false;\r\n\r\n\tprotected _interactionDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * You can set bbox from outside if you know what size your element must be (used in radar chart for example)\r\n\t * @ignore\r\n\t */\r\n\tpublic definedBBox: IRectangle;\r\n\r\n\t/**\r\n\t * Time in milliseconds after which rollout event happens when user rolls-out of the sprite. This helps to avoid flickering in some cases.\r\n\t */\r\n\tpublic rollOutDelay: number = 0;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _outTimeout: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * This flag is set to `true` for the initial sprite you create and place\r\n\t * to the div so that we could clear all additional\r\n\t * sprites/containers when this sprite is disposed.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic isBaseSprite: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether this sprite should be cloned when cloning its parent\r\n\t * container. We set this to `false` in those cases when a sprite is created\r\n\t * by the class, so that when cloning a duplicate sprite would not appear.\r\n\t */\r\n\tpublic shouldClone: boolean = true;\r\n\r\n\t/**\r\n\t * A property which you can use to store any data you want.\r\n\t */\r\n\tpublic dummyData: any;\r\n\r\n\t/**\r\n\t * A reference to a real fill object. Sometimes might be useful to modify\r\n\t * gradient (when fill is color but we have FillModifier).\r\n\t */\r\n\tpublic realFill: Color | Pattern | LinearGradient | RadialGradient;\r\n\r\n\t/**\r\n\t * A reference to a real stroke object. Sometimes might be useful to modify\r\n\t * gradient (when fill is color but we have a FillModifier).\r\n\t */\r\n\tpublic realStroke: Color | Pattern | LinearGradient | RadialGradient;\r\n\r\n\t/**\r\n\t * A reference to amCharts logo element.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic logo: AmChartsLogo;\r\n\r\n\t/**\r\n\t * [_baseId description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _baseId: string;\r\n\r\n\t/**\r\n\t * A read-only flag which indicates if a sprite has completed its initial\r\n\t * animation (if `showOnInit = true`).\r\n\t *\r\n\t * In case `showOnInit = false`, `appeared` is set to `true` on init.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic appeared: boolean = false;\r\n\r\n\t/**\r\n\t * [ex description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore\r\n\t */\r\n\tpublic ex: number = 0;\r\n\r\n\t/**\r\n\t * [ey description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore\r\n\t */\r\n\tpublic ey: number = 0;\r\n\r\n\t/**\r\n\t * [_showOnInitDisposer description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _showOnInitDisposer: MultiDisposer;\r\n\r\n\t/**\r\n\t * Holds the list of plugins attached to this Sprite.\r\n\t */\r\n\tprotected _plugins: $type.Optional<List<IPlugin>>;\r\n\r\n\t/**\r\n\t * Indicates if the sprite can be moved around when resizing it with two fingers (will only work if draggable = false)\r\n\t * @ignore\r\n\t */\r\n\tpublic dragWhileResize: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic vpDisposer: MultiDisposer;\r\n\r\n\tprotected _alwaysShowDisposers: IDisposer[];\r\n\r\n\t/**\r\n\t *  @ignore\r\n\t */\r\n\tpublic measureFailed: boolean = false;\r\n\r\n\t/**\r\n\t * If this flag is set to true, calling show() will not reveal the sprite.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic preventShow: boolean = false;\r\n\r\n\t/**\r\n\t * When cloning a sprite, if the template has it's own tooltip assigned, this tooltip is also cloned by default.\r\n\t * This is not good for cpu and sometimes you might only need one single tooltip for all clones. Set this to false in order not to clone tooltip.\r\n\t */\r\n\tpublic cloneTooltip: boolean = true;\r\n\r\n\t/**\r\n\t * Constructor:\r\n\t * * Creates initial node\r\n\t * * Sets default properties\r\n\t * * Creates required default states\r\n\t * * Inits accessibility\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"Sprite\";\r\n\r\n\t\tthis._disposers.push(this._eventDispatcher);\r\n\r\n\t\t// Generate a unique ID\r\n\t\t$utils.used(this.uid);\r\n\r\n\t\t// Create SVG group to hold everything in\r\n\t\tthis.group = this.paper.addGroup(\"g\");\r\n\r\n\t\t// Set defaults\r\n\t\t// it is better to set defauls like this in order to save invaliation calls and events\r\n\t\tthis.setPropertyValue(\"scale\", 1);\r\n\t\tthis.setPropertyValue(\"rotation\", 0);\r\n\t\tthis.setPropertyValue(\"align\", \"none\");\r\n\t\tthis.setPropertyValue(\"valign\", \"none\");\r\n\t\tthis.setPropertyValue(\"pixelPerfect\", false);\r\n\t\tthis.setPropertyValue(\"visible\", true);\r\n\t\tthis.setPropertyValue(\"tooltipPosition\", \"fixed\");\r\n\t\tthis.setPropertyValue(\"verticalCenter\", \"none\");\r\n\t\tthis.setPropertyValue(\"horizontalCenter\", \"none\");\r\n\r\n\t\tthis.setPropertyValue(\"tooltipX\", percent(50));\r\n\t\tthis.setPropertyValue(\"tooltipX\", percent(50));\r\n\r\n\t\tthis.setPropertyValue(\"marginTop\", 0);\r\n\t\tthis.setPropertyValue(\"marginBottom\", 0);\r\n\t\tthis.setPropertyValue(\"marginLeft\", 0);\r\n\t\tthis.setPropertyValue(\"marginRight\", 0);\r\n\r\n\t\tthis.setPropertyValue(\"dx\", 0);\r\n\t\tthis.setPropertyValue(\"dy\", 0);\r\n\r\n\t\tthis.setPropertyValue(\"paddingTop\", 0);\r\n\t\tthis.setPropertyValue(\"paddingBottom\", 0);\r\n\t\tthis.setPropertyValue(\"paddingRight\", 0);\r\n\t\tthis.setPropertyValue(\"paddingLeft\", 0);\r\n\r\n\t\tthis.setPropertyValue(\"togglable\", false);\r\n\t\tthis.setPropertyValue(\"hidden\", false);\r\n\t\tthis.setPropertyValue(\"urlTarget\", \"_self\");\r\n\t\tthis.setPropertyValue(\"alwaysShowTooltip\", false);\r\n\t\tthis.setPropertyValue(\"showTooltipOn\", \"hover\");\r\n\r\n\t\tthis._prevMeasuredWidth = 0;\r\n\t\tthis._prevMeasuredHeight = 0;\r\n\t\tthis._measuredWidth = 0;\r\n\t\tthis._measuredHeight = 0;\r\n\r\n\t\tthis._isMeasured = true;\r\n\r\n\t\t// Invalidate the Sprite so that renderer knows it needs to be drawn\r\n\t\tthis.invalidate();\r\n\r\n\t\t//this.states.create(\"default\").properties.opacity = 1;\r\n\r\n\t\t// Apply the theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\t//this._disposers.push(this._clickable);\r\n\r\n\t\t// Decorate adapter with events so that we can apply its settings whenever\r\n\t\t// it is modified\r\n\t\t// @todo Think what to do here. We can't just apply the adapter value to\r\n\t\t// property since not all of those are for properties. Commented out for\r\n\t\t// now.\r\n\t\t/*this.adapter.events.on(\"inserted\", (ev: any) => {\r\n\t\t\t(<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n\t\t});\r\n\t\tthis.adapter.events.on(\"removed\", (ev: any) => {\r\n\t\t\t(<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n\t\t});*/\r\n\r\n\t\t// Add disposable dependencies to `_disposers` so they are automatically\r\n\t\t// disposed of when this object is disposed\r\n\t\tthis._disposers.push(this.events);\r\n\t\tthis._disposers.push(this.group);\r\n\t\tthis._disposers.push(this._mask);\r\n\t\tthis._disposers.push(this._language);\r\n\t\tthis._disposers.push(this._exporting);\r\n\t\t//this._disposers.push(this._parent);\r\n\t\t//this._disposers.push(this._modal);\r\n\r\n\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t$object.each(this._bindings, (key, value) => {\r\n\t\t\t\tvalue.dispose();\r\n\t\t\t});\r\n\t\t}));\r\n\r\n\t\tthis.setPropertyValue(\"interactionsEnabled\", true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * ELEMENT VALIDATION, INIT, AND DRAWING STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Applies properties from all assigned themes.\r\n\t *\r\n\t * We do this here so that we can apply class names as well.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyTheme(): void {\r\n\t\tsuper.applyTheme();\r\n\t\tif (options.autoSetClassName) {\r\n\t\t\tthis.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns theme(s) used by this object either set explicitly on this\r\n\t * element, inherited from parent, or inherited from [[System]].\r\n\t *\r\n\t * @return An array of theme references\r\n\t */\r\n\tpublic getCurrentThemes(): ITheme[] {\r\n\t\tconst themes = this._themes;\r\n\r\n\t\tif (themes) {\r\n\t\t\treturn themes;\r\n\r\n\t\t} else {\r\n\t\t\tconst parent = this._parent;\r\n\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn parent.getCurrentThemes();\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn registry.themes;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Called just before element's validation, this function allows setting\r\n\t * defaults.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\t// Nothing here, but extending classes might override this function\r\n\t\t// so that they can set their defaults\r\n\t\tthis._internalDefaultsApplied = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates element.\r\n\t *\r\n\t * Object will be redrawn during the next update cycle.\r\n\t *\r\n\t * Please note that in most cases elements will auto-invalidate when needed. If\r\n\t * everything works, DO NOT use this method. Use it only if some changes do\r\n\t * not take otherwise.\r\n\t */\r\n\tpublic invalidate(): void {\r\n\t\tif (this.disabled || this._isTemplate || this.__disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// We no longer reset this on each invalidate, so that they are applied\r\n\t\t// only once, and do not overwrite user-defined settings\r\n\t\t//this._internalDefaultsApplied = false;\r\n\r\n\t\tif (!this.invalid) {\r\n\t\t\tthis.invalid = true;\r\n\t\t\tregistry.addToInvalidSprites(this);\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element:\r\n\t * * Triggers events\r\n\t * * Redraws the element\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tthis.dispatchImmediately(\"beforevalidated\");\r\n\r\n\t\t// prevents from drawing if topparent is 0x0\r\n\t\t/*\r\n\t\tlet topParent = this.topParent;\r\n\r\n\t\tif (topParent) {\r\n\t\t\tif (!topParent.maxWidth || !topParent.maxHeight) {\r\n\t\t\t\tthis._disposers.push(topParent.events.once(\"maxsizechanged\", this.invalidate, this));\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\t// Set internal defaults\r\n\t\tif (!this._internalDefaultsApplied) {\r\n\t\t\tthis.applyInternalDefaults();\r\n\t\t}\r\n\r\n\t\tthis.beforeDraw();\r\n\t\tthis.draw();\r\n\r\n\t\tthis.invalid = false;\r\n\r\n\t\tregistry.removeFromInvalidSprites(this);\r\n\t\tthis.afterDraw();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates element's position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidatePosition(): void {\r\n\t\tif (this.disabled || this._isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.positionInvalid) {\r\n\t\t\tthis.positionInvalid = true;\r\n\t\t\tregistry.addToInvalidPositions(this);\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Transforms the element.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition(): void {\r\n\r\n\t\tlet pixelX = this.pixelX;\r\n\t\tlet pixelY = this.pixelY;\r\n\t\tlet dx = this.dx;\r\n\t\tlet dy = this.dy;\r\n\r\n\t\tlet x: number = pixelX + dx;\r\n\t\tlet y: number = pixelY + dy;\r\n\r\n\t\tif (this._updateDisabled) {\r\n\t\t\tif (this._internalDisabled) {\r\n\t\t\t\tthis.group.attr({ \"display\": \"none\" })\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!this.disabled) {\r\n\t\t\t\t\tthis.removeSVGAttribute(\"display\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateDisabled = false;\r\n\t\t}\r\n\r\n\t\tlet sizeChanged: boolean = this.measure();\r\n\r\n\t\t//if (!this.invalid) {\r\n\t\tlet prevGroupTransform: string = this.group.transformString;\r\n\r\n\t\tthis.group.moveTo({ x: x, y: y });\r\n\t\tthis.group.rotation = this.rotation;\r\n\t\tif (this.nonScaling) {\r\n\t\t\tthis.group.scale = this.scale / this.globalScale;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.group.scale = this.scale;\r\n\t\t}\r\n\r\n\t\tif (prevGroupTransform != this.group.transformString || sizeChanged) {\r\n\t\t\t// not yet sure, this is to avoid many transforms=>container layout invalidation on initial buid\r\n\t\t\tif (prevGroupTransform == null) {\r\n\t\t\t\tthis.dispatch(\"transformed\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.dispatchImmediately(\"transformed\");\r\n\t\t\t}\r\n\t\t\t// TODO clear existing positionchanged dispatches ?\r\n\t\t\tthis.dispatch(\"positionchanged\");\r\n\r\n\t\t\tif (this.showTooltipOn == \"hit\" || this.showTooltipOn == \"always\") {\r\n\t\t\t\tthis.updateTooltipPosition();\r\n\t\t\t}\r\n\t\t}\r\n\t\t//}\r\n\r\n\t\t// it might happen that x and y changed again, so we only remove if they didn't\r\n\t\tif (pixelX + dx == x && pixelY + dy == y) {\r\n\t\t\tregistry.removeFromInvalidPositions(this);\r\n\t\t\tthis.positionInvalid = false;\r\n\t\t}\r\n\t\tlet maskRectangle = this._maskRectangle;\r\n\t\t// todo: verify this\r\n\t\tif (maskRectangle) {\r\n\t\t\tthis._clipElement.moveTo({ x: maskRectangle.x - pixelX, y: maskRectangle.y - pixelY });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A placeholder method that is called **before** element begins to be drawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected beforeDraw(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A placeholder method that draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected draw(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A placeholder method that is called **after** element finishes drawing\r\n\t * itself.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tif (this.isMeasured || this.horizontalCenter !== \"none\" || this.verticalCenter !== \"none\") {\r\n\t\t\tthis.measureElement();\r\n\t\t}\r\n\r\n\t\t//this.applyMask();\r\n\r\n\t\tif (!this._inited) {\r\n\t\t\tif (this._adapterO) {\r\n\t\t\t\t// used to be applySVGAttrbutes here, this is more efficient\r\n\t\t\t\tfor (let key of this._adapterO.keys()) {\r\n\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\t\tcase \"mask\":\r\n\t\t\t\t\t\tcase \"fill\":\r\n\t\t\t\t\t\tcase \"opacity\":\r\n\t\t\t\t\t\tcase \"fillOpacity\":\r\n\t\t\t\t\t\tcase \"stroke\":\r\n\t\t\t\t\t\tcase \"strokeOpacity\":\r\n\t\t\t\t\t\tcase \"strokeWidth\":\r\n\t\t\t\t\t\tcase \"shapeRendering\":\r\n\t\t\t\t\t\tcase \"strokeDasharray\":\r\n\t\t\t\t\t\tcase \"strokeDashoffset\":\r\n\t\t\t\t\t\tcase \"strokeLinecap\":\r\n\t\t\t\t\t\tcase \"strokeLinejoin\":\r\n\t\t\t\t\t\tcase \"textDecoration\":\r\n\t\t\t\t\t\tcase \"fontSize\":\r\n\t\t\t\t\t\tcase \"fontFamily\":\r\n\t\t\t\t\t\tcase \"fontWeight\":\r\n\t\t\t\t\t\t\t//case \"focusable\":\r\n\t\t\t\t\t\t\t//case \"tabindex\":\r\n\t\t\t\t\t\t\t//case \"role\":\r\n\t\t\t\t\t\t\t(<any>this)[key] = (<any>this)[key];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.applyFilters();\r\n\r\n\t\t\tthis.visible = this.visible;\r\n\t\t\tthis.interactionsEnabled = this.getPropertyValue(\"interactionsEnabled\"); // can't use .interactionsEnabled as it get's parent's\r\n\r\n\t\t\tthis._inited = true;\r\n\r\n\t\t\tif (!this.showOnInit) {\r\n\t\t\t\tthis.appeared = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.hidden) {\r\n\t\t\t\tthis.hide(0);\r\n\t\t\t}\r\n\r\n\t\t\tthis.applyMask();\r\n\t\t\tthis.dispatch(\"validated\");\r\n\t\t\tthis.dispatch(\"inited\");\r\n\t\t\tthis.dispatchReady();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.dispatch(\"validated\");\r\n\t\t}\r\n\r\n\t\tif (this.showTooltipOn == \"always\") {\r\n\t\t\tif (this.visible && !this.disabled && !this.__disabled) {\r\n\t\t\t\tthis.showTooltip();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hideTooltip(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches `\"ready\"` event. Sprite dispatches it right after `\"inited\"` event.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic dispatchReady(): void {\r\n\t\tif (!this.isReady()) {\r\n\t\t\tthis._ready = true;\r\n\t\t\tthis.dispatch(\"ready\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Triggers a re-initialization of this element.\r\n\t *\r\n\t * Will result in complete redrawing of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic reinit(): void {\r\n\t\tthis._inited = false;\r\n\t\tthis.setState(this.defaultState);\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the situation where parent element is resized.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleGlobalScale(): void {\r\n\t\tthis.dispatch(\"globalscalechanged\");\r\n\r\n\t\tif (this.nonScalingStroke) {\r\n\t\t\tthis.strokeWidth = this.strokeWidth;\r\n\t\t}\r\n\r\n\t\tif (this.nonScaling) {\r\n\t\t\tthis.validatePosition();\r\n\t\t}\r\n\r\n\t\tthis.updateFilterScale();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates filter properties which might depend on scale\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateFilterScale(): void {\r\n\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\tfilter.scale = this.globalScale;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removes itself from system's invalid lists.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeFromInvalids() {\r\n\t\tregistry.removeFromInvalidSprites(this);\r\n\t\tregistry.removeFromInvalidPositions(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Sprite]].\r\n\t *\r\n\t * @param source Source Sprite\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tthis.isMeasured = source.isMeasured;\r\n\r\n\t\tthis.states.copyFrom(source.states);\r\n\r\n\t\tif (source.filters.length > 0) {\r\n\t\t\tsource.filters.each((filter) => {\r\n\t\t\t\tthis.filters.push(filter.clone());\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (source._adapterO) {\r\n\t\t\tthis.adapter.copyFrom(source._adapterO);\r\n\t\t}\r\n\r\n\t\t//helps to avoid calling getter which creates instance\r\n\t\tif ((<any>source)[\"_interaction\"]) {\r\n\t\t\tthis.interactions.copyFrom(source.interactions);\r\n\t\t}\r\n\r\n\t\tif ((<any>source)[\"_plugins\"]) {\r\n\t\t\tthis.plugins.copyFrom(source.plugins);\r\n\t\t}\r\n\r\n\t\tthis.configField = source.configField;\r\n\r\n\t\tthis.applyOnClones = source.applyOnClones;\r\n\r\n\t\t// this.numberFormatter = source.numberFormatter; // todo: this creates loose number formatter and copies it to all clones. somehow we need to know if source had numberFormatter explicitly created and not just because a getter was called.\r\n\r\n\t\t//this.mask = source.mask; need to think about this, generally this causes a lot of problems\r\n\t\tthis.disabled = source.disabled;\r\n\r\n\t\tthis.virtualParent = source.virtualParent;\r\n\r\n\t\tthis.exportable = source.exportable;\r\n\t\t//@todo: create tooltip if it's on source but not on this?\r\n\t\t//const tooltip = this._tooltip;\r\n\t\t//if (tooltip) {\r\n\t\t//\ttooltip.copyFrom(source.tooltip);\r\n\t\t//}\r\n\r\n\t\tif (source._tooltip) {\r\n\t\t\tif (this._tooltip) {\r\n\t\t\t\tthis._tooltip.copyFrom(source.tooltip);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (source.cloneTooltip) {\r\n\t\t\t\t\tthis.tooltip = source.tooltip.clone();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._tooltip = source.tooltip;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//if ((<any>source)[\"_tooltip\"] && !this._tooltip) {\r\n\t\t//\tthis._tooltip = (<any>source)[\"_tooltip\"];\r\n\t\t//}\r\n\r\n\t\tthis._showSystemTooltip = source.showSystemTooltip;\r\n\r\n\t\t$utils.copyProperties(source.propertyFields, this.propertyFields);\r\n\t\t$utils.copyProperties(source.properties, this);\r\n\r\n\t\tif (source.fillModifier) {\r\n\t\t\tthis.fillModifier = source.fillModifier.clone();\r\n\t\t}\r\n\r\n\t\tif (source.strokeModifier) {\r\n\t\t\tthis.strokeModifier = source.strokeModifier.clone();\r\n\t\t}\r\n\r\n\t\tif (source.focusFilter) {\r\n\t\t\tthis.focusFilter = source.focusFilter.clone();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this.isDisposed()) {\r\n\r\n\t\t\tif (this.showTooltipOn == \"always\" && this.tooltip) {\r\n\t\t\t\tthis.tooltip.hide();\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchImmediately(\"beforedisposed\");\r\n\r\n\t\t\tif (this.isBaseSprite) {\r\n\t\t\t\tif (this.htmlContainer) {\r\n\t\t\t\t\twhile (this.htmlContainer.childNodes.length > 0) {\r\n\t\t\t\t\t\tthis.htmlContainer.removeChild(this.htmlContainer.firstChild);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.isBaseSprite = false;\r\n\t\t\t}\r\n\r\n\t\t\tsuper.dispose();\r\n\r\n\t\t\t// Clear adapters\r\n\t\t\tif (this._adapterO) {\r\n\t\t\t\tthis._adapterO.clear();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.applyOnClones) {\r\n\t\t\t\tif (this._clones) {\r\n\t\t\t\t\tfor (let i = this._clones.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tlet clone = this._clones.getIndex(i);\r\n\t\t\t\t\t\tclone.dispose();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._svgContainer) {\r\n\t\t\t\tthis._svgContainer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._interactionDisposer) {\r\n\t\t\t\tthis._interactionDisposer.dispose();\r\n\t\t\t\tthis._interactionDisposer = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._urlDisposer) {\r\n\t\t\t\tthis._urlDisposer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis.removeFromInvalids();\r\n\r\n\t\t\tif (this.element) {\r\n\t\t\t\tthis.element.dispose();\r\n\t\t\t}\r\n\t\t\tif (this.group) {\r\n\t\t\t\tthis.group.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._numberFormatter) {\r\n\t\t\t\tthis._numberFormatter.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tif (this._focusFilter) {\r\n\t\t\t\tthis._focusFilter.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tlet stroke = this.stroke;\r\n\t\t\tif (stroke && !(stroke instanceof Color) && stroke.dispose) {\r\n\t\t\t\tif (this.clonedFrom && this.clonedFrom.stroke == stroke) {\r\n\t\t\t\t\t// do nothing\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tstroke.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// TODO a bit hacky\r\n\t\t\tlet fill = this.fill;\r\n\t\t\tif (fill && !(fill instanceof Color) && fill.dispose) {\r\n\t\t\t\tif (this.clonedFrom && this.clonedFrom.fill == fill) {\r\n\t\t\t\t\t// do nothing\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfill.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// remove from map\r\n\t\t\tif ($type.hasValue(this.id)) {\r\n\t\t\t\tthis.map.removeKey(this.id);\r\n\t\t\t}\r\n\r\n\t\t\tthis.parent = undefined;\r\n\t\t\tif (this._filters) {\r\n\t\t\t\twhile (this._filters.length > 0) {\r\n\t\t\t\t\tlet filter = <Filter>this._filters.getIndex(0);\r\n\t\t\t\t\tfilter.dispose();\r\n\t\t\t\t\tthis._filters.removeValue(filter);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._alwaysShowDisposers = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is a \"template\".\r\n\t *\r\n\t * Template Sprites act only as a holders for config for other \"real\"\r\n\t * elements to be cloned from.\r\n\t *\r\n\t * Templates are treated differently, as they are not validated, redrawn, or\r\n\t * otherwise are processed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Is template?\r\n\t */\r\n\tpublic set isTemplate(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this._isTemplate != value) {\r\n\t\t\tthis._isTemplate = value;\r\n\r\n\t\t\tif (this instanceof Container) {\r\n\t\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\t\tchild.isTemplate = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.parent = this._parent;\r\n\t\t\t\tthis.removeFromInvalids();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Is template?\r\n\t */\r\n\tpublic get isTemplate(): boolean {\r\n\t\treturn this._isTemplate;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether the element should attempt to construct itself in a way\r\n\t * so that system tooltip is shown if its `readerTitle` is set.\r\n\t *\r\n\t * @param value Show system tooltip?\r\n\t */\r\n\tpublic set showSystemTooltip(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this._showSystemTooltip != value) {\r\n\t\t\tthis._showSystemTooltip = value;\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Show system tooltip?\r\n\t */\r\n\tpublic get showSystemTooltip(): boolean {\r\n\t\tif (!$type.hasValue(this._showSystemTooltip)) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.showSystemTooltip;\r\n\t\t\t}\r\n\t\t\telse if (this._parent) {\r\n\t\t\t\treturn this._parent.showSystemTooltip;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._showSystemTooltip;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * HIERARCHY AND STRUCTURE RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Sprites's top-level [[Container]].\r\n\t *\r\n\t * Please note that in most cases it won't be the chart element.\r\n\t *\r\n\t * To access base chart element, use `baseSprite` instead.\r\n\t *\r\n\t * @return Top-level ascendant\r\n\t */\r\n\tpublic get topParent(): Optional<Container> {\r\n\t\tif (this._topParent) {\r\n\t\t\treturn this._topParent;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.topParent;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @param value {Container} top parent of a sprite\r\n\t */\r\n\tpublic set topParent(value: Container) {\r\n\t\tthis._topParent = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Elements' parent [[Container]].\r\n\t *\r\n\t * @param parent  Parent container\r\n\t */\r\n\tpublic set parent(parent: Optional<Container>) {\r\n\t\tif (this._isTemplate) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// TODO is this needed ?\r\n\t\t$utils.used(this.paper);\r\n\r\n\t\tlet oldParent = this._parent;\r\n\t\tif (oldParent != parent) {\r\n\r\n\t\t\tif (oldParent) {\r\n\t\t\t\toldParent.children.removeValue(this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._parent = parent;\r\n\r\n\t\t\tif (parent) {\r\n\r\n\t\t\t\tthis.topParent = parent.topParent;\r\n\r\n\t\t\t\tif (parent.isTemplate) {\r\n\t\t\t\t\tthis.isTemplate = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.baseId = parent.baseId;\r\n\r\n\t\t\t\tparent.children.push(this);\r\n\t\t\t\t// insert handler at Container invalidates +  invalidatesLayout + adds to group\r\n\r\n\t\t\t\tif (this._tooltip && !this._tooltipContainer) {\r\n\t\t\t\t\tthis._tooltip.parent = parent.tooltipContainer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this._dataItem) {\r\n\t\t\t\t\tthis.dataItem = parent.dataItem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.handleAlwaysShowTooltip();\r\n\r\n\t\t\t\tif (this.dataItem) {\r\n\t\t\t\t\t// No need to apply accessibility if there's no data item\r\n\t\t\t\t\t// The whole reason of applying it here is to populate data\r\n\t\t\t\t\t// placesholders, and if tehre's no data item, it won't work anyway\r\n\t\t\t\t\tthis.applyAccessibility();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.dispatchImmediately(\"parentset\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.topParent = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleAlwaysShow() {\r\n\t\tthis.showTooltip();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleAlwaysShowTooltip() {\r\n\t\tlet sprite: Sprite = this;\r\n\r\n\t\tlet oldDisposers = this._alwaysShowDisposers;\r\n\t\tif (oldDisposers) {\r\n\t\t\t$array.each(oldDisposers, (oldDisposer) => {\r\n\t\t\t\toldDisposer.dispose();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._alwaysShowDisposers = [];\r\n\r\n\t\tif (this.showTooltipOn == \"always\") {\r\n\t\t\twhile (sprite != undefined) {\r\n\t\t\t\tlet disposer = sprite.events.on(\"visibilitychanged\", this.handleAlwaysShow, this, false);\r\n\t\t\t\tthis.addDisposer(disposer);\r\n\t\t\t\tthis._alwaysShowDisposers.push(disposer);\r\n\t\t\t\tsprite = sprite.parent;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Parent container\r\n\t */\r\n\tpublic get parent(): Optional<Container> {\r\n\t\treturn this._parent;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's \"virtual\" parent.\r\n\t *\r\n\t * This is required in ordere to maintain proper inheritance (like\r\n\t * formatters).\r\n\t *\r\n\t * Sometimes an element is a \"logical\" parent, even though it's not a direct\r\n\t * ascendant.\r\n\t *\r\n\t * Example: a bullet is not a child of the axis, but it would make sense\r\n\t * for it to inherit series' formatters.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Virtual parent\r\n\t */\r\n\tpublic set virtualParent(value: Sprite) {\r\n\t\tthis._virtualParent = value;\r\n\t\tif (this.dataItem) {\r\n\t\t\t// No need to apply accessibility if there's no data item\r\n\t\t\t// The whole reason of applying it here is to populate data\r\n\t\t\t// placesholders, and if tehre's no data item, it won't work anyway\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Virtual parent\r\n\t */\r\n\tpublic get virtualParent(): Optional<Sprite> {\r\n\t\treturn this._virtualParent;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves `<defs>` to correct place in DOM.\r\n\t *\r\n\t * Some elements are initially created in \"ghost\" container. When moving\r\n\t * those into proper place in DOM, their respective `<defs>` need to be moved\r\n\t * as well.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic appendDefs(): void {\r\n\r\n\t\tif (this.filterElement) {\r\n\t\t\tthis.paper.appendDef(this.filterElement);\r\n\t\t}\r\n\r\n\t\tlet fill = <any>this.fill;\r\n\r\n\t\tif (fill && fill.element) {\r\n\t\t\tthis.paper.appendDef(fill.element);\r\n\t\t}\r\n\r\n\t\tlet stroke = <any>this.stroke;\r\n\t\tif (stroke && stroke.element) {\r\n\t\t\tthis.paper.appendDef(stroke.element);\r\n\t\t}\r\n\r\n\t\tif (this.fillModifier && this.fill instanceof Color) {\r\n\t\t\tlet fill = <any>this.fillModifier.modify(this.fill);\r\n\t\t\tif (fill && fill.element) {\r\n\t\t\t\tthis.paper.appendDef(fill.element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.strokeModifier && this.stroke instanceof Color) {\r\n\t\t\tlet stroke = <any>this.strokeModifier.modify(this.stroke);\r\n\t\t\tif (stroke && stroke.element) {\r\n\t\t\t\tthis.paper.appendDef(stroke.element);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._clipPath) {\r\n\t\t\tthis.paper.appendDef(this._clipPath);\r\n\t\t}\r\n\r\n\t\tif (this._exportable === false) {\r\n\t\t\tthis.exportable = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[Dictionary]] which maps object ids with their respective\r\n\t * objects.\r\n\t *\r\n\t * Can be used to retrieve any object by id, e.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * console.log(mySprite.map.getKey(\"myid\"));\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * console.log(mySprite.map.getKey(\"myid\"));\r\n\t * ```\r\n\t *\r\n\t * @return Map collection\r\n\t */\r\n\tpublic get map(): Dictionary<string, any> {\r\n\t\tconst top = this.topParent;\r\n\r\n\t\tif (top) {\r\n\t\t\treturn top.map;\r\n\t\t} else if (!this._map) {\r\n\t\t\tthis._map = new Dictionary<string, any>();\r\n\t\t}\r\n\r\n\t\treturn this._map;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Map collection\r\n\t */\r\n\tpublic get delayedMap(): Dictionary<string, any> {\r\n\t\tconst top = this.topParent;\r\n\r\n\t\tif (top) {\r\n\t\t\treturn top.delayedMap;\r\n\t\t} else if (!this._delayedMap) {\r\n\t\t\tthis._delayedMap = new Dictionary<string, any>();\r\n\t\t}\r\n\r\n\t\treturn this._delayedMap;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's user-defined ID.\r\n\t *\r\n\t * Will throw an Error if there already is an object with the same ID.\r\n\t *\r\n\t * Please note that above check will be performed withing the scope of the\r\n\t * current chart instance. It will not do checks across other chart instances\r\n\t * or in globally in DOM.\r\n\t *\r\n\t * Make sure the IDs are unique.\r\n\t *\r\n\t * @param value ID\r\n\t */\r\n\tpublic set id(value: string) {\r\n\t\tif (this._id != value) {\r\n\t\t\tthis._id = value;\r\n\t\t\tif (this.map.hasKey(value)) {\r\n\t\t\t\tthrow Error(\"Duplicate id (\" + value + \") used on multiple objects.\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.map.setKey(value, this);\r\n\t\t\t}\r\n\t\t\tif (options.autoSetClassName) {\r\n\t\t\t\tthis.setClassName();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return ID\r\n\t */\r\n\tpublic get id(): string {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * ELEMENT AND DOM TREE MANIPULATION AND MEASURING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns DOM element reference associated with this element.\r\n\t *\r\n\t * @readonly\r\n\t * @return DOM element\r\n\t */\r\n\tpublic get dom(): SVGSVGElement {\r\n\t\treturn this.group.node;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Paper]] instance to place elements on.\r\n\t *\r\n\t * If there's no Paper set for this element, it goes up the ascendant tree\r\n\t * until it finds one.\r\n\t *\r\n\t * This method is used by important `addChild()` method, so it's essential\r\n\t * to have a [[Paper]] instance.\r\n\t *\r\n\t * If this element has a separate `htmlContainer` set, it will have a\r\n\t * [[Paper]] instance itself.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tthis.setPaper(paper);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t * @ignore\r\n\t * @param paper Paper\r\n\t * @return true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\t\tlet oldPaper = this._paper;\r\n\r\n\t\tif (oldPaper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\r\n\t\t\tthis.appendDefs();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet parent = this._parent;\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn parent.paper;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * An HTML element to be used when placing wrapper element (`<div>`)\r\n\t * for the whole chart.\r\n\t *\r\n\t * This is the same for **all** elements within the same chart.\r\n\t *\r\n\t * @param htmlContainer HTML element\r\n\t */\r\n\tpublic set htmlContainer(htmlContainer: $type.Optional<HTMLElement>) {\r\n\t\tthis._htmlContainer = htmlContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * @return HTML element\r\n\t */\r\n\tpublic get htmlContainer(): $type.Optional<HTMLElement> {\r\n\t\tif (this._htmlContainer) {\r\n\t\t\treturn this._htmlContainer;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet parent = this._parent;\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn parent.htmlContainer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates (if not yet created) and returns element's `<title>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Title element\r\n\t */\r\n\tpublic get titleElement(): AMElement {\r\n\t\tif (!this._titleElement) {\r\n\t\t\tthis._titleElement = this.paper.add(\"title\");\r\n\t\t\tthis.group.add(this._titleElement);\r\n\t\t}\r\n\t\treturn this._titleElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates (if not yet created) and returns element's `<desc>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Desc element\r\n\t */\r\n\tpublic get descriptionElement(): AMElement {\r\n\t\tif (!this._descriptionElement) {\r\n\t\t\tthis._descriptionElement = this.paper.add(\"desc\");\r\n\t\t\tthis.group.add(this._descriptionElement);\r\n\t\t}\r\n\t\treturn this._descriptionElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns list of SVG filters (effects) applied to element. If the filter\r\n\t * list is not yet initilized, creates and returns an empty one.\r\n\t * Note, not all filters combine well with one another. We recommend using one filter per sprite.\r\n\t *\r\n\t * @return List of filters\r\n\t */\r\n\tpublic get filters(): List<Filter> {\r\n\t\tif (!this._filters) {\r\n\t\t\tthis._filters = new List<Filter>();\r\n\t\t\t// TODO only add certain events ?\r\n\t\t\tthis._disposers.push(this._filters.events.onAll(this.applyFilters, this));\r\n\t\t\tthis._disposers.push(new ListDisposer(this._filters));\r\n\t\t}\r\n\t\treturn this._filters;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets required SVG attributes. Must be called every time an element is\r\n\t * redrawn so that attributes are (re)applied.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected setSVGAttributes(): void {\r\n\t\tthis.fill = this.fill;\r\n\t\tthis.opacity = this.opacity;\r\n\t\tthis.fillOpacity = this.fillOpacity;\r\n\t\tthis.stroke = this.stroke;\r\n\t\tthis.strokeOpacity = this.strokeOpacity;\r\n\t\tthis.shapeRendering = this.shapeRendering;\r\n\t\tthis.strokeDasharray = this.strokeDasharray;\r\n\t\tthis.strokeDashoffset = this.strokeDashoffset;\r\n\t\tthis.strokeLinecap = this.strokeLinecap;\r\n\t\tthis.strokeLinejoin = this.strokeLinejoin;\r\n\t\tthis.focusable = this.focusable;\r\n\t\tthis.tabindex = this.tabindex;\r\n\t\tthis.role = this.role;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets an attribute directly on an SVG element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param attribute Attribute object\r\n\t */\r\n\tprotected setSVGAttribute(attribute: ISVGAttribute): void {\r\n\t\tthis.group.attr(attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an attribute directly from SVG element.\r\n\t *\r\n\t * @param attribute Attribute key to remove\r\n\t */\r\n\tprotected removeSVGAttribute(attribute: string): void {\r\n\t\tthis.group.removeAttr(attribute);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `class` attribute of the elements SVG node.\r\n\t *\r\n\t * Uses `am4core.options.classNamePrefix`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic setClassName(): void {\r\n\r\n\t\tlet className = this.className;\r\n\t\tlet classNamePrefix = options.classNamePrefix;\r\n\r\n\t\tif (this.element) {\r\n\t\t\tthis.element.addClass(classNamePrefix + className);\r\n\t\t}\r\n\r\n\t\tthis.group.addClass(classNamePrefix + className + \"-group\");\r\n\r\n\t\tif ($type.hasValue(this.id)) {\r\n\t\t\tthis.group.addClass(classNamePrefix + this.id);\r\n\t\t}\r\n\r\n\t\tif (this.userClassName) {\r\n\t\t\tthis.group.addClass(this.userClassName);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an `id` attribute the the element and returns the id.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Element's ID\r\n\t */\r\n\tpublic uidAttr(): string {\r\n\t\tthis.setSVGAttribute({ \"id\": this.uid });\r\n\t\treturn this.uid;\r\n\t}\r\n\r\n\t/**\r\n\t * [updateClipPath description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected updateClipPath(): void {\r\n\t\tconst element = this._clipElement;\r\n\r\n\t\tif (element) {\r\n\t\t\telement.moveTo({ x: this.mask.pixelX, y: this.mask.pixelY });\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createClipPath() {\r\n\t\tif (!this._clipPath) {\r\n\t\t\tthis._clipPath = this.paper.addGroup(\"clipPath\");\r\n\t\t\tthis.paper.appendDef(this._clipPath);\r\n\t\t\tthis._disposers.push(this._clipPath);\r\n\t\t\tlet id: string = registry.getUniqueId();\r\n\t\t\tthis._clipPath.attr({ \"id\": id });\r\n\t\t\tthis.group.attr({ \"clip-path\": \"url(\\\"\" + $utils.getBaseURI() + id + \"\\\")\" });\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies the mask Sprite.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyMask(): void {\r\n\t\tlet mask = this.mask;\r\n\r\n\t\tif (this._clipPath && mask) {\r\n\t\t\t// Container\r\n\t\t\tif (mask instanceof Container) {\r\n\t\t\t\tthis._clipElement.attr({ \"width\": $math.max(0, mask.pixelWidth), \"height\": $math.max(0, mask.pixelHeight) });\r\n\r\n\t\t\t\tlet point = $utils.spritePointToSprite({ x: mask.pixelX, y: mask.pixelY }, mask.parent, this);\r\n\r\n\t\t\t\tthis._clipPath.x = point.x;\r\n\t\t\t\tthis._clipPath.y = point.y;\r\n\t\t\t}\r\n\t\t\t// Sprite\r\n\t\t\telse {\r\n\t\t\t\tif (mask.element && mask.element != this._clipElement) {\r\n\t\t\t\t\tthis._clipElement = mask.element;\r\n\t\t\t\t\tthis._clipPath.add(this._clipElement);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._clipPath.scale = mask.scale;\r\n\t\t\t\tthis._clipPath.x = mask.pixelX;\r\n\t\t\t\tthis._clipPath.y = mask.pixelY;\r\n\t\t\t\tthis._clipPath.rotation = mask.rotation;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters(): void {\r\n\t\t// we create a separate filter for each sprite as otherwise it would be impossible to animate filter.\r\n\t\t// svg doesn't support multiple filters applied to one element, so we put all the primitives to one filterElement of a sprite.\r\n\t\tif (this._filters && this._filters.length > 0) {\r\n\r\n\t\t\tlet width = 100;\r\n\t\t\tlet height = 100;\r\n\r\n\t\t\tif (!this.filterElement) {\r\n\t\t\t\tthis.filterElement = this.paper.addGroup(\"filter\");\r\n\t\t\t\tthis._disposers.push(this.filterElement);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.filterElement.removeChildNodes();\r\n\t\t\t}\r\n\r\n\t\t\tthis.paper.appendDef(this.filterElement);\r\n\r\n\t\t\tlet id: string = \"filter-\" + this.uid;\r\n\t\t\tthis.filterElement.attr({ \"id\": id });\r\n\r\n\t\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\t\tfilter.sprite = this;\r\n\t\t\t\tfilter.paper = this.paper;\r\n\r\n\t\t\t\tthis.filterElement.attr({ filterUnits: filter.filterUnits });\r\n\r\n\t\t\t\tfilter.appendPrimitives(this.filterElement);\r\n\r\n\t\t\t\tif (filter.width > width) {\r\n\t\t\t\t\twidth = filter.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (filter.height > height) {\r\n\t\t\t\t\theight = filter.height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfilter.scale = this.globalScale;\r\n\t\t\t});\r\n\r\n\t\t\tlet w = width + \"%\";\r\n\t\t\tlet h = height + \"%\";\r\n\r\n\t\t\t/* temporarily removed as it is breaking tooltips on Safari @todo come back to this\r\n\t\t\tif (this._measuredHeight <= 1) {\r\n\t\t\t\th = height + \"\";\r\n\t\t\t}\r\n\r\n\t\t\tif (this._measuredWidth <= 1) {\r\n\t\t\t\th = width + \"\";\r\n\t\t\t}*/\r\n\r\n\t\t\tthis.filterElement.attr({ \"width\": w, \"height\": h, \"x\": -(width - 100) / 2 + \"%\", \"y\": -(height - 100) / 2 + \"%\" });\r\n\r\n\t\t\tthis.group.attr({ \"filter\": \"url(\\\"\" + $utils.getBaseURI() + id + \"\\\")\" });\r\n\t\t}\r\n\t\telse if (this.filterElement) {\r\n\t\t\tthis.group.removeAttr(\"filter\");\r\n\t\t\tthis.filterElement.removeChildNodes();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [removeClipPath description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected removeClipPath(): void {\r\n\t\tif (this._clipPath) {\r\n\t\t\t//this._clipPath.dispose();\r\n\t\t\tthis.removeDispose(this._clipPath);\r\n\t\t\tthis._clipPath = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [setElement description]\r\n\t *\r\n\t * @ignore\r\n\t * @todo Description\r\n\t * @param element [description]\r\n\t */\r\n\tpublic setElement(element: AMElement) {\r\n\t\tthis.element = element;\r\n\t\tthis.setSVGAttributes();\r\n\t\tthis.applyAccessibility();\r\n\t}\r\n\r\n\t/**\r\n\t * The main element for this Sprite, usually an SVG `<g>`.\r\n\t *\r\n\t * All other sub-elements are created in it.\r\n\t *\r\n\t * @param element  Element\r\n\t */\r\n\tpublic set element(element: Optional<AMElement>) {\r\n\r\n\t\t// Destroy previous element if there was one before\r\n\t\tthis.removeElement();\r\n\r\n\t\t// Set new element\r\n\t\tthis._element = element;\r\n\r\n\t\t// Add element to group\r\n\t\t// Since we are adding Element to group, which is already in the\r\n\t\t// `.disposers` it will be removed automatically when Sprite is disposed\r\n\t\t// of\r\n\t\tthis.group.add(element);\r\n\r\n\t\tif (element.node instanceof SVGPathElement) {\r\n\t\t\tthis._isPath = true;\r\n\t\t}\r\n\r\n\t\t// This is needed if someone is setting element not in draw method but\r\n\t\t// from outside\r\n\t\tif (!this.invalid) {\r\n\t\t\tthis.validate();\r\n\t\t}\r\n\r\n\t\tif (options.autoSetClassName) {\r\n\t\t\tthis.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get element(): Optional<AMElement> {\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t/**\r\n\t * HTML container (`<div>`) which is used to place chart's `<svg>` element\r\n\t * in.\r\n\t *\r\n\t * @return Container for chart elements\r\n\t */\r\n\tpublic get svgContainer(): $type.Optional<SVGContainer> {\r\n\t\tif (this._svgContainer) {\r\n\t\t\treturn this._svgContainer;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.svgContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets HTML container to add SVG and other chart elements to.\r\n\t *\r\n\t * @param svgContainer Container for chart elements\r\n\t */\r\n\tpublic set svgContainer(svgContainer: $type.Optional<SVGContainer>) {\r\n\t\tthis._svgContainer = svgContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * Measures main element.\r\n\t *\r\n\t * Saves measurements into private `_bbox` property.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected measureElement() {\r\n\r\n\t\tif (this.element) {\r\n\t\t\tif (this.definedBBox) {\r\n\t\t\t\tthis._bbox = this.definedBBox;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet svgBBox: IRectangle = this.element.getBBox();\r\n\t\t\t\tthis._bbox = { x: svgBBox.x, y: svgBBox.y, width: svgBBox.width, height: svgBBox.height };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Positions element according its center settings.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateCenter() {\r\n\t\tif (this.element) {\r\n\t\t\tlet prevElementTransform: string = this.element.transformString;\r\n\r\n\t\t\tlet bbox = this.bbox;\r\n\r\n\t\t\tlet ex = 0;\r\n\t\t\tlet ey = 0;\r\n\r\n\t\t\tlet elementX = bbox.x;\r\n\t\t\tlet elementY = bbox.y;\r\n\r\n\t\t\tlet elementWidth = bbox.width;\r\n\t\t\tlet elementHeigth = bbox.height;\r\n\r\n\t\t\tlet pixelPaddingLeft = this.pixelPaddingLeft;\r\n\t\t\tlet pixelPaddingRight = this.pixelPaddingRight;\r\n\t\t\tlet pixelPaddingTop = this.pixelPaddingTop;\r\n\t\t\tlet pixelPaddingBottom = this.pixelPaddingBottom;\r\n\r\n\t\t\t// add padding to the measured size\r\n\t\t\tlet measuredWidth = $math.max(elementWidth + pixelPaddingLeft + pixelPaddingRight, this.pixelWidth);\r\n\t\t\tlet measuredHeight = $math.max(elementHeigth + pixelPaddingTop + pixelPaddingBottom, this.pixelHeight);\r\n\r\n\t\t\t// extremes\r\n\t\t\tlet left = bbox.x;\r\n\t\t\tlet right = bbox.x + measuredWidth;\r\n\r\n\t\t\tlet top = bbox.y;\r\n\t\t\tlet bottom = bbox.y + measuredHeight;\r\n\r\n\t\t\tlet horizontalCenter = this.horizontalCenter;\r\n\t\t\tlet verticalCenter = this.verticalCenter;\r\n\r\n\t\t\tswitch (horizontalCenter) {\r\n\t\t\t\tcase \"none\":\r\n\t\t\t\t\tex = elementX + pixelPaddingLeft;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tex = pixelPaddingLeft;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tex = pixelPaddingLeft - (elementWidth + pixelPaddingRight + pixelPaddingLeft) / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tex = -pixelPaddingRight - elementWidth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (verticalCenter) {\r\n\t\t\t\tcase \"none\":\r\n\t\t\t\t\tey = elementY + pixelPaddingTop;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tey = pixelPaddingTop;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"middle\":\r\n\t\t\t\t\tey = pixelPaddingTop - (elementHeigth + pixelPaddingBottom + pixelPaddingTop) / 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tey = -pixelPaddingBottom - elementHeigth;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis._measuredHeight = measuredHeight;\r\n\t\t\tthis._measuredWidth = measuredWidth;\r\n\r\n\t\t\tlet x: number = $math.round(ex - elementX, this._positionPrecision, true);\r\n\t\t\tlet y: number = $math.round(ey - elementY, this._positionPrecision, true);\r\n\r\n\t\t\tthis.ex = x - pixelPaddingLeft;\r\n\t\t\tthis.ey = y - pixelPaddingTop;\r\n\r\n\t\t\tthis.maxLeft = left + x - pixelPaddingLeft;\r\n\t\t\tthis.maxRight = right + x - pixelPaddingLeft;\r\n\r\n\t\t\tthis.maxTop = top + y - pixelPaddingTop;\r\n\t\t\tthis.maxBottom = bottom + y - pixelPaddingTop;\r\n\r\n\t\t\tif (this.pixelPerfect && options.pixelPerfectPrecision == 0) {\r\n\t\t\t\tx -= 0.5;\r\n\t\t\t\ty -= 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tthis.element.moveTo({ x: x, y: y });\r\n\r\n\t\t\tif (prevElementTransform != this.element.transformString) {\r\n\t\t\t\tthis.dispatchImmediately(\"transformed\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the whole element.\r\n\t *\r\n\t * Returns `true` if the size has changed from the last measurement.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Did the size changed from the last measurement?\r\n\t */\r\n\tpublic measure(): boolean {\r\n\r\n\t\tthis.updateCenter();\r\n\r\n\t\tlet measuredWidth = this._measuredWidth;\r\n\t\tlet measuredHeight = this._measuredHeight;\r\n\r\n\t\t// extremes\r\n\t\tlet left = this.maxLeft;\r\n\t\tlet right = this.maxRight;\r\n\r\n\t\tlet top = this.maxTop;\r\n\t\tlet bottom = this.maxBottom;\r\n\r\n\t\t// non-parent wise size\r\n\t\tthis._measuredWidthSelf = measuredWidth;\r\n\t\tthis._measuredHeightSelf = measuredHeight;\r\n\r\n\t\tlet positionPrecision = this._positionPrecision;\r\n\r\n\t\tthis.maxLeftSelf = this.maxLeft;\r\n\t\tthis.maxRightSelf = this.maxRight;\r\n\t\tthis.maxTopSelf = this.maxTop;\r\n\t\tthis.maxBottomSelf = this.maxBottom;\r\n\r\n\t\t// if a sprite is rotated or scaled, calculate measured size after transformations\r\n\r\n\t\tif (this.rotation !== 0 || this.scale !== 1 || this.nonScaling) {\r\n\r\n\t\t\t// not good to handleGlobalScale here.\r\n\t\t\tif (this.nonScalingStroke) {\r\n\t\t\t\tthis.strokeWidth = this.strokeWidth;\r\n\t\t\t}\r\n\r\n\t\t\tlet svg = this.paper.svg;\r\n\r\n\t\t\tlet matrix: SVGMatrix = svg.createSVGMatrix();\r\n\t\t\tlet rotation: number = this.rotation;\r\n\r\n\t\t\tlet scale = this.scale;\r\n\r\n\t\t\tif (this.nonScaling) {\r\n\t\t\t\tscale = this.scale / this.globalScale;\r\n\t\t\t}\r\n\r\n\t\t\tmatrix.a = $math.cos(rotation) * scale;\r\n\t\t\tmatrix.c = - $math.sin(rotation) * scale;\r\n\t\t\tmatrix.e = 0;\r\n\t\t\tmatrix.b = $math.sin(rotation) * scale;\r\n\t\t\tmatrix.d = $math.cos(rotation) * scale;\r\n\t\t\tmatrix.f = 0;\r\n\r\n\t\t\tlet p1: SVGPoint = svg.createSVGPoint();\r\n\t\t\tp1.x = left;\r\n\t\t\tp1.y = top;\r\n\r\n\t\t\tlet p2: SVGPoint = svg.createSVGPoint();\r\n\t\t\tp2.x = right;\r\n\t\t\tp2.y = top;\r\n\r\n\t\t\tlet p3: SVGPoint = svg.createSVGPoint();\r\n\t\t\tp3.x = right;\r\n\t\t\tp3.y = bottom;\r\n\r\n\t\t\tlet p4: SVGPoint = svg.createSVGPoint();\r\n\t\t\tp4.x = left;\r\n\t\t\tp4.y = bottom;\r\n\r\n\t\t\tlet pt1: SVGPoint = p1.matrixTransform(matrix);\r\n\t\t\tlet pt2: SVGPoint = p2.matrixTransform(matrix);\r\n\t\t\tlet pt3: SVGPoint = p3.matrixTransform(matrix);\r\n\t\t\tlet pt4: SVGPoint = p4.matrixTransform(matrix);\r\n\r\n\t\t\tleft = Math.min(pt1.x, pt2.x, pt3.x, pt4.x);\r\n\t\t\tright = Math.max(pt1.x, pt2.x, pt3.x, pt4.x);\r\n\t\t\ttop = Math.min(pt1.y, pt2.y, pt3.y, pt4.y);\r\n\t\t\tbottom = Math.max(pt1.y, pt2.y, pt3.y, pt4.y);\r\n\r\n\t\t\tmeasuredWidth = right - left;\r\n\t\t\tmeasuredHeight = bottom - top;\r\n\r\n\t\t\tthis.maxLeft = $math.round(left, positionPrecision, true);\r\n\t\t\tthis.maxRight = $math.round(right, positionPrecision, true);\r\n\t\t\tthis.maxTop = $math.round(top, positionPrecision, true);\r\n\t\t\tthis.maxBottom = $math.round(bottom, positionPrecision, true);\r\n\t\t}\r\n\r\n\t\tthis._measuredWidth = $math.round(measuredWidth, positionPrecision, true);\r\n\t\tthis._measuredHeight = $math.round(measuredHeight, positionPrecision, true);\r\n\r\n\r\n\t\t// dispatch event\r\n\t\tif (this._measuredWidth != this._prevMeasuredWidth || this._measuredHeight != this._prevMeasuredHeight) {\r\n\t\t\tthis._prevMeasuredHeight = this._measuredHeight;\r\n\t\t\tthis._prevMeasuredWidth = this._measuredWidth;\r\n\r\n\t\t\t// TODO clear existing sizechanged dispatches ?\r\n\t\t\tthis.dispatch(\"sizechanged\");\r\n\r\n\t\t\tif ((this.isHover || this.showTooltipOn == \"hit\" || this.showTooltipOn == \"always\") && this.tooltip && this.tooltip.visible && ($type.hasValue(this.tooltipText) || $type.hasValue(this.tooltipHTML))) {\r\n\t\t\t\tthis.updateTooltipPosition();\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Insert this element before sibling element.\r\n\t *\r\n\t * @param sprite  Target element\r\n\t * @return This element\r\n\t */\r\n\tpublic insertBefore(sprite: Sprite): Sprite {\r\n\t\tlet parent = this._parent;\r\n\r\n\t\tif (parent) {\r\n\t\t\tlet index: number = parent.children.indexOf(sprite);\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tparent.children.moveValue(this, index);\r\n\t\t\t\tparent.sortChildren();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Insert this element after sibling element.\r\n\t *\r\n\t * @param sprite  Target element\r\n\t * @return This element\r\n\t */\r\n\tpublic insertAfter(sprite: Sprite): Sprite {\r\n\t\tlet parent = this._parent;\r\n\r\n\t\tif (parent) {\r\n\t\t\tlet index: number = parent.children.indexOf(sprite);\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tparent.children.moveValue(this, index + 1);\r\n\t\t\t\tparent.sortChildren();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the main SVG element.\r\n\t *\r\n\t * This does not destroy the whole Sprite element. To do that use\r\n\t * `dispose()` instead.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeElement() {\r\n\t\t// remove visual element\r\n\t\tif (this._element) {\r\n\t\t\tthis.removeDispose(this._element);\r\n\t\t\tthis._element = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative (percent) value of the X coordindate within this element.\r\n\t *\r\n\t * A relative value is a hundredth of a percent. So 100% would result in a 1\r\n\t * as relative value.\r\n\t *\r\n\t * @param value  Absolute or relative X coordinate\r\n\t * @return Relative value\r\n\t */\r\n\tpublic getRelativeX(value: number | Percent): number {\r\n\t\tif (value instanceof Percent) {\r\n\t\t\treturn value.value;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn value / this._parent.innerWidth;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns relative (percent) value of the Y coordindate within this element.\r\n\t *\r\n\t * A relative value is a hundredth of a percent. So 100% would result in a 1\r\n\t * as relative value.\r\n\t *\r\n\t * @param value  Absolute or relative Y coordinate\r\n\t * @return Relative value\r\n\t */\r\n\tpublic getRelativeY(value: number | Percent): number {\r\n\t\tif (value instanceof Percent) {\r\n\t\t\treturn value.value;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn value / this._parent.innerHeight;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an X coordinate in pixel within the element.\r\n\t *\r\n\t * If number is passed in as parameter, the same number will be returned\r\n\t * back.\r\n\t *\r\n\t * If [[Percent]] is passed in, it will be recalculated to pixels.\r\n\t *\r\n\t * @param value  Absolute or relative X coordinate\r\n\t * @return X coordinate in pixels\r\n\t */\r\n\tpublic getPixelX(value: number | Percent): number {\r\n\r\n\t\t// we don't use $utils.valueToRelative as this would mean that we should access parent.innerWidth\r\n\t\t// all the time and this would result chain of the same actions and will slow down the system a lot\r\n\r\n\t\tlet pixel: number = 0;\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tpixel = value;\r\n\t\t}\r\n\t\telse if (value instanceof Percent) {\r\n\t\t\tlet relative: number = value.value;\r\n\r\n\t\t\tif (this._parent) {\r\n\t\t\t\tpixel = $math.round(this._parent.innerWidth * relative, this._positionPrecision, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn pixel;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an Y coordinate in pixel within the element.\r\n\t *\r\n\t * If number is passed in as parameter, the same number will be returned\r\n\t * back.\r\n\t *\r\n\t * If [[Percent]] is passed in, it will be recalculated to pixels.\r\n\t *\r\n\t * @param value  Absolute or relative Y coordinate\r\n\t * @return Y coordinate in pixels\r\n\t */\r\n\tpublic getPixelY(value: number | Percent): number {\r\n\r\n\t\t// we don't use $utils.valueToRelative as this would mean that we should access parent.innerWidth\r\n\t\t// all the time and this would result chain of the same actions and will slow down the system a lot\r\n\r\n\t\tlet pixel: number = 0;\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tpixel = value;\r\n\t\t}\r\n\t\telse if (value instanceof Percent) {\r\n\t\t\tlet relative: number = value.value;\r\n\r\n\t\t\tif (this._parent) {\r\n\t\t\t\tpixel = $math.round(this._parent.innerHeight * relative, this._positionPrecision, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn pixel;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the element to a specified coordinates.\r\n\t *\r\n\t * Using this method is preferred method of moving element, as it saves some\r\n\t * CPU processing power over setting `x` and `y` properties separately.\r\n\t *\r\n\t * The method respects element's center settings. The element will be\r\n\t * positioned so that `point` coordinates come in whatever \"center\" of the\r\n\t * element is, as set in `horizontalCenter` and `verticalCenter`.\r\n\t *\r\n\t * Besides moving the element, you can also at the same time scale and\r\n\t * rotate the element.\r\n\t *\r\n\t * @param point     New coordinates\r\n\t * @param rotation  New rotation\r\n\t * @param scale     New Scale\r\n\t */\r\n\tpublic moveTo(point: IPoint, rotation?: number, scale?: number, isDragged?: boolean): void {\r\n\t\tif (this.isDragged && !isDragged) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (point) {\r\n\t\t\tif ($type.isNumber(point.x)) {\r\n\t\t\t\tthis.setPropertyValue(\"x\", $math.round(point.x, this._positionPrecision, true));\r\n\t\t\t}\r\n\t\t\tif ($type.isNumber(point.y)) {\r\n\t\t\t\tthis.setPropertyValue(\"y\", $math.round(point.y, this._positionPrecision, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(rotation)) {\r\n\t\t\tthis.rotation = rotation;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(scale)) {\r\n\t\t\tthis.scale = scale;\r\n\t\t}\r\n\r\n\t\t// must leave this\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets another [[Sprite]] element as this elements mask.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param mask A [[Sprite]] to use as mask\r\n\t */\r\n\tpublic set mask(mask: Optional<Sprite>) {\r\n\t\tif (this._mask.get() !== mask) {\r\n\t\t\t// this is good\r\n\t\t\tif (mask) {\r\n\r\n\t\t\t\tthis.createClipPath();\r\n\r\n\t\t\t\tif (!(mask instanceof Container)) {\r\n\t\t\t\t\tmask.isMeasured = false;\r\n\t\t\t\t\tif (mask.element) {\r\n\t\t\t\t\t\tthis._clipElement = mask.element;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._clipElement = this.paper.add(\"rect\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._clipElement) {\r\n\t\t\t\t\tthis._clipPath.add(this._clipElement);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._mask.set(mask, new MultiDisposer([\r\n\t\t\t\t\t//mask.addEventListener(SpriteEvent.TRANSFORMED, this.applyMask, false, this);\r\n\t\t\t\t\tmask.events.on(\"maxsizechanged\", () => { if (this.inited) { this.applyMask(); } }, undefined, false),\r\n\t\t\t\t\tmask.events.on(\"validated\", this.applyMask, this, false),\r\n\t\t\t\t\tmask.events.on(\"positionchanged\", this.applyMask, this, false)\r\n\t\t\t\t]));\r\n\r\n\t\t\t\tthis.applyMask();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._mask.reset();\r\n\t\t\t\tthis.group.removeAttr(\"clip-path\");\r\n\t\t\t\tthis.removeClipPath();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns [[Sprite]] element currently used as mask for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return A [[Sprite]] to use as mask\r\n\t */\r\n\tpublic get mask(): Optional<Sprite> {\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._mask.get();\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"mask\", this._mask.get());\r\n\t\t}\r\n\t}\r\n\r\n\t// you can set IRectangle as a mask instead o a sprite. Note, the changes of the object won't be monitored\r\n\r\n\t/**\r\n\t * Instead of creating a [[Sprite]] for mask, you can just use a\r\n\t * [[Rectangle]] by setting this accessor.\r\n\t *\r\n\t * Please note that the element will not monitor any changes to the mask\r\n\t * rectangle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param rect Mask Rectangle\r\n\t */\r\n\tpublic set maskRectangle(rect: IRectangle) {\r\n\t\tif (rect) {\r\n\r\n\t\t\tthis.createClipPath();\r\n\r\n\t\t\tif (!this._clipElement) {\r\n\t\t\t\tthis._clipElement = this.paper.add(\"rect\");\r\n\t\t\t\tthis._clipPath.add(this._clipElement);\r\n\t\t\t}\r\n\t\t\tthis._clipElement.attr({ \"width\": rect.width, \"height\": rect.height });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeClipPath();\r\n\t\t\tthis._clipElement = undefined;\r\n\t\t}\r\n\t\tthis._maskRectangle = rect;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Mask Rectangle\r\n\t */\r\n\tpublic get maskRectangle(): IRectangle {\r\n\t\treturn this._maskRectangle;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element was already measured.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Was element already measured?\r\n\t */\r\n\tpublic set isMeasured(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\r\n\t\tif (!value) {\r\n\t\t\tthis._measuredWidth = 0;\r\n\t\t\tthis._measuredHeight = 0;\r\n\t\t\t//this._pixelHeight = 0;\r\n\t\t\t//this._pixelWidth = 0;\r\n\t\t}\r\n\r\n\t\tif (this._isMeasured != value) {\r\n\t\t\tthis._isMeasured = value;\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Was element already measured?\r\n\t */\r\n\tpublic get isMeasured(): boolean {\r\n\t\treturn this._isMeasured;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the this element has any of its parts overlapping with another\r\n\t * element.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @param sprite  Second element to test again\r\n\t * @return Overlapping?\r\n\t */\r\n\tpublic hitTest(sprite: Sprite): boolean {\r\n\t\t// validate, otherwise we will not know measuredWidth and measuredHeight\r\n\t\tif (this.invalid) {\r\n\t\t\tthis.validate();\r\n\t\t}\r\n\t\tif (sprite.invalid) {\r\n\t\t\tsprite.validate();\r\n\t\t}\r\n\r\n\t\tlet ax1 = this.pixelX + this.maxLeft;\r\n\t\tlet ay1 = this.pixelY + this.maxTop;\r\n\t\tlet ax2 = ax1 + this.maxRight;\r\n\t\tlet ay2 = ay1 + this.maxBottom;\r\n\r\n\t\tlet bx1 = sprite.pixelX + sprite.maxLeft;\r\n\t\tlet by1 = sprite.pixelY + sprite.maxTop;\r\n\t\tlet bx2 = bx1 + sprite.maxRight;\r\n\t\tlet by2 = by1 + sprite.maxBottom;\r\n\r\n\t\treturn !(bx1 > ax2 || bx2 < ax1 || by1 > ay2 || by2 < ay1);\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * STATE-RELATED\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns `true` if Sprite has already finished initializing.\r\n\t *\r\n\t * @return Initialized?\r\n\t */\r\n\tpublic get inited(): boolean {\r\n\t\treturn this._inited;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if Sprite has already finished initializing and is ready.\r\n\t *\r\n\t * If this object is a [[Container]] it will wait for all of its children\r\n\t * are ready before becoming ready itself and firing a `\"ready\"` event.\r\n\t *\r\n\t * @return is ready?\r\n\t */\r\n\tpublic isReady(): boolean {\r\n\t\treturn this._ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a collection of element's available [[SpriteState]] entries.\r\n\t *\r\n\t * @see {@link SpriteState}\r\n\t * @return States\r\n\t */\r\n\tpublic get states(): DictionaryTemplate<string, SpriteState<this[\"_properties\"], this[\"_adapter\"]>> {\r\n\t\tif (!this._states) {\r\n\t\t\tconst state = new SpriteState<this[\"_properties\"], this[\"_adapter\"]>();\r\n\r\n\t\t\t// works\r\n\t\t\tthis._states = new DictionaryTemplate<string, SpriteState<this[\"_properties\"], this[\"_adapter\"]>>(state);\r\n\r\n\t\t\t// TODO what about removeKey ?\r\n\t\t\tthis._disposers.push(this._states.events.on(\"insertKey\", this.processState, this, false));\r\n\t\t\tthis._disposers.push(this._states.events.on(\"setKey\", this.processState, this, false));\r\n\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._states));\r\n\t\t\tthis._disposers.push(state);\r\n\t\t}\r\n\t\treturn this._states;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[SpriteState]] object for \"hidden\" state.\r\n\t *\r\n\t * This is a shortcut to `this.states.getKey(\"hidden\")`.\r\n\t *\r\n\t * @return Hidden state\r\n\t */\r\n\tpublic get hiddenState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\t\tif (!this.states.getKey(\"hidden\")) {\r\n\t\t\tlet hiddenState = this.states.create(\"hidden\");\r\n\t\t\thiddenState.properties.opacity = 0;\r\n\t\t\thiddenState.properties.visible = false;\r\n\t\t}\r\n\r\n\t\treturn this.states.getKey(\"hidden\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[SpriteState]] object for \"default\" state.\r\n\t *\r\n\t * This is a shortcut to `this.states.getKey(\"default\")`.\r\n\t *\r\n\t * @return Hidden state\r\n\t */\r\n\tpublic get defaultState(): SpriteState<this[\"_properties\"], this[\"_adapter\"]> {\r\n\r\n\t\tif (!this.states.getKey(\"default\")) {\r\n\t\t\tlet defaultState = this.states.create(\"default\");\r\n\t\t\tdefaultState.properties.opacity = 1;\r\n\t\t}\r\n\r\n\t\treturn this.states.getKey(\"default\");\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if some key states are defined and updates Sprite properties\r\n\t * accordingly.\r\n\t *\r\n\t * For example if there's a state \"down\" defined for Sprite, we automatically\r\n\t * make it \"clickable\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event An event which caused state list update\r\n\t */\r\n\tprotected processState(event: IDictionaryEvents<string, SpriteState<this[\"_properties\"], this[\"_adapter\"]>>[\"insertKey\" | \"setKey\"]): void {\r\n\t\tlet state: SpriteState<this[\"_properties\"], this[\"_adapter\"]> = event.newValue;\r\n\t\tstate.sprite = this;\r\n\t\tstate.name = event.key;\r\n\t\tif (this.states.hasKey(\"hover\") || (this.showTooltipOn == \"hover\" && ($type.hasValue(this.tooltipHTML) || $type.hasValue(this.tooltipText)))) {\r\n\t\t\tthis.hoverable = true;\r\n\t\t}\r\n\r\n\t\tif (this.states.hasKey(\"down\") || (this.showTooltipOn == \"hover\" && ($type.hasValue(this.tooltipHTML) || $type.hasValue(this.tooltipText)))) {\r\n\t\t\tthis.clickable = true;\r\n\t\t}\r\n\r\n\t\tif (this.states.hasKey(\"focus\")) {\r\n\t\t\tthis.focusable = true;\r\n\t\t}\r\n\r\n\t\t// Propagate the new state to clones\r\n\t\tif (this.applyOnClones) {\r\n\t\t\tconst clones = this.clones.values;\r\n\t\t\tconst length = clones.length;\r\n\r\n\t\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\t\tconst clone = clones[i];\r\n\t\t\t\tif (!clone.isDisposed()) {\r\n\t\t\t\t\tclone.states.setKey(state.name, state);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list elements's animations currently being played.\r\n\t *\r\n\t * If the list has not been initialized it is created.\r\n\t *\r\n\t * @return List of animations\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts element's local coordinates to the coordinates within the main\r\n\t * chart container.\r\n\t *\r\n\t * @param point  Local point\r\n\t * @return Global point\r\n\t */\r\n\tpublic getSvgPoint(point: IPoint): IPoint {\r\n\t\ttry {\r\n\t\t\t// Calculate SVG point\r\n\t\t\tlet bbox = this.htmlContainer.getBoundingClientRect();\r\n\r\n\t\t\treturn {\r\n\t\t\t\t\"x\": point.x - bbox.left,\r\n\t\t\t\t\"y\": point.y - bbox.top\r\n\t\t\t};\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\treturn point;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and starts an [[Animation]] with given `animationOptions`.\r\n\t *\r\n\t * @see {@link Animation} for additional information about available options\r\n\t * @param animationOptions  Animation options\r\n\t * @param duration          Duration in milliseconds\r\n\t * @param easing            Easing function\r\n\t * @return Animation instance\r\n\t */\r\n\tpublic animate(animationOptions: ISpriteAnimationOptions[] | ISpriteAnimationOptions, duration: number, easing?: (value: number) => number): Animation {\r\n\t\treturn new Animation(this, animationOptions, duration, easing).start();\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a [[SpriteState]] on this element.\r\n\t *\r\n\t * The first parameter can either be a name state or a [[SpriteState]]\r\n\t * instance.\r\n\t *\r\n\t * When run, this method will apply SVG properties defined in a\r\n\t * [[SpriteState]], but only those that are relevant to this particular\r\n\t * element, i.e. are in the `properties` array.\r\n\t *\r\n\t * @see {@link SpriteState}\r\n\t * @param value               A state - name key or instance\r\n\t * @param transitionDuration  Duration of the transition between current and new state\r\n\t * @param easing              An easing function\r\n\t */\r\n\tpublic setState(value: string | SpriteState<this[\"_properties\"], this[\"_adapter\"]>, transitionDuration?: number, easing?: (value: number) => number): $type.Optional<Animation> {\r\n\t\tlet state: Optional<SpriteState<this[\"_properties\"], this[\"_adapter\"]>>;\r\n\t\tif (value instanceof SpriteState) {\r\n\t\t\tthis.states.setKey(value.name, value);\r\n\t\t\tstate = value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstate = this.states.getKey(value);\r\n\t\t\tif (!state) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// stop previous transition\r\n\t\t// not good - foe expample, we are animating to some \"active\" state and in them middle \"hover\" state happens. then \"active\" stat won't be applied\r\n\t\t//if (this._transition) {\r\n\t\t//this._transition.stop();\r\n\t\t//}\r\n\r\n\t\tif (state.name == \"hover\") {\r\n\t\t\tif (this.isHidden) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.isHover = true;\r\n\t\t}\r\n\r\n\t\tif (state.name == \"hidden\") {\r\n\t\t\tthis.isHiding = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this.visible) {\r\n\t\t\t\tthis.setVisibility(state.properties.visible || this.defaultState.properties.visible);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (state.name == \"active\") {\r\n\t\t\tthis.isActive = true;\r\n\t\t}\r\n\t\t// we do not set isActive = false here if it's not active, but container does that if setStateOnChildren = true\r\n\r\n\r\n\t\tif (!$type.isNumber(transitionDuration)) {\r\n\t\t\ttransitionDuration = state.transitionDuration;\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(easing)) {\r\n\t\t\teasing = state.transitionEasing;\r\n\t\t}\r\n\r\n\t\treturn this.transitTo(state, transitionDuration, easing);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies proper state based on the condition of the element. A condition is\r\n\t * deducted in this order:\r\n\t * * \"hover\" if Sprite has currently any pointers over it\r\n\t * * \"down\" if Sprite has any pointers (touch or mouse) currently pressed over it\r\n\t * * \"focus\" if Sprite has currently got focus (accessibility)\r\n\t * * \"hidden\" if Sprite is currently hidden\r\n\t *\r\n\t * Returns an [[Animation]] object, which is handling gradual transition from\r\n\t * current values of properties, to the new target state(s).\r\n\t *\r\n\t * @param duration  Duration for the animation (ms)\r\n\t * @return [[Animation]] object which is handling the transition\r\n\t */\r\n\tpublic applyCurrentState(duration?: number): $type.Optional<Animation> {\r\n\r\n\t\t//if (!this.isHidden) { // this was done for hover state not to take effect if \"hidden\" is actually visible, need to think about it.\r\n\r\n\t\tlet animation: $type.Optional<Animation> = this.setState(this.defaultState, duration);\r\n\r\n\t\tif (this.isHover) {\r\n\t\t\tanimation = this.setState(\"hover\", duration);\r\n\t\t}\r\n\r\n\t\tif (this.isDown && this.interactions.downPointers.length) {\r\n\t\t\tanimation = this.setState(\"down\", duration);\r\n\t\t}\r\n\r\n\t\tthis.isFocused = this.isFocused;\r\n\r\n\t\tif (this.isActive) {\r\n\t\t\tanimation = this.setState(\"active\", duration);\r\n\t\t\tif (this.isHover && this.states.hasKey(\"hoverActive\")) {\r\n\t\t\t\tanimation = this.setState(\"hoverActive\", duration);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * Starts an [[Animation]] of the properties to specific values as they are\r\n\t * set in `state`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param state     Target State\r\n\t * @param duration  Duration in milliseconds\r\n\t * @param easing    Easing function\r\n\t * @return Transition Animation\r\n\t */\r\n\tprotected transitTo(state: SpriteState<this[\"_properties\"], this[\"_adapter\"]>, duration: number, easing?: (value: number) => number): Optional<Animation> {\r\n\t\t// Init\r\n\t\tlet options: ISpriteAnimationOptions[] = [],\r\n\t\t\tpropValues = state.allValues,\r\n\t\t\ttransition: Optional<Animation>;\r\n\r\n\t\t// todo: do this for numeric/color properties only?\r\n\t\t// @todo use state.getPropertyValue instead\r\n\t\t$object.each(propValues, (propertyName, finalValue) => {\r\n\t\t\tlet currentValue: any = (<any>this)[propertyName];\r\n\t\t\t// save current value to default state. this solves a big problem where values must be set both on sprite and default state\r\n\t\t\tif (finalValue != currentValue && this.defaultState.properties[propertyName] == undefined) {\r\n\t\t\t\tthis.defaultState.properties[propertyName] = currentValue;\r\n\t\t\t}\r\n\r\n\t\t\t//if (finalValue != currentValue && $type.hasValue(finalValue)) {\r\n\t\t\tif (<any>finalValue != \"__unset\") {\r\n\t\t\t\tlet option: ISpriteAnimationOptions = { from: currentValue, to: <any>finalValue, property: propertyName };\r\n\t\t\t\toptions.push(option);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (options.length > 0) {\r\n\t\t\ttransition = this.animate(options, duration, easing);\r\n\t\t\tif (transition && !transition.isFinished()) {\r\n\t\t\t\t// TODO should this use events.once ?\r\n\t\t\t\t// TODO push onto _disposers array ?\r\n\t\t\t\tthis._disposers.push(transition.events.on(\"animationended\", () => {\r\n\t\t\t\t\tthis.dispatchImmediately(\"transitionended\");\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.dispatchImmediately(\"transitionended\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// apply filters if set\r\n\t\tif (state.filters.length > 0) {\r\n\t\t\tlet newFilters: Filter[] = [];\r\n\t\t\t// check for the same filters\r\n\t\t\t$iter.each(state.filters.iterator(), (stateFilter) => {\r\n\t\t\t\tlet newFilter: Filter = <Filter>stateFilter.clone();\r\n\t\t\t\tnewFilters.push(newFilter);\r\n\t\t\t\tlet animationOptions: IAnimationOptions[] = [];\r\n\r\n\t\t\t\t$iter.each(this.filters.iterator(), (currentFilter) => {\r\n\t\t\t\t\t// if we have the same filters\r\n\t\t\t\t\tif (currentFilter.className == newFilter.className) {\r\n\r\n\t\t\t\t\t\tif (!$iter.contains(this.defaultState.filters.iterator(), (x) => x.className === newFilter.className)) {\r\n\t\t\t\t\t\t\tthis.defaultState.filters.push(currentFilter);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$object.each(newFilter.properties, (propertyName, newValue) => {\r\n\t\t\t\t\t\t\tlet currentValue = (<any>currentFilter).properties[propertyName];\r\n\t\t\t\t\t\t\t// if values are not the same, push to animation options array\r\n\t\t\t\t\t\t\tif (currentValue != newValue) {\r\n\t\t\t\t\t\t\t\tanimationOptions.push({ property: propertyName, from: currentValue, to: newValue });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t// animate to new value\r\n\t\t\t\tnewFilter.animate(animationOptions, duration, easing);\r\n\t\t\t});\r\n\t\t\tthis.filters.clear();\r\n\t\t\tthis.filters.pushAll(newFilters);\r\n\t\t}\r\n\r\n\t\treturn transition;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if Sprite is currently transiting from one state/value to\r\n\t * another.\r\n\t *\r\n\t * @return Is in transition?\r\n\t */\r\n\tpublic isInTransition(): boolean {\r\n\t\treturn this.animations.length > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element has a mouse pointer currently hovering\r\n\t * over it, or if it has any touch pointers pressed on it.\r\n\t *\r\n\t * You can force element to be \"hovered\" manually, by setting this property\r\n\t * to `true`.\r\n\t *\r\n\t * @param value Is hovered?\r\n\t */\r\n\tpublic set isHover(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (value !== this.isHover) {\r\n\t\t\tif (this.isInteractive()) {\r\n\t\t\t\tthis.interactions.isHover = value;\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tthis.handleOver();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.interactions.isRealHover = false;\r\n\t\t\t\t\tthis.handleOut();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Is hovered?\r\n\t */\r\n\tpublic get isHover(): boolean {\r\n\t\tif (this.isInteractive()) {\r\n\t\t\treturn this.interactions.isHover;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns indicator if this element is being dragged at the moment.\r\n\t *\r\n\t * @return Is dragged?\r\n\t */\r\n\tpublic get isDragged(): boolean {\r\n\t\treturn this._isDragged;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns indicator if this element is being resized at the moment.\r\n\t *\r\n\t * @return Is resized?\r\n\t */\r\n\tpublic get isResized(): boolean {\r\n\t\treturn this._isResized;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element has any pointers (mouse or touch) pressing down\r\n\t * on it.\r\n\t *\r\n\t * @param value Is down?\r\n\t */\r\n\tpublic set isDown(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.isInteractive() && this.isDown != value) {\r\n\t\t\tthis.interactions.isDown = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.handleDown();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.handleUp();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Is down?\r\n\t */\r\n\tpublic get isDown(): boolean {\r\n\t\tif (this.isInteractive()) {\r\n\t\t\treturn this.interactions.isDown;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is focused (possibly by tab navigation).\r\n\t *\r\n\t * @param value Is focused?\r\n\t */\r\n\tpublic set isFocused(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.focusable && this.isFocused != value) {\r\n\t\t\tif (this.isInteractive()) {\r\n\t\t\t\tthis.interactions.isFocused = value;\r\n\t\t\t\tif (value === true) {\r\n\t\t\t\t\tthis.handleFocus();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.handleBlur();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Is focused?\r\n\t */\r\n\tpublic get isFocused(): boolean {\r\n\t\tif (this.isInteractive()) {\r\n\t\t\treturn this.interactions.isFocused;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is currently active (toggled on) or not\r\n\t * (toggled off).\r\n\t *\r\n\t * @param value Is active?\r\n\t */\r\n\tpublic set isActive(value: boolean) {\r\n\t\tthis.setActive(value);\r\n\t}\r\n\r\n\r\n\tprotected setActive(value: boolean) {\r\n\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this._isActive !== value) {\r\n\t\t\tthis._isActive = value;\r\n\t\t\tif (value && this.states.hasKey(\"active\")) {\r\n\t\t\t\tthis.setState(\"active\");\r\n\t\t\t\tif (this.isHover && this.states.hasKey(\"hoverActive\")) {\r\n\t\t\t\t\tthis.setState(\"hoverActive\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCurrentState();\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchImmediately(\"toggled\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Is active?\r\n\t */\r\n\tpublic get isActive(): boolean {\r\n\t\treturn this._isActive;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element is disabled.\r\n\t *\r\n\t * A disabled element is hidden, and is removed from any processing, layout\r\n\t * calculations, and generally treated as if it does not exist.\r\n\t *\r\n\t * The element itself is not destroyed, though. Setting this back to `false`,\r\n\t * will \"resurrect\" the element.\r\n\t *\r\n\t * @param value  Disabled?\r\n\t */\r\n\tpublic set disabled(value: boolean) {\r\n\t\tthis.setDisabled(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Disabled?\r\n\t */\r\n\tpublic get disabled(): boolean {\r\n\t\t//if(this._internalDisabled){\r\n\t\t//\treturn true;\r\n\t\t//}\r\n\t\tlet current = this.getPropertyValue(\"disabled\");\r\n\t\tif ($type.hasValue(current)) {\r\n\t\t\treturn current;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.disabled;\r\n\t\t\t}\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.disabled;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tprotected setDisabled(value: boolean): boolean {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tlet current = this.getPropertyValue(\"disabled\");\r\n\t\tif (current != value) {\r\n\t\t\tthis.setPropertyValue(\"disabled\", value, true);\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.parent = this._parent;\r\n\t\t\t\tthis.removeFromInvalids();\r\n\t\t\t\tthis.group.attr({ \"display\": \"none\" });\r\n\t\t\t\tthis.dispatch(\"disabled\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._parent) {\r\n\t\t\t\t\tlet group = <Group>this._parent.element;\r\n\t\t\t\t\tif (!group.hasChild(this.group)) {\r\n\t\t\t\t\t\tgroup.add(this.group);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this instanceof Container) {\r\n\t\t\t\t\tthis.deepInvalidate();\r\n\t\t\t\t\tif (this._background) {\r\n\t\t\t\t\t\tthis._background.invalidate();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.invalidate();\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.__disabled) {\r\n\t\t\t\t\tthis.removeSVGAttribute(\"display\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.dispatch(\"enabled\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatch(\"transformed\");\r\n\t\t\tsystem.requestFrame();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal disable method.\r\n\t *\r\n\t * Do not use it for disabling elements. Use `disabled` accessor instead.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Disabled?\r\n\t */\r\n\tpublic set __disabled(value: boolean) {\r\n\t\tif (this._internalDisabled != value) {\r\n\t\t\tthis._internalDisabled = value;\r\n\t\t\tthis._updateDisabled = true;\r\n\t\t\tthis.invalidatePosition(); // better use this instead of invalidate()\r\n\r\n\t\t\tif(!value){\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Disabled?\r\n\t */\r\n\tpublic get __disabled(): boolean {\r\n\t\treturn this._internalDisabled;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * FORMATTERS AND OTHER EXTERNAL HELPERS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * A [[NumberFormatter]] instance.\r\n\t *\r\n\t * This is used to format numbers.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.numberFormatter.numberFormat = \"#,###.#####\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.numberFormatter.numberFormat = \"#,###.#####\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"numberFormatter\": {\r\n\t *     \"numberFormat\": \"#,###.#####\"\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * You can set a separate instance of formatter for each\r\n\t * individual element. However that would be unnecessary overhead as\r\n\t * all elements would automatically inherit formatter from their parents,\r\n\t * all the way up to the chart itself.\r\n\t *\r\n\t *\r\n\t * @see {@link NumberFormatter} for more info on formatting numbers\r\n\t * @param value  An instance of NumberFormatter\r\n\t */\r\n\tpublic set numberFormatter(value: NumberFormatter) {\r\n\t\tthis._numberFormatter = value;\r\n\t\tthis._numberFormatter.language = this.language;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A [[NumberFormatter]] instance to be used\r\n\t */\r\n\tpublic get numberFormatter(): NumberFormatter {\r\n\t\tif (this._numberFormatter) {\r\n\t\t\treturn this._numberFormatter;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.numberFormatter;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.numberFormatter;\r\n\t\t}\r\n\t\tthis._numberFormatter = new NumberFormatter();\r\n\t\tthis._numberFormatter.language = this.language;\r\n\t\treturn this.numberFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DateFormatter]] instance.\r\n\t *\r\n\t * This is used to format dates, e.g. on a date axes, balloons, etc.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"dateFormatter\": {\r\n\t *     \"dateFormat\": \"yyyy-MM-dd\"\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * You can set a separate instance of formatter for each\r\n\t * individual element. However that would be unnecessary overhead as\r\n\t * all elements would automatically inherit formatter from their parents,\r\n\t * all the way up to the chart itself.\r\n\t *\r\n\t * @see {@link DateFormatter} for more info on dates formatting\r\n\t * @param value  An instance of DateFormatter\r\n\t */\r\n\tpublic set dateFormatter(value: DateFormatter) {\r\n\t\tthis._dateFormatter = value;\r\n\t\tthis._dateFormatter.language = this.language;\r\n\t}\r\n\r\n\t/**\r\n\t * @return An instance of DateFormatter\r\n\t */\r\n\tpublic get dateFormatter(): DateFormatter {\r\n\t\tif (this._dateFormatter) {\r\n\t\t\treturn this._dateFormatter;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.dateFormatter;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.dateFormatter;\r\n\t\t}\r\n\t\tthis._dateFormatter = new DateFormatter();\r\n\t\tthis._dateFormatter.language = this.language;\r\n\t\treturn this.dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DurationFormatter]] instance.\r\n\t *\r\n\t * This is used to format numbers as durations, e.g. on a value axes.\r\n\t *\r\n\t * You can set a separate instance of formatter for each\r\n\t * individual element. However that would be unnecessary overhead as\r\n\t * all elements would automatically inherit formatter from their parents,\r\n\t * all the way up to the chart itself.\r\n\t *\r\n\t * @see {@link DurationFormatter} for more info on durations\r\n\t * @param value  An instance of DurationFormatter\r\n\t */\r\n\tpublic set durationFormatter(value: DurationFormatter) {\r\n\t\tthis._durationFormatter = value;\r\n\t\tthis._durationFormatter.language = this.language;\r\n\t}\r\n\r\n\t/**\r\n\t * @return An instance of DurationFormatter\r\n\t */\r\n\tpublic get durationFormatter(): DurationFormatter {\r\n\t\tif (this._durationFormatter) {\r\n\t\t\treturn this._durationFormatter;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.durationFormatter;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.durationFormatter;\r\n\t\t}\r\n\t\tthis._durationFormatter = new DurationFormatter();\r\n\t\tthis._durationFormatter.language = this.language;\r\n\t\treturn this.durationFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Language]] instance to use for translations.\r\n\t *\r\n\t * Normally it is enough to set language for the top-most element - chart.\r\n\t *\r\n\t * All other element child elements will automatically re-use that language\r\n\t * object.\r\n\t *\r\n\t * @param value  An instance of Language\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tif (this._language.get() !== value) {\r\n\t\t\tthis._language.set(value, value.events.on(\"localechanged\", (ev) => {\r\n\t\t\t\tif (this._numberFormatter) {\r\n\t\t\t\t\tthis._numberFormatter.language = this.language;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._dateFormatter) {\r\n\t\t\t\t\tthis._dateFormatter.language = this.language;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._durationFormatter) {\r\n\t\t\t\t\tthis._durationFormatter.language = this.language;\r\n\t\t\t\t}\r\n\t\t\t\tif (this._exporting.get()) {\r\n\t\t\t\t\tconst exporting = this._exporting.get();\r\n\t\t\t\t\texporting.numberFormatter.language = this.language;\r\n\t\t\t\t\texporting.dateFormatter.language = this.language;\r\n\t\t\t\t\texporting.durationFormatter.language = this.language;\r\n\t\t\t\t\texporting.language = this.language;\r\n\t\t\t\t}\r\n\t\t\t\tif (this instanceof Container) {\r\n\t\t\t\t\tthis.deepInvalidate();\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return An instance of Language\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tlet language = this._language.get();\r\n\t\tif (language) {\r\n\t\t\treturn language;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.language;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.language;\r\n\t\t}\r\n\t\tlanguage = new Language();\r\n\t\tthis.language = language;\r\n\t\treturn language;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * DATA-RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Parses the string for meta tags `{tag}` and replaces them with a real\r\n\t * value. Supports straight up tags referring to the field in data, i.e.\r\n\t * `{value}` or tags with additional formatting info. E.g.:\r\n\t *\r\n\t * ```Text\r\n\t * {myfield.formatDate(\"yyyy-MM-dd\")}\r\n\t * {myfield.formatDate()}\r\n\t * {myfield.formatNumber(\"#,####.00\")}\r\n\t * {myfield.formatNumber()}\r\n\t * {myField.formatDuration(\"mm:ss\")}\r\n\t * ```\r\n\t *\r\n\t * Etc.\r\n\t *\r\n\t * This method Will automatically detect and use proper formatter for the\r\n\t * value.\r\n\t *\r\n\t * The source value will be looked up in various places: (in order)\r\n\t * * Sprite's own `dataItem`\r\n\t * * Sprite's properties\r\n\t * * Parent's `dataItem`\r\n\t * * Parent's properties\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param string            A string to format\r\n\t * @param dataItem          DataItem\r\n\t * @return Formatted string\r\n\t */\r\n\r\n\tpublic populateString(string: string, dataItem?: DataItem): string {\r\n\t\tif ($type.hasValue(string)) {\r\n\t\t\tstring = $type.castString(string);\r\n\t\t\tstring = getTextFormatter().escape(string);\r\n\t\t\tlet tags = string.match(/\\{([^}]+)\\}/g);\r\n\t\t\tlet i;\r\n\t\t\tif (tags) {\r\n\t\t\t\tfor (i = 0; i < tags.length; i++) {\r\n\t\t\t\t\tlet tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n\t\t\t\t\tlet value = this.getTagValue(tag, \"\", dataItem);\r\n\r\n\t\t\t\t\tif (!$type.hasValue(value)) {\r\n\t\t\t\t\t\tvalue = \"\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstring = string.split(tags[i]).join(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tstring = getTextFormatter().unescape(string);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstring = \"\";\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn string;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"populateString\", string);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the value from data item and formats it according to specified format.\r\n\t *\r\n\t * If `format` is specified, it will use its contents to choose formatter for\r\n\t * the value. Otherwise it will select formatter accordingly to actual value\r\n\t * type.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Ability to force certain formatter on known numeric and date values\r\n\t * @see {@link NumberFormatter}\r\n\t * @see {@link DateFormatter}\r\n\t * @see {@link DurationFormatter}\r\n\t * @param tagName           Tag name to replace\r\n\t * @param format            Format to use\r\n\t * @param dataItem          DataItem\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic getTagValue(tagName: string, format?: string, dataItem?: DataItem): string {\r\n\t\tlet value: any;\r\n\t\tif (!$type.hasValue(dataItem)) {\r\n\t\t\tdataItem = this.dataItem;\r\n\t\t}\r\n\r\n\t\t// Parse parts\r\n\t\tlet parts: any[] = [];\r\n\t\tlet reg = /([^.]+)\\(([^)]*)\\)|([^.]+)/g;;\r\n\t\tlet matches;\r\n\r\n\t\twhile (true) {\r\n\t\t\tmatches = reg.exec(tagName);\r\n\r\n\t\t\tif (matches === null) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (matches[3]) {\r\n\t\t\t\t// Simple property\r\n\t\t\t\tparts.push({\r\n\t\t\t\t\tprop: matches[3]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Method\r\n\t\t\t\t// Parse parameters\r\n\t\t\t\tlet params: any[] = [];\r\n\t\t\t\tif ($utils.trim(matches[2]) != \"\") {\r\n\t\t\t\t\tlet reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n\t\t\t\t\tlet matches2;\r\n\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\tmatches2 = reg2.exec(matches[2]);\r\n\r\n\t\t\t\t\t\tif (matches2 === null) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tparams.push(matches2[1] || matches2[2] || matches2[3])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tparts.push({\r\n\t\t\t\t\tmethod: matches[1],\r\n\t\t\t\t\tparams: params\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Check if we can retrieve the value from data item\r\n\t\tif (dataItem) {\r\n\r\n\r\n\t\t\t// Check values\r\n\t\t\tvalue = this.getTagValueFromObject(parts, dataItem.values);\r\n\r\n\t\t\t// Check properties\r\n\t\t\tif (!$type.hasValue(value) || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\r\n\t\t\t\tvalue = this.getTagValueFromObject(parts, dataItem);\r\n\t\t\t}\r\n\r\n\t\t\t// Check data context\r\n\t\t\tlet dataContext: any = dataItem.dataContext;\r\n\t\t\tif (!$type.hasValue(value) && dataContext) {\r\n\t\t\t\tvalue = this.getTagValueFromObject(parts, dataItem.dataContext);\r\n\r\n\t\t\t\t// Maybe it's a literal dot-separated name of the key in dataContext?\r\n\t\t\t\tif (!$type.hasValue(value)) {\r\n\t\t\t\t\tvalue = this.getTagValueFromObject([{\r\n\t\t\t\t\t\tprop: tagName\r\n\t\t\t\t\t}], dataContext);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// scond data context level sometimes exist (tree map)\r\n\t\t\t\tif (!$type.hasValue(value) && dataContext.dataContext) {\r\n\t\t\t\t\tvalue = this.getTagValueFromObject(parts, dataContext.dataContext);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Check component's data item\r\n\t\t\tif (!$type.hasValue(value) && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n\t\t\t\tvalue = dataItem.component.getTagValue(tagName, format);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Check sprite's properties\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\tvalue = this.getTagValueFromObject(parts, this.populateStringFrom || <any>this);\r\n\t\t}\r\n\r\n\t\t// Finally, check the parent\r\n\t\tif (!$type.hasValue(value) && this._parent) {\r\n\t\t\tvalue = this._parent.getTagValue(tagName, format);\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to retrieve values from properties of any object, then applies\r\n\t * proper formatting to it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description (improve)\r\n\t * @param parts   Properties ant methods to access\r\n\t * @param object  Source object\r\n\t * @param format  A specific format to apply\r\n\t * @return Formatted value\r\n\t */\r\n\tpublic getTagValueFromObject(parts: any[], object: any, format?: string): any {\r\n\t\tlet current: any = object;\r\n\t\tlet formatApplied = false;\r\n\t\tfor (let i = 0, len = parts.length; i < len; i++) {\r\n\t\t\tlet part = parts[i];\r\n\t\t\tif (part.prop) {\r\n\t\t\t\t// Regular property\r\n\t\t\t\tcurrent = current[part.prop];\r\n\t\t\t\tif (!$type.hasValue(current)) {\r\n\t\t\t\t\t// Not set, return undefined\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Method\r\n\r\n\t\t\t\tswitch (part.method) {\r\n\t\t\t\t\tcase \"formatNumber\":\r\n\t\t\t\t\t\tlet numberValue = $utils.anyToNumber(current);\r\n\t\t\t\t\t\tif ($type.hasValue(numberValue)) {\r\n\t\t\t\t\t\t\tcurrent = this.numberFormatter.format(\r\n\t\t\t\t\t\t\t\tnumberValue,\r\n\t\t\t\t\t\t\t\tformat || part.params[0] || undefined\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tformatApplied = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formatDate\":\r\n\t\t\t\t\t\tlet dateValue;\r\n\t\t\t\t\t\tif ($type.isString(current)) {\r\n\t\t\t\t\t\t\tdateValue = this.dateFormatter.parse(current);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdateValue = $utils.anyToDate(current);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n\t\t\t\t\t\t\t// Was not able to get date out of value, quitting and letting\r\n\t\t\t\t\t\t\t// calling method try another value\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ($type.hasValue(dateValue)) {\r\n\t\t\t\t\t\t\tcurrent = this.dateFormatter.format(\r\n\t\t\t\t\t\t\t\tdateValue,\r\n\t\t\t\t\t\t\t\tformat || part.params[0] || undefined\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tformatApplied = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"formatDuration\":\r\n\t\t\t\t\t\tlet durationValue = $utils.anyToNumber(current);\r\n\t\t\t\t\t\tif ($type.hasValue(durationValue)) {\r\n\t\t\t\t\t\t\tcurrent = this.durationFormatter.format(\r\n\t\t\t\t\t\t\t\tdurationValue,\r\n\t\t\t\t\t\t\t\tformat || part.params[0] || undefined,\r\n\t\t\t\t\t\t\t\tpart.params[1] || undefined\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tformatApplied = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"urlEncode\":\r\n\t\t\t\t\tcase \"encodeURIComponent\":\r\n\t\t\t\t\t\tcurrent = encodeURIComponent(current);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tif (current[part.method]) {\r\n\t\t\t\t\t\t\tcurrent[part.method].apply(this, part.params);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply default format if it wasn't applied explicitly\r\n\t\tif (!formatApplied) {\r\n\r\n\t\t\tlet formatParts = [{\r\n\t\t\t\tmethod: \"\",\r\n\t\t\t\tparams: format\r\n\t\t\t}];\r\n\r\n\t\t\tif (!$type.hasValue(format)) {\r\n\r\n\t\t\t\t// Format is not set\r\n\t\t\t\t// Determine from the type of the value\r\n\t\t\t\tif ($type.isNumber(current)) {\r\n\t\t\t\t\tformatParts[0].method = \"formatNumber\";\r\n\t\t\t\t\tformatParts[0].params = \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse if ($type.isDate(current)) {\r\n\t\t\t\t\tformatParts[0].method = \"formatDate\";\r\n\t\t\t\t\tformatParts[0].params = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// Format set\r\n\t\t\t\t// Try to determine formatter based on the format\r\n\t\t\t\tlet formatterType: string = $utils.getFormat(format);\r\n\r\n\t\t\t\t// format\r\n\t\t\t\tif (formatterType === $strings.NUMBER) {\r\n\t\t\t\t\tformatParts[0].method = \"formatNumber\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (formatterType === $strings.DATE) {\r\n\t\t\t\t\tformatParts[0].method = \"formatDate\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (formatterType === $strings.DURATION) {\r\n\t\t\t\t\tformatParts[0].method = \"formatDuration\";\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply format\r\n\t\t\tif (formatParts[0].method) {\r\n\t\t\t\tcurrent = this.getTagValueFromObject(formatParts, current);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn current;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A [[DataItem]] to use as element's data source.\r\n\t *\r\n\t * @todo Review type\r\n\t * @param dataItem  DataItem\r\n\t */\r\n\tpublic set dataItem(dataItem: this[\"_dataItem\"]) {\r\n\t\t//an not use this[\"_dataItem\"] here, as we return parent data item if this sprite doesn't have one.\r\n\t\t// @todo:think about it\r\n\t\tthis.setDataItem(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [[DataItem]]\r\n\t */\r\n\tpublic get dataItem(): this[\"_dataItem\"] {\r\n\t\tif (!this._dataItem) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.dataItem;\r\n\t\t\t}\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.dataItem;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._dataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets currently used [[DataItem]].\r\n\t *\r\n\t * If the element has also `configField` set, it will also look for any\r\n\t * config in DataItem's data context to apply to this element.\r\n\t *\r\n\t * @param dataItem DataItem\r\n\t */\r\n\tprotected setDataItem(dataItem: DataItem) {\r\n\t\tif (this._dataItem != dataItem) {\r\n\t\t\tthis._dataItem = dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tif (this.configField) {\r\n\t\t\t\t\tlet dataContext: any = dataItem.dataContext;\r\n\t\t\t\t\tif (dataContext) {\r\n\t\t\t\t\t\tthis.config = dataContext[this.configField];\r\n\t\t\t\t\t\tif (!this.config && dataContext.dataContext) {\r\n\t\t\t\t\t\t\tthis.config = dataContext.dataContext[this.configField];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\r\n\t\t\t\tif (dataContext) {\r\n\r\n\t\t\t\t\tlet dataContext2 = dataContext.dataContext;\r\n\r\n\t\t\t\t\t$object.each(this.propertyFields, (propertyName, fieldValue) => {\r\n\t\t\t\t\t\tif ($type.hasValue(dataContext[fieldValue])) {\r\n\t\t\t\t\t\t\tlet anyThis = <any>this;\r\n\t\t\t\t\t\t\tanyThis[propertyName] = dataContext[fieldValue];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (dataContext2) {\r\n\t\t\t\t\t\t\t\tlet value = dataContext2[fieldValue];\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\t\t\t\t\t\tlet anyThis = <any>this;\r\n\t\t\t\t\t\t\t\t\tanyThis[propertyName] = value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * PROPERTY UTILITIES\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns element's property value.\r\n\t *\r\n\t * Will check if there are any bindings with [[DataItem]].\r\n\t *\r\n\t * Will also apply any adapters bound to `propertyName`.\r\n\t *\r\n\t * @param propertyName  Property name\r\n\t * @return Property value\r\n\t */\r\n\tpublic getPropertyValue<Key extends keyof this[\"_properties\"]>(propertyName: Key): this[\"_properties\"][Key] {\r\n\t\tlet propValue: this[\"_properties\"][Key] = this.properties[propertyName];\r\n\r\n\t\t// Apply adapter\r\n\t\tif (!this._isTemplate) {\r\n\t\t\tif (this._adapterO) {\r\n\t\t\t\tpropValue = this._adapterO.apply(propertyName, <any>propValue);\r\n\t\t\t}\r\n\r\n\t\t\tpropValue = globalAdapter.applyAll(this, propertyName, propValue);\r\n\t\t}\r\n\r\n\t\treturn propValue;\r\n\t}\r\n\r\n\r\n\tprotected setColorProperty<Key extends keyof this[\"properties\"]>(property: Key, value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>, invalidate?: boolean): boolean {\r\n\t\tlet currentValue = this.properties[property];\r\n\t\tif (value instanceof Color && currentValue instanceof Color && value.toString() == currentValue.toString()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.setPropertyValue(property, value, invalidate);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected setPercentProperty<Key extends keyof this[\"properties\"]>(property: Key, value: Percent | number, invalidate?: boolean, transform?: boolean, precision?: number, floor?: boolean): boolean {\r\n\t\tvalue = $type.toNumberOrPercent(value);\r\n\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tif ($type.isNumber(precision)) {\r\n\t\t\t\tvalue = $math.round(value, precision, floor);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.setPropertyValue(property, value, invalidate, transform);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet currentValue = this.properties[property];\r\n\r\n\t\t\tif (value instanceof Percent && currentValue instanceof Percent && value.value == currentValue.value) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this.setPropertyValue(property, value, invalidate, transform);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets elements's property value. Will also propagate the same property value\r\n\t * on all element's clones.\r\n\t *\r\n\t * @param property    Property\r\n\t * @param value       Value\r\n\t * @param invalidate  Should the sprite be invalidated, cause it's re-rendering\r\n\t * @param transform   Re-apply positioning of the element\r\n\t * @return Did the value change? It will return `true` if the new value and the old value of the property are not the same\r\n\t * @todo Review propagation to clones. Right now we simply check if clone is disposed before setting the same property on it. It's better to remove from clone list altogether.\r\n\t */\r\n\tpublic setPropertyValue<Key extends keyof this[\"properties\"]>(property: Key, value: any, invalidate?: boolean, transform?: boolean): boolean {\r\n\t\tif (this.properties[property] !== value && !this.isDisposed()) {\r\n\t\t\tthis.properties[property] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"propertychanged\")) {\r\n\r\n\t\t\t\tconst event: AMEvent<this, ISpriteEvents>[\"propertychanged\"] = {\r\n\t\t\t\t\ttype: \"propertychanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tproperty: <string>property\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"propertychanged\", event);\r\n\t\t\t}\r\n\r\n\t\t\tif (invalidate) {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tif (transform) {\r\n\t\t\t\tthis.invalidatePosition();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.applyOnClones) {\r\n\t\t\t\tconst clones = this.clones.values;\r\n\t\t\t\tconst length = clones.length;\r\n\r\n\t\t\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\t\t\tconst clone = clones[i];\r\n\r\n\t\t\t\t\tif (!clone.isDisposed()) {\r\n\t\t\t\t\t\t//(<Sprite>clone).setPropertyValue(<any>property, value, invalidate, transform);\r\n\t\t\t\t\t\t(<any>clone)[property] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @todo Verify this\r\n\t */\r\n\tpublic bind<\r\n\t\tS extends { cloneId: string, events: EventDispatcher<{ propertychanged: { property: string } }> },\r\n\t\tFrom extends (keyof S & keyof this),\r\n\t\tTo extends keyof this\r\n\t>(\r\n\t\tproperty: To,\r\n\t\tsource: S,\r\n\t\tbindToProperty: From,\r\n\t\tmodifier?: (value: this[From]) => this[To]\r\n\t): void;\r\n\tpublic bind<\r\n\t\tS extends { cloneId: string, events: EventDispatcher<{ propertychanged: { property: string } }> },\r\n\t\tKey extends (keyof S & keyof this)\r\n\t>(\r\n\t\tproperty: Key,\r\n\t\tsource: S,\r\n\t\tmodifier?: (value: this[Key]) => this[Key]\r\n\t): void;\r\n\tpublic bind<\r\n\t\tS extends this & { cloneId: string, events: EventDispatcher<{ propertychanged: { property: string } }> },\r\n\t\tKey extends (keyof S & keyof this)\r\n\t>(\r\n\t\tproperty: Key,\r\n\t\tsource: S,\r\n\t\tbindToProperty: Key = property,\r\n\t\tmodifier?: (value: this[Key]) => this[Key]\r\n\t): void {\r\n\t\tif ($type.hasValue(this._bindings[<string>property])) {\r\n\t\t\tthis._bindings[<string>property].dispose();\r\n\t\t}\r\n\r\n\t\t// set current value\r\n\t\tthis[property] = source[bindToProperty];\r\n\r\n\t\t//source.addEventListener(AMEvent.PROPERTY_CHANGED, this.handleBindings, false, this);\r\n\t\tthis._bindings[<string>property] = source.events.on(\"propertychanged\", (event) => {\r\n\t\t\tif (event.property === bindToProperty) {\r\n\t\t\t\tlet value: this[Key] = source[bindToProperty];\r\n\r\n\t\t\t\tif (modifier) {\r\n\t\t\t\t\tvalue = modifier(value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// TODO clonesById\r\n\t\t\t\tthis[property] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up and obeserver function to monitor changes in particular property\r\n\t * or properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param property  Element's property name\r\n\t * @param listener  Handler function\r\n\t * @param context   Context for handler function\r\n\t * @returns Event Disposer\r\n\t */\r\n\tpublic observe<C>(property: string | string[], listener: (this: C, event: AMEvent<this, ISpriteEvents>[\"propertychanged\"]) => void, context?: C, shouldClone?: boolean): IDisposer {\r\n\t\treturn new MultiDisposer($array.map($array.toArray(property), (prop) => {\r\n\t\t\treturn this.events.on(\"propertychanged\", (e) => {\r\n\t\t\t\tif (e.property === prop) {\r\n\t\t\t\t\tlistener.call(context, e);\r\n\t\t\t\t}\r\n\t\t\t}, context, shouldClone);\r\n\t\t}));\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * ACCESSIBILITY-RELATED PROPERTIES\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Applies accessibility to the SVG element.\r\n\t *\r\n\t * Adds `<title>` and `<description>` elements as well as `aria-labelledby`\r\n\t * and `role` properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyAccessibility(): void {\r\n\r\n\t\t// Check if we need to add label and description\r\n\t\tlet title = this.readerTitle,\r\n\t\t\tdescription = this.readerDescription,\r\n\t\t\trole = this.role,\r\n\t\t\thidden = this.readerHidden,\r\n\t\t\tchecked = this.readerChecked,\r\n\t\t\tcontrols = this.readerControls,\r\n\t\t\tlive = this.readerLive,\r\n\t\t\torientation = this.readerOrientation,\r\n\t\t\tvalueNow = this.readerValueNow,\r\n\t\t\tvalueText = this.readerValueText;\r\n\r\n\t\t// Init label/describe ids\r\n\t\tlet labelledByIds: string[] = [];\r\n\t\tlet describedByIds: string[] = [];\r\n\r\n\t\tlet labelledBy: string = this.readerLabelledBy;\r\n\t\tif (labelledBy) {\r\n\t\t\tlabelledByIds.push(labelledBy);\r\n\t\t}\r\n\r\n\t\tlet describedBy: string = this.readerDescribedBy;\r\n\t\tif (describedBy) {\r\n\t\t\tdescribedByIds.push(describedBy);\r\n\t\t}\r\n\r\n\t\t// Add arial-label attribute if present\r\n\t\t// If not readerTitle and labelledBy is set we will use <title> element\r\n\t\t// instead of aria-label\r\n\t\t// TODO: should we check agains this.showSystemTooltip?\r\n\t\tif (title) {\r\n\r\n\t\t\tif (labelledByIds.length || this.showSystemTooltip) {\r\n\r\n\t\t\t\tconst titleElement = this.titleElement;\r\n\t\t\t\tconst titleId = this.uid + \"-title\";\r\n\t\t\t\tif (titleElement.node.textContent != title) {\r\n\t\t\t\t\ttitleElement.node.textContent = title;\r\n\t\t\t\t\ttitleElement.attr({ id: titleId });\r\n\t\t\t\t}\r\n\t\t\t\tlabelledByIds.push(titleId);\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tif (this._titleElement) {\r\n\t\t\t\t\tthis.group.removeElement(this._titleElement);\r\n\t\t\t\t\tthis._titleElement = undefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setSVGAttribute({\r\n\t\t\t\t\t\"aria-label\": title\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-label\");\r\n\t\t\tif (this._titleElement) {\r\n\t\t\t\tthis.group.removeElement(this._titleElement);\r\n\t\t\t\tthis._titleElement = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Add description\r\n\t\tif (description) {\r\n\r\n\t\t\tconst descriptionElement = this.descriptionElement;\r\n\t\t\tconst descriptionId = this.uid + \"-description\";\r\n\t\t\tif (descriptionElement.node.textContent != description) {\r\n\t\t\t\tdescriptionElement.node.textContent = description;\r\n\t\t\t\tdescriptionElement.attr({ id: descriptionId });\r\n\t\t\t}\r\n\t\t\tdescribedByIds.push(descriptionId);\r\n\r\n\t\t}\r\n\t\telse if (this._descriptionElement) {\r\n\t\t\tthis.group.removeElement(this._descriptionElement);\r\n\t\t\tthis._descriptionElement = undefined;\r\n\t\t}\r\n\r\n\r\n\t\t// Add label and described properties\r\n\t\tif (labelledByIds.length) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-labelledby\": labelledByIds.join(\" \") });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-labelledby\");\r\n\t\t}\r\n\r\n\t\tif (describedByIds.length) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-describedby\": describedByIds.join(\" \") });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-describedby\");\r\n\t\t}\r\n\r\n\t\t// Apply role\r\n\t\tif (role) {\r\n\t\t\tthis.setSVGAttribute({ \"role\": role });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"role\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-hidden\r\n\t\tif (hidden) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-hidden\": \"true\" });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-hidden\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-checked\r\n\t\tif (checked) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-checked\": \"true\" });\r\n\t\t}\r\n\t\telse if (checked === false) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-checked\": \"false\" });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-checked\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-controls\r\n\t\tif (controls) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-controls\": controls });\r\n\t\t} else {\r\n\t\t\tthis.removeSVGAttribute(\"aria-controls\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-live\r\n\t\tif (live) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-live\": live });\r\n\t\t} else {\r\n\t\t\tthis.removeSVGAttribute(\"aria-live\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-orientation\r\n\t\tif (orientation) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-orientation\": orientation });\r\n\t\t} else {\r\n\t\t\tthis.removeSVGAttribute(\"aria-orientation\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-valuenow\r\n\t\tif (valueNow) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-valuenow\": valueNow });\r\n\t\t} else {\r\n\t\t\tthis.removeSVGAttribute(\"aria-valuenow\");\r\n\t\t}\r\n\r\n\t\t// Apply aria-valuetext\r\n\t\tif (valueText) {\r\n\t\t\tthis.setSVGAttribute({ \"aria-valuetext\": valueText });\r\n\t\t} else {\r\n\t\t\tthis.removeSVGAttribute(\"aria-valuetext\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader title of the element.\r\n\t *\r\n\t * @param value Title\r\n\t */\r\n\tpublic set readerTitle(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerTitle\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Title\r\n\t */\r\n\tpublic get readerTitle(): string {\r\n\t\tconst title = this.getPropertyValue(\"readerTitle\");\r\n\t\tif ($type.hasValue(title) && this.dataItem) {\r\n\t\t\treturn this.populateString(title);\r\n\t\t}\r\n\t\treturn title;\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader description of the element.\r\n\t *\r\n\t * @param value Description\r\n\t */\r\n\tpublic set readerDescription(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerDescription\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Description\r\n\t */\r\n\tpublic get readerDescription(): string {\r\n\t\tconst description = this.getPropertyValue(\"readerDescription\");\r\n\t\tif ($type.hasValue(description) && this.dataItem) {\r\n\t\t\treturn this.populateString(description);\r\n\t\t}\r\n\t\treturn this.getPropertyValue(\"readerDescription\");\r\n\t}\r\n\r\n\t/**\r\n\t * A WAI-ARIA role for the element.\r\n\t *\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#role_definitions} for more information on WAI-ARIA roles\r\n\t * @param value  Role\r\n\t */\r\n\tpublic set role(value: Roles) {\r\n\t\tvalue = <Roles>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"role\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\r\n\t\t\tif (value == \"slider\") {\r\n\t\t\t\tthis.setSVGAttribute({ \"aria-valuemin\": \"0\" });\r\n\t\t\t\tthis.setSVGAttribute({ \"aria-valuemax\": \"100\" });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Role\r\n\t */\r\n\tpublic get role(): Roles {\r\n\t\treturn this.getPropertyValue(\"role\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element should be hidden from screen readers.\r\n\t *\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-hidden} for more information\r\n\t * @param value  Hidden?\r\n\t */\r\n\tpublic set readerHidden(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"readerHidden\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hidden?\r\n\t */\r\n\tpublic get readerHidden(): boolean {\r\n\t\treturn this.getPropertyValue(\"readerHidden\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element is currently marked as \"checked\".\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-checked} for more information\r\n\t * @param value Checked?\r\n\t */\r\n\tpublic set readerChecked(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"readerChecked\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Checked?\r\n\t */\r\n\tpublic get readerChecked(): boolean {\r\n\t\treturn this.getPropertyValue(\"readerChecked\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `uid` of an element this element controls.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-controls} for more information\r\n\t * @param value Setting value\r\n\t */\r\n\tpublic set readerControls(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerControls\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Setting value\r\n\t */\r\n\tpublic get readerControls(): string {\r\n\t\treturn this.getPropertyValue(\"readerControls\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls accessibility setting \"aria-live\" for the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions} for more information\r\n\t * @param value Setting value\r\n\t */\r\n\tpublic set readerLive(value: AriaLive) {\r\n\t\tvalue = <AriaLive>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerLive\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Setting value\r\n\t */\r\n\tpublic get readerLive(): AriaLive {\r\n\t\treturn this.getPropertyValue(\"readerLive\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `uid` of an element that describes this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby} for more information\r\n\t * @param value Target element\r\n\t */\r\n\tpublic set readerLabelledBy(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerLabelledBy\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Target element\r\n\t */\r\n\tpublic get readerLabelledBy(): string {\r\n\t\treturn this.getPropertyValue(\"readerLabelledBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `uid` of an element that describes this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-describedby} for more information\r\n\t * @param value Target element\r\n\t */\r\n\tpublic set readerDescribedBy(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerDescribedBy\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Target element\r\n\t */\r\n\tpublic get readerDescribedBy(): string {\r\n\t\treturn this.getPropertyValue(\"readerDescribedBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the element.\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @param value Orientation\r\n\t */\r\n\tpublic set readerOrientation(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerOrientation\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get readerOrientation(): string {\r\n\t\treturn this.getPropertyValue(\"readerOrientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Current value of the element.\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @param value Current value\r\n\t */\r\n\tpublic set readerValueNow(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerValueNow\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Current value\r\n\t */\r\n\tpublic get readerValueNow(): string {\r\n\t\treturn this.getPropertyValue(\"readerValueNow\");\r\n\t}\r\n\r\n\t/**\r\n\t * Text representation of the current value of the element.\r\n\t *\r\n\t * @since 4.7.16\r\n\t * @param value Current value (text)\r\n\t */\r\n\tpublic set readerValueText(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"readerValueText\", value)) {\r\n\t\t\tthis.applyAccessibility();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Current value (text)\r\n\t */\r\n\tpublic get readerValueText(): string {\r\n\t\treturn this.getPropertyValue(\"readerValueText\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * USER INTERACTIONS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns elements keyboard options.\r\n\t *\r\n\t * @return Keyboard options\r\n\t */\r\n\tpublic get keyboardOptions(): IKeyboardOptions {\r\n\t\tif (!this.interactions.keyboardOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.keyboardOptions;\r\n\t\t\t}\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.keyboardOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.keyboardOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Mouse options.\r\n\t *\r\n\t * Enables controlling options related to the mouse, for example sensitivity\r\n\t * of its mouse wheel.\r\n\t *\r\n\t * E.g. the below will reduce chart's wheel-zoom speed to half its default\r\n\t * speed:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.plotContainer.mouseOptions.sensitivity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.plotContainer.mouseOptions.sensitivity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"plotContainer\": {\r\n\t *     \"mouseOptions\": {\r\n\t *       \"sensitivity\": 0.5\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Mouse options\r\n\t */\r\n\tpublic get mouseOptions(): IMouseOptions {\r\n\t\tif (!this.interactions.mouseOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.mouseOptions;\r\n\t\t\t}\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.mouseOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.mouseOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns (creates if necessary) an [[InteractionObject]] associated with\r\n\t * this element.\r\n\t *\r\n\t * [[InteractionObject]] is used to attach all kinds of user-interactions to\r\n\t * the element, e.g. click/touch, dragging, hovering, and similar events.\r\n\t *\r\n\t * @return Interaction object\r\n\t */\r\n\tpublic get interactions(): InteractionObject {\r\n\t\tif (!this._interaction) {\r\n\t\t\tconst interaction = getInteraction().getInteraction(this.dom);\r\n\t\t\tthis._interaction = interaction;\r\n\t\t\tinteraction.clickable = this.clickable;\r\n\t\t\tinteraction.hoverable = this.hoverable;\r\n\t\t\tinteraction.trackable = this.trackable;\r\n\t\t\tinteraction.draggable = this.draggable;\r\n\t\t\tinteraction.swipeable = this.swipeable;\r\n\t\t\tinteraction.resizable = this.resizable;\r\n\t\t\tinteraction.wheelable = this.wheelable;\r\n\t\t\tinteraction.contextMenuDisabled = this.contextMenuDisabled;\r\n\t\t\tinteraction.inert = this.inert;\r\n\t\t\tinteraction.sprite = this;\r\n\t\t\tthis._disposers.push(interaction);\r\n\t\t}\r\n\t\treturn this._interaction;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if interactions object was created. Mostly used just to avoid creating interactions object if not needed.\r\n\t * @return Is Sprite interactive?\r\n\t */\r\n\tpublic isInteractive(): boolean {\r\n\t\tif (this._interaction) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * ELEMENT FOCUS-RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Controls if the element can gain focus.\r\n\t *\r\n\t * Focusable element will be selectable via TAB key.\r\n\t *\r\n\t * Please note, clicking it with a mouse or touching will not add focus to\r\n\t * it.\r\n\t *\r\n\t * Focused element will show a system-specific highlight, which might ruin\r\n\t * the overal look. This is why we don't focus element on click/touch.\r\n\t *\r\n\t * A default setting varies for different elements. By default all elements\r\n\t * are not focusable, except certain items like buttons, legend items, etc.\r\n\t *\r\n\t * @default undefined (auto)\r\n\t * @param value  Can element be focused?\r\n\t */\r\n\tpublic set focusable(value: Optional<boolean>) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"focusable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.interactions.focusable = value;\r\n\t\t\t\tif (value) {\r\n\t\t\t\t\tthis.setSVGAttribute({ \"focusable\": value });\r\n\t\t\t\t\tif (!$type.hasValue(this._tabindex)) {\r\n\t\t\t\t\t\tthis.tabindex = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.removeSVGAttribute(\"focusable\");\r\n\t\t\t\t\tthis.tabindex = undefined;\r\n\t\t\t\t}\r\n\t\t\t\t// Set focus events that would apply \"focus\" state\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-focusable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"blur\", this.handleBlur, this, false),\r\n\t\t\t\t\tthis.events.on(\"focus\", this.handleFocus, this, false)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Can element be focused?\r\n\t */\r\n\tpublic get focusable(): Optional<boolean> {\r\n\t\treturn this.getPropertyValue(\"focusable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Applies filters (if set) when element gains focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Original event\r\n\t */\r\n\tpublic handleFocus(ev?: AMEvent<Sprite, ISpriteEvents>[\"focus\"]): void {\r\n\t\tif (this.focusable) {\r\n\t\t\tif (this.topParent) {\r\n\t\t\t\tthis.topParent.hasFocused = true;\r\n\t\t\t\tthis.topParent.focusedElement = this;\r\n\t\t\t}\r\n\t\t\tif (this.focusFilter) {\r\n\t\t\t\t// Any `filters` manipulation will trigger `applyFilters()` so we don't\r\n\t\t\t\t// need to call it here\r\n\t\t\t\tthis.filters.push(this.focusFilter);\r\n\t\t\t}\r\n\t\t\tif (this.hoverOnFocus) {\r\n\t\t\t\t// Trigger a hover event as well\r\n\t\t\t\tthis.isHover = true;\r\n\t\t\t\tthis.handleOver();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes focus filter (if set) when elementloses focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Original event\r\n\t */\r\n\tpublic handleBlur(ev?: AMEvent<Sprite, ISpriteEvents>[\"blur\"]): void {\r\n\t\tif (this.focusable) {\r\n\t\t\tif (this.topParent) {\r\n\t\t\t\tthis.topParent.hasFocused = false;\r\n\t\t\t\tthis.topParent.focusedElement = undefined;\r\n\t\t\t}\r\n\t\t\tif (this.focusFilter) {\r\n\t\t\t\t// Any `filters` manipulation will trigger `applyFilters()` so we don't\r\n\t\t\t\t// need to call it here\r\n\t\t\t\tthis.filters.removeValue(this.focusFilter);\r\n\t\t\t}\r\n\t\t\tif (this.hoverOnFocus) {\r\n\t\t\t\t// Trigger a out event as well\r\n\t\t\t\tthis.isHover = false;\r\n\t\t\t\tthis.handleOut();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a [[Filter]] to apply to element when it gains focus.\r\n\t *\r\n\t * Normally, browsers will draw a default ugly square around focused element,\r\n\t * which totally makes sense because its purpose is to help identify active\r\n\t * element for visually impaired people.\r\n\t *\r\n\t * However, if you would rather apply a filter, so you can modify how focused\r\n\t * element looks like, use `focusFilter`.\r\n\t *\r\n\t * Simply set it to an anstance of [[FocusFilter]], or any other filter\r\n\t * object.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.focusFilter = new am4core.FocusFilter();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.focusFilter = new am4core.FocusFilter();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"focusFilter\": {\r\n\t *     \"type\": \"FocusFilter\"\r\n\t *   },\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link Filter}\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/accessibility/} more about accessibility\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/changing-appearance-of-focused-items/} cusomizing focus appearance\r\n\t * @ignore Exclude from docs\r\n\t * @return Focused element filter\r\n\t */\r\n\tpublic get focusFilter(): $type.Optional<Filter> {\r\n\t\t/*if (!this._focusFilter) {\r\n\t\t\tthis._focusFilter = new FocusFilter();\r\n\t\t\tthis._disposers.push(this._focusFilter);\r\n\t\t}*/\r\n\t\t//return this._focusFilter;\r\n\r\n\t\tconst focusFilter = this._focusFilter;\r\n\r\n\t\tif (focusFilter) {\r\n\t\t\treturn focusFilter;\r\n\t\t}\r\n\t\tif (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.focusFilter;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.focusFilter;\r\n\t\t}\r\n\r\n\t\t//this._focusFilter = new FocusFilter();\r\n\t\t//this._disposers.push(this._focusFilter);\r\n\t}\r\n\r\n\t/**\r\n\t * @see {@link Filter}\r\n\t * @ignore Exclude from docs\r\n\t * @todo This is still experimental, don't use it\r\n\t */\r\n\tpublic set focusFilter(value: $type.Optional<Filter>) {\r\n\t\tthis._focusFilter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, this element will also trigger `\"over\"` event with all\r\n\t * the related consequences, like \"hover\" state being applied and tooltip\r\n\t * being shown.\r\n\t *\r\n\t * Useful as an accessibility feature to display rollover tooltips on items\r\n\t * selected via keyboard.\r\n\t *\r\n\t * @param value  Trigger hover on focus?\r\n\t * @default false\r\n\t */\r\n\tpublic set hoverOnFocus(value: boolean) {\r\n\t\tif (value !== this.hoverOnFocus) {\r\n\t\t\tthis.setPropertyValue(\"hoverOnFocus\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Trigger hover on focus?\r\n\t */\r\n\tpublic get hoverOnFocus(): boolean {\r\n\t\treturn this.getPropertyValue(\"hoverOnFocus\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets or returns TAB index.\r\n\t *\r\n\t * Tab index maintains the order in which focusable elements gain focus when\r\n\t * TAB key is pressed.\r\n\t *\r\n\t * Please note, tab index is not local to the chart. It affects the whole\r\n\t * of the page, including non-SVG elements. Maintain extreme causion when\r\n\t * setting tab indexes, as it affects the user experience for the whole\r\n\t * web page.\r\n\t *\r\n\t * @param value TAB index\r\n\t */\r\n\tpublic set tabindex(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (this.setPropertyValue(\"tabindex\", value) && $type.isNumber(value)) {\r\n\t\t\tthis.interactions.tabindex = value;\r\n\t\t\tthis.setSVGAttribute({ \"tabindex\": value });\r\n\t\t\tthis._tabindex = value;\r\n\t\t\tthis.focusable = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return TAB index\r\n\t */\r\n\tpublic get tabindex(): $type.Optional<number> {\r\n\t\tconst index = this._tabindex;\r\n\r\n\t\tif (index != null) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.tabindex;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.tabindex;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * DRAGGING AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns element's options to be used for inertia. This setting is\r\n\t * inheritable, meaning that if not set directly, it will search in all its\r\n\t * ascendants until very top.\r\n\t *\r\n\t * Inertia is used only if element's `inert` is set to `true`.\r\n\t *\r\n\t * \"Inert\" element, when dragged and released, will carry the momentum of the\r\n\t * movement, and will continue moving in the same drag direction, gradually\r\n\t * reducing in speed until finally stops.\r\n\t *\r\n\t * Check [[IInertiaOptions]] for how you tweak inertia animations.\r\n\t *\r\n\t * @return Inertia options\r\n\t */\r\n\tpublic get inertiaOptions(): Dictionary<InertiaTypes, IInertiaOptions> {\r\n\t\tif (!this.interactions.inertiaOptions) {\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.inertiaOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.inertiaOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the element is draggable.\r\n\t *\r\n\t * @param value  `true` if element can be dragged\r\n\t */\r\n\tpublic set draggable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"draggable\", value)) {\r\n\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.draggable = value;\r\n\t\t\t\t//interaction.processDraggable(this);\r\n\r\n\t\t\t\t// Add events\r\n\t\t\t\t// @todo Maybe attach to InteractionObject's multidisposer so that\r\n\t\t\t\t// sprites events get disposed together with them?\r\n\t\t\t\t// this.interactions.disposers.getItem(\"movable\")\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-draggable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"down\", this.handleDown, this, false),\r\n\t\t\t\t\tthis.events.on(\"dragstart\", this.handleDragStart, this, false),\r\n\t\t\t\t\tthis.events.on(\"drag\", this.handleDragMove, this, false),\r\n\t\t\t\t\tthis.events.on(\"dragstop\", this.handleDragStop, this, false)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return `true` if element can be dragged\r\n\t */\r\n\tpublic get draggable(): boolean {\r\n\t\treturn this.getPropertyValue(\"draggable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Executes when dragged element is being started to drag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected handleDragStart(ev: AMEvent<Sprite, ISpriteEvents>[\"dragstart\"]): void {\r\n\t\tif (!this.interactions.isTouchProtected || !ev.touch) {\r\n\t\t\tthis.interactions.originalPosition = {\r\n\t\t\t\tx: this.pixelX,\r\n\t\t\t\ty: this.pixelY\r\n\t\t\t};\r\n\t\t\tthis._isDragged = true;\r\n\t\t\tthis.hideTooltip(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Tell this element to start being dragged. This is useful if you want to\r\n\t * drag items by interactions performed not directly on the target element.\r\n\t *\r\n\t * Parameter `pointer` is highly recommended. By passing in the Pointer you\r\n\t * will ensure that movement is tracked for the pointer that you want. If not\r\n\t * supplied, the system will try to determine the most logical pointer.\r\n\t *\r\n\t * However this may fail if you have more than one pointer active, which\r\n\t * might happen if you have several objects being dragged on a touch device.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pointer Pointer to use for movement\r\n\t */\r\n\tpublic dragStart(pointer?: IPointer): void {\r\n\t\t//this.dragStop(pointer);\r\n\t\t//this.draggable = true;\r\n\t\tthis._isDragged = true;\r\n\t\tgetInteraction().dragStart(this.interactions, pointer);\r\n\t}\r\n\r\n\t/**\r\n\t * Executes when dragged element is being dropped.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected handleDragStop(ev: AMEvent<Sprite, ISpriteEvents>[\"dragstop\"]): void {\r\n\t\tif (!this.interactions.isTouchProtected || !ev.touch) {\r\n\t\t\tthis._isDragged = false;\r\n\t\t\tthis.showTooltip();\r\n\t\t\tthis.interactions.originalPosition = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Stops manually initiated dragging of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pointer Pointer to use as a reference\r\n\t */\r\n\tpublic dragStop(pointer?: IPointer, cancelled?: boolean): void {\r\n\t\t//this.draggable = false;\r\n\t\tthis._isDragged = false;\r\n\t\tgetInteraction().dragStop(this.interactions, pointer, cancelled);\r\n\t\t//this.handleDragStop();\r\n\t}\r\n\r\n\t/**\r\n\t * Executes when {Sprite} is being dragged.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event object\r\n\t * @todo Implement parent position offset calculation\r\n\t */\r\n\tpublic handleDragMove(ev: AMEvent<Sprite, ISpriteEvents>[\"drag\"]): void {\r\n\t\tif (!this.interactions.isTouchProtected || !ev.touch) {\r\n\t\t\tlet point: Optional<IPoint> = this.interactions.originalPosition;\r\n\r\n\t\t\tif (point && this._isDragged) {\r\n\t\t\t\tlet globalScale = this._parent.globalScale * this.svgContainer.cssScale;\r\n\t\t\t\tthis.moveTo({ x: point.x + ev.shift.x / globalScale, y: point.y + ev.shift.y / globalScale }, undefined, undefined, true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchImmediately(\"dragged\", ev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the element should use inertia when interacted with.\r\n\t *\r\n\t * \"Inert\" element, when dragged and released, will carry the momentum of the\r\n\t * movement, and will continue moving in the same drag direction, gradually\r\n\t * reducing in speed until finally stops.\r\n\t *\r\n\t * @default false\r\n\t * @param value `true` if element should use inertia when animated\r\n\t */\r\n\tpublic set inert(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"inert\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.interactions.inert = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return `true` if element should use inertia when animated\r\n\t */\r\n\tpublic get inert(): boolean {\r\n\t\treturn this.getPropertyValue(\"inert\");\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * HOVERING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns Sprite's hover options.\r\n\t *\r\n\t * @see {@link IHoverOptions} for available options.\r\n\t * @return Options\r\n\t */\r\n\tpublic get hoverOptions(): IHoverOptions {\r\n\t\tif (!this.interactions.hoverOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.hoverOptions;\r\n\t\t\t}\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.hoverOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.hoverOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the element is hoverable (hover events are registered).\r\n\t *\r\n\t * Use `over` and `out` events, to watch for those respective actions.\r\n\t *\r\n\t * @default false\r\n\t * @param value `true` if element can be hovered\r\n\t */\r\n\tpublic set hoverable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"hoverable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.hoverable = value;\r\n\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-hoverable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"over\", this.handleOver, this, false),\r\n\t\t\t\t\tthis.events.on(\"out\", this.handleOut, this, false),\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return `true` if element is hoverable\r\n\t */\r\n\tpublic get hoverable(): boolean {\r\n\t\treturn this.getPropertyValue(\"hoverable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Handles tasks when element becomes hovered:\r\n\t * * Shows [[Tooltip]] if applicable\r\n\t * * Applies \"hover\" state\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event object\r\n\t */\r\n\tpublic handleOver(ev?: AMEvent<Sprite, ISpriteEvents>[\"over\"]): void {\r\n\t\tif (this._outTimeout) {\r\n\t\t\tthis._outTimeout.dispose();\r\n\t\t}\r\n\t\tif (this.isHover) {\r\n\r\n\t\t\tif (this.states.hasKey(\"hover\")) {\r\n\t\t\t\t//this.setState(\"hover\");\r\n\t\t\t\t// This will check `isHover` and will set \"hover\" state\r\n\t\t\t\tif (!this.isHidden) {\r\n\t\t\t\t\tthis.applyCurrentState();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet point: IPoint\r\n\t\t\tif (ev && ev.pointer) {\r\n\t\t\t\tpoint = $utils.documentPointToSvg(ev.pointer.point, this.svgContainer.SVGContainer, this.svgContainer.cssScale)\r\n\t\t\t}\r\n\r\n\t\t\tif (this.showTooltipOn == \"hover\") {\r\n\t\t\t\tthis.showTooltip(point);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.showTooltipOn == \"hover\") {\r\n\t\t\t\tthis.hideTooltip();\r\n\t\t\t}\r\n\t\t\tif (!this.isHidden && this.states.hasKey(\"hover\")) {\r\n\t\t\t\tthis.applyCurrentState();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles tasks when element loses hover:\r\n\t *\r\n\t * * Hides [[Tooltip]]\r\n\t * * Applies default state\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev [description]\r\n\t */\r\n\tpublic handleOut(ev?: AMEvent<Sprite, ISpriteEvents>[\"out\"]): void {\r\n\t\tif (this.tooltip && this.tooltip.targetSprite == this && this.tooltip.keepTargetHover) {\r\n\t\t\tthis._outTimeout = this.setTimeout(() => {\r\n\t\t\t\tif (!this.tooltip.isHover) {\r\n\t\t\t\t\tif (this.tooltip.targetSprite == this) {\r\n\t\t\t\t\t\tthis.hideTooltip();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._outTimeout = this.setTimeout(this.handleOutReal.bind(this), this.rollOutDelay);\r\n\t\t\t\t}\r\n\t\t\t}, 10);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.showTooltipOn == \"hover\") {\r\n\t\t\tthis.hideTooltip();\r\n\t\t}\r\n\t\tthis._outTimeout = this.setTimeout(this.handleOutReal.bind(this), this.rollOutDelay);\r\n\t}\r\n\r\n\t/**\r\n\t * [handleOutReal description]\r\n\t *\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tpublic handleOutReal() {\r\n\t\tif (!this.isHidden && !this.isHiding && this.states.hasKey(\"hover\")) {\r\n\t\t\tthis.applyCurrentState();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * CLICKING/TAPPING AND TOGGLING STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns Sprite's click (hit) options.\r\n\t *\r\n\t * Click (hit) options control things like double-click, timeouts, etc.\r\n\t *\r\n\t * @see {@link IHitOptions} for available options.\r\n\t * @return Options\r\n\t */\r\n\tpublic get hitOptions(): IHitOptions {\r\n\t\tif (!this.interactions.hitOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.hitOptions;\r\n\t\t\t}\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.hitOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.hitOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares element's after `down` event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event\r\n\t */\r\n\tpublic handleDown(ev?: AMEvent<Sprite, ISpriteEvents>[\"down\"]): void {\r\n\t\tif (this.interactions.downPointers.length === 1) {\r\n\t\t\tthis.interactions.originalPosition = {\r\n\t\t\t\tx: this.pixelX,\r\n\t\t\t\ty: this.pixelY\r\n\t\t\t};\r\n\t\t\tthis.interactions.originalAngle = this.rotation;\r\n\t\t\tthis.interactions.originalScale = this.scale;\r\n\t\t\tif (this.states.hasKey(\"down\")) {\r\n\t\t\t\tthis.setState(\"down\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares element's after `up` event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event\r\n\t */\r\n\tpublic handleUp(ev?: AMEvent<Sprite, ISpriteEvents>[\"up\"]): void {\r\n\t\t/*if (!this.isDown) {\r\n\t\t\tthis.interactions.originalPosition = null;\r\n\t\t\tthis.interactions.originalAngle = null;\r\n\t\t\tthis.interactions.originalScale = null;\r\n\t\t}*/\r\n\t\tthis._isResized = false;\r\n\t\tif (this.states.hasKey(\"down\")) {\r\n\t\t\tthis.applyCurrentState();\r\n\t\t}\r\n\t\tif (this.showTooltipOn == \"hit\") {\r\n\t\t\tthis.updateTooltipPosition(ev.pointer ? ev.pointer.point : undefined);\r\n\t\t\tthis._disposers.push(registry.events.once(\"exitframe\", () => {\r\n\t\t\t\tthis.showTooltip();\r\n\t\t\t}));\r\n\r\n\t\t\tthis._disposers.push(getInteraction().body.events.once(\"down\", (ev) => {\r\n\t\t\t\tthis.hideTooltip();\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the element is clickable.\r\n\t *\r\n\t * Some type of the elements, like buttons are clickable by default.\r\n\t *\r\n\t * Most of the elements are not clickable by default.\r\n\t *\r\n\t * Use `hit`, `doublehit`, `up`, `down`, `toggled` events to watch for\r\n\t * respective click/touch actions.\r\n\t *\r\n\t * @param value `true` if element can be clicked\r\n\t */\r\n\tpublic set clickable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"clickable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.clickable = value;\r\n\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-clickable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"down\", this.handleDown, this, false),\r\n\t\t\t\t\tthis.events.on(\"up\", this.handleUp, this, false)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean}\r\n\t */\r\n\tpublic get clickable(): boolean {\r\n\t\treturn this.getPropertyValue(\"clickable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if element can be toggled on and off by subsequent clicks/taps.\r\n\t *\r\n\t * Togglable element will alternate its `isActive` property between `true`\r\n\t * and `false` with each click.\r\n\t *\r\n\t * @param value Is togglable?\r\n\t */\r\n\tpublic set togglable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"togglable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-togglable\", value, () => this.events.on(\"hit\", this.handleToggle, this, false));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Is togglable?\r\n\t */\r\n\tpublic get togglable(): boolean {\r\n\t\treturn this.getPropertyValue(\"togglable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Handles toggling of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event\r\n\t */\r\n\tpublic handleToggle(ev: AMEvent<Sprite, ISpriteEvents>[\"hit\"]) {\r\n\t\tthis.isActive = !this.isActive;\r\n\t}\r\n\r\n\t/**\r\n\t * Should element prevent context menu to be displayed, e.g. when\r\n\t * right-clicked?\r\n\t *\r\n\t * @default false\r\n\t * @param value Context menu disabled?\r\n\t */\r\n\tpublic set contextMenuDisabled(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"contextMenuDisabled\", value)) {\r\n\t\t\tthis.interactions.contextMenuDisabled = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Context menu disabled?\r\n\t */\r\n\tpublic get contextMenuDisabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"contextMenuDisabled\");\r\n\t}\r\n\r\n\t/**\r\n\t * Click-through URL for this element.\r\n\t *\r\n\t * If set, clicking/tapping this element will open the new URL in a target\r\n\t * window/tab as set by `urlTarget`.\r\n\t *\r\n\t * Please note that URL will be parsed by data placeholders in curly\r\n\t * brackets, to be populated from data. E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.columns.template.url = \"https://www.google.com/search?q={category.urlEncode()}\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.columns.template.url = \"https://www.google.com/search?q={category.urlEncode()}\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"columns\": {\r\n\t *       \"url\": \"https://www.google.com/search?q={category.urlEncode()}\"\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param value URL\r\n\t */\r\n\tpublic set url(value: $type.Optional<string>) {\r\n\t\tif (this.setPropertyValue(\"url\", value)) {\r\n\t\t\tif (this._urlDisposer) {\r\n\t\t\t\tthis._urlDisposer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\t// If URL is not empty, set up events\r\n\t\t\tif ($utils.isNotEmpty(value)) {\r\n\t\t\t\tthis._urlDisposer = this.events.on(\"hit\", this.urlHandler, this, false);\r\n\r\n\t\t\t\t// Set other required parameters\r\n\t\t\t\tthis.clickable = true;\r\n\t\t\t\tthis.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return URL\r\n\t */\r\n\tpublic get url(): $type.Optional<string> {\r\n\t\treturn this.getPropertyValue(\"url\");\r\n\t}\r\n\r\n\t/**\r\n\t * [baseId description]\r\n\t *\r\n\t * @ignore\r\n\t * @param  value  [description]\r\n\t */\r\n\tpublic set baseId(value: string) {\r\n\t\tthis.setBaseId(value);\r\n\t}\r\n\r\n\t/**\r\n\t * [baseId description]\r\n\t *\r\n\t * @ignore\r\n\t * @return [description]\r\n\t */\r\n\tpublic get baseId(): string {\r\n\t\tif (!this._baseId && this._parent) {\r\n\t\t\tthis.baseId = this._parent.baseId;\r\n\t\t}\r\n\r\n\t\treturn this._baseId;\r\n\t}\r\n\r\n\tprotected setBaseId(value: string) {\r\n\t\tif (value != this._baseId) {\r\n\t\t\tif (this.invalid) {\r\n\t\t\t\tthis.invalid = false;\r\n\t\t\t\tregistry.removeFromInvalidSprites(this);\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\t\t\tthis._baseId = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the mail chart object that this element belongs to.\r\n\t *\r\n\t * In most cases it will mean the chart object.\r\n\t *\r\n\t * Can be used to retrieve chart object in various events and adapters.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.seriesContainer.events.on(\"hit\", function(ev) {\r\n\t *   console.log(ev.target.baseSprite);\r\n\t * });\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.seriesContainer.events.on(\"hit\", function(ev) {\r\n\t *   console.log(ev.target.baseSprite);\r\n\t * });\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"seriesContainer\": {\r\n\t *     \"events\": {\r\n\t *       \"hit\": function(ev) {\r\n\t *         console.log(ev.target.baseSprite);\r\n\t *       }\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @readonly\r\n\t * @return  Base chart object\r\n\t */\r\n\tpublic get baseSprite(): $type.Optional<Sprite> {\r\n\t\tif (this.isBaseSprite) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.baseSprite;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Target to use for URL clicks:\r\n\t *\r\n\t * * _blank\r\n\t * * _self (default)\r\n\t * * _parent\r\n\t * * _top\r\n\t * * Name of the window/frame\r\n\t *\r\n\t * Ignored if `url` is not set.\r\n\t *\r\n\t * @param value URL target\r\n\t */\r\n\tpublic set urlTarget(value: string) {\r\n\t\tthis.setPropertyValue(\"urlTarget\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return URL target\r\n\t */\r\n\tpublic get urlTarget(): string {\r\n\t\treturn this.getPropertyValue(\"urlTarget\");\r\n\t}\r\n\r\n\t/**\r\n\t * Handles URL transition on element click.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev An event object\r\n\t */\r\n\tpublic urlHandler(ev: AMEvent<Sprite, ISpriteEvents>[\"hit\"]): void {\r\n\t\t// Is URL set?\r\n\t\tif ($utils.isNotEmpty(this.url)) {\r\n\t\t\t// Proceed to the URL\r\n\t\t\tlet url = this.populateString(this.url);\r\n\t\t\tif (this.urlTarget === \"_self\") {\r\n\t\t\t\twindow.location.href = url;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twindow.open(url, this.urlTarget);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * SWIPING GESTURE TRACKING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns element's swipe gesture options.\r\n\t *\r\n\t * @return Swipe gesture options\r\n\t */\r\n\tpublic get swipeOptions(): ISwipeOptions {\r\n\t\tif (!this.interactions.swipeOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.swipeOptions;\r\n\t\t\t}\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.swipeOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.swipeOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element is swipeable.\r\n\t *\r\n\t * Swipable element will invoke `swipe`, `swipeleft` and `swiperight` events,\r\n\t * when quick horizontal drag action is performed with either mouse or touch.\r\n\t *\r\n\t * Please note that combining swipe and drag is possible, however will incur\r\n\t * a slight but noticeable delay in drag start.\r\n\t *\r\n\t * @param value  Element swipable?\r\n\t */\r\n\tpublic set swipeable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"swipeable\", value)) {\r\n\t\t\tthis.applyCursorStyle();\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.interactions.swipeable = value;\r\n\t\t\t}\r\n\t\t\t//interaction.processSwipeable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element swipable?\r\n\t */\r\n\tpublic get swipeable(): boolean {\r\n\t\treturn this.getPropertyValue(\"swipeable\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * POINTER TRACKING\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Indicates if the element is trackable (mouse position over it is reported to\r\n\t * event listeners).\r\n\t *\r\n\t * Will invoke `track` events whenever pointer (cursor) changes position\r\n\t * while over element.\r\n\t *\r\n\t * Please note, touch devices will also invoke `track` events when touch\r\n\t * point is moved while holding down on a trackable element.\r\n\t *\r\n\t * @param value Track cursor movement over element?\r\n\t */\r\n\tpublic set trackable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"trackable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.trackable = value;\r\n\t\t\t}\r\n\t\t\t//interaction.processTrackable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Track cursor movement over element?\r\n\t */\r\n\tpublic get trackable(): boolean {\r\n\t\treturn this.getPropertyValue(\"trackable\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * MOUSE-WHEEL RELATED\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Indicates if the element can be interacted with mouse wheel.\r\n\t *\r\n\t * Will invoke `wheel`, `wheelup`, `wheeldown`, `wheelleft`, and `wheelright`\r\n\t * events when using mouse wheel over the element.\r\n\t *\r\n\t * @param value Mouse wheel events enabled?\r\n\t */\r\n\tpublic set wheelable(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"wheelable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.wheelable = value;\r\n\t\t\t}\r\n\t\t\t//interaction.processWheelable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Mouse wheel events enabled?\r\n\t */\r\n\tpublic get wheelable(): boolean {\r\n\t\treturn this.getPropertyValue(\"wheelable\");\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * RESIZE\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Indicates if this element is resizable.\r\n\t *\r\n\t * Enabling resize will turn on various interactions on the element. Their\r\n\t * actual functionality will depend on other properties.\r\n\t *\r\n\t * If the element also `draggable`, resize will only happen with two points\r\n\t * of contact on a touch device.\r\n\t *\r\n\t * If the element is not draggable, resize can be performed with just one\r\n\t * point of contact, touch or mouse.\r\n\t *\r\n\t * Will invoke `resize` event every time the size of the element changes.\r\n\t *\r\n\t * @param value  Element resizable?\r\n\t */\r\n\tpublic set resizable(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"resizable\", value)) {\r\n\t\t\tif (!value && !this.isInteractive()) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.applyCursorStyle();\r\n\t\t\t\tthis.interactions.resizable = value;\r\n\t\t\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\t\t\tthis.interactions.setEventDisposer(\"sprite-resizable\", value, () => new MultiDisposer([\r\n\t\t\t\t\tthis.events.on(\"down\", this.handleDown, this, false),\r\n\t\t\t\t\tthis.events.on(\"resize\", this.handleResize, this, false)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element resizable?\r\n\t */\r\n\tpublic get resizable(): boolean {\r\n\t\treturn this.getPropertyValue(\"resizable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Handles resize intermediate step.\r\n\t *\r\n\t * By default this method resizes actual element. Each element, can override\r\n\t * this method to implement their own resize logic.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event object\r\n\t */\r\n\tpublic handleResize(ev: AMEvent<Sprite, ISpriteEvents>[\"resize\"]): void {\r\n\t\tif (!this.interactions.isTouchProtected || !ev.touch) {\r\n\t\t\tthis._isResized = true;\r\n\r\n\t\t\tthis.scale = this.interactions.originalScale * ev.scale;\r\n\r\n\t\t\tthis.validatePosition();\r\n\t\t\t/*center: (io.draggable\r\n\t\t\t? $math.getMidPoint(point1, point2)\r\n\t\t\t: {\r\n\t\t\t\t\"x\": io.originalPosition.x,\r\n\t\t\t\t\"y\": io.originalPosition.y\r\n\t\t\t})*/\r\n\t\t\t//this.moveTo(this.originalPosition.x + ev.shift.x, this.originalPosition.y + ev.shift.y);\r\n\t\t\tif (this.draggable || this.dragWhileResize) {\r\n\t\t\t\tthis._isDragged = false;\r\n\t\t\t\tlet svgPoint1: IPoint = $utils.documentPointToSvg(ev.point1, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\t\t\tlet svgPoint2: IPoint = $utils.documentPointToSvg(ev.point2, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\t\t\tlet svgMidPoint: IPoint = $math.getMidPoint(svgPoint1, svgPoint2);\r\n\r\n\t\t\t\tlet parentPoint1: IPoint = $utils.documentPointToSprite(ev.startPoint1, this._parent);\r\n\t\t\t\tlet parentPoint2: IPoint = $utils.documentPointToSprite(ev.startPoint2, this._parent);\r\n\r\n\t\t\t\tlet originalPosition: Optional<IPoint> = this.interactions.originalPosition;\r\n\t\t\t\tlet originalScale: number = this.interactions.originalScale;\r\n\r\n\t\t\t\tif (originalPosition) {\r\n\t\t\t\t\tlet spritePoint1: IPoint = { x: (parentPoint1.x - originalPosition.x) / originalScale, y: (parentPoint1.y - originalPosition.y) / originalScale };\r\n\t\t\t\t\tlet spritePoint2: IPoint = { x: (parentPoint2.x - originalPosition.x) / originalScale, y: (parentPoint2.y - originalPosition.y) / originalScale };\r\n\r\n\t\t\t\t\tlet spriteMidPoint: IPoint = $math.getMidPoint(spritePoint1, spritePoint2);\r\n\r\n\t\t\t\t\tlet parentPoint: IPoint = $utils.svgPointToSprite(svgMidPoint, this._parent);\r\n\t\t\t\t\tthis.moveTo({ x: parentPoint.x - spriteMidPoint.x * this.scale, y: parentPoint.y - spriteMidPoint.y * this.scale }, undefined, undefined, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * MOUSE-RELATED\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns element's cursor options.\r\n\t *\r\n\t * Cursor options usually define cursor style for various states of the\r\n\t * hovered element.\r\n\t *\r\n\t * Elements inherit `cursorOptions` from their parents if they don't have\r\n\t * them set explicitly.\r\n\t *\r\n\t * @see {@link ICursorOptions} for a list of available options\r\n\t * @return Cursor options\r\n\t */\r\n\tpublic get cursorOptions(): ICursorOptions {\r\n\t\tif (!this.interactions.cursorOptions) {\r\n\t\t\tif (this.virtualParent) {\r\n\t\t\t\treturn this.virtualParent.cursorOptions;\r\n\t\t\t}\r\n\t\t\tif (this._parent) {\r\n\t\t\t\treturn this._parent.cursorOptions;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.interactions.cursorOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * A shortcut to setting mouse cursor on hover.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.slices.template.cursorOverStyle = am4core.MouseCursorStyle.pointer;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.slices.template.cursorOverStyle = am4core.MouseCursorStyle.pointer;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": {\r\n\t *     // ...\r\n\t *     \"slices\": {\r\n\t *       \"cursorOverStyle\": \"pointer\"\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param style An array of styles to apply onhover\r\n\t */\r\n\tpublic set cursorOverStyle(style: Array<IStyleProperty>) {\r\n\t\tif (!this.cursorOptions.overStyle) {\r\n\t\t\tthis.interactions.cursorOptions = {\r\n\t\t\t\tdefaultStyle: this.cursorOptions.defaultStyle\r\n\t\t\t};\r\n\t\t}\r\n\t\tthis.cursorOptions.overStyle = style;\r\n\t\tgetInteraction().applyCursorOverStyle(this.interactions);\r\n\t}\r\n\r\n\t/**\r\n\t * A shortcut to setting mouse cursor when button is pressed down.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.slices.template.cursorDownStyle = am4core.MouseCursorStyle.grabbing;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.slices.template.cursorDownStyle = am4core.MouseCursorStyle.grabbing;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": {\r\n\t *     // ...\r\n\t *     \"slices\": {\r\n\t *       \"cursorDownStyle\": \"grabbing\"\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param style An array of styles to apply onhover\r\n\t */\r\n\tpublic set cursorDownStyle(style: Array<IStyleProperty>) {\r\n\t\tthis.cursorOptions.downStyle = style;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies default cursor styles for interactable elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Determine if this is necessary. Maybe let's not apply any cursor styles by default\r\n\t */\r\n\tpublic applyCursorStyle(): void {\r\n\r\n\t\t// Draggable styles\r\n\t\t/*if (this.draggable) {\r\n\r\n\t\t\tif (!$type.hasValue(this.cursorOptions.overStyle)) {\r\n\t\t\t\tthis.cursorOptions.overStyle = MouseCursorStyle.grab;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.hasValue(this.cursorOptions.downStyle)) {\r\n\t\t\t\tthis.cursorOptions.downStyle = MouseCursorStyle.grabbing;\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Setting this to `false` will effectively disable all interactivity on the\r\n\t * element.\r\n\t *\r\n\t * @param value  Is interaction enabled for this element?\r\n\t */\r\n\tpublic set interactionsEnabled(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\r\n\t\tif (this.setPropertyValue(\"interactionsEnabled\", value)) {\r\n\t\t\tlet pointerEvents = null; // must be null, not \"null\"!\r\n\t\t\tif (!value) {\r\n\t\t\t\tpointerEvents = \"none\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is for IE\r\n\t\t\t\tthis.group.node.style.pointerEvents = \"\";\r\n\t\t\t}\r\n\t\t\tthis.group.node.style.pointerEvents = pointerEvents;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Is interaction enabled for this element?\r\n\t */\r\n\tpublic get interactionsEnabled(): boolean {\r\n\t\tlet value = this.getPropertyValue(\"interactionsEnabled\");\r\n\t\tif (value === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.interactionsEnabled;\r\n\t\t}\r\n\t\tif (this._parent) {\r\n\t\t\treturn this._parent.interactionsEnabled;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * EXPORT-RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * An [[Export]] instance.\r\n\t *\r\n\t * Used to access API of the chart export functionality.\r\n\t *\r\n\t * If `exporting` is not set, the element inherits [[Export]] instance from\r\n\t * its parents.\r\n\t *\r\n\t * Upon request, if no parent has such instance, a new one is created, using\r\n\t * default settings, what in most cases is just enough.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/} for more info about exporting\r\n\t * @param exp  Export\r\n\t */\r\n\tpublic set exporting(exp: Export) {\r\n\t\tthis._exporting.set(exp, exp);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Export instance\r\n\t */\r\n\tpublic get exporting(): Export {\r\n\t\treturn this.getExporting();\r\n\t}\r\n\r\n\t/**\r\n\t * This is here as a method so that inheriting classes could override it.\r\n\t *\r\n\t * @return Export instance\r\n\t */\r\n\tprotected getExporting(): Export {\r\n\t\tlet _export = this._exporting.get();\r\n\r\n\t\tif (_export) {\r\n\t\t\treturn _export;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.isStandaloneInstance || !this._parent) {\r\n\t\t\t\t_export = new Export(this.svgContainer.SVGContainer);\r\n\t\t\t\t_export.sprite = this;\r\n\t\t\t\t_export.language = this.language;\r\n\t\t\t\t_export.numberFormatter = this.numberFormatter;\r\n\t\t\t\t_export.dateFormatter = this.dateFormatter;\r\n\t\t\t\t_export.durationFormatter = this.durationFormatter;\r\n\t\t\t\tthis._exporting.set(_export, _export);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._parent.exporting;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn _export;\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `false` this element will be omitted when exporting the chart\r\n\t * to an image.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Export?\r\n\t */\r\n\tpublic set exportable(value: boolean) {\r\n\t\tconst svgContainer = this.svgContainer;\r\n\t\tthis._exportable = value;\r\n\t\tif (svgContainer) {\r\n\t\t\tif (value) {\r\n\t\t\t\t$array.remove(svgContainer.nonExportableSprites, this);\r\n\t\t\t}\r\n\t\t\telse if ($array.indexOf(svgContainer.nonExportableSprites, this) == -1) {\r\n\t\t\t\tsvgContainer.nonExportableSprites.push(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Export?\r\n\t */\r\n\tpublic get exportable(): boolean {\r\n\t\treturn this._exportable;\r\n\t\t/*const svgContainer = this.svgContainer;\r\n\t\treturn !svgContainer || $array.indexOf(svgContainer.nonExportableSprites, this) == -1;*/\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * MODAL/POPUP RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Private method to be used for \"classPrefix\" adapter for modals/popups.\r\n\t *\r\n\t * @param value  Prefix\r\n\t */\r\n\tprivate modalPrefix(value: string) {\r\n\t\tvalue = options.classNamePrefix + value;\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[Modal]] instance, associated with this chart.\r\n\t * (elements top parent)\r\n\t *\r\n\t * Accessing modal does not make it appear. To make a modal appear, use\r\n\t * `showModal()` method.\r\n\t *\r\n\t * @see {@link Modal} for more information about using Modal windows\r\n\t * @return Modal instance\r\n\t */\r\n\tpublic get modal(): Optional<Modal> {\r\n\t\tconst svgContainer = this.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\tconst modal = svgContainer.modal;\r\n\t\t\tif (!modal.adapter.has(\"classPrefix\", this.modalPrefix)) {\r\n\t\t\t\tmodal.adapter.add(\"classPrefix\", this.modalPrefix);\r\n\t\t\t}\r\n\t\t\treturn modal;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a modal window with specific content (`text` parameter) and,\r\n\t * optionally, `title`.\r\n\t *\r\n\t * The `text` parameter can contain HTML content.\r\n\t *\r\n\t * @see {@link Modal} for more information about using Modal windows\r\n\t * @param text   Modal contents\r\n\t * @param title  Title for the modal window\r\n\t */\r\n\tpublic openModal(text: string, title?: string): Optional<Modal> {\r\n\t\tconst svgContainer = this.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\treturn svgContainer.openModal(text, title);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides modal window if there is one currently open.\r\n\t */\r\n\tpublic closeModal(): void {\r\n\t\tconst svgContainer = this.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\tsvgContainer.closeModal();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A list of popups for this chart.\r\n\t *\r\n\t * @return Popups\r\n\t */\r\n\tpublic get popups(): Optional<ListTemplate<Popup>> {\r\n\t\tconst svgContainer = this.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\tconst popups = svgContainer.popups;\r\n\t\t\tpopups.template.sprite = this;\r\n\r\n\t\t\tif (!popups.template.adapter.has(\"classPrefix\", this.modalPrefix)) {\r\n\t\t\t\tpopups.template.adapter.add(\"classPrefix\", this.modalPrefix);\r\n\t\t\t}\r\n\t\t\treturn popups;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates, opens, and returns a new [[Popup]] window.\r\n\t *\r\n\t * `text` can be any valid HTML.\r\n\t *\r\n\t * `title` is currently not supported.\r\n\t *\r\n\t * @param text   Popup contents\r\n\t * @param title  Popup title\r\n\t * @return Popup instance\r\n\t */\r\n\tpublic openPopup(text: string, title?: string): Optional<Popup> {\r\n\t\tconst svgContainer = this.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\treturn svgContainer.openPopup(text, title);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Closes all currently open popup windows\r\n\t */\r\n\tpublic closeAllPopups(): void {\r\n\t\tconst svgContainer = this.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\tsvgContainer.closeAllPopups();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * POSITIONAL PROPERTIES AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Element's absolute or relative X coordinate.\r\n\t *\r\n\t * If setting both X and Y, please consider using `moveTo()` method instead,\r\n\t * as it will be faster to set both coordinates at once.\r\n\t *\r\n\t * @param value X coordinate\r\n\t */\r\n\tpublic set x(value: number | Percent) {\r\n\t\tif (!this.isDragged) {\r\n\t\t\tthis.setPercentProperty(\"x\", value, false, true, this._positionPrecision, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return X coordinate\r\n\t */\r\n\tpublic get x(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"x\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current absolute X coordinate in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return X coordinate (px)\r\n\t */\r\n\tpublic get pixelX(): number {\r\n\t\tlet value = $math.fitToRange(this.getPixelX(this.x), this.minX, this.maxX);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"pixelX\", value);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current relative X coordinate in [[Percent]].\r\n\t *\r\n\t * @return X coordinate ([[Percent]])\r\n\t */\r\n\tpublic get relativeX(): number {\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this.getRelativeX(this.x)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"relativeX\", this.getRelativeX(this.x));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The smallest allowable absolute X coordinate for this element.\r\n\t *\r\n\t * This is used to contain element movement within certain boundaries.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Min X (px)\r\n\t */\r\n\tpublic set minX(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"minX\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Min X (px)\r\n\t */\r\n\tpublic get minX(): number {\r\n\t\treturn this.getPropertyValue(\"minX\");\r\n\t}\r\n\r\n\t/**\r\n\t * The biggest allowable absolute X coordinate for this element.\r\n\t *\r\n\t * This is used to contain element movement within certain boundaries.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Max X (px)\r\n\t */\r\n\tpublic set maxX(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"maxX\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Max X (px)\r\n\t */\r\n\tpublic get maxX(): number {\r\n\t\treturn this.getPropertyValue(\"maxX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's absolute or relative Y coordinate.\r\n\t *\r\n\t * If setting both X and Y, please consider using `moveTo()` method instead,\r\n\t * as it will be faster to set both coordinates at once.\r\n\t *\r\n\t * @param value  Y coordinate\r\n\t */\r\n\tpublic set y(value: number | Percent) {\r\n\t\tif (!this.isDragged) {\r\n\t\t\tthis.setPercentProperty(\"y\", value, false, true, this._positionPrecision, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Y coordinate\r\n\t */\r\n\tpublic get y(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"y\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current absolute Y coordinate in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Y coordinate (px)\r\n\t */\r\n\tpublic get pixelY(): number {\r\n\t\tlet value = $math.fitToRange(this.getPixelY(this.y), this.minY, this.maxY);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"pixelY\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current relative Y coordinate in [[Percent]].\r\n\t *\r\n\t * @readonly\r\n\t * @return Y coordinate ([[Percent]])\r\n\t */\r\n\tpublic get relativeY(): number {\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this.getRelativeX(this.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"relativeY\", this.getRelativeX(this.y));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The smallest allowable absolute Y coordinate for this element.\r\n\t *\r\n\t * This is used to contain element movement within certain boundaries.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Min Y (px)\r\n\t */\r\n\tpublic set minY(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"minY\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Min Y (px)\r\n\t */\r\n\tpublic get minY(): number {\r\n\t\treturn this.getPropertyValue(\"minY\");\r\n\t}\r\n\r\n\t/**\r\n\t * The biggest allowable absolute Y coordinate for this element.\r\n\t *\r\n\t * This is used to contain element movement within certain boundaries.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Max Y (px)\r\n\t */\r\n\tpublic set maxY(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"maxY\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Max Y (px)\r\n\t */\r\n\tpublic get maxY(): number {\r\n\t\treturn this.getPropertyValue(\"maxY\");\r\n\t}\r\n\r\n\t/**\r\n\t * A horizontal offset for the element in pixels.\r\n\t *\r\n\t * Can be negative value for offset to the left.\r\n\t *\r\n\t * @param value  Horizontal offset (px)\r\n\t */\r\n\tpublic set dx(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"dx\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal offset (px)\r\n\t */\r\n\tpublic get dx(): number {\r\n\t\treturn this.getPropertyValue(\"dx\");\r\n\t}\r\n\r\n\t/**\r\n\t * A vertical offset for the element in pixels.\r\n\t *\r\n\t * Can be negative value for offset upwards.\r\n\t *\r\n\t * @param value  Vertical offset (px)\r\n\t */\r\n\tpublic set dy(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tvalue = $math.round(value, this._positionPrecision, true);\r\n\t\t\tthis.setPropertyValue(\"dy\", value, false, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical offset (px)\r\n\t */\r\n\tpublic get dy(): number {\r\n\t\treturn this.getPropertyValue(\"dy\");\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation of the element in degrees. (0-360)\r\n\t *\r\n\t * Note: For convenience purposes, negative values (for counter-clockwise\r\n\t * rotation) and values exceeding 360 can also be used.\r\n\t *\r\n\t * @param value  Rotation (0-360)\r\n\t */\r\n\tpublic set rotation(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tthis.setPropertyValue(\"rotation\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation (0-360)\r\n\t */\r\n\tpublic get rotation(): number {\r\n\t\treturn this.getPropertyValue(\"rotation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls horizontal alignment of the element.\r\n\t *\r\n\t * This is used by parent [[Container]] when layouting its children.\r\n\t *\r\n\t * @param value  Horizontal align\r\n\t */\r\n\tpublic set align(value: Align) {\r\n\t\tvalue = <Align>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"align\", value)) {\r\n\t\t\tif (this._parent) {\r\n\t\t\t\tthis._parent.invalidateLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal align\r\n\t */\r\n\tpublic get align(): Align {\r\n\t\treturn this.getPropertyValue(\"align\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls vertical alignment of the element.\r\n\t *\r\n\t * This is used by parent [[Container]] when layouting its children.\r\n\t *\r\n\t * @param value  Vertical align\r\n\t */\r\n\tpublic set valign(value: VerticalAlign) {\r\n\t\tvalue = <VerticalAlign>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"valign\", value)) {\r\n\t\t\tif (this._parent) {\r\n\t\t\t\tthis._parent.invalidateLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical align\r\n\t */\r\n\tpublic get valign(): VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"valign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls which part of the element to treat as a horizontal center.\r\n\t *\r\n\t * The setting will be used when positioning, resizing and rotating the\r\n\t * element.\r\n\t *\r\n\t * @param value  Horizontal center\r\n\t */\r\n\tpublic set horizontalCenter(value: HorizontalCenter) {\r\n\t\tvalue = <HorizontalCenter>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"horizontalCenter\", value)) {\r\n\t\t\tthis.updateCenter();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal center\r\n\t */\r\n\tpublic get horizontalCenter(): HorizontalCenter {\r\n\t\treturn this.getPropertyValue(\"horizontalCenter\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls which part of the element to treat as a vertical center.\r\n\t *\r\n\t * The setting will be used when positioning, resizing and rotating the\r\n\t * element.\r\n\t *\r\n\t * @param value  Vertical center\r\n\t */\r\n\tpublic set verticalCenter(value: VerticalCenter) {\r\n\t\tvalue = <VerticalCenter>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"verticalCenter\", value)) {\r\n\t\t\tthis.updateCenter();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical center\r\n\t */\r\n\tpublic get verticalCenter(): VerticalCenter {\r\n\t\treturn this.getPropertyValue(\"verticalCenter\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * DIMENSIONAL PROPERTIES AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Maximum allowed width for the element in pixels.\r\n\t *\r\n\t * @param value  Maximum width (px)\r\n\t */\r\n\tpublic set maxWidth(value: number) {\r\n\t\tthis.setMaxWidth(value);\r\n\t}\r\n\r\n\tprotected setMaxWidth(value: number) {\r\n\t\tlet prevWidth = this.maxWidth;\r\n\t\tlet prevHeight = this.maxHeight;\r\n\t\tif (this.setPropertyValue(\"maxWidth\", value)) {\r\n\t\t\tif ($type.isNumber(this.relativeWidth)) {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tconst event: AMEvent<this, ISpriteEvents>[\"maxsizechanged\"] = {\r\n\t\t\t\ttype: \"maxsizechanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tpreviousWidth: prevWidth,\r\n\t\t\t\tpreviousHeight: prevHeight\r\n\t\t\t};\r\n\r\n\t\t\tthis.dispatchImmediately(\"maxsizechanged\", event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum width (px)\r\n\t */\r\n\tpublic get maxWidth(): number {\r\n\t\tlet maxWidth = this.getPropertyValue(\"maxWidth\");\r\n\r\n\t\tif (!$type.isNumber(maxWidth)) {\r\n\t\t\tif (this._parent) {\r\n\t\t\t\tlet parentWidth = this._parent.maxWidth;\r\n\t\t\t\tif (this._parent.layout != \"absolute\" && this.align != \"none\" && this.align != undefined) {\r\n\t\t\t\t\tparentWidth = parentWidth - this.pixelMarginLeft - this.pixelMarginRight;\r\n\t\t\t\t}\r\n\t\t\t\treturn parentWidth;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum allowed height for the element in pixels.\r\n\t *\r\n\t * @param value  Maximum height (px)\r\n\t */\r\n\tpublic set maxHeight(value: number) {\r\n\t\tthis.setMaxHeight(value);\r\n\t}\r\n\r\n\tprotected setMaxHeight(value: number) {\r\n\r\n\t\tlet prevWidth = this.maxWidth;\r\n\t\tlet prevHeight = this.maxHeight;\r\n\r\n\t\tif (this.setPropertyValue(\"maxHeight\", value)) {\r\n\r\n\t\t\tif ($type.isNumber(this.relativeHeight)) {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tconst event: AMEvent<this, ISpriteEvents>[\"maxsizechanged\"] = {\r\n\t\t\t\ttype: \"maxsizechanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tpreviousWidth: prevWidth,\r\n\t\t\t\tpreviousHeight: prevHeight\r\n\t\t\t};\r\n\r\n\t\t\tthis.dispatchImmediately(\"maxsizechanged\", event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum height (px)\r\n\t */\r\n\tpublic get maxHeight(): number {\r\n\t\tlet maxHeight = this.getPropertyValue(\"maxHeight\");\r\n\t\tif (!$type.isNumber(maxHeight)) {\r\n\t\t\tif (this._parent) {\r\n\t\t\t\tlet parentHeight = this._parent.maxHeight;\r\n\t\t\t\tif (this._parent.layout != \"absolute\" && this.valign != \"none\" && this.valign != undefined) {\r\n\t\t\t\t\tparentHeight = parentHeight - this.pixelMarginTop - this.pixelMarginBottom;\r\n\t\t\t\t}\r\n\t\t\t\treturn parentHeight;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum width of the element in pixels.\r\n\t *\r\n\t * Set to `undefined` to remove the limit.\r\n\t *\r\n\t * @param value  Minimum width (px)\r\n\t */\r\n\tpublic set minWidth(value: Optional<number>) {\r\n\t\tthis.setPropertyValue(\"minWidth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Minimum width (px)\r\n\t */\r\n\tpublic get minWidth(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum height for the element in pixels.\r\n\t *\r\n\t * Set to `undefined` to remove the limit.\r\n\t *\r\n\t * @param value  Minimum height (px)\r\n\t */\r\n\tpublic set minHeight(value: Optional<number>) {\r\n\t\tthis.setPropertyValue(\"minHeight\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Minimum height (px)\r\n\t */\r\n\tpublic get minHeight(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's absolute or relative width.\r\n\t *\r\n\t * The width can either be absolute, set in numeric pixels, or relative, set\r\n\t * in [[Percent]].\r\n\t *\r\n\t * Relative width will be calculated using closest measured ancestor\r\n\t * [[Container]].\r\n\t *\r\n\t * NOTE: `width` is an accessor, which allows setting width in pixels or\r\n\t * percent. It is a sort of a \"shortcut\" for the users. Actual renderer does\r\n\t * not ever use it. It uses either `pixelWidth` or `percentWidth`, so if\r\n\t * you need to add an adapter for width add it for either of the two\r\n\t * properties - whichever suits your requirements.\r\n\t *\r\n\t * @param value  Width (numeric in pixels or relative)\r\n\t */\r\n\tpublic set width(value: number | Percent) {\r\n\r\n\t\tlet changed: boolean = this.setPercentProperty(\"width\", value, true, false, this._positionPrecision, true);\r\n\r\n\t\tif (changed) {\r\n\t\t\tthis.percentWidth = undefined;\r\n\t\t\tthis.relativeWidth = undefined;\r\n\r\n\t\t\tif (value instanceof Percent) {\r\n\t\t\t\tthis.percentWidth = value.percent;\r\n\t\t\t\tif ($type.isNumber(this._pixelWidth)) {\r\n\t\t\t\t\tthis.maxWidth = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis._pixelWidth = undefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._pixelWidth = Number(value);\r\n\t\t\t\t//this._measuredWidth = this._pixelWidth;\r\n\t\t\t\tthis.maxWidth = this._pixelWidth;\r\n\t\t\t}\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (absolute or relative)\r\n\t */\r\n\tpublic get width(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"width\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's absolute or relative height.\r\n\t *\r\n\t * The height can either be absolute, set in numeric pixels, or relative, set\r\n\t * in [[Percent]].\r\n\t *\r\n\t * Relative height will be calculated using closest measured ancestor\r\n\t * [[Container]].\r\n\t *\r\n\t * NOTE: `height` is an accessor, which allows setting height in pixels or\r\n\t * percent. It is a sort of a \"shortcut\" for the users. Actual renderer does\r\n\t * not ever use it. It uses either `pixelHeight` or `percentHeight`, so if\r\n\t * you need to add an adapter for height add it for either of the two\r\n\t * properties - whichever suits your requirements.\r\n\t *\r\n\t * @param value  Height (numeric in pixels or relative)\r\n\t */\r\n\tpublic set height(value: number | Percent) {\r\n\r\n\t\tlet changed: boolean = this.setPercentProperty(\"height\", value, true, false, this._positionPrecision, true);\r\n\r\n\t\tif (changed) {\r\n\t\t\tthis.percentHeight = undefined;\r\n\t\t\tthis._relativeHeight = undefined;\r\n\r\n\t\t\tif (value instanceof Percent) {\r\n\t\t\t\tthis.percentHeight = value.percent;\r\n\t\t\t\tif ($type.isNumber(this._pixelHeight)) {\r\n\t\t\t\t\tthis.maxHeight = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis._pixelHeight = undefined;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._pixelHeight = Number(value);\r\n\t\t\t\t//this._measuredHeight = this._pixelHeight;\r\n\t\t\t\tthis.maxHeight = this._pixelHeight; // yes, we reset maxWidth\r\n\t\t\t}\r\n\r\n\t\t\tthis.invalidatePosition();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return height (absolute or relative)\r\n\t */\r\n\tpublic get height(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"height\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's width in pixels, if width was set. For actual width use measuredWidth property.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pixelWidth(): number {\r\n\t\tlet width: number;\r\n\t\tif ($type.isNumber(this.percentWidth)) {\r\n\t\t\twidth = this.maxWidth;\r\n\t\t}\r\n\t\telse if ($type.isNumber(this._pixelWidth)) {\r\n\t\t\twidth = this._pixelWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\twidth = 0;\r\n\t\t}\r\n\r\n\t\tconst minWidth = this.minWidth;\r\n\r\n\t\tif (minWidth != null && width < minWidth) {\r\n\t\t\twidth = minWidth;\r\n\t\t}\r\n\t\tlet value = $math.round(width, this._positionPrecision, true);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"pixelWidth\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's height in pixels. For actual height use measuredHeight property.\r\n\t *\r\n\t * @readonly\r\n\t * @return Height (px)\r\n\t */\r\n\tpublic get pixelHeight(): number {\r\n\t\tlet height: number;\r\n\t\tif ($type.isNumber(this.percentHeight)) {\r\n\t\t\theight = this.maxHeight;\r\n\t\t}\r\n\t\telse if ($type.isNumber(this._pixelHeight)) {\r\n\t\t\theight = this._pixelHeight;\r\n\t\t}\r\n\t\telse {\r\n\t\t\theight = 0//this._measuredHeightSelf;\r\n\t\t}\r\n\r\n\t\tconst minHeight = this.minHeight;\r\n\r\n\t\tif (minHeight != null && height < minHeight) {\r\n\t\t\theight = minHeight;\r\n\t\t}\r\n\t\tlet value = $math.round(height, this._positionPrecision, true);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"pixelHeight\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Element's relative width in [[Percent]].\r\n\t * @ignore\r\n\t *\r\n\t * @param value  Relative width\r\n\t */\r\n\tpublic set relativeWidth(value: $type.Optional<number>) {\r\n\t\tif (this._relativeWidth != value) {\r\n\t\t\tthis._relativeWidth = value;\r\n\t\t\t//\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Relative width\r\n\t * @ignore\r\n\t */\r\n\tpublic get relativeWidth(): $type.Optional<number> {\r\n\t\tconst relativeWidth = this._relativeWidth;\r\n\r\n\t\tif ($type.isNumber(relativeWidth)) {\r\n\t\t\tif (!this._adapterO) {\r\n\t\t\t\treturn relativeWidth;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._adapterO.apply(\"relativeWidth\", relativeWidth);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Element's relative height in [[Percent]].\r\n\t *\r\n\t * @param value  Relative height\r\n\t * @ignore\r\n\t */\r\n\tpublic set relativeHeight(value: $type.Optional<number>) {\r\n\t\tif (this._relativeHeight != value) {\r\n\t\t\tthis._relativeHeight = value;\r\n\t\t\t//\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Relative height\r\n\t * @ignore\r\n\t */\r\n\tpublic get relativeHeight(): $type.Optional<number> {\r\n\t\tconst relativeHeight = this._relativeHeight;\r\n\r\n\t\tif ($type.isNumber(relativeHeight)) {\r\n\t\t\tif (!this._adapterO) {\r\n\t\t\t\treturn relativeHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn this._adapterO.apply(\"relativeHeight\", relativeHeight);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured width in pixels.\r\n\t *\r\n\t * A measured width is actual width of contents plus `paddingRight` and* `paddingLeft`, relative to sprite parent, meaning that\r\n\t * rotation and scale is taken into account.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get measuredWidth(): number {\r\n\r\n\t\tif (this.disabled || this.__disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._measuredWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"measuredWidth\", this._measuredWidth);\r\n\t\t}\r\n\t\t// it's not good to fit to min/max range as then rotations and scale won't be taken into account\r\n\t\t//return this.adapter.apply(\"measuredWidth\", $math.fitToRange(this._measuredWidth, this.minWidth, this.maxWidth));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns elements's measured height in pixels.\r\n\t *\r\n\t * A measured height is actual height of contents plus `paddingTop` and `paddingBottom`, relative to sprite parent, meaning that\r\n\t * rotation and scale taken into account.\r\n\t *\r\n\t * @readonly\r\n\t * @return Height (px)\r\n\t */\r\n\tpublic get measuredHeight(): number {\r\n\r\n\t\tif (this.disabled || this.__disabled) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// it's not good to fit to min/max range as then rotations and scale won't be taken into account\r\n\t\t//return this.adapter.apply(\"measuredHeight\", $math.fitToRange(this._measuredHeight, this.minHeight, this.maxHeight));\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._measuredHeight;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"measuredHeight\", this._measuredHeight);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured width plus its left and right margins in\r\n\t * pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Outer width (px)\r\n\t */\r\n\tpublic get outerWidth(): number {\r\n\t\tlet value = this.pixelWidth + this.pixelMarginRight + this.pixelMarginLeft;\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"outerWidth\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured height plus its top and bottom margins in\r\n\t * pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Outer height (px)\r\n\t */\r\n\tpublic get outerHeight(): number {\r\n\t\tlet value = this.pixelHeight + this.pixelMarginTop + this.pixelMarginBottom;\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"outerHeight\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured inner width in pixels.\r\n\t *\r\n\t * Inner width is actual available space for content, e.g. element's width\r\n\t * minus horizontal padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return Inner width (px)\r\n\t */\r\n\tpublic get innerWidth(): number {\r\n\t\tlet value = Math.max(0, this.pixelWidth - this.pixelPaddingRight - this.pixelPaddingLeft);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"innerWidth\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's measured inner height in pixels.\r\n\t *\r\n\t * Inner height is actual available space for content, e.g. element's height\r\n\t * minus vertical padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return Inner height (px)\r\n\t */\r\n\tpublic get innerHeight(): number {\r\n\t\tlet value = Math.max(0, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"innerHeight\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns element's current \"global\" scale.\r\n\t *\r\n\t * Scale values accumulate over hierarchy of elements.\r\n\t *\r\n\t * E.g. if a [[Container]] has `scale = 2` and it's child has a `scale = 2`,\r\n\t * the child's `globalScale` will be 4. (a multitude of `2 x 2`)\r\n\t *\r\n\t * @readonly\r\n\t * @return Global scale\r\n\t */\r\n\tpublic get globalScale(): number {\r\n\t\tlet scale: number = this.scale;\r\n\t\tif (this._parent) {\r\n\t\t\tscale = scale * this._parent.globalScale;\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn scale;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"globalScale\", scale);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Scale of the element.\r\n\t *\r\n\t * The scale is set from 0 (element reduced to nothing) to 1 (default size).\r\n\t * * 2 will mean element is increased twice.\r\n\t * * 0.5 - reduced by 50%.\r\n\t *\r\n\t * Etc.\r\n\t *\r\n\t * @param value  Scale (0-1)\r\n\t */\r\n\tpublic set scale(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (value < 0) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\t\tif (value != this.getPropertyValue(\"scale\")) {\r\n\t\t\tthis.setPropertyValue(\"scale\", value, false, true);\r\n\t\t\tthis.handleGlobalScale();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Scale (0-1)\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this.getPropertyValue(\"scale\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all four margins for the element at once.\r\n\t *\r\n\t * Margins are set in pixels.\r\n\t *\r\n\t * @param top     Top margin\r\n\t * @param right   Right margin\r\n\t * @param bottom  Bottom margin\r\n\t * @param left    Left margin\r\n\t * @return Current element\r\n\t */\r\n\tpublic margin(top: number, right: number, bottom: number, left: number): Sprite {\r\n\t\tthis.marginTop = top;\r\n\t\tthis.marginRight = right;\r\n\t\tthis.marginBottom = bottom;\r\n\t\tthis.marginLeft = left;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Left margin - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Margin value\r\n\t */\r\n\tpublic set marginLeft(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"marginLeft\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Margin value\r\n\t */\r\n\tpublic get marginLeft(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"marginLeft\");\r\n\t}\r\n\r\n\t/**\r\n\t * Right margin - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Margin value\r\n\t */\r\n\tpublic set marginRight(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"marginRight\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Margin value\r\n\t */\r\n\tpublic get marginRight(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"marginRight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Top margin - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Margin value\r\n\t */\r\n\tpublic set marginTop(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"marginTop\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Margin value\r\n\t */\r\n\tpublic get marginTop(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"marginTop\");\r\n\t}\r\n\r\n\t/**\r\n\t * Bottom margin - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Margin value\r\n\t */\r\n\tpublic set marginBottom(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"marginBottom\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Margin value\r\n\t */\r\n\tpublic get marginBottom(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"marginBottom\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current right margin in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Right margin (px)\r\n\t */\r\n\tpublic get pixelMarginRight(): number {\r\n\t\tlet value = this.getPixelX(this.marginRight);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"pixelMarginRight\", value);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative right margin.\r\n\t *\r\n\t * @readonly\r\n\t * @return Relative right margin\r\n\t */\r\n\tpublic get relativeMarginRight(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\tlet value = this.getRelativeX(this.marginRight);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"relativeMarginRight\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current left margin in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Left margin (px)\r\n\t */\r\n\tpublic get pixelMarginLeft(): number {\r\n\t\tlet value = this.getPixelX(this.marginLeft);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"pixelMarginLeft\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative left margin.\r\n\t *\r\n\t * @readonly\r\n\t * @return Relative left margin\r\n\t */\r\n\tpublic get relativeMarginLeft(): number {\r\n\t\t//@todo Maybe use [[Percent]]?\r\n\t\tlet value = this.getRelativeX(this.marginLeft);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"relativeMarginLeft\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current top margin in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Top margin (px)\r\n\t */\r\n\tpublic get pixelMarginTop(): number {\r\n\t\tlet value = this.getPixelY(this.marginTop);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"pixelMarginTop\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative top margin.\r\n\t *\r\n\t * @readonly\r\n\t * @return Relative top margin\r\n\t */\r\n\tpublic get relativeMarginTop(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\tlet value = this.getRelativeY(this.marginTop);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"relativeMarginTop\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current bottom margin in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Bottom margin (px)\r\n\t */\r\n\tpublic get pixelMarginBottom(): number {\r\n\t\tlet value = this.getPixelY(this.marginBottom);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"pixelMarginBottom\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative bottom margin.\r\n\t *\r\n\t * @readonly\r\n\t * @return Relative bottom margin\r\n\t */\r\n\tpublic get relativeMarginBottom(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\tlet value = this.getRelativeY(this.marginBottom);\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"relativeMarginBottom\", value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets padding for the element in pixels.\r\n\t *\r\n\t * @param top     Top padding (px)\r\n\t * @param right   Right padding (px)\r\n\t * @param bottom  Bottom padding (px)\r\n\t * @param left    Left padding (px)\r\n\t * @return Element\r\n\t */\r\n\tpublic padding(top: number, right: number, bottom: number, left: number): Sprite {\r\n\t\tthis.paddingTop = top;\r\n\t\tthis.paddingRight = right;\r\n\t\tthis.paddingBottom = bottom;\r\n\t\tthis.paddingLeft = left;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Left padding - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Padding value\r\n\t */\r\n\tpublic set paddingLeft(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"paddingLeft\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Padding value\r\n\t */\r\n\tpublic get paddingLeft(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"paddingLeft\");\r\n\t}\r\n\r\n\t/**\r\n\t * Right padding - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Padding value\r\n\t */\r\n\tpublic set paddingRight(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"paddingRight\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Padding value\r\n\t */\r\n\tpublic get paddingRight(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"paddingRight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Top padding - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Padding value\r\n\t */\r\n\tpublic set paddingTop(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"paddingTop\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Padding value\r\n\t */\r\n\tpublic get paddingTop(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"paddingTop\");\r\n\t}\r\n\r\n\t/**\r\n\t * Bottom padding - absolute (px) or relative ([[Percent]]).\r\n\t *\r\n\t * @param value  Padding value\r\n\t */\r\n\tpublic set paddingBottom(value: number | Percent) {\r\n\t\tthis.setPercentProperty(\"paddingBottom\", value, true, true, this._positionPrecision, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Padding value\r\n\t */\r\n\tpublic get paddingBottom(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"paddingBottom\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current right padding in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Right padding (px)\r\n\t */\r\n\tpublic get pixelPaddingRight(): number {\r\n\t\treturn this.getPixelX(this.paddingRight);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative right padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return Relative right padding\r\n\t */\r\n\tpublic get relativePaddingRight(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.getRelativeX(this.paddingRight);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current left padding in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Left padding (px)\r\n\t */\r\n\tpublic get pixelPaddingLeft(): number {\r\n\t\treturn this.getPixelX(this.paddingLeft);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative left padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return Relative left padding\r\n\t */\r\n\tpublic get relativePaddingLeft(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.getRelativeX(this.paddingLeft);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current top padding in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Top padding (px)\r\n\t */\r\n\tpublic get pixelPaddingTop(): number {\r\n\t\treturn this.getPixelY(this.paddingTop);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative top padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return Relative top padding\r\n\t */\r\n\tpublic get relativePaddingTop(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.getRelativeY(this.paddingTop);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current bottom padding in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Bottom padding (px)\r\n\t */\r\n\tpublic get pixelPaddingBottom(): number {\r\n\t\treturn this.getPixelY(this.paddingBottom);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current relative bottom padding.\r\n\t *\r\n\t * @readonly\r\n\t * @return Relative bottom padding\r\n\t */\r\n\tpublic get relativePaddingBottom(): number {\r\n\t\t// @todo Maybe use [[Percent]]?\r\n\t\treturn this.getRelativeY(this.paddingBottom);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * APPEARANCE-RELATED PROPERTIES AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Path of Sprite element\r\n\t */\r\n\tpublic set path(value: string) {\r\n\t\tthis.setPath(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setPath(value: string): boolean {\r\n\t\tif (this.setPropertyValue(\"path\", value)) {\r\n\r\n\t\t\tif (this._adapterO) {\r\n\t\t\t\tvalue = this._adapterO.apply(\"path\", value);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._isPath) {\r\n\t\t\t\tif (!this.element || (this.element.node && !(this.element.node instanceof SVGPathElement))) {\r\n\t\t\t\t\tthis.element = this.paper.add(\"path\");\r\n\t\t\t\t}\r\n\t\t\t\tthis._isPath = true;\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(value)) {\r\n\t\t\t\tthis.element.attr({ \"d\": value });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.element.removeAttr(\"d\");\r\n\t\t\t}\r\n\t\t\tthis.invalidatePosition();\r\n\t\t\t// otherwise is 0x0\r\n\t\t\tif (!this.inited) {\r\n\t\t\t\tthis.events.once(\"inited\", this.validatePosition, this, false);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Path of a Sprite element\r\n\t */\r\n\tpublic get path(): string {\r\n\t\treturn this.getPropertyValue(\"path\");\r\n\t}\r\n\r\n\t/**\r\n\t * [[ColorModifier]] that can be used to modify color and pattern of the\r\n\t * element's fill, e.g. create gradients.\r\n\t *\r\n\t * @param value  Fill color modifiier\r\n\t */\r\n\tpublic set fillModifier(value: ColorModifier) {\r\n\t\tif (this.setPropertyValue(\"fillModifier\", value)) {\r\n\t\t\tthis.setFill(this.fill);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Fill color modifier\r\n\t */\r\n\tpublic get fillModifier(): ColorModifier {\r\n\t\treturn this.getPropertyValue(\"fillModifier\");\r\n\t}\r\n\r\n\t/**\r\n\t * [[ColorModifier]] that can be used to modify color and pattern of the\r\n\t * element's stroke (outline), e.g. create gradients.\r\n\t *\r\n\t * @param value  Stroke color modifier\r\n\t */\r\n\tpublic set strokeModifier(value: ColorModifier) {\r\n\t\tthis.setPropertyValue(\"strokeModifier\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Stroke color modifier\r\n\t */\r\n\tpublic get strokeModifier(): ColorModifier {\r\n\t\treturn this.getPropertyValue(\"strokeModifier\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's fill opacity.\r\n\t *\r\n\t * Opacity ranges from 0 (fully transparent) to 1 (fully opaque).\r\n\t *\r\n\t * @param value  Opacity (0-1)\r\n\t */\r\n\tpublic set fillOpacity(value: number) {\r\n\t\tvalue = $math.toNumberRange(value, 0, 1);\r\n\t\tif (this.setPropertyValue(\"fillOpacity\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"fill-opacity\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacity (0-9)\r\n\t */\r\n\tpublic get fillOpacity(): number {\r\n\t\treturn this.getPropertyValue(\"fillOpacity\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's fill color or pattern.\r\n\t *\r\n\t * @param value  Fill\r\n\t */\r\n\tpublic set fill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>) {\r\n\t\tthis.setFill(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tif (!$type.isObject(value) || \"r\" in value) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tif (this.setColorProperty(\"fill\", value) || this.fillModifier) {\r\n\t\t\t// this can not go into next if, as value is turned to Gradient\r\n\t\t\tif (value instanceof Color) {\r\n\t\t\t\tif (this.fillModifier) {\r\n\t\t\t\t\tvalue = this.fillModifier.modify(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.realFill = value;\r\n\r\n\t\t\t// todo: review this place when some Color type will be added\r\n\t\t\tif (value instanceof Color) {\r\n\t\t\t\tthis.setSVGAttribute({ \"fill\": value.toString() });\r\n\t\t\t}\r\n\t\t\telse if (!$type.hasValue(value)) {\r\n\t\t\t\tthis.removeSVGAttribute(\"fill\");\r\n\t\t\t}\r\n\t\t\telse if (<any>value instanceof Pattern || <any>value instanceof LinearGradient || <any>value instanceof RadialGradient) {\r\n\t\t\t\tlet fill = value;\r\n\t\t\t\tfill.paper = this.paper;\r\n\t\t\t\tthis.setSVGAttribute({ \"fill\": \"url(\\\"\" + $utils.getBaseURI() + fill.id + \"\\\")\" });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Fill\r\n\t */\r\n\tpublic get fill(): $type.Optional<Color | Pattern | LinearGradient | RadialGradient> {\r\n\t\treturn this.getPropertyValue(\"fill\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's opacity.\r\n\t *\r\n\t * Opacity setting can range from 0 (fully transparent) to 1 (fully opaque).\r\n\t *\r\n\t * ATTENTION: It is highly not recommended to use `opacity` directly on the\r\n\t * element. The charts use `opacity` to hide/show elements, so your setting\r\n\t * might be lost if element is hidden and then later shown.\r\n\t *\r\n\t * Instead use methods `hide()` and `show()` to completely toggle off and on\r\n\t * the element.\r\n\t *\r\n\t * Or, use properties `fillOpacity` and `strokeOpacity`, if you need to make\r\n\t * the element semi-transparent.\r\n\t *\r\n\t * @param value Opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: number) {\r\n\t\tvalue = $math.toNumberRange(value, 0, 1);\r\n\t\tif (this.setPropertyValue(\"opacity\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"opacity\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacity (0-1)\r\n\t */\r\n\tpublic get opacity(): number {\r\n\t\treturn this.getPropertyValue(\"opacity\");\r\n\t}\r\n\r\n\t/**\r\n\t * Element's stroke (outline) color or pattern.\r\n\t *\r\n\t * @param value  Stroke setting\r\n\t */\r\n\tpublic set stroke(value: Color | Pattern | LinearGradient | RadialGradient) {\r\n\t\tthis.setStroke(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `stroke` property on the SVG element, including applicable\r\n\t * color modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Stroke setting\r\n\t */\r\n\tprotected setStroke(value: Color | Pattern | LinearGradient | RadialGradient) {\r\n\t\tif (!$type.isObject(value) || \"r\" in value) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tif (this.setColorProperty(\"stroke\", value) || this.strokeModifier) {\r\n\r\n\t\t\t// this can not go into next if, as value is turned to Gradient\r\n\t\t\tif (value instanceof Color) {\r\n\t\t\t\tif (this.strokeModifier) {\r\n\t\t\t\t\tvalue = this.strokeModifier.modify(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.realStroke = value;\r\n\r\n\t\t\tif (value instanceof Color) {\r\n\t\t\t\tif (value.hex == \"none\") {\r\n\t\t\t\t\tthis.removeSVGAttribute(\"stroke\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.setSVGAttribute({ \"stroke\": value.toString() });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!$type.hasValue(value)) {\r\n\t\t\t\tthis.removeSVGAttribute(\"stroke\");\r\n\t\t\t}\r\n\t\t\telse if (<any>value instanceof Pattern || <any>value instanceof LinearGradient || <any>value instanceof RadialGradient) {\r\n\t\t\t\tlet stroke = value;\r\n\t\t\t\tstroke.paper = this.paper;\r\n\t\t\t\tthis.setSVGAttribute({ \"stroke\": \"url(\\\"\" + $utils.getBaseURI() + stroke.id + \"\\\")\" });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Stroke setting\r\n\t */\r\n\tpublic get stroke(): Color | Pattern | LinearGradient | RadialGradient {\r\n\t\treturn this.getPropertyValue(\"stroke\");\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) opacity.\r\n\t *\r\n\t * The values may range from 0 (fully transparent) to 1 (fully opaque).\r\n\t *\r\n\t * @param value  Opacity (0-1)\r\n\t */\r\n\tpublic set strokeOpacity(value: number) {\r\n\t\tvalue = $math.toNumberRange(value, 0, 1);\r\n\t\tif (this.setPropertyValue(\"strokeOpacity\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"stroke-opacity\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacity (0-1)\r\n\t */\r\n\tpublic get strokeOpacity(): number {\r\n\t\treturn this.getPropertyValue(\"strokeOpacity\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the element's stroke (outline) should remain keep constant\r\n\t * thicnkess and do not scale when the whole element is resized.\r\n\t *\r\n\t * @param value  Do not scale stroke (outline)\r\n\t */\r\n\tpublic set nonScalingStroke(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.setPropertyValue(\"nonScalingStroke\", value)) {\r\n\t\t\tthis.strokeWidth = this.strokeWidth;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Do not scale stroke (outline)\r\n\t */\r\n\tpublic get nonScalingStroke(): boolean {\r\n\t\treturn this.getPropertyValue(\"nonScalingStroke\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if element should keep constant size and not scale even if there is\r\n\t * space available, or it does not fit.\r\n\t *\r\n\t * @param value  Is element scaleable?\r\n\t */\r\n\tpublic set nonScaling(value: boolean) {\r\n\t\t// @todo Description (review)\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis.setPropertyValue(\"nonScaling\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Is element scaleable?\r\n\t */\r\n\tpublic get nonScaling(): boolean {\r\n\t\treturn this.getPropertyValue(\"nonScaling\");\r\n\t}\r\n\r\n\t/**\r\n\t * Stroke (outline) thickness in pixels.\r\n\t *\r\n\t * @param value  Thickness (px)\r\n\t */\r\n\tpublic set strokeWidth(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tthis.setPropertyValue(\"strokeWidth\", value, true);\r\n\r\n\t\tif (this.nonScalingStroke) {\r\n\t\t\tif (!$type.isNumber(value)) {\r\n\t\t\t\tvalue = 1;\r\n\t\t\t}\r\n\t\t\tvalue = value / this.globalScale;\r\n\t\t}\r\n\t\tthis.setSVGAttribute({ \"stroke-width\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Thickness (px)\r\n\t */\r\n\tpublic get strokeWidth(): number {\r\n\t\treturn this.getPropertyValue(\"strokeWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `stroke-dasharray` for the stroke (outline).\r\n\t *\r\n\t * \"Dasharray\" allows setting rules to make lines dashed, dotted, etc.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`\r\n\t * @param value  `stroke-dasharray`\r\n\t */\r\n\tpublic set strokeDasharray(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (this.setPropertyValue(\"strokeDasharray\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"stroke-dasharray\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return `stroke-dasharray`\r\n\t */\r\n\tpublic get strokeDasharray(): string {\r\n\t\treturn this.getPropertyValue(\"strokeDasharray\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `stroke-dashoffset` for the stroke (outline).\r\n\t *\r\n\t * \"Dashoffset\" allows setting the start position of the dashes if\r\n\t * `strokeDasharray` is used.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset} for more info on `stroke-dashoffset`\r\n\t * @param value  `stroke-dashoffset`\r\n\t */\r\n\tpublic set strokeDashoffset(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (this.setPropertyValue(\"strokeDashoffset\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"stroke-dashoffset\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return `stroke-dashoffset`\r\n\t */\r\n\tpublic get strokeDashoffset(): number {\r\n\t\treturn this.getPropertyValue(\"strokeDashoffset\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `stroke-linecap` to indicate how line ends are drawn.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Fills_and_Strokes#Stroke} for more info on `stroke-linecap`\r\n\t * @param value  `stroke-linecap`\r\n\t */\r\n\tpublic set strokeLinecap(value: \"butt\" | \"square\" | \"round\") {\r\n\t\tif (this.setPropertyValue(\"strokeLinecap\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"stroke-linecap\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return `stroke-linecap`\r\n\t */\r\n\tpublic get strokeLinecap(): \"butt\" | \"square\" | \"round\" {\r\n\t\treturn this.getPropertyValue(\"strokeLinecap\");\r\n\t}\r\n\r\n\t/**\r\n\t * A `stroke-linejoin` to indicate how line ends are drawn.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Fills_and_Strokes#Stroke} for more info on `stroke-linejoin`\r\n\t * @param value  `stroke-linejoin`\r\n\t */\r\n\tpublic set strokeLinejoin(value: \"miter\" | \"round\" | \"bevel\") {\r\n\t\tif (this.setPropertyValue(\"strokeLinejoin\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"stroke-linejoin\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return `stroke-linejoin`\r\n\t */\r\n\tpublic get strokeLinejoin(): \"miter\" | \"round\" | \"bevel\" {\r\n\t\treturn this.getPropertyValue(\"strokeLinejoin\");\r\n\t}\r\n\r\n\t/**\r\n\t * An SVG-specific `shape-rendering` value.\r\n\t *\r\n\t * `shape-rendering` controls how vector graphics are drawn and rendered.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering} for more information about `shape-rendering`\r\n\t * @default \"auto\"\r\n\t * @param value  'shape-rendering' value\r\n\t */\r\n\tpublic set shapeRendering(value: ShapeRendering) {\r\n\t\tvalue = <ShapeRendering>$type.toText(value);\r\n\t\tif (this.setPropertyValue(\"shapeRendering\", value)) {\r\n\t\t\tthis.setSVGAttribute({ \"shape-rendering\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return 'shape-rendering' value\r\n\t */\r\n\tpublic get shapeRendering(): ShapeRendering {\r\n\t\treturn this.getPropertyValue(\"shapeRendering\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if SVG vectors should be drawn with \"pixel\" precision, producing\r\n\t * perfectly crisp lines on retina displays.\r\n\t *\r\n\t * Setting this to `true` might improve visual quality, but may have a\r\n\t * negative effect on performance.\r\n\t *\r\n\t * Different elements use different default setting for `pixelPerfect`.\r\n\t *\r\n\t * We recommend leaving this at their default settings, unless there's a\r\n\t * specific need.\r\n\t *\r\n\t * @param value  Use pixel perfect?\r\n\t */\r\n\tpublic set pixelPerfect(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (value) {\r\n\t\t\tthis._positionPrecision = options.pixelPerfectPrecision;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._positionPrecision = 3;\r\n\t\t}\r\n\r\n\t\tthis.setPropertyValue(\"pixelPerfect\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use pixel perfect?\r\n\t */\r\n\tpublic get pixelPerfect(): boolean {\r\n\t\treturn this.getPropertyValue(\"pixelPerfect\");\r\n\t}\r\n\r\n\t/**\r\n\t * An RTL (right-to-left) setting.\r\n\t *\r\n\t * RTL may affect alignment, text, and other visual properties.\r\n\t *\r\n\t * If you set this on a top-level chart object, it will be used for all\r\n\t * child elements, e.g. labels, unless they have their own `rtl` setting\r\n\t * set directly on them.\r\n\t *\r\n\t * @param value  `true` for to use RTL\r\n\t */\r\n\tpublic set rtl(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (this.isBaseSprite) {\r\n\t\t\tthis.topParent.rtl = value;\r\n\t\t}\r\n\t\tthis._rtl = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return RTL?\r\n\t */\r\n\tpublic get rtl(): boolean {\r\n\t\tif ($type.hasValue(this._rtl)) {\r\n\t\t\treturn this._rtl;\r\n\t\t}\r\n\t\telse if (this._topParent) {\r\n\t\t\treturn this._topParent.rtl;\r\n\t\t}\r\n\t\t//this.rtl = false;\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * VISIBILITY AND ORDER PROPERTIES AND RELATED STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n \t * Reveals hidden element.\r\n \t *\r\n \t * Has no effect if element is already visible.\r\n \t *\r\n \t * If `duration` is not specified, it will use default.\r\n \t *\r\n \t * @param duration  Fade in duration (ms)\r\n \t * @return Animation object if such object was created\r\n \t */\r\n\tpublic show(duration?: number): $type.Optional<Animation> {\r\n\t\treturn this.showReal(duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Performs actual operations to reveal this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param duration Fade in duration (ms)\r\n\t * @return Fade in duration (ms)\r\n\t */\r\n\tprotected showReal(duration?: number): $type.Optional<Animation> {\r\n\t\tif (this.preventShow) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet transition: $type.Optional<Animation>;\r\n\r\n\t\tconst properties = this.defaultState.properties;\r\n\r\n\t\tif (!this.disabled && (this.isHidden || !this.visible || this.isHiding || (properties.opacity != null && this.opacity < properties.opacity && !this.isShowing)) && !this.isDisposed()) {\r\n\r\n\t\t\t// helps to avoid flicker, as show might change opacity or visibility but item might be at invalid state/position\r\n\t\t\tif (this.invalid) {\r\n\t\t\t\tthis.validate();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.positionInvalid) {\r\n\t\t\t\tthis.validatePosition();\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = this.defaultState.transitionDuration;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hideAnimation) {\r\n\t\t\t\tthis._hideAnimation.kill();\r\n\t\t\t\tthis._hideAnimation = undefined;\r\n\t\t\t}\r\n\r\n\t\t\t// Cancel hide handler just in case it was there\r\n\t\t\tif (this._showHideDisposer) {\r\n\t\t\t\tthis.removeDispose(this._showHideDisposer);\r\n\t\t\t}\r\n\r\n\t\t\tthis._isHidden = false;\r\n\t\t\tthis.isHiding = false;\r\n\t\t\tthis.isShowing = true;\r\n\r\n\t\t\t// Apply current state\r\n\t\t\ttransition = this.applyCurrentState(duration);\r\n\r\n\t\t\tif (transition && !transition.isFinished()) {\r\n\r\n\t\t\t\tthis._showHideDisposer = transition.events.on(\"animationended\", () => {\r\n\t\t\t\t\tthis.isShowing = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._disposers.push(this._showHideDisposer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.isShowing = false;\r\n\t\t\t}\r\n\t\t\t// Make it visible\r\n\t\t\tlet visible = this.defaultState.properties.visible;\r\n\t\t\tif (!$type.hasValue(visible)) {\r\n\t\t\t\tvisible = true;\r\n\t\t\t}\r\n\t\t\tthis.visible = visible;\r\n\r\n\t\t\t// Unhide from screen readers\r\n\t\t\tthis.readerHidden = false;\r\n\r\n\t\t\t// Dispatch \"show\" event\r\n\t\t\tthis.dispatchImmediately(\"shown\");\r\n\t\t}\r\n\r\n\t\treturn transition;\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates hiding of Sprite.\r\n\t * When called it will fade out the the Sprite to transparency, then make it\r\n\t * invisible.\r\n\t * @param duration Duration in millisecons\r\n\t */\r\n\r\n\t/**\r\n\t * Hides the element, by applying `hidden` state.\r\n\t *\r\n\t * Has no effect if element is already hidden.\r\n \t *\r\n \t * If `duration` is not specified, it will use default.\r\n \t *\r\n \t * While element is fading out, its `isHiding` property will resolve to\r\n \t * `true`.\r\n \t *\r\n \t * When element is hidden, its `visible` property will resolve to `false`.\r\n\t *\r\n\t * @param duration  Fade out duration (ms)\r\n\t * @return hide Animation object if such object was created\r\n\t */\r\n\tpublic hide(duration?: number): $type.Optional<Animation> {\r\n\t\treturn this.hideReal(duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Hides actual SVG elements and handles hiding animations.\r\n\t *\r\n\t * @param duration  Fade out duration (ms)\r\n\t * @return Fade out duration (ms)\r\n\t * @ignore\r\n\t */\r\n\tprotected hideReal(duration?: number): $type.Optional<Animation> {\r\n\t\tlet transition: $type.Optional<Animation>;\r\n\r\n\t\tif (!this.isHiding && this.visible && !this.isDisposed()) {\r\n\t\t\t// added to solve 51375\r\n\t\t\tif (this.tooltip && this.tooltip.currentSprite == this) {\r\n\t\t\t\tthis.hideTooltip(0);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hideAnimation) {\r\n\t\t\t\tthis._hideAnimation.kill();\r\n\t\t\t\tthis._hideAnimation = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tthis.isShowing = false;\r\n\r\n\t\t\t// Cancel hide handler just in case it was there\r\n\t\t\tif (this._showHideDisposer) {\r\n\t\t\t\tthis.removeDispose(this._showHideDisposer);\r\n\t\t\t}\r\n\r\n\t\t\t// Get state\r\n\t\t\tlet hiddenState = this.hiddenState;\r\n\r\n\t\t\t// Transition to \"hidden\" state, provided Sprite has one set\r\n\t\t\tif (hiddenState) {\r\n\t\t\t\t// Yes, we have a \"hidden\" state\r\n\t\t\t\t// `setState` will return an `Animation` object which we can set\r\n\t\t\t\t// events on\r\n\t\t\t\ttransition = this.setState(hiddenState, duration, undefined);\r\n\r\n\t\t\t\tif (transition && !transition.isFinished()) {\r\n\t\t\t\t\tthis._hideAnimation = transition;\r\n\t\t\t\t\tthis._showHideDisposer = transition.events.on(\"animationended\", () => {\r\n\t\t\t\t\t\tthis.isHiding = false;\r\n\t\t\t\t\t\tthis._isHidden = true;\r\n\t\t\t\t\t\tif (hiddenState.properties.visible == false) {\r\n\t\t\t\t\t\t\tthis.visible = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this);\r\n\r\n\t\t\t\t\tthis._disposers.push(this._showHideDisposer);\r\n\r\n\t\t\t\t\t// Thrown everything into `_disposers` just in case Sprite gets\r\n\t\t\t\t\t// destroyed in the meantime\r\n\t\t\t\t\tthis._disposers.push(transition);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.isHiding = false;\r\n\t\t\t\t\tthis._isHidden = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// No hidden state, let's just set `visible` and call it a day\r\n\t\t\t\tthis.visible = false;\r\n\t\t\t\tthis.isHiding = false;\r\n\t\t\t\tthis._isHidden = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Hide from screen readers\r\n\t\t\tthis.readerHidden = true;\r\n\r\n\t\t\t// Dispach \"hidden\" event\r\n\t\t\tthis.dispatchImmediately(\"hidden\");\r\n\t\t\tthis.invalidate(); // hide it at once to avoid flickers // validate() causes SO\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(duration)) {\r\n\t\t\tduration = this.hiddenState.transitionDuration;\r\n\t\t}\r\n\r\n\t\treturn transition;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if element is current visible (`true`) or hidden (`false`).\r\n\t *\r\n\t * @param value Visible?\r\n\t */\r\n\tpublic set visible(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis.setVisibility(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Visible?\r\n\t */\r\n\tpublic get visible(): boolean {\r\n\t\treturn this.getVisibility();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns visibility value\r\n\t * @ignore\r\n\t */\r\n\tprotected getVisibility(): boolean {\r\n\t\tlet value = this.getPropertyValue(\"visible\");\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\tvalue = true;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"visible\", value)) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.group.removeAttr(\"visibility\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.group.attr({ \"visibility\": \"hidden\" });\r\n\t\t\t}\r\n\t\t\t//this.invalidatePosition();\r\n\r\n\t\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, ISpriteEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tvisible: value\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A \"zIndex\" of the element.\r\n\t *\r\n\t * \"zIndex\" determines the order of how elements are placed over each other.\r\n\t *\r\n\t * Higher \"zIndex\" will mean the element will be draw on top of elements\r\n\t * with lower \"zIndexes\".\r\n\t *\r\n\t * @param value  zIndex\r\n\t */\r\n\tpublic set zIndex(value: number) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\tif (this.setPropertyValue(\"zIndex\", value)) {\r\n\t\t\tthis.dispatch(\"zIndexChanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return zIndex\r\n\t */\r\n\tpublic get zIndex(): number {\r\n\t\treturn this.getPropertyValue(\"zIndex\");\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the element to the very top in element order, so that it appears\r\n\t * in front of other elements.\r\n\t */\r\n\tpublic toFront(): void {\r\n\t\tlet parent = this._parent;\r\n\t\tif (parent && parent.children.indexOf(this) != parent.children.length - 1) {\r\n\t\t\tparent.children.moveValue(this, parent.children.length - 1);\r\n\t\t\tthis.dispatch(\"zIndexChanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the element to the very bottom in the element order, so that it\r\n\t * appears behind other elements.\r\n\t */\r\n\tpublic toBack(): void {\r\n\t\tlet parent = this._parent;\r\n\t\tif (parent && parent.children.indexOf(this) != 0) {\r\n\t\t\tparent.children.moveValue(this, 0);\r\n\t\t\tthis.dispatch(\"zIndexChanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A custom class name to set on the element.\r\n\t *\r\n\t * If set, the value will be added to element's `class` attribute.\r\n\t *\r\n\t * @since 4.9.11\r\n\t * @param  value  Class name\r\n\t */\r\n\tpublic set userClassName(value: string) {\r\n\t\tif (this.setPropertyValue(\"userClassName\", value)) {\r\n\t\t\tif (!value && this.userClassName) {\r\n\t\t\t\tthis.group.removeClass(this.userClassName);\r\n\t\t\t}\r\n\t\t\tthis.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Class name\r\n\t */\r\n\tpublic get userClassName(): string {\r\n\t\treturn this.getPropertyValue(\"userClassName\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * TOOLTIP-RELATED PROPERTIES STUFF\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * A [[Tooltip]] object to be used when displayed rollover information for\r\n\t * the element.\r\n\t *\r\n\t * @param tooltip  Tooltip\r\n\t */\r\n\tpublic set tooltip(tooltip: $type.Optional<Tooltip>) {\r\n\t\tif (this._tooltip) {\r\n\t\t\t//this._tooltip.dispose();\r\n\t\t\tthis.removeDispose(this._tooltip);\r\n\t\t}\r\n\r\n\t\tthis._tooltip = tooltip;\r\n\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.parent = this.tooltipContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip\r\n\t */\r\n\tpublic get tooltip(): $type.Optional<Tooltip> {\r\n\t\tif (this._tooltip) {\r\n\t\t\treturn this._tooltip;\r\n\t\t}\r\n\t\telse if (this.virtualParent) {\r\n\t\t\treturn this.virtualParent.tooltip;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.tooltip;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DataItem]] to use when populating content for the element's\r\n\t * [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @see {@link DataItem}\r\n\t * @param value  Tooltip data item\r\n\t */\r\n\tpublic set tooltipDataItem(value: DataItem) {\r\n\t\t// important: do not dispose tooltip dataItem, as it is some actual data item from data!\r\n\t\tthis._tooltipDataItem = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip data item\r\n\t */\r\n\tpublic get tooltipDataItem(): DataItem {\r\n\t\tconst tooltipDataItem = this._tooltipDataItem;\r\n\r\n\t\tif (tooltipDataItem) {\r\n\t\t\treturn tooltipDataItem;\r\n\r\n\t\t} else {\r\n\t\t\treturn this.dataItem;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Sprite]] or sprite template to use when getting colors for tooltip. If a template is set,\r\n\t * tooltip will look for a clone in tooltipDataItem.sprites. If no clone is found, then template colors will be used.\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @see {@link Sprite}\r\n\t * @param sprite Sprite\r\n\t */\r\n\tpublic set tooltipColorSource(sprite: $type.Optional<Sprite>) {\r\n\t\tthis._tooltipColorSource = sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip color source\r\n\t */\r\n\tpublic get tooltipColorSource(): $type.Optional<Sprite> {\r\n\t\treturn this._tooltipColorSource;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the element's [[Tooltip]].\r\n\t *\r\n\t * A tooltip will be populated using text templates in either `tooltipHTML` or\r\n\t * `tooltipText` as well as data in `tooltipDataItem`.\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @param optional point (sprite-related) to which tooltip must point.\r\n\t * @return returns true if the tooltip was shown and false if it wasn't (no text was found)\r\n\t */\r\n\tpublic showTooltip(point?: IPoint): boolean {\r\n\r\n\t\tif (this.showTooltipOn == \"always\" && !this._tooltip && this.tooltip) {\r\n\t\t\tthis._tooltip = this.tooltip.clone();\r\n\t\t}\r\n\r\n\t\tif (!point && this.tooltipPosition == \"pointer\" && this.isHover) {\r\n\t\t\tpoint = $utils.documentPointToSvg(getInteraction().lastPointer.point, this.svgContainer.SVGContainer, this.svgContainer.cssScale);\r\n\t\t}\r\n\r\n\t\t// do not show if hidden\r\n\t\tlet sprite: Sprite = this;\r\n\t\twhile (sprite != undefined) {\r\n\t\t\tif (!sprite.visible || sprite.disabled || sprite.__disabled) {\r\n\t\t\t\tif (this._tooltip && this._tooltip.visible) {\r\n\t\t\t\t\tthis._tooltip.hide(0);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsprite = sprite.parent;\r\n\t\t}\r\n\r\n\t\tif ($type.hasValue(this.tooltipText) || $type.hasValue(this.tooltipHTML)) {\r\n\t\t\tlet tooltip = this.tooltip;\r\n\t\t\tlet tooltipDataItem = this.tooltipDataItem;\r\n\r\n\t\t\tif (tooltip) {\r\n\r\n\t\t\t\ttooltip.targetSprite = this;\r\n\r\n\t\t\t\tlet colorSource: Sprite = this;\r\n\t\t\t\tlet tooltipColorSource = this.tooltipColorSource;\r\n\t\t\t\tif ((tooltip.getStrokeFromObject || tooltip.getFillFromObject) && tooltipColorSource) {\r\n\t\t\t\t\tif (tooltipColorSource.isTemplate) {\r\n\t\t\t\t\t\tif (tooltipDataItem) {\r\n\t\t\t\t\t\t\t$array.eachContinue(tooltipDataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\tif (sprite.clonedFrom == tooltipColorSource) {\r\n\t\t\t\t\t\t\t\t\tcolorSource = sprite;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcolorSource = tooltipColorSource;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (tooltip.getStrokeFromObject) {\r\n\t\t\t\t\tlet stroke = this.stroke;\r\n\t\t\t\t\tlet source: Sprite = colorSource;\r\n\r\n\t\t\t\t\twhile (source.parent != undefined) {\r\n\t\t\t\t\t\tstroke = source.stroke;\r\n\t\t\t\t\t\tif (stroke == undefined) {\r\n\t\t\t\t\t\t\tsource = source.parent;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (stroke != undefined) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (stroke instanceof Color) {\r\n\t\t\t\t\t\ttooltip.background.animate({ property: \"stroke\", to: stroke }, tooltip.animationDuration);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttooltip.background.stroke = stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set data item\r\n\t\t\t\ttooltip.dataItem = tooltipDataItem;\r\n\t\t\t\ttooltip.label.populateStringFrom = this;\r\n\r\n\t\t\t\tif (tooltip.getFillFromObject) {\r\n\r\n\t\t\t\t\tlet fill = this.fill;\r\n\r\n\t\t\t\t\tlet source: Sprite = colorSource;\r\n\r\n\t\t\t\t\twhile (source.parent != undefined) {\r\n\t\t\t\t\t\tfill = source.fill;\r\n\t\t\t\t\t\tif (fill == undefined || (fill instanceof Color && fill.rgb == undefined)) {\r\n\t\t\t\t\t\t\tsource = source.parent;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (fill != undefined) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (fill == undefined) {\r\n\t\t\t\t\t\tfill = color(\"#000000\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (fill instanceof Color) {\r\n\t\t\t\t\t\tif (!tooltip.visible) {\r\n\t\t\t\t\t\t\ttooltip.background.fill = fill;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttooltip.background.animate({ property: \"fill\", to: fill }, tooltip.animationDuration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttooltip.background.fill = fill;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (tooltip.autoTextColor && fill instanceof Color) {\r\n\t\t\t\t\t\ttooltip.label.fill = fill.alternative;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply tooltip text\r\n\t\t\t\tlet text = \"\";\r\n\t\t\t\tif (this.tooltipHTML) {\r\n\t\t\t\t\ttooltip.html = this.tooltipHTML;\r\n\t\t\t\t\ttext = this.tooltipHTML;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.tooltipText) {\r\n\t\t\t\t\ttooltip.text = this.tooltipText;\r\n\t\t\t\t\ttext = this.tooltipText;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.updateTooltipPosition(point)) {\r\n\r\n\t\t\t\t\t// Set accessibility option\r\n\t\t\t\t\ttooltip.readerDescribedBy = this.uidAttr();\r\n\r\n\t\t\t\t\t// make label to render to be able to check currentText\r\n\t\t\t\t\tif (tooltip.label.invalid) {\r\n\t\t\t\t\t\ttooltip.label.validate();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (text != undefined && text != \"\" && tooltip.label.currentText != \"\") {\r\n\r\n\t\t\t\t\t\t//@todo: think of how to solve this better\r\n\t\t\t\t\t\tif (tooltip && !tooltip.parent) {\r\n\t\t\t\t\t\t\ttooltip.parent = this.tooltipContainer;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Reveal tooltip\r\n\t\t\t\t\t\t// showing it in 1 ms helps to avoid strange flickering in IE\r\n\t\t\t\t\t\tlet duration = tooltip.defaultState.transitionDuration;\r\n\t\t\t\t\t\tif (duration <= 0) {\r\n\t\t\t\t\t\t\tduration = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttooltip.show(duration);\r\n\t\t\t\t\t\ttooltip.currentSprite = this;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.hideTooltip(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.hideTooltip(0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateTooltipPosition(point?: IPoint): boolean {\r\n\t\tif (this.tooltipPosition == \"pointer\") {\r\n\r\n\t\t\tif (this._interactionDisposer) {\r\n\t\t\t\tthis._interactionDisposer.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis._interactionDisposer = getInteraction().body.events.on(\"track\", (ev) => {\r\n\t\t\t\treturn this.pointTooltipTo($utils.documentPointToSvg(ev.point, this.svgContainer.SVGContainer, this.svgContainer.cssScale), true);\r\n\t\t\t});\r\n\t\t\tif (point) {\r\n\t\t\t\treturn this.pointTooltipTo(point, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Point to the X/Y of this Sprite\r\n\t\t\tlet globalPoint = $utils.spritePointToSvg({\r\n\t\t\t\t\"x\": this.getTooltipX(),\r\n\t\t\t\t\"y\": this.getTooltipY()\r\n\t\t\t}, this);\r\n\t\t\treturn this.pointTooltipTo(globalPoint);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the point the [[Tooltip]] should point to.\r\n\t *\r\n\t * @param point      Coordinates to point to\r\n\t * @param instantly  Move instantly without animation\r\n\t */\r\n\tprotected pointTooltipTo(point: IPoint, instantly?: boolean): boolean {\r\n\t\tlet tooltip = this.tooltip;\r\n\t\tif (tooltip && this.topParent) {\r\n\r\n\t\t\tif (tooltip.showInViewport) {\r\n\t\t\t\ttooltip.pointTo(point, instantly);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tif ($math.isInRectangle(point, { x: 0, y: 0, width: this.topParent.maxWidth, height: this.topParent.maxHeight })) {\r\n\t\t\t\ttooltip.pointTo(point, instantly);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides element's [[Tooltip]].\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t */\r\n\tpublic hideTooltip(duration?: number): void {\r\n\r\n\t\tif (this.showTooltipOn == \"always\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet tooltip = this.tooltip;\r\n\t\tif (tooltip) {\r\n\t\t\tif (tooltip.targetSprite == this) {\r\n\t\t\t\ttooltip.targetSprite = undefined;\r\n\t\t\t}\r\n\t\t\ttooltip.hide(duration);\r\n\t\t\tif (this._interactionDisposer) {\r\n\t\t\t\tthis._interactionDisposer.dispose();\r\n\t\t\t\tthis._interactionDisposer = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An HTML template to be used to populate [[Tooltip]] contents.\r\n\t *\r\n\t * If element has `tooltipDataItem` or `dataItem` set, this will be parsed\r\n\t * for any data values to be replaced with the values from respective data\r\n\t * items.\r\n\t *\r\n\t * @param value Tooltip HTML content template\r\n\t */\r\n\tpublic set tooltipHTML(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tthis.hoverable = true;\r\n\t\tif (this.setPropertyValue(\"tooltipHTML\", value)) {\r\n\t\t\tif (this.tooltip) {\r\n\t\t\t\tif (this.tooltip.visible) {\r\n\t\t\t\t\tthis.showTooltip();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip HTML content template\r\n\t */\r\n\tpublic get tooltipHTML(): string {\r\n\t\treturn this.getPropertyValue(\"tooltipHTML\");\r\n\t}\r\n\r\n\t/**\r\n\t * A text template to be used to populate Tooltip's contents.\r\n\t *\r\n\t * If element has `tooltipDataItem` or `dataItem` set, this will be parsed\r\n\t * for any data values to be replaced with the values from respective data\r\n\t * items.\r\n\t *\r\n\t * This template will also be parsed for any special formatting tags.\r\n\t *\r\n\t * @param value Tooltip content template\r\n\t * @see {@link TextFormatter}\r\n\t */\r\n\tpublic set tooltipText(value: string) {\r\n\t\tvalue = $type.toText(value);\r\n\t\tif (value) {\r\n\t\t\tthis.hoverable = true;\r\n\t\t}\r\n\t\tif (this.setPropertyValue(\"tooltipText\", value)) {\r\n\t\t\tif (this.tooltip) {\r\n\t\t\t\tif (this.tooltip.visible) {\r\n\t\t\t\t\tthis.showTooltip();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip content template\r\n\t */\r\n\tpublic get tooltipText(): string {\r\n\t\treturn this.getPropertyValue(\"tooltipText\");\r\n\t}\r\n\r\n\t/**\r\n\t * A container reference that should be used to place element's\r\n\t * [[Tooltip]] in.\r\n\t *\r\n\t * Will use parent's container if does not have one set.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Container\r\n\t * @todo Dispose of the old _tooltipContainer ?\r\n\t */\r\n\tpublic set tooltipContainer(value: $type.Optional<Container>) {\r\n\t\tthis._tooltipContainer = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Container\r\n\t */\r\n\tpublic get tooltipContainer(): $type.Optional<Container> {\r\n\t\tif (this._tooltipContainer) {\r\n\t\t\treturn this._tooltipContainer;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.tooltipContainer;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate the [[Tooltip]] should be shown at.\r\n\t *\r\n\t * @param value  Tooltip X (px)\r\n\t */\r\n\tpublic set tooltipX(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"tooltipX\", value) && this.tooltip) {\r\n\t\t\tthis.tooltip.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip X (px)\r\n\t */\r\n\tpublic get tooltipX(): number | Percent {\r\n\t\treturn this.getTooltipX();\r\n\t}\r\n\r\n\t/**\r\n\t * DEPRECATION NOTICE: This setting is deprecated in favor of a more flexible\r\n\t * setting: `showTooltipOn`. Please use `showTooltipOn = \"always\"` instead.\r\n\t *\r\n\t * Indicates if this element should display a tooltip permanently.\r\n\t *\r\n\t * Useful, if you want to show permanent tooltips on some items.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.4\r\n\t * @deprecated Use `showTooltipOn = \"always\"` instead\r\n\t * @param  value  Always show tooltip?\r\n\t */\r\n\tpublic set alwaysShowTooltip(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tif (value) {\r\n\t\t\tthis.showTooltipOn = \"always\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Always show tooltip?\r\n\t */\r\n\tpublic get alwaysShowTooltip(): boolean {\r\n\t\treturn this.getPropertyValue(\"showTooltipOn\") == \"always\";\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates when tooltip needs to be shown on this element:\r\n\t *\r\n\t * * `\"hover\"` (default) - Tooltip will be shown when element is hovered on.\r\n\t * * `\"hit\"` - Tooltip will be shown when element is clicked/tapped. Tooltip will be hidden when clicked/tapped anywhere else.\r\n\t * * `\"always\"` - Tooltip will be shown on the element permanently.\r\n\t *\r\n\t * For example, if you would like to show tooltips on all of the columns of\r\n\t * a [[ColumnSeries]]:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.columns.template.showTooltipOn = \"always\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.columns.template.showTooltipOn = \"always\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"columns\": {\r\n\t *       \"showTooltipOn\": \"always\"\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * It can even be set to display on a selected columns via `propertyFields`:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.columns.template.propertyFields.showTooltipOn = \"tooltip\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.columns.template.propertyFields.showTooltipOn = \"tooltip\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"columns\": {\r\n\t *       \"propertyFields\": {\r\n\t *         \"showTooltipOn\": \"tooltip\"\r\n\t *       }\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default \"hover\"\r\n\t * @since 4.7.9\r\n\t * @param  value  When to show tooltip\r\n\t */\r\n\tpublic set showTooltipOn(value: \"hover\" | \"hit\" | \"always\") {\r\n\t\tif (this.setPropertyValue(\"showTooltipOn\", value)) {\r\n\t\t\tif (value == \"hit\") {\r\n\t\t\t\tthis.clickable = true;\r\n\t\t\t}\r\n\t\t\tif (this.tooltip) {\r\n\t\t\t\tif (value == \"always\") {\r\n\t\t\t\t\tthis.showTooltip();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.handleAlwaysShowTooltip();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return When to show tooltip\r\n\t */\r\n\tpublic get showTooltipOn(): \"hover\" | \"hit\" | \"always\" {\r\n\t\treturn this.getPropertyValue(\"showTooltipOn\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if [[Tooltip]] should follow the mouse or touch pointer or stay\r\n\t * at the fixed position.\r\n\t *\r\n\t * @param value  Position\r\n\t */\r\n\tpublic set tooltipPosition(value: \"fixed\" | \"pointer\") {\r\n\t\tthis.setPropertyValue(\"tooltipPosition\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * Position\r\n\t */\r\n\tpublic get tooltipPosition(): \"fixed\" | \"pointer\" {\r\n\t\treturn this.getPropertyValue(\"tooltipPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate the [[Tooltip]] should be shown at.\r\n\t *\r\n\t * @param value  Tooltip Y (px)\r\n\t */\r\n\tpublic set tooltipY(value: number | Percent) {\r\n\t\tif (this.setPercentProperty(\"tooltipY\", value) && this.tooltip) {\r\n\t\t\tthis.tooltip.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tooltip Y (px)\r\n\t */\r\n\tpublic get tooltipY(): number | Percent {\r\n\t\treturn this.getTooltipY();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns Tooltip X coordinate if it's set, or middle of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return X (px)\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\r\n\t\tlet x = this.getPropertyValue(\"tooltipX\");\r\n\r\n\t\tif (!$type.hasValue(x)) {\r\n\t\t\tx = percent(50);\r\n\t\t}\r\n\r\n\t\tlet value: number;\r\n\t\tif ($type.isNumber(x)) {\r\n\t\t\tvalue = x;\r\n\t\t}\r\n\r\n\t\tif (x instanceof Percent) {\r\n\t\t\tvalue = this.maxLeftSelf + this._measuredWidthSelf * x.value - this.pixelPaddingLeft - this.ex; // overflow is know only for measured items, so this is not always good\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns Tooltip Y coordinate if it's set, or middle of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Y (px)\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tlet y = this.getPropertyValue(\"tooltipY\");\r\n\r\n\t\tif (!$type.hasValue(y)) {\r\n\t\t\ty = percent(50);\r\n\t\t}\r\n\r\n\t\tlet value: number;\r\n\t\tif ($type.isNumber(y)) {\r\n\t\t\tvalue = y;\r\n\t\t}\r\n\r\n\t\tif (y instanceof Percent) {\r\n\t\t\tvalue = this.maxTopSelf + this._measuredHeightSelf * y.value - this.pixelPaddingTop - this.ey;  // overflow is know only for measured items, so this is not always good\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tvalue = 0;\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param e Error\r\n\t * @todo Implement from applying further actions to this item\r\n\t */\r\n\tpublic raiseCriticalError(e: Error, closable?: boolean) {\r\n\r\n\t\tif (this.svgContainer) {\r\n\t\t\tif (!this._adapterO) {\r\n\t\t\t\tthis.modal.content = e.message;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.modal.content = this._adapterO.apply(\"criticalError\", e).message;\r\n\t\t\t}\r\n\r\n\t\t\tif (!closable) {\r\n\t\t\t\tthis.disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.modal.closable = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (!options.suppressErrors) {\r\n\t\t\t\tthis.modal.open();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (options.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n * Processes JSON-based config before it is applied to the object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param config  Config\r\n */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Tooltip color source\r\n\t\t\tif ($type.hasValue(config.tooltipColorSource) && $type.isString(config.tooltipColorSource) && this.map.hasKey(config.tooltipColorSource)) {\r\n\t\t\t\tconfig.tooltipColorSource = this.map.getKey(config.tooltipColorSource);\r\n\t\t\t}\r\n\r\n\t\t\t// Cursor styles\r\n\t\t\tif ($type.hasValue(config.cursorOverStyle) && $type.isString(config.cursorOverStyle)) {\r\n\t\t\t\tconfig.cursorOverStyle = this.getCursorStyle(config.cursorOverStyle);\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.cursorDowntyle) && $type.isString(config.cursorDowntyle)) {\r\n\t\t\t\tconfig.cursorDowntyle = this.getCursorStyle(config.cursorDowntyle);\r\n\t\t\t}\r\n\t\t\tif ($type.hasValue(config.cursorOptions)) {\r\n\t\t\t\tif ($type.hasValue(config.cursorOptions.overStyle) && $type.isString(config.cursorOptions.overStyle)) {\r\n\t\t\t\t\tconfig.cursorOptions.overStyle = this.getCursorStyle(config.cursorOptions.overStyle);\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.hasValue(config.cursorOptions.downStyle) && $type.isString(config.cursorOptions.downStyle)) {\r\n\t\t\t\t\tconfig.cursorOptions.downStyle = this.getCursorStyle(config.cursorOptions.downStyle);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t\tthis.processDelayedMap();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts string name of the cursor into actual [[MouseCursorStyle]].\r\n\t *\r\n\t * @param style  Cursor type\r\n\t * @return Cursor definition\r\n\t */\r\n\tprivate getCursorStyle(style: string): MouseCursorStyle {\r\n\t\tswitch (style) {\r\n\t\t\tcase \"grab\":\r\n\t\t\t\treturn MouseCursorStyle.grab;\r\n\t\t\tcase \"grabbing\":\r\n\t\t\t\treturn MouseCursorStyle.grabbing;\r\n\t\t\tcase \"pointer\":\r\n\t\t\t\treturn MouseCursorStyle.pointer;\r\n\t\t\tcase \"horizontalResize\":\r\n\t\t\t\treturn MouseCursorStyle.horizontalResize;\r\n\t\t\tcase \"verticalResize\":\r\n\t\t\t\treturn MouseCursorStyle.verticalResize;\r\n\t\t\tdefault:\r\n\t\t\t\treturn MouseCursorStyle.default;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"tooltipColorSource\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"tooltipColorSource\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If `sprite.hide()` is called, we set isHidden to true when sprite is hidden.\r\n\t * This was added becaus hidden state might have visibility set to true and so\r\n\t * there would not be possible to find out if a sprite is technically hidden or not.\r\n\t */\r\n\tpublic get isHidden(): boolean {\r\n\t\tif (this._isHidden) {\r\n\t\t\treturn this._isHidden;\r\n\t\t}\r\n\t\telse if (this._parent) {\r\n\t\t\treturn this._parent.isHidden;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * If this is set to `true`, Sprite, when inited will be instantly hidden\r\n\t * (\"hidden\" state applied) and then shown (\"default\" state applied).\r\n\t *\r\n\t * If your \"default\" state's `transitionDuration > 0` this will result in\r\n\t * initial animation from \"hidden\" state to \"default\" state.\r\n\t *\r\n\t * If you need a Sprite which has `showOnInit = true` not to be shown\r\n\t * initially, set `sprite.hidden = true`. Setting `sprite.visible = false`\r\n\t * will not prevent the animation and the sprite will be shown.\r\n\t *\r\n\t * @param value show on init?\r\n\t */\r\n\tpublic set showOnInit(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis.setShowOnInit(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setShowOnInit(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"showOnInit\", value)) {\r\n\t\t\tif (!this.isTemplate) {\r\n\t\t\t\tif (value && !this.inited && !this.hidden) {\r\n\t\t\t\t\tthis._showOnInitDisposer = new MultiDisposer([\r\n\t\t\t\t\t\tregistry.events.once(\"enterframe\", this.hideInitially, this),\r\n\t\t\t\t\t\tthis.events.once(\"beforevalidated\", this.hideInitially, this, false),\r\n\t\t\t\t\t\tthis.events.on(\"inited\", this.appear, this, false)\r\n\t\t\t\t\t])\r\n\r\n\t\t\t\t\tthis._disposers.push(this._showOnInitDisposer);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this._showOnInitDisposer) {\r\n\t\t\t\t\t\tthis._showOnInitDisposer.dispose();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected hideInitially() {\r\n\t\tif (!this.isDisposed()) {\r\n\t\t\tthis.appeared = false;\r\n\t\t\t//if (!this.hidden && !this._isHidden) { // not good for series, as on enterframe it doesn't have data items yet.\r\n\t\t\tif (!this.inited) {\r\n\t\t\t\tthis.hide(0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n\t */\r\n\tpublic appear() {\r\n\t\tthis.appeared = false;\r\n\t\tif (!this.hidden && !this.isHidden) {\r\n\t\t\tthis.hide(0);\r\n\t\t}\r\n\t\tif (!this.hidden) {\r\n\r\n\t\t\tlet animation = this.show();\r\n\r\n\t\t\tif (animation && !animation.isFinished()) {\r\n\t\t\t\tthis.addDisposer(animation.events.on(\"animationended\", () => {\r\n\t\t\t\t\tthis.appeared = true;\r\n\t\t\t\t\tthis.dispatch(\"appeared\");\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.appeared = true;\r\n\t\t\t\tthis.dispatch(\"appeared\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.appeared = true;\r\n\t\t\tthis.dispatch(\"appeared\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Show on init?\r\n\t */\r\n\tpublic get showOnInit(): boolean {\r\n\t\treturn this.getPropertyValue(\"showOnInit\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * If a sprite has `showOnInit = true`, it will animate from \"hidden\" to\r\n\t * \"default\" state when initialized. To prevent this but keep\r\n\t * `showOnInit = true`, you can set `sprite.hidden = true`.\r\n\t *\r\n\t * @param value initially hidden?\r\n\t */\r\n\tpublic set hidden(value: boolean) {\r\n\t\tvalue = $type.toBoolean(value);\r\n\t\tthis.setPropertyValue(\"hidden\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Is initially hidden?\r\n\t */\r\n\tpublic get hidden(): boolean {\r\n\t\treturn this.getPropertyValue(\"hidden\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\t\treturn this._bbox;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of plugins (objects that implement [[IPlugin]] interface) attached\r\n\t * to this object.\r\n\t *\r\n\t * @since 4.2.2\r\n\t * @return List of plugins\r\n\t */\r\n\tpublic get plugins(): List<IPlugin> {\r\n\t\tif (!this._plugins) {\r\n\t\t\tthis._plugins = new List<IPlugin>();\r\n\t\t\tthis._disposers.push(this._plugins.events.on(\"inserted\", (ev) => {\r\n\t\t\t\tev.newValue.target = this;\r\n\t\t\t\tev.newValue.init();\r\n\t\t\t}));\r\n\t\t\tthis._disposers.push(new ListDisposer(this._plugins));\r\n\t\t}\r\n\t\treturn this._plugins;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Called during the System.update method\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _systemUpdate(skippedSprites: Array<Sprite>) {\r\n\t\tthis.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called during the System.update method\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _systemCheckIfValidate(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Called during the System.validatePositions method\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _systemValidatePositions() {\r\n\t\tthis.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Called during the System.validateLayouts method\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _systemValidateLayouts() {\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Sprite\"] = Sprite;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport * as $type from \"./Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an interface for cache items.\r\n */\r\ninterface CacheItem<A> {\r\n\r\n\t/**\r\n\t * A timestamp of when the item was created/updated.\r\n\t */\r\n\t\"touched\": number,\r\n\r\n\t/**\r\n\t * TTL (time to live) in milliseconds.\r\n\t */\r\n\t\"ttl\"?: number,\r\n\r\n\t/**\r\n\t * Cached value.\r\n\t */\r\n\t\"value\": A,\r\n\r\n\t/**\r\n\t * Is this item expired?\r\n\t *\r\n\t * @todo a system process that would check chace element TTLs and expire them\r\n\t */\r\n\t\"expired\"?: boolean\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents object cache.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Better storage\r\n * @todo TTL logging\r\n * @todo Garbage collector\r\n */\r\nexport class Cache<A> {\r\n\r\n\t/**\r\n\t * Storage for cache items.\r\n\t */\r\n\tprivate _storage = new Dictionary<string, Dictionary<string, CacheItem<A>>>();\r\n\r\n\t/**\r\n\t * Default TTL in milliseconds.\r\n\t */\r\n\tpublic ttl: number = 1000;\r\n\r\n\t/**\r\n\t * Caches or updates cached value, resets TTL.\r\n\t *\r\n\t * If `ttl` is set to zero, item will never expire.\r\n\t *\r\n\t * @param owner  An id of the object that owns this cache\r\n\t * @param key    Index key\r\n\t * @param value  Value\r\n\t * @param ttl    TTL of the cache to live in milliseconds\r\n\t */\r\n\tpublic set(owner: string, key: string, value: A, ttl?: number): void {\r\n\r\n\t\t// Create if storage does not exist for this owner\r\n\t\tlet ownerStorage = this._storage.insertKeyIfEmpty(owner, () => new Dictionary<string, CacheItem<A>>());\r\n\r\n\t\t// Create cache item\r\n\t\tlet item: CacheItem<A> = {\r\n\t\t\t\"touched\": new Date().getTime(),\r\n\t\t\t\"ttl\": $type.isNumber(ttl) ? ttl : this.ttl,\r\n\t\t\t\"value\": value\r\n\t\t};\r\n\r\n\t\t// Set\r\n\t\townerStorage.setKey(key, item);\r\n\t}\r\n\r\n\t/**\r\n\t * Rerturns cached item, respecting TTL.\r\n\t *\r\n\t * @param owner  An id of the object that owns this cache\r\n\t * @param key    Index key\r\n\t * @param value  Value to return if cache not available\r\n\t * @return Value, or `undefined` if not set\r\n\t */\r\n\tpublic get(owner: string, key: string, value: any = undefined): $type.Optional<A> {\r\n\t\t// \t\t || ypeof this._storage[owner][key] === \"undefined\" || this._storage[owner][key].expired === true) {\r\n\t\tif (this._storage.hasKey(owner)) {\r\n\t\t\tlet ownerStorage = <Dictionary<string, CacheItem<A>>>this._storage.getKey(owner);\r\n\r\n\t\t\tif (ownerStorage.hasKey(key)) {\r\n\t\t\t\tlet cacheItem: CacheItem<A> = <CacheItem<A>>ownerStorage.getKey(key);\r\n\t\t\t\tif (cacheItem.ttl && ((cacheItem.touched + cacheItem.ttl) < new Date().getTime())) {\r\n\t\t\t\t\tcacheItem.expired = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (cacheItem.expired) {\r\n\t\t\t\t\townerStorage.removeKey(key);\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t\treturn cacheItem.value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Clears cache for specific owner or everything.\r\n\t *\r\n\t * @param owner Owner to clear cache for\r\n\t */\r\n\tpublic clear(owner?: string): void {\r\n\t\tif (owner) {\r\n\t\t\tthis._storage.removeKey(owner);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._storage.clear();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * GLOBAL INSTANCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A global instance of cache. Use this instance to cache any values.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let cache: Cache<any> = new Cache();\r\n","/**\r\n * A collection of low-level async operation stuff.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\n\r\n/**\r\n * [Listener description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport type Listener = (now: number) => void;\r\n\r\nlet pendingFrame = false;\r\n\r\nconst nextQueue: Array<Listener> = [];\r\nconst readQueue: Array<Listener> = [];\r\nconst writeQueue: Array<Listener> = [];\r\nconst idleQueue: Array<Listener> = [];\r\n\r\n\r\nconst fps = 1000 / 60;\r\n\r\n/**\r\n * [raf description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport const raf =\r\n\t(typeof requestAnimationFrame === \"function\"\r\n\t\t? function(fn: () => void): void {\r\n\t\t\trequestAnimationFrame(fn);\r\n\t\t}\r\n\t\t: function(fn: () => void): void {\r\n\t\t\tsetTimeout(fn, fps);\r\n\t\t});\r\n\r\n/**\r\n * [frameLoop description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nfunction frameLoop(): void {\r\n\tconst now = Date.now();\r\n\r\n\r\n\tconst length = nextQueue.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\tnextQueue[i](now);\r\n\t}\r\n\r\n\t$array.shiftLeft(nextQueue, length);\r\n\r\n\r\n\tfor (let i = 0; i < readQueue.length; ++i) {\r\n\t\treadQueue[i](now);\r\n\t}\r\n\r\n\treadQueue.length = 0;\r\n\r\n\r\n\tfor (let i = 0; i < writeQueue.length; ++i) {\r\n\t\twriteQueue[i](now);\r\n\t}\r\n\r\n\twriteQueue.length = 0;\r\n\r\n\r\n\tif (nextQueue.length === 0 && readQueue.length === 0) {\r\n\t\tpendingFrame = false;\r\n\r\n\t} else {\r\n\t\traf(frameLoop);\r\n\t}\r\n}\r\n\r\n/**\r\n * [pendFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nfunction pendFrame(): void {\r\n\tif (!pendingFrame) {\r\n\t\tpendingFrame = true;\r\n\r\n\t\traf(frameLoop);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * [nextFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function nextFrame(fn: Listener): void {\r\n\tnextQueue.push(fn);\r\n\tpendFrame();\r\n}\r\n\r\n/**\r\n * [readFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function readFrame(fn: Listener): void {\r\n\treadQueue.push(fn);\r\n\tpendFrame();\r\n}\r\n\r\n/**\r\n * [writeFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function writeFrame(fn: Listener): void {\r\n\twriteQueue.push(fn);\r\n\tpendFrame();\r\n}\r\n\r\n/**\r\n * [whenIdle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function whenIdle(fn: Listener): void {\r\n\tidleQueue.push(fn);\r\n}\r\n\r\n/**\r\n * [triggerIdle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @todo Maybe don't trigger a callback which was added while in the middle of triggering?\r\n */\r\nexport function triggerIdle(): void {\r\n\tconst now = Date.now();\r\n\r\n\tconst length = idleQueue.length;\r\n\r\n\tfor (let i = 0; i < length; ++i) {\r\n\t\t(<any>idleQueue.shift())(now);\r\n\t}\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry, is } from \"./Registry\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Container } from \"./Container\";\r\nimport { Component } from \"./Component\";\r\nimport { Label } from \"./elements/Label\";\r\nimport { raf } from \"./utils/AsyncPending\";\r\nimport { IAnimationObject } from \"./utils/Animation\";\r\nimport { triggerIdle } from \"./utils/AsyncPending\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $log from \"./utils/Log\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * The main class that handles system-wide tasks, like caching, heartbeats, etc.\r\n * @important\r\n */\r\nexport class System {\r\n\t/**\r\n\t * A flag indicating if the system is on pause.\r\n\t */\r\n\tprotected _isPaused: boolean = false;\r\n\r\n\t/**\r\n\t * Holds the list of currently playing animations.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic animations: Array<IAnimationObject> = [];\r\n\r\n\t/**\r\n\t * Unique ID of the object.\r\n\t */\r\n\tpublic uid: string = registry.getUniqueId();\r\n\r\n\t/**\r\n\t * amCharts Version.\r\n\t *\r\n\t * This follows npm's semver specification.\r\n\t *\r\n\t * @see {@link https://docs.npmjs.com/misc/semver}\r\n\t */\r\n\tstatic VERSION: string = \"4.10.40\";\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t * @todo Needed?\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic dummyCounter: number = 0;\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic time: number;\r\n\r\n\r\n\tprotected _frameRequested: boolean = false;\r\n\r\n\tpublic updateStepDuration: number = 45;\r\n\r\n\t/**\r\n\t * Performs initialization of the System object.\r\n\t *\r\n\t * Called when the first [[Sprite]] object is created.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic constructor() {\r\n\t\tthis.time = Date.now();\r\n\t}\r\n\r\n\t/**\r\n\t * Reports time elapsed since timer was reset.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Needed?\r\n\t * @param msg    Message to report in console\r\n\t * @param reset  Reset time counter\r\n\t */\r\n\tpublic reportTime(msg: string, reset?: boolean): void {\r\n\t\tif (this.dummyCounter < 6) {\r\n\t\t\t//console.log(Date.now() - this.time, msg, this.dummyCounter2);\r\n\t\t}\r\n\t\tif (reset) {\r\n\t\t\tthis.time = Date.now();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Performs \"heartbeat\" operations `frameRate` number of times per second.\r\n\t *\r\n\t * When the chart element is invalidated, it is not immediately redrawn.\r\n\t *\r\n\t * Instead it waits for the next `update()` cycle to be re-validated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Maybe should be private?\r\n\t */\r\n\tpublic update(): void {\r\n\r\n\t\tif (this._isPaused) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._frameRequested = false;\r\n\r\n\t\tlet time = Date.now();\r\n\r\n\t\tregistry.dispatchImmediately(\"enterframe\");\r\n\r\n\t\t//this.validateLayouts();\r\n\t\t//this.validatePositions();\r\n\t\t/*\r\n\t\t\t\tfor (let key in registry.invalidLayouts) {\r\n\t\t\t\t\tthis.validateLayouts(key);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let key in registry.invalidPositions) {\r\n\t\t\t\t\tthis.validatePositions(key);\r\n\t\t\t\t}\r\n\t\t*/\r\n\r\n\t\tlet skippedComponents: Component[] = [];\r\n\r\n\t\t// data objects first - do all calculations\r\n\t\t// only data is parsed in chunks, thats why we do for loop instead of a while like with other invalid items.\r\n\t\t// important to go backwards, as items are removed!\r\n\t\t// TODO use iterator instead\r\n\r\n\t\tfor (let key in registry.invalidDatas) {\r\n\t\t\tif ($object.hasKey(registry.invalidDatas, key)) {\r\n\t\t\t\tlet invalidData = registry.invalidDatas[key];\r\n\r\n\t\t\t\twhile (invalidData.length > 0) {\r\n\t\t\t\t\tlet component: Component = invalidData[0];\r\n\t\t\t\t\tlet dataProvider: $type.Optional<Component> = component.dataProvider;\r\n\r\n\t\t\t\t\tif (!component.isDisposed()) {\r\n\r\n\t\t\t\t\t\tif (dataProvider && dataProvider.dataInvalid) {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tdataProvider.validateData();\r\n\t\t\t\t\t\t\t\tif (dataProvider.dataValidationProgress < 1) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\t\t\t$array.remove(invalidData, dataProvider);\r\n\t\t\t\t\t\t\t\tdataProvider.raiseCriticalError(e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tcomponent.validateData();\r\n\t\t\t\t\t\t\t\tif (component.dataValidationProgress < 1) {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\t\t\t$array.remove(invalidData, component);\r\n\t\t\t\t\t\t\t\tcomponent.raiseCriticalError(e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$array.remove(invalidData, component);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (Date.now() - time > this.updateStepDuration) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (registry.invalidRawDatas.length > 0) {\r\n\t\t\tlet component: Component = registry.invalidRawDatas[0];\r\n\t\t\tif (!component.isDisposed()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcomponent.validateRawData();\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t$array.remove(registry.invalidRawDatas, component);\r\n\t\t\t\t\tcomponent.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$array.remove(registry.invalidRawDatas, component);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// TODO use iterator instead\r\n\t\twhile (registry.invalidDataItems.length > 0) {\r\n\t\t\tlet component: Component = registry.invalidDataItems[0];\r\n\r\n\t\t\tlet dataProvider: $type.Optional<Component> = component.dataProvider;\r\n\r\n\t\t\t// this is needed to avoid partial value validation when data is parsed in chunks\r\n\t\t\tif (component.isDisposed() || component.dataInvalid || (dataProvider && dataProvider.dataInvalid)) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcomponent.validateDataItems();\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t$array.remove(registry.invalidDataItems, component);\r\n\t\t\t\t\tcomponent.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// this might seem too much, as validateValues removes from invalidDataItems aswell, but just to be sure (in case validateData is overriden and no super is called)\r\n\t\t\t$array.remove(registry.invalidDataItems, component);\r\n\t\t}\r\n\r\n\t\t// TODO use iterator instead\r\n\t\twhile (registry.invalidDataRange.length > 0) {\r\n\t\t\tlet component: Component = registry.invalidDataRange[0];\r\n\r\n\t\t\tlet dataProvider: $type.Optional<Component> = component.dataProvider;\r\n\r\n\t\t\tif (component.isDisposed() || component.dataInvalid || (dataProvider && dataProvider.dataInvalid)) {\r\n\t\t\t\t// void\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcomponent.validateDataRange();\r\n\t\t\t\t\tif (!component.skipRangeEvent) {\r\n\t\t\t\t\t\tcomponent.dispatchImmediately(\"datarangechanged\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcomponent.skipRangeEvent = false;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t$array.remove(registry.invalidDataRange, component);\r\n\t\t\t\t\tcomponent.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// this might seem too much, as validateDataRange removes from invalidDataRange aswell, but just to be sure (in case validateData is overriden and no super is called)\r\n\t\t\t$array.remove(registry.invalidDataRange, component);\r\n\t\t}\r\n\r\n\t\tlet skippedSprites: Sprite[] = [];\r\n\r\n\t\t// display objects later\r\n\t\t// TODO use iterator instead\r\n\r\n\t\t$object.each(registry.invalidLayouts, (key) => {\r\n\t\t\tthis.validateLayouts(key);\r\n\t\t});\r\n\r\n\t\t$object.each(registry.invalidPositions, (key) => {\r\n\t\t\tthis.validatePositions(key);\r\n\t\t});\r\n\r\n\r\n\t\tlet hasSkipped: boolean = false;\r\n\r\n\t\ttime = Date.now();\r\n\r\n\t\t$object.each(registry.invalidSprites, (key, invalidSprites) => {\r\n\t\t\tlet count = 0;\r\n\r\n\t\t\twhile (invalidSprites.length > 0) {\r\n\t\t\t\tthis.validateLayouts(key);\r\n\t\t\t\tthis.validatePositions(key);\r\n\r\n\t\t\t\tcount++;\r\n\r\n\t\t\t\tif (count == 5) {\r\n\t\t\t\t\tif (Date.now() - time > this.updateStepDuration) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcount = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sprite: Sprite = invalidSprites[invalidSprites.length - 1];\r\n\r\n\t\t\t\t// we need to check this, as validateLayout might validate sprite\r\n\t\t\t\tif (sprite && !sprite.isDisposed()) {\r\n\t\t\t\t\tif (!sprite._systemCheckIfValidate()) {\r\n\t\t\t\t\t\t// void\r\n\t\t\t\t\t\tskippedSprites.push(sprite);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (!this.checkIfValidate2(sprite)) {\r\n\t\t\t\t\t\t\t// void\r\n\t\t\t\t\t\t\tskippedSprites.push(sprite);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tsprite._systemUpdate(skippedSprites);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t\t\t\tsprite.invalid = false;\r\n\t\t\t\t\t\t\t\t$array.remove(invalidSprites, sprite);\r\n\t\t\t\t\t\t\t\tsprite.raiseCriticalError(e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// this might seem too much, but it's ok\r\n\t\t\t\t\tsprite.invalid = false;\r\n\t\t\t\t}\r\n\t\t\t\t$array.remove(invalidSprites, sprite);\r\n\t\t\t}\r\n\r\n\t\t\tregistry.invalidSprites[key] = registry.invalidSprites[key].concat(skippedSprites);\r\n\t\t});\r\n\r\n\t\t$object.each(registry.invalidSprites, (key, value) => {\r\n\t\t\tif (value.length > 0) {\r\n\t\t\t\thasSkipped = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$object.each(registry.invalidDatas, (key, value) => {\r\n\t\t\tif (value.length > 0) {\r\n\t\t\t\thasSkipped = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// TODO make this more efficient\r\n\t\t// TODO don't copy the array\r\n\t\t$array.each($array.copy(this.animations), (x) => {\r\n\t\t\tx.update();\r\n\t\t});\r\n\r\n\t\t//if(!hasSkipped){\r\n\t\t$object.each(registry.invalidLayouts, (key) => {\r\n\t\t\tthis.validateLayouts(key);\r\n\t\t});\r\n\r\n\t\t$object.each(registry.invalidPositions, (key) => {\r\n\t\t\tthis.validatePositions(key);\r\n\t\t});\r\n\t\t//}\r\n\r\n\t\ttriggerIdle();\r\n\r\n\t\t$object.each(registry.invalidLayouts, (key) => {\r\n\t\t\tthis.validateLayouts(key);\r\n\t\t});\r\n\r\n\t\t$object.each(registry.invalidPositions, (key) => {\r\n\t\t\tthis.validatePositions(key);\r\n\t\t});\r\n\r\n\r\n\t\tregistry.dispatchImmediately(\"exitframe\");\r\n\r\n\t\tif (hasSkipped || this.animations.length > 0 || skippedComponents.length > 0) {\r\n\t\t\tthis.requestFrame();\r\n\t\t}\r\n\r\n\t\tif (this.updateStepDuration < 200) {\r\n\t\t\tlet all0 = true;\r\n\r\n\t\t\t$object.each(registry.invalidDatas, (key, value) => {\r\n\t\t\t\tif (value.length > 0) {\r\n\t\t\t\t\tall0 = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$object.each(registry.invalidSprites, (key, value) => {\r\n\t\t\t\tif (value.length > 0) {\r\n\t\t\t\t\tall0 = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (all0) {\r\n\t\t\t\tthis.updateStepDuration = 200;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic checkIfValidate2(sprite: Sprite): boolean {\r\n\t\tif (sprite.dataItem && sprite.dataItem.component && sprite.dataItem.component.dataInvalid && !sprite.dataItem.component.isTemplate) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Requests new animation frame\r\n\t */\r\n\tpublic requestFrame() {\r\n\t\tif (!this._frameRequested) {\r\n\r\n\t\t\traf(() => {\r\n\t\t\t\tthis.update();\r\n\t\t\t});\r\n\t\t\tthis._frameRequested = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Call this method if you update data or config of a chart that is in\r\n\t * hidden container, after revealing the container, so that labels and\r\n\t * possibly other elements can correctly arrange themselves.\r\n\t *\r\n\t * @since 4.7.10\r\n\t * @param  container  Target container\r\n\t */\r\n\tpublic softInvalidate(container: Container) {\r\n\t\tcontainer.children.each((child) => {\r\n\t\t\tif (child instanceof Container) {\r\n\t\t\t\tthis.softInvalidate(child);\r\n\t\t\t}\r\n\t\t\tif (child.measureFailed) {\r\n\t\t\t\tif (is<Label>(child, \"Label\")) {\r\n\t\t\t\t\tchild.hardInvalidate();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tchild.invalidate();\r\n\t\t\t\t}\r\n\t\t\t\tchild.measureFailed = false;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers position re-validation on all [[Sprite]] elements that have\r\n\t * invalid(ated) positions.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Maybe should be private?\r\n\t */\r\n\tpublic validatePositions(id: string): void {\r\n\t\t// invalid positions\r\n\t\t// TODO use iterator instead\r\n\t\tlet invalidPositions = registry.invalidPositions[id];\r\n\r\n\t\twhile (invalidPositions.length > 0) {\r\n\t\t\tlet sprite: Sprite = invalidPositions[invalidPositions.length - 1];\r\n\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tsprite._systemValidatePositions();\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tsprite.positionInvalid = false;\r\n\t\t\t\t\t$array.remove(invalidPositions, sprite);\r\n\t\t\t\t\tsprite.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$array.remove(invalidPositions, sprite);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers position re-validation on all [[Container]] elements that have\r\n\t * invalid(ated) layouts.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Maybe should be private?\r\n\t */\r\n\tpublic validateLayouts(id: string): void {\r\n\t\t// invalid positions\r\n\t\t// TODO use iterator instead\r\n\t\tlet invalidLayouts = registry.invalidLayouts[id];\r\n\t\twhile (invalidLayouts.length > 0) {\r\n\t\t\tlet container: Container = invalidLayouts[invalidLayouts.length - 1];\r\n\t\t\tif (!container.isDisposed()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcontainer.children.each((sprite) => {\r\n\t\t\t\t\t\tsprite._systemValidateLayouts();\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tcontainer.validateLayout();\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\tcontainer.layoutInvalid = false;\r\n\t\t\t\t\t$array.remove(invalidLayouts, container);\r\n\t\t\t\t\tcontainer.raiseCriticalError(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$array.remove(invalidLayouts, container);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Outputs string to console if `verbose` is `true`.\r\n\t *\r\n\t * @param value Message to output to console\r\n\t */\r\n\tpublic log(value: any): void {\r\n\t\t$log.log(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Pauses all the processes of all the amCharts objects on the page\r\n\t *\r\n\t * @return is paused?\r\n\t */\r\n\tpublic set isPaused(value: boolean) {\r\n\t\tthis._isPaused = value;\r\n\t\tif (!value) {\r\n\t\t\tthis._frameRequested = false;\r\n\t\t\tthis.requestFrame();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Is system on pause?\r\n\t */\r\n\tpublic get isPaused(): boolean {\r\n\t\treturn this._isPaused;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * A singleton global instance of [[System]].\r\n *\r\n * All code should use this, rather than instantiating their\r\n * own System objects.\r\n */\r\nexport const system: System = new System();\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { TimeUnit } from \"../defs/TimeUnit\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let timeUnitDurations: { [Key in TimeUnit]: number } = {\r\n\tmillisecond: 1,\r\n\tsecond: 1000,\r\n\tminute: 60000,\r\n\thour: 3600000,\r\n\tday: 86400000,\r\n\tweek: 604800000,\r\n\tmonth: 2592000000,\r\n\tyear: 31536000000\r\n};\r\n\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit: TimeUnit): $type.Optional<TimeUnit> {\r\n\tswitch (unit) {\r\n\t\tcase \"year\":\r\n\t\t\treturn\r\n\r\n\t\tcase \"month\":\r\n\t\t\treturn \"year\";\r\n\r\n\t\tcase \"week\":\r\n\t\t\treturn \"month\";\r\n\r\n\t\tcase \"day\":\r\n\t\t\treturn \"month\"; // not a mistake\r\n\r\n\t\tcase \"hour\":\r\n\t\t\treturn \"day\";\r\n\r\n\t\tcase \"minute\":\r\n\t\t\treturn \"hour\";\r\n\r\n\t\tcase \"second\":\r\n\t\t\treturn \"minute\"\r\n\r\n\t\tcase \"millisecond\":\r\n\t\t\treturn \"second\";\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit: TimeUnit, count?: number): number {\r\n\tif (!$type.hasValue(count)) {\r\n\t\tcount = 1;\r\n\t}\r\n\treturn timeUnitDurations[unit] * count;\r\n}\r\n\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now(): Date {\r\n\treturn new Date();\r\n}\r\n\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime(): number {\r\n\treturn now().getTime();\r\n}\r\n\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date: Date): Date {\r\n\treturn new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dateOne  Date 1\r\n * @param dateTwo  Date 2\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(dateOne: Date, dateTwo: Date, unit: TimeUnit, utc?: boolean): boolean {\r\n\r\n\tdateOne = new Date(dateOne.getTime());\r\n\tdateTwo = new Date(dateTwo.getTime());\r\n\r\n\tlet timeZoneOffset1 = 0;\r\n\tlet timeZoneOffset2 = 0;\r\n\r\n\tif (!utc && unit != \"millisecond\") {\r\n\t\ttimeZoneOffset1 = dateOne.getTimezoneOffset();\r\n\t\tdateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n\r\n\t\ttimeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n\t\tdateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n\t}\r\n\r\n\tlet changed = false;\r\n\tswitch (unit) {\r\n\t\tcase \"year\":\r\n\t\t\tif (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"month\":\r\n\t\t\tif (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t\telse if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"day\":\r\n\t\t\tif (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t\telse if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"hour\":\r\n\t\t\tif (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"minute\":\r\n\t\t\tif (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"second\":\r\n\t\t\tif (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"millisecond\":\r\n\t\t\tif (dateOne.getTime() != dateTwo.getTime()) {\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tif (changed) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tlet nextUnit: $type.Optional<TimeUnit> = getNextUnit(unit);\r\n\tif (nextUnit) {\r\n\t\tdateOne.setUTCMinutes(dateOne.getUTCMinutes() + timeZoneOffset1);\r\n\t\tdateTwo.setUTCMinutes(dateTwo.getUTCMinutes() + timeZoneOffset2);\r\n\t\treturn checkChange(dateOne, dateTwo, nextUnit, utc);\r\n\t}\r\n\telse {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date: Date, unit: TimeUnit, count: number, utc?: boolean): Date {\r\n\tlet timeZoneOffset = 0;\r\n\r\n\tif (!utc && unit != \"millisecond\") {\r\n\t\ttimeZoneOffset = date.getTimezoneOffset();\r\n\t\tdate.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n\t}\r\n\r\n\tswitch (unit) {\r\n\t\tcase \"day\":\r\n\t\t\tlet day: number = date.getUTCDate();\r\n\t\t\tdate.setUTCDate(day + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"second\":\r\n\t\t\tlet seconds: number = date.getUTCSeconds();\r\n\t\t\tdate.setUTCSeconds(seconds + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"millisecond\":\r\n\t\t\tlet milliseconds: number = date.getUTCMilliseconds();\r\n\t\t\tdate.setUTCMilliseconds(milliseconds + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"hour\":\r\n\t\t\tlet hours: number = date.getUTCHours();\r\n\t\t\tdate.setUTCHours(hours + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"minute\":\r\n\t\t\tlet minutes: number = date.getUTCMinutes();\r\n\t\t\tdate.setUTCMinutes(minutes + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"year\":\r\n\t\t\tlet year: number = date.getUTCFullYear();\r\n\t\t\tdate.setUTCFullYear(year + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"month\":\r\n\t\t\tlet month: number = date.getUTCMonth();\r\n\t\t\tdate.setUTCMonth(month + count);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"week\":\r\n\t\t\tlet wday: number = date.getUTCDate();\r\n\t\t\tdate.setUTCDate(wday + count * 7);\r\n\t\t\tbreak;\r\n\t}\r\n\tif (!utc && unit != \"millisecond\") {\r\n\t\tdate.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n\r\n\t\tif (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n\t\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\r\n\t\t\tif (newTimeZoneOffset != timeZoneOffset) {\r\n\t\t\t\tlet diff = newTimeZoneOffset - timeZoneOffset;\r\n\r\n\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + diff);\r\n\t\t\t\t// solves issues if newe time falls back to old time zone\r\n\t\t\t\tif (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n\t\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() - diff);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn date;\r\n}\r\n\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @ignore Exclude from docs\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\r\n * @param timezone         Use specific named timezone when rounding\r\n * @return New date\r\n */\r\nexport function round(date: Date, unit: TimeUnit, count: number, firstDateOfWeek?: number, utc?: boolean, firstDate?: Date, roundMinutes: number = 0, timezone?: string): Date {\r\n\r\n\tif (!$type.isNumber(count)) {\r\n\t\tcount = 1;\r\n\t}\r\n\r\n\tlet timeZoneOffset = 0;\r\n\r\n\tif (timezone && [\"day\", \"month\", \"week\", \"year\"].indexOf(unit) != -1) {\r\n\t\tdate = setTimezone(date, timezone);\r\n\t}\r\n\r\n\tif (!utc && unit != \"millisecond\") {\r\n\t\ttimeZoneOffset = date.getTimezoneOffset();\r\n\t\tdate.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n\t}\r\n\r\n\tswitch (unit) {\r\n\r\n\t\tcase \"day\":\r\n\t\t\tlet day = date.getUTCDate();\r\n\r\n\t\t\tif (count > 1) {\r\n\t\t\t\t//\tday = Math.floor(day / count) * count;\r\n\t\t\t\tif (firstDate) {\r\n\t\t\t\t\tfirstDate = round(firstDate, \"day\", 1);\r\n\r\n\t\t\t\t\tlet difference = date.getTime() - firstDate.getTime();\r\n\t\t\t\t\tlet unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n\t\t\t\t\tlet duration = getDuration(\"day\", unitCount * count);\r\n\t\t\t\t\tdate.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdate.setUTCDate(day);\r\n\t\t\t}\r\n\t\t\tdate.setUTCHours(0, 0, 0, 0);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"second\":\r\n\t\t\tlet seconds = date.getUTCSeconds();\r\n\t\t\tif (count > 1) {\r\n\t\t\t\tseconds = Math.floor(seconds / count) * count;\r\n\t\t\t}\r\n\t\t\tdate.setUTCSeconds(seconds, 0);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"millisecond\":\r\n\t\t\tif (count == 1) {\r\n\t\t\t\treturn date; // much better for perf!\r\n\t\t\t}\r\n\r\n\t\t\tlet milliseconds = date.getUTCMilliseconds();\r\n\t\t\tmilliseconds = Math.floor(milliseconds / count) * count;\r\n\t\t\tdate.setUTCMilliseconds(milliseconds);\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"hour\":\r\n\r\n\t\t\tlet hours = date.getUTCHours();\r\n\t\t\tif (count > 1) {\r\n\t\t\t\thours = Math.floor(hours / count) * count;\r\n\t\t\t}\r\n\t\t\tdate.setUTCHours(hours, roundMinutes, 0, 0);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"minute\":\r\n\r\n\t\t\tlet minutes = date.getUTCMinutes();\r\n\t\t\tmilliseconds = date.getUTCMilliseconds();\r\n\t\t\tif (count > 1) {\r\n\t\t\t\tminutes = Math.floor(minutes / count) * count;\r\n\t\t\t}\r\n\r\n\t\t\tdate.setUTCMinutes(minutes, 0, 0);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"month\":\r\n\r\n\t\t\tlet month = date.getUTCMonth();\r\n\t\t\tif (count > 1) {\r\n\t\t\t\tmonth = Math.floor(month / count) * count;\r\n\t\t\t}\r\n\r\n\t\t\tdate.setUTCMonth(month, 1);\r\n\t\t\tdate.setUTCHours(0, roundMinutes, 0, 0);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase \"year\":\r\n\r\n\t\t\tlet year = date.getUTCFullYear();\r\n\t\t\tif (count > 1) {\r\n\t\t\t\tyear = Math.floor(year / count) * count;\r\n\t\t\t}\r\n\t\t\tdate.setUTCFullYear(year, 0, 1);\r\n\t\t\tdate.setUTCHours(0, roundMinutes, 0, 0);\r\n\r\n\t\t\t//let nonUTCDateY = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\r\n\t\t\t//timeZoneOffset = nonUTCDateY.getTimezoneOffset();\r\n\r\n\t\t\tbreak;\r\n\r\n\r\n\t\tcase \"week\":\r\n\r\n\t\t\tlet wday = date.getUTCDate();\r\n\t\t\tlet weekDay = date.getUTCDay();\r\n\r\n\t\t\tif (!$type.isNumber(firstDateOfWeek)) {\r\n\t\t\t\tfirstDateOfWeek = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// todo: rounding when count is not 1\r\n\t\t\tif (weekDay >= firstDateOfWeek) {\r\n\t\t\t\twday = wday - weekDay + firstDateOfWeek;\r\n\t\t\t} else {\r\n\t\t\t\twday = wday - (7 + weekDay) + firstDateOfWeek;\r\n\t\t\t}\r\n\r\n\t\t\tdate.setUTCDate(wday);\r\n\t\t\tdate.setUTCHours(0, roundMinutes, 0, 0);\r\n\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tif (!utc && unit != \"millisecond\") {\r\n\t\tdate.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n\r\n\t\tif (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n\t\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\r\n\t\t\tif (newTimeZoneOffset != timeZoneOffset) {\r\n\t\t\t\tlet diff = newTimeZoneOffset - timeZoneOffset;\r\n\r\n\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + diff);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn date;\r\n}\r\n\r\n/**\r\n * Returns a new `Date` object which corresponds to the source date in a\r\n * specific timezone.\r\n *\r\n * @since 4.10.1\r\n * @param   date      Source date\r\n * @param   timezone  Timezone identifier\r\n * @return            Recalculated new Date\r\n */\r\nexport function setTimezone(date: Date, timezone: string): Date {\r\n\tconst d = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\r\n\treturn d;\r\n}\r\n\r\n/**\r\n * Returns minute fraction of the set timezone.\r\n *\r\n * @since 4.10.12\r\n * @param  timezone  Timezone identifier\r\n * @return           Minutes\r\n */\r\nexport function getTimezoneMinutes(timezone: string): number {\r\n\tlet d = new Date();\r\n\td.setHours(0, 0, 0, 0);\r\n\tlet d2 = setTimezone(d, timezone);\r\n\treturn d2.getMinutes();\r\n}","/**\r\n * Resize button module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Orientation } from \"../defs/Orientation\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ResizeButton]].\r\n */\r\nexport interface IResizeButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[ResizeButton]] for [[ResizeButton]].\r\n */\r\nexport interface IResizeButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ResizeButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IResizeButtonAdapters extends IButtonAdapters, IResizeButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a draggable resize/grip button.\r\n *\r\n * @see {@link IResizeButtonEvents} for a list of available events\r\n * @see {@link IResizeButtonAdapters} for a list of available Adapters\r\n */\r\nexport class ResizeButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IResizeButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IResizeButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IResizeButtonEvents;\r\n\r\n\t/**\r\n\t * Orientation of the resize direction.\r\n\t *\r\n\t * @deprecated Not used\r\n\t */\r\n\tprotected _orientation: Orientation;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ResizeButton\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.orientation = \"horizontal\";\r\n\t\tthis.layout = \"absolute\";\r\n\t\tthis.horizontalCenter = \"middle\";\r\n\t\tthis.verticalCenter = \"middle\";\r\n\r\n\t\tthis.draggable = true;\r\n\t\tthis.padding(8, 8, 8, 8);\r\n\r\n\t\tthis.background.cornerRadius(20, 20, 20, 20);\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: -2, y: -6 });\r\n\t\tpath += $path.lineTo({ x: -2, y: 6 });\r\n\t\tpath += $path.moveTo({ x: 2, y: -6 });\r\n\t\tpath += $path.lineTo({ x: 2, y: 6 });\r\n\t\ticon.path = path;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(0, 4, 0, 4);\r\n\t\ticon.stroke = new InterfaceColorSet().getFor(\"alternativeText\");\r\n\t\ticon.strokeOpacity = 0.7;\r\n\t\t//icon.align = \"center\";\r\n\t\t//icon.valign = \"middle\";\r\n\t\tthis.icon = icon;\r\n\r\n\t\tthis.label.dispose();\r\n\t\tthis.label = undefined;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Use for setting of direction (orientation) of the resize button.\r\n\t *\r\n\t * Available options: \"horizontal\", \"vertical\".\r\n\t *\r\n\t * @param value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tlet icon = this.icon;\r\n\t\tif (icon) {\r\n\t\t\tif (value == \"horizontal\") {\r\n\t\t\t\ticon.rotation = 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ticon.rotation = -90;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ResizeButton\"] = ResizeButton;\r\n","/**\r\n * Module contains functionality related to [[Sprite]] states.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"./Base\";\r\nimport { registry } from \"./Registry\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { List, ListDisposer } from \"./utils/List\";\r\nimport { Filter } from \"./rendering/filters/Filter\";\r\nimport { Sprite } from \"./Sprite\";\r\n\r\nimport { toColor } from \"./utils/Color\";\r\nimport { percent } from \"./utils/Percent\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $ease from \"./utils/Ease\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n\r\n/**\r\n * Defines a state for [[Sprite]].\r\n *\r\n * A \"state\" is a special object that has all the same properties as the\r\n * [[Sprite]] of the same type, and which can be used to quickly apply a set\r\n * of property values. (set state)\r\n *\r\n * When [[Sprite]] (or any object that extends Sprite) is created it creates a\r\n * \"default\" state. You can modify the \"default\" state so that when the Sprite\r\n * returns to default state certain properties are added.\r\n *\r\n * Default state can be accessed using Sprite's `defaultState` getter.\r\n *\r\n * ```TypeScript\r\n * sprite.defaultState.properties.fillOpacity = 0.5;\r\n * ```\r\n * ```JavaScript\r\n * sprite.defaultState.properties.fillOpacity = 0.5;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"defaultState\": {\r\n *     \"properties\": {\r\n *       \"fillOpacity\": 0.5\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * If Sprite is \"hoverable\", it automatically adds a \"hover\" state, which is\r\n * applied when it has a cursor over it.\r\n *\r\n * ```TypeScript\r\n * let hoverstate = sprite.states.create(\"hover\");\r\n * hoverstate.properties.fillOpacity = 1;\r\n * ```\r\n * ```JavaScript\r\n * var hoverstate = sprite.states.create(\"hover\");\r\n * hoverstate.properties.fillOpacity = 1;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"states\": {\r\n *     \"hover\": {\r\n *       \"properties\": {\r\n *         \"fillOpacity\": 0.5\r\n *       }\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * The above will automatically apply \"hover\" state when the Sprite is hovered,\r\n * thus will set its `fillOpacity` property to 1, and will reset it to 0.5 when\r\n * it's no longer hovered.\r\n *\r\n * Every object that inherits from [[Sprite]] can and will add their own\r\n * properties to the available list.\r\n *\r\n * User can create their own states, and apply them as needed:\r\n *\r\n * ```TypeScript\r\n * let myCustomState = sprite.states.create(\"mystate\");\r\n * myCustomState.properties.fillOpacity = 0.5;\r\n * myCustomState.properties.strokeOpacity = 0.8;\r\n * sprite.setState(\"mystate\");\r\n * ```\r\n * ```JavaScript\r\n * var myCustomState = sprite.states.create(\"mystate\");\r\n * myCustomState.properties.fillOpacity = 0.5;\r\n * myCustomState.properties.strokeOpacity = 0.8;\r\n * sprite.setState(\"mystate\");\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/states/}\r\n * @important\r\n */\r\nexport class SpriteState<P, A> extends BaseObject {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: P;\r\n\r\n\t/**\r\n\t * Defines adapter types.\r\n\t */\r\n\tpublic _adapter!: A;\r\n\r\n\t/**\r\n\t * Title of the state, i.e. \"default\", \"hidden\", etc.\r\n\t */\r\n\tpublic name: string;\r\n\r\n\t/**\r\n\t * Reference to [[Sprite]] element this State is for.\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _adapterO: Adapter<this, A>;\r\n\r\n\t/**\r\n\t * Holds Adapter.\r\n\t */\r\n\tpublic get adapter(): Adapter<this, A> {\r\n\t\tif (!this._adapterO) {\r\n\t\t\tthis._adapterO = new Adapter<this, A>(this);\r\n\r\n\t\t\t// Decorate adapter with events so that we can apply its settings whenever\r\n\t\t\t// it is modified\r\n\t\t\tthis._adapterO.events.on(\"inserted\", (ev: any) => {\r\n\t\t\t\t(<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n\t\t\t}, undefined, false);\r\n\t\t\tthis._adapterO.events.on(\"removed\", (ev: any) => {\r\n\t\t\t\t(<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n\t\t\t}, undefined, false);\r\n\t\t}\r\n\t\treturn this._adapterO;\r\n\t}\r\n\r\n\t/**\r\n\t * Duration of the transition to this state. 0 means instantenous transition.\r\n\t * Any number means the [[Sprite]] will transit smoothly to this state,\r\n\t * animating all animatable properties.\r\n\t *\r\n\t * @default 0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tpublic transitionDuration: number = 0;\r\n\r\n\t/**\r\n\t * Easing function to use when transitioning to this state.\r\n\t *\r\n\t * @default cubicOut\r\n\t * @see {@link Ease}\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tpublic transitionEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * Collection of properties and their values that should be applied to [[Sprite]]\r\n\t * when switching to this State.\r\n\t *\r\n\t * The property values set on a [[SpriteState]] will override the ones set\r\n\t * directly on a [[Sprite]].\r\n\t */\r\n\tpublic properties: P = <P>{};\r\n\r\n\t/**\r\n\t * A collection of key/value pairs that can be used to bind specific Sprite\r\n\t * properties to [[DataItem]].\r\n\t *\r\n\t * For example: `fill` property can be bound to `myCustomColor` field in\r\n\t * DataItem. The Sprite will automatically get the value for `fill` from its\r\n\t * DataItem.\r\n\t *\r\n\t * SpriteState-specific binding will override binding set directly on\r\n\t * [[Sprite]]. I.e. you can make Sprite use different fill color on hover by\r\n\t * adding a `fill` binding to a different DataItem key for Sprite's \"hover\"\r\n\t * state object.\r\n\t *\r\n\t * @see {@link Sprite}\r\n\t */\r\n\tpublic propertyFields: { [index in keyof this[\"_properties\"]]?: string } = {};\r\n\t//public propertyFields: Dictionary<keyof this[\"_properties\"], string> = new Dictionary<keyof this[\"_properties\"], string>();;\r\n\r\n\t/**\r\n\t * A list of [[Filter]] elements to be applied to the relative [[Sprite]]\r\n\t * when switching to this State.\r\n\t *\r\n\t * @param {List}\r\n\t */\r\n\tpublic filters = new List<Filter>();\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SpriteState\";\r\n\r\n\t\t// Make filter list disposable\r\n\t\tthis._disposers.push(new ListDisposer(this.filters));\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns [[Sprite]] element's property value.\r\n\t *\r\n\t * Will check if there are any bindings with [[DataItem]] and if there are\r\n\t * any method callbacks set up for the specific property.\r\n\t *\r\n\t * @param propertyName  Property name\r\n\t * @return Property value\r\n\t */\r\n\tpublic getPropertyValue<Key extends keyof P>(propertyName: Key): P[Key] {\r\n\t\tlet propValue: any = this.properties[propertyName];\r\n\t\tlet sprite: $type.Optional<Sprite> = this.sprite;\r\n\r\n\t\tif (sprite) {\r\n\t\t\tlet fieldName: string = this.propertyFields[propertyName];\r\n\r\n\t\t\tif ($type.hasValue(fieldName)) {\r\n\t\t\t\tif (sprite.dataItem) {\r\n\t\t\t\t\tpropValue = (<any>sprite.dataItem.dataContext)[fieldName];\r\n\t\t\t\t}\r\n\t\t\t\tif(propValue == undefined){\r\n\t\t\t\t\tpropValue = \"__unset\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Apply adapters\r\n\t\t\t// If the value itself is undefined, we're going to pass in Sprite's\r\n\t\t\t// value to adapters\r\n\t\t\t// @todo get rid of <any>\r\n\t\t\tif (!$type.hasValue(propValue)) {\r\n\t\t\t\tlet spriteValue = sprite.getPropertyValue(<any>propertyName);\r\n\t\t\t\tif (this._adapterO) {\r\n\t\t\t\t\tpropValue = this._adapterO.apply(<any>propertyName, spriteValue);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpropValue = spriteValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (propValue == spriteValue) {\r\n\t\t\t\t\tpropValue = undefined;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this._adapterO) {\r\n\t\t\t\t\tpropValue = this._adapterO.apply(<any>propertyName, propValue)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t/*let method = this.propertyMethods.getKey(propertyName);\r\n\t\t\tif (method) {\r\n\t\t\t\tpropValue = method(sprite, propertyName);\r\n\t\t\t}*/\r\n\r\n\t\t}\r\n\r\n\t\treturn propValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all property and style values from another [[SpriteState]] object.\r\n\t *\r\n\t * @param source  Source [[SpriteState]]\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tif (source && source != this) {\r\n\t\t\tthis.transitionDuration = source.transitionDuration;\r\n\t\t\tthis.transitionEasing = source.transitionEasing;\r\n\r\n\t\t\t$utils.copyProperties(source.properties, this.properties);\r\n\t\t\t$utils.copyProperties(source.propertyFields, this.propertyFields);\r\n\t\t\tthis.filters.copyFrom(source.filters);\r\n\t\t\tif(source._adapterO){\r\n\t\t\t\tthis.adapter.copyFrom(source._adapterO);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all values that should be applied by the SpriteState.\r\n\t *\r\n\t * It takes adapters into account.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Properties\r\n\t * @todo Add adapter values\r\n\t * @todo proper type this[\"_properties\"]\r\n\t */\r\n\tpublic get allValues(): P {\r\n\r\n\t\t// Init return value\r\n\t\tlet res: P = <P>{};\r\n\r\n\t\t// Apply adapters to all values\r\n\t\t$object.each(this.properties, (prop, value) => {\r\n\t\t\tres[prop] = this.getPropertyValue(prop);\r\n\t\t});\r\n\r\n\t\t// Cycle through all adapters and add values for missing properties\r\n\t\tif(this._adapterO){\r\n\t\t\tlet keys = this._adapterO.keys();\r\n\r\n\t\t\t$object.each(keys, (_x, prop) => {\r\n\t\t\t\tlet value = this.getPropertyValue<any>(prop);\r\n\t\t\t\t(<any>res)[prop] = value;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Cycle through all property fileds and add values for missing properties\r\n\t\tlet propertyFields = this.propertyFields;\r\n\r\n\t\t$object.each(propertyFields, (prop) => {\r\n\t\t\tlet value = this.getPropertyValue<any>(prop);\r\n\t\t\t(<any>res)[prop] = value;\r\n\t\t});\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the State to initial state - no values or Filters applied.\r\n\t */\r\n\tpublic reset(): void {\r\n\t\tthis.properties = <P>{};\r\n\t\tthis.filters.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config) && $type.hasValue(config[\"properties\"])) {\r\n\t\t\t$object.each(config[\"properties\"], (key, value) => {\r\n\t\t\t\tif ($type.isString(value)) {\r\n\t\t\t\t\tif (value.match(/^[0-9.\\-]+\\%$/)) {\r\n\t\t\t\t\t\tconfig[\"properties\"][key] = percent($type.toNumber(value));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (value.match(/^\\#[0-9abcdef]{3,}$/i)) {\r\n\t\t\t\t\t\tconfig[\"properties\"][key] = toColor(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds easing functions to \"function\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn field == \"transitionEasing\" || super.asIs(field);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SpriteState\"] = SpriteState;\r\n","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, IDisposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $async from \"./AsyncPending\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Defines a universal type for the event object.\r\n */\r\nexport type AMEvent<Target, T> = {\r\n\t[K in keyof T]: { type: K, target: Target } & T[K];\r\n};\r\n\r\n/**\r\n * A universal interface for event listeners.\r\n */\r\nexport interface EventListener<T> {\r\n\tkilled: boolean;\r\n\tonce: boolean;\r\n\ttype: any;\r\n\tcallback: any;\r\n\tcontext: any;\r\n\tshouldClone: boolean;\r\n\tdispatch: any;\r\n\tdisposer: IDisposer;\r\n}\r\n\r\n/*export interface IEventDispatcher<T> {\r\n\tisDisposed(): boolean;\r\n\tdispose(): void;\r\n\thasListeners(): boolean;\r\n\tenable(): void;\r\n\tdisable(): void;\r\n\tenableType<Key extends keyof T>(type: Key): void;\r\n\tdisableType<Key extends keyof T>(type: Key, amount?: number): void;\r\n\tisEnabled<Key extends keyof T>(type: Key): boolean;\r\n\thas<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): boolean;\r\n\tdispatchImmediately<Key extends keyof T>(type: Key, event: T[Key]): void;\r\n\tdispatch<Key extends keyof T>(type: Key, event: T[Key]): void;\r\n\tonAll<C, Key extends keyof T>(callback: (this: C, type: Key, event: T[Key]) => void, context?: C): IDisposer;\r\n\ton<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;\r\n\tonce<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;\r\n\toff<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;\r\n\toff<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;\r\n\tcopyFrom(source: this): void;\r\n}*/\r\n\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @important\r\n */\r\nexport class EventDispatcher<T> implements IDisposer {\r\n\r\n\tprotected _listeners: Array<EventListener<T>>;\r\n\tprotected _killed: Array<EventListener<T>>;\r\n\tprotected _disabled: { [key in keyof T]?: number };\r\n\tprotected _iterating: number;\r\n\tprotected _enabled: boolean;\r\n\tprotected _disposed: boolean;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._listeners = [];\r\n\t\tthis._killed = [];\r\n\t\tthis._disabled = {};\r\n\t\tthis._iterating = 0;\r\n\t\tthis._enabled = true;\r\n\t\tthis._disposed = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if this object has been already disposed.\r\n\t *\r\n\t * @return Disposed?\r\n\t */\r\n\tpublic isDisposed(): boolean {\r\n\t\treturn this._disposed;\r\n\t}\r\n\r\n\t/**\r\n\t * Dispose (destroy) this object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tthis._disposed = true;\r\n\r\n\t\t\tconst a = this._listeners;\r\n\r\n\t\t\tthis._iterating = 1;\r\n\t\t\tthis._listeners = <any>null;\r\n\t\t\tthis._disabled = <any>null;\r\n\r\n\t\t\ttry {\r\n\t\t\t\t$array.each(a, (x) => {\r\n\t\t\t\t\tx.disposer.dispose();\r\n\t\t\t\t});\r\n\r\n\t\t\t} finally {\r\n\t\t\t\tthis._killed = <any>null;\r\n\t\t\t\tthis._iterating = <any>null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this particular event dispatcher has any listeners set.\r\n\t *\r\n\t * @return Has listeners?\r\n\t */\r\n\tpublic hasListeners(): boolean {\r\n\t\treturn this._listeners.length !== 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this particular event dispatcher has any particular listeners set.\r\n\t *\r\n\t * @return Has particular event listeners?\r\n\t */\r\n\tpublic hasListenersByType<Key extends keyof T>(type: Key): boolean {\r\n\t\treturn $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\r\n\t}\r\n\r\n\t/**\r\n\t * Enable dispatching of events if they were previously disabled by\r\n\t * `disable()`.\r\n\t */\r\n\tpublic enable(): void {\r\n\t\tthis._enabled = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Disable dispatching of events until re-enabled by `enable()`.\r\n\t */\r\n\tpublic disable(): void {\r\n\t\tthis._enabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable dispatching particular event, if it was disabled before by\r\n\t * `disableType()`.\r\n\t *\r\n\t * @param type Event type\r\n\t */\r\n\tpublic enableType<Key extends keyof T>(type: Key): void {\r\n\t\tdelete this._disabled[type];\r\n\t}\r\n\r\n\t/**\r\n\t * Disable dispatching of events for a certain event type.\r\n\t *\r\n\t * Optionally, can set how many dispatches to skip before automatically\r\n\t * re-enabling the dispatching.\r\n\t *\r\n\t * @param type    Event type\r\n\t * @param amount  Number of event dispatches to skip\r\n\t */\r\n\tpublic disableType<Key extends keyof T>(type: Key, amount: number = Infinity): void {\r\n\t\tthis._disabled[type] = amount;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes listener from dispatcher.\r\n\t *\r\n\t * Will throw an exception if such listener does not exists.\r\n\t *\r\n\t * @param listener Listener to remove\r\n\t */\r\n\tprotected _removeListener(listener: EventListener<T>): void {\r\n\t\tif (this._iterating === 0) {\r\n\t\t\tconst index = this._listeners.indexOf(listener);\r\n\r\n\t\t\tif (index === -1) {\r\n\t\t\t\tthrow new Error(\"Invalid state: could not remove listener\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._listeners.splice(index, 1);\r\n\r\n\t\t} else {\r\n\t\t\tthis._killed.push(listener);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes existing listener by certain parameters.\r\n\t *\r\n\t * @param once         Listener's once setting\r\n\t * @param type         Listener's type\r\n\t * @param callback     Callback function\r\n\t * @param context      Callback context\r\n\t */\r\n\tprotected _removeExistingListener<A, B, Key extends keyof T>(once: boolean, type: Key | null, callback?: A, context?: B): void {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tthis._eachListener((info) => {\r\n\t\t\tif (info.once === once && // TODO is this correct ?\r\n\t\t\t\tinfo.type === type &&\r\n\t\t\t\t(callback == null || info.callback === callback) &&\r\n\t\t\t\tinfo.context === context) {\r\n\t\t\t\tinfo.disposer.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if dispatching for particular event type is enabled.\r\n\t *\r\n\t * @param type  Event type\r\n\t * @return Enabled?\r\n\t */\r\n\tpublic isEnabled<Key extends keyof T>(type: Key): boolean {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\t// TODO is this check correct ?\r\n\t\treturn this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] == null;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there's already a listener with specific parameters.\r\n\t *\r\n\t * @param type      Listener's type\r\n\t * @param callback  Callback function\r\n\t * @param context   Callback context\r\n\t * @return Has listener?\r\n\t */\r\n\tpublic has<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): boolean {\r\n\t\tconst index = $array.findIndex(this._listeners, (info) => {\r\n\t\t\treturn info.once !== true && // Ignoring \"once\" listeners\r\n\t\t\t\tinfo.type === type &&\r\n\t\t\t\t(callback == null || info.callback === callback) &&\r\n\t\t\t\tinfo.context === context;\r\n\t\t});\r\n\r\n\t\treturn index !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether event of the particular type should be dispatched.\r\n\t *\r\n\t * @param type  Event type\r\n\t * @return Dispatch?\r\n\t */\r\n\tprotected _shouldDispatch<Key extends keyof T>(type: Key): boolean {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tconst count = this._disabled[type];\r\n\r\n\t\tif (!$type.isNumber(count)) {\r\n\t\t\treturn this._enabled;\r\n\r\n\t\t} else {\r\n\t\t\tif (count <= 1) {\r\n\t\t\t\tdelete this._disabled[type];\r\n\r\n\t\t\t} else {\r\n\t\t\t\t--this._disabled[type];\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_eachListener description]\r\n\t *\r\n\t * All of this extra code is needed when a listener is removed while iterating\r\n\t *\r\n\t * @todo Description\r\n\t * @param fn [description]\r\n\t */\r\n\tprotected _eachListener(fn: (listener: EventListener<T>) => void): void {\r\n\t\t++this._iterating;\r\n\r\n\t\ttry {\r\n\t\t\t$array.each(this._listeners, fn);\r\n\r\n\t\t} finally {\r\n\t\t\t--this._iterating;\r\n\r\n\t\t\t// TODO should this be inside or outside the finally ?\r\n\t\t\tif (this._iterating === 0 && this._killed.length !== 0) {\r\n\t\t\t\t// Remove killed listeners\r\n\t\t\t\t$array.each(this._killed, (killed) => {\r\n\t\t\t\t\tthis._removeListener(killed);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._killed.length = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event immediately without waiting for next cycle.\r\n\t *\r\n\t * @param type   Event type\r\n\t * @param event  Event object\r\n\t * @todo automatically add in type and target properties if they are missing\r\n\t */\r\n\tpublic dispatchImmediately<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n\t\tif (this._shouldDispatch(type)) {\r\n\t\t\t// TODO check if it's faster to use an object of listeners rather than a single big array\r\n\t\t\t// TODO if the function throws, maybe it should keep going ?\r\n\t\t\tthis._eachListener((listener) => {\r\n\t\t\t\tif (!listener.killed && (listener.type === null || listener.type === type)) {\r\n\t\t\t\t\tlistener.dispatch(type, event);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shelves the event to be dispatched within next update cycle.\r\n\t *\r\n\t * @param type   Event type\r\n\t * @param event  Event object\r\n\t * @todo automatically add in type and target properties if they are missing\r\n\t */\r\n\tpublic dispatch<Key extends keyof T>(type: Key, event: T[Key]): void {\r\n\t\tif (this._shouldDispatch(type)) {\r\n\t\t\tthis._eachListener((listener) => {\r\n\t\t\t\t// TODO check if it's faster to use an object of listeners rather than a single big array\r\n\t\t\t\tif (!listener.killed && (listener.type === null || listener.type === type)) {\r\n\t\t\t\t\t// TODO if the function throws, maybe it should keep going ?\r\n\t\t\t\t\t// TODO dispatch during the update cycle, rather than using whenIdle\r\n\t\t\t\t\t$async.whenIdle(() => {\r\n\t\t\t\t\t\tif (!listener.killed) {\r\n\t\t\t\t\t\t\tlistener.dispatch(type, event);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates, catalogs and returns an [[EventListener]].\r\n\t *\r\n\t * Event listener can be disposed.\r\n\t *\r\n\t * @param once         Listener's once setting\r\n\t * @param type         Listener's type\r\n\t * @param callback     Callback function\r\n\t * @param context      Callback context\r\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n\t * @param dispatch\r\n\t * @returns An event listener\r\n\t */\r\n\tprotected _on<A, B, Key extends keyof T>(once: boolean, type: Key | null, callback: A, context: B, shouldClone: boolean, dispatch: (type: Key, event: T[Key]) => void): EventListener<T> {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tthis._removeExistingListener(once, type, callback, context);\r\n\r\n\t\tconst info: EventListener<T> = {\r\n\t\t\ttype: type,\r\n\t\t\tcallback: callback,\r\n\t\t\tcontext: context,\r\n\t\t\tshouldClone: shouldClone,\r\n\t\t\tdispatch: <any>dispatch,\r\n\t\t\tkilled: false,\r\n\t\t\tonce: once,\r\n\t\t\tdisposer: new Disposer(() => {\r\n\t\t\t\tinfo.killed = true;\r\n\t\t\t\tthis._removeListener(info);\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tthis._listeners.push(info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an event listener to be invoked on **any** event.\r\n\t *\r\n\t * @param callback     Callback function\r\n\t * @param context      Callback context\r\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n\t * @returns A disposable event listener\r\n\t * @todo what if `listen` is called on the same function twice ?\r\n\t */\r\n\tpublic onAll<C, Key extends keyof T>(callback: (this: C, type: Key, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\r\n\t\treturn this._on(false, null, callback, context, shouldClone, (type, event) => callback.call(context, type, event)).disposer;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an event listener to be invoked on a specific event type.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.events.on(\"hidden\", (ev) => {\r\n\t *   console.log(\"Series hidden: \" + ev.target.name);\r\n\t * }, this);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.events.on(\"hidden\", function(ev) {\r\n\t *   console.log(\"Series hidden: \" + ev.target.name);\r\n\t * }, this);\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"events\": {\r\n\t *     \t\"hidden\": function(ev) {\r\n\t *     \t  console.log(\"Series hidden: \" + ev.target.name);\r\n\t *     \t}\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will invoke our custom event handler whenever series we put\r\n\t * event on is hidden.\r\n\t *\r\n\t * @param type         Listener's type\r\n\t * @param callback     Callback function\r\n\t * @param context      Callback context\r\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n\t * @returns A disposable event listener\r\n\t * @todo what if `listen` is called on the same function twice ?\r\n\t */\r\n\tpublic on<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\r\n\t\treturn this._on(false, type, callback, context, shouldClone, (type, event) => callback.call(context, event)).disposer;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an event listener to be invoked on a specific event type once.\r\n\t *\r\n\t * Once the event listener is invoked, it is automatically disposed.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.events.on(\"hidden\", (ev) => {\r\n\t *   console.log(\"Series hidden: \" + ev.target.name);\r\n\t * }, this);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.events.on(\"hidden\", function(ev) {\r\n\t *   console.log(\"Series hidden: \" + ev.target.name);\r\n\t * }, this);\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"events\": {\r\n\t *     \t\"hidden\": function(ev) {\r\n\t *     \t  console.log(\"Series hidden: \" + ev.target.name);\r\n\t *     \t}\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will invoke our custom event handler the first time series we\r\n\t * put event on is hidden.\r\n\t *\r\n\t * @param type         Listener's type\r\n\t * @param callback     Callback function\r\n\t * @param context      Callback context\r\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n\t * @returns A disposable event listener\r\n\t * @todo what if `listen` is called on the same function twice ?\r\n\t */\r\n\tpublic once<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\r\n\t\tconst x = this._on(true, type, callback, context, shouldClone, (type, event) => {\r\n\t\t\tx.disposer.dispose();\r\n\t\t\tcallback.call(context, event)\r\n\t\t});\r\n\r\n\t\t// TODO maybe this should return a different Disposer ?\r\n\t\treturn x.disposer;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the event listener with specific parameters.\r\n\t *\r\n\t * @param type         Listener's type\r\n\t * @param callback     Callback function\r\n\t * @param context      Callback context\r\n\t */\r\n\tpublic off<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): void {\r\n\t\tthis._removeExistingListener(false, type, callback, context);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all dispatcher parameters, including listeners, from another event\r\n\t * dispatcher.\r\n\t *\r\n\t * @param source Source event dispatcher\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tif (source === this) {\r\n\t\t\tthrow new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n\t\t}\r\n\r\n\t\t$array.each(source._listeners, (x) => {\r\n\t\t\t// TODO is this correct ?\r\n\t\t\tif (!x.killed && x.shouldClone) {\r\n\t\t\t\tif (x.type === null) {\r\n\t\t\t\t\tthis.onAll(x.callback, x.context);\r\n\r\n\t\t\t\t} else if (x.once) {\r\n\t\t\t\t\tthis.once(x.type, x.callback, x.context);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.on(x.type, x.callback, x.context);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @important\r\n */\r\nexport class TargetedEventDispatcher<Target, T> extends EventDispatcher<T> {\r\n\r\n\t/**\r\n\t * A target object which is originating events using this dispatcher.\r\n\t */\r\n\tpublic target: Target;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param target Event dispatcher target\r\n\t */\r\n\tconstructor(target: Target) {\r\n\t\tsuper();\r\n\t\tthis.target = target;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all dispatcher parameters, including listeners, from another event\r\n\t * dispatcher.\r\n\t *\r\n\t * @param source Source event dispatcher\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tif (this._disposed) {\r\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\r\n\t\t}\r\n\r\n\t\tif (source === this) {\r\n\t\t\tthrow new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n\t\t}\r\n\r\n\t\t$array.each(source._listeners, (x) => {\r\n\t\t\t// TODO very hacky\r\n\t\t\tif (x.context === source.target) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// TODO is this correct ?\r\n\t\t\tif (!x.killed && x.shouldClone) {\r\n\t\t\t\tif (x.type === null) {\r\n\t\t\t\t\tthis.onAll(x.callback, x.context);\r\n\r\n\t\t\t\t} else if (x.once) {\r\n\t\t\t\t\tthis.once(x.type, x.callback, x.context);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.on(x.type, x.callback, x.context);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n","/**\r\n * Paper class just like the white sheet of pressed fiber it draws its name\r\n * inspiration from is used as a starting point to start a drawing.\r\n *\r\n * Before we can start adding elements (drawing) we need to take out a new sheet\r\n * of paper, or in this instance create a blank SVG element.\r\n *\r\n * This class creates such element, as well as implements methods needed to\r\n * start adding elements to it.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AMElement } from \"./AMElement\";\r\nimport { Group } from \"./Group\";\r\nimport { SVGContainer } from \"./SVGContainer\";\r\nimport * as $dom from \"../utils/DOM\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents available SVG elements that can be added to paper.\r\n *\r\n * @todo Review if we can remove commented out methods\r\n */\r\nexport type SVGElementNames = \"a\" | \"altGlyph\" | \"altGlyphDef\" | \"altGlyphItem\" | \"animate\" | \"animateColor\" | \"animateMotion\" | \"animateTransform\" | \"circle\" | \"clipPath\" | \"color-profile\" | \"cursor\" | \"defs\" | \"desc\" | \"ellipse\" | \"feBlend\" | \"feColorMatrix\" | \"feComponentTransfer\" | \"feComposite\" | \"feConvolveMatrix\" | \"feDiffuseLighting\" | \"feDisplacementMap\" | \"feDistantLight\" | \"feFlood\" | \"feFuncA\" | \"feFuncB\" | \"feFuncG\" | \"feFuncR\" | \"feGaussianBlur\" | \"feImage\" | \"feMerge\" | \"feMergeNode\" | \"feMorphology\" | \"feOffset\" | \"fePointLight\" | \"feSpecularLighting\" | \"feSpotLight\" | \"feTile\" | \"feTurbulence\" | \"feConvolveMatrix\" | \"filter\" | \"font\" | \"font-face\" | \"font-face-format\" | \"font-face-name\" | \"font-face-src\" | \"font-face-uri\" | \"foreignObject\" | \"g\" | \"glyph\" | \"glyphRef\" | \"hkern\" | \"image\" | \"line\" | \"linearGradient\" | \"marker\" | \"mask\" | \"metadata\" | \"missing-glyph\" | \"mpath\" | \"path\" | \"pattern\" | \"polygon\" | \"polyline\" | \"radialGradient\" | \"rect\" | \"script\" | \"set\" | \"stop\" | \"style\" | \"svg\" | \"switch\" | \"symbol\" | \"text\" | \"textPath\" | \"title\" | \"tref\" | \"tspan\" | \"use\" | \"view\" | \"vkern\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Paper class which when instantiated will create an SVG element as well as\r\n * some of the sub-elements like `<desc>`, `<defs>`.\r\n *\r\n * Use its methods like `addGroup` and `append` to add elements to the paper.\r\n */\r\nexport class Paper {\r\n\r\n\t/**\r\n\t * A reference `<svg>` element.\r\n\t */\r\n\tpublic svg: SVGSVGElement;\r\n\r\n\t/**\r\n\t * A reference to the HTML container the `<svg>` element is placed in.\r\n\t */\r\n\tpublic container: HTMLElement;\r\n\r\n\t/**\r\n\t * A reference to the `<defs>` element.\r\n\t */\r\n\tpublic defs: SVGDefsElement;\r\n\r\n\t/**\r\n\t * An id of the element.\r\n\t */\r\n\tpublic id: string;\r\n\r\n\t/**\r\n\t * Creates main `<svg>` container and related elements.\r\n\t *\r\n\t * @param container A reference to HTML element to create `<svg>` in\r\n\t */\r\n\tconstructor(container: HTMLElement, id: string) {\r\n\r\n\t\t// Store container reference\r\n\t\tthis.container = container;\r\n\t\tthis.id = id;\r\n\r\n\t\t// Create SVG element\r\n\t\tlet svg = <SVGSVGElement>document.createElementNS($dom.SVGNS, \"svg\");\r\n\t\tsvg.setAttribute(\"version\", \"1.1\");\r\n\t\tsvg.setAttributeNS($dom.XMLNS, \"xmlns\", $dom.SVGNS);\r\n\t\tsvg.setAttributeNS($dom.XMLNS, \"xmlns:xlink\", $dom.XLINK);\r\n\t\tsvg.setAttribute(\"role\", \"group\");\r\n\t\tthis.container.appendChild(svg);\r\n\r\n\t\t// Add description\r\n\t\t//let desc: SVGElement = <SVGElement>document.createElementNS($dom.SVGNS, \"desc\");\r\n\t\t//desc.appendChild(document.createTextNode(\"JavaScript chart by amCharts\"));\r\n\t\t//svg.appendChild(desc);\r\n\r\n\t\t// Add defs\r\n\t\tthis.defs = <SVGDefsElement>document.createElementNS($dom.SVGNS, \"defs\");\r\n\t\tsvg.appendChild(this.defs);\r\n\r\n\t\t// Set width and height to fit container\r\n\t\tsvg.style.width = \"100%\";\r\n\t\tsvg.style.height = \"100%\";\r\n\t\tsvg.style.overflow = \"visible\";\r\n\r\n\t\t// Store variable\r\n\t\tthis.svg = svg;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new element. Does not attach it to Paper yet.\r\n\t *\r\n\t * @param elementName  Element name\r\n\t * @return New element\r\n\t */\r\n\tpublic add(elementName: SVGElementNames): AMElement {\r\n\t\treturn new AMElement(elementName);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Group element. Does not attach it to Paper.\r\n\t *\r\n\t * @param groupName  Element name\r\n\t * @return New Group\r\n\t */\r\n\tpublic addGroup(groupName: SVGElementNames): Group {\r\n\t\treturn new Group(groupName);\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an element to Paper.\r\n\t *\r\n\t * @param element Element to append\r\n\t */\r\n\tpublic append(element: AMElement): void {\r\n\t\tif (element) {\r\n\t\t\tthis.svg.appendChild(element.node);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Appends an element to `<defs>` block of the Paper.\r\n\t *\r\n\t * @param element  Element\r\n\t */\r\n\tpublic appendDef(element: AMElement): void {\r\n\t\tif (element) {\r\n\t\t\tthis.defs.appendChild(element.node);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns new `<foreignObject>` element. Does not append it to\r\n\t * Paper.\r\n\t *\r\n\t * @return A foreignObject element\r\n\t */\r\n\tpublic foreignObject(): AMElement {\r\n\t\tlet element = new AMElement(\"foreignObject\");\r\n\t\t//this.append(element);\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if browser supports `<foreignObject>` elements.\r\n\t *\r\n\t * @return Supports `foreignObject`?\r\n\t */\r\n\tpublic supportsForeignObject(): boolean {\r\n\t\treturn document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#Extensibility\", \"1.1\");\r\n\t}\r\n\r\n}\r\n\r\n\r\nlet ghostPaper: Paper | null = null;\r\n\r\n/**\r\n * A [[Paper]] instance to create elements, that are not yet ready to be\r\n * placed in visible DOM.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function getGhostPaper(): Paper {\r\n\tif (ghostPaper === null) {\r\n\t\t// ghost is used to draw elements while real paper is not yet created or Sprite doesn't know parent yet\r\n\t\tlet ghostDiv: HTMLDivElement = document.createElement(\"div\");\r\n\t\tghostDiv.hidden = true;\r\n\t\tghostDiv.style.width = \"1px\";\r\n\t\tghostDiv.style.height = \"1px\";\r\n\t\tghostDiv.style.position = \"absolute\";\r\n\t\tghostDiv.style.zIndex = \"-1000000\";\r\n\t\tdocument.body.appendChild(ghostDiv);\r\n\t\tlet ghostSvgContainer = new SVGContainer(ghostDiv, true);\r\n\t\tghostPaper = new Paper(ghostSvgContainer.SVGContainer, \"ghost\");\r\n\r\n\t}\r\n\r\n\treturn ghostPaper;\r\n}\r\n","/**\r\n * Duration formatting functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { ITextChunk, getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport { TimeUnit } from \"../defs/TimeUnit\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $math from \"../utils/Math\";\r\n\r\n/**\r\n * DurationFormatter class. Formats numbers as durations.\r\n *\r\n * `1000` as `16:40`\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Tutorial on duration formatting\r\n */\r\nexport class DurationFormatter extends BaseObject {\r\n\r\n\t/**\r\n\t * If set will force this format to be used, regardless of the scale.\r\n\t */\r\n\tprotected _durationFormat: string;\r\n\r\n\t/**\r\n\t * Holds duration formats for various possible scenarios.\r\n\t */\r\n\tprotected _durationFormats: Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>;\r\n\r\n\t/**\r\n\t * A base value for negative numbers. Will treat all numbers below this value\r\n\t * as negative numbers.\r\n\t */\r\n\tprotected _negativeBase: number = 0;\r\n\r\n\t/**\r\n\t * A base unit to consider values are in.\r\n\t *\r\n\t * @default \"s\"\r\n\t */\r\n\tprotected _baseUnit: TimeUnit = \"second\";\r\n\r\n\t/**\r\n\t * Output format to produce. If the format calls for applying color to the\r\n\t * formatted value, this setting will determine what markup to use: SVG or\r\n\t * HTML.\r\n\t *\r\n\t * Available options: svg, html.\r\n\t *\r\n\t * @default \"svg\"\r\n\t */\r\n\tprotected _outputFormat: string = \"svg\";\r\n\r\n\r\n\t/**\r\n\t * How many milliseconds each unit represents.\r\n\t */\r\n\tprotected _unitValues: Record<TimeUnit, number> = {\r\n\t\t\"millisecond\": 1,\r\n\t\t\"second\": 1000,\r\n\t\t\"minute\": 60000,\r\n\t\t\"hour\": 3600000,\r\n\t\t\"day\": 86400000,\r\n\t\t\"week\": 604800000,\r\n\t\t\"month\": 2592000000,\r\n\t\t\"year\": 31536000000,\r\n\t};\r\n\r\n\t/**\r\n\t * Collection of aliases for units.\r\n\t */\r\n\tprotected _unitAliases: { [index: string]: string } = {\r\n\t\t\"Y\": \"y\",\r\n\t\t\"D\": \"d\",\r\n\t\t\"H\": \"h\",\r\n\t\t\"K\": \"h\",\r\n\t\t\"k\": \"h\",\r\n\t\t\"n\": \"S\"\r\n\t};\r\n\r\n\t/**\r\n\t * Holds reference to parent [[Sprite]] object.\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Language]] object.\r\n\t */\r\n\tpublic language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DurationFormatter\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the number according as duration.\r\n\t *\r\n\t * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n\t * 16 minutes and 40 seconds.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Tutorial on duration formatting\r\n\t * @param value   Value to format\r\n\t * @param format  Format to apply\r\n\t * @param base    Override base unit\r\n\t * @return Formatted number\r\n\t */\r\n\tpublic format(value: number | string, format?: string, base?: TimeUnit): string {\r\n\r\n\t\t// no language?\r\n\t\tif (!this.language) {\r\n\t\t\tif (this.sprite) {\r\n\t\t\t\tthis.language = this.sprite.language;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.language = new Language;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this._baseUnit;\r\n\r\n\t\t// no format passed in or empty\r\n\t\tif (typeof format === \"undefined\" || format === \"\") {\r\n\t\t\tif ($type.hasValue(this.durationFormat)) {\r\n\t\t\t\tformat = this.durationFormat;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tformat = this.getFormat($type.toNumber(value), null, baseUnit);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Clean format\r\n\t\tformat = $utils.cleanFormat(format);\r\n\r\n\t\t// get format info (it will also deal with parser caching)\r\n\t\tlet info = this.parseFormat(format, baseUnit);\r\n\r\n\t\t// cast to number just in case\r\n\t\t// TODO: maybe use better casting\r\n\t\tlet source: number = Number(value);\r\n\r\n\t\t// format and replace the number\r\n\t\tlet details;\r\n\t\tif (source > this._negativeBase) {\r\n\t\t\tdetails = info.positive;\r\n\t\t}\r\n\t\telse if (source < this._negativeBase) {\r\n\t\t\tdetails = info.negative;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdetails = info.zero;\r\n\t\t}\r\n\r\n\r\n\t\t// Format\r\n\t\tlet formatted = this.applyFormat(source, details);\r\n\r\n\t\t// Apply color?\r\n\t\tif (details.color !== \"\") {\r\n\t\t\tif (this._outputFormat === \"svg\") {\r\n\t\t\t\tformatted = \"<tspan fill='\" + details.color + \"'>\" + formatted + \"</tspan>\";\r\n\t\t\t}\r\n\t\t\telse if (this._outputFormat === \"html\") {\r\n\t\t\t\tformatted = \"<span style='color: \" + details.color + \";'>\" + formatted + \"</span>\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn formatted;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses supplied format into structured object which can be used to format\r\n\t * the number.\r\n\t *\r\n\t * @param format  Format string, i.e. \"#,###.00\"\r\n\t * @param base    Override base unit\r\n\t * @return Parsed information\r\n\t */\r\n\tprotected parseFormat(format: string, base?: TimeUnit): any {\r\n\r\n\t\t// Check cache\r\n\t\tlet cached = this.getCache(format);\r\n\t\tif ($type.hasValue(cached)) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this._baseUnit;\r\n\r\n\t\t// Initialize duration parsing info\r\n\t\tlet info = {\r\n\t\t\t\"positive\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"negative\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"zero\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Escape double vertical bars (that mean display one vertical bar)\r\n\t\tformat = format.replace(\"||\", $strings.PLACEHOLDER2);\r\n\r\n\t\t// Split it up and deal with different formats\r\n\t\tlet parts = format.split(\"|\");\r\n\t\tinfo.positive.source = parts[0];\r\n\r\n\t\tif (typeof parts[2] === \"undefined\") {\r\n\t\t\tinfo.zero = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.zero.source = parts[2];\r\n\t\t}\r\n\r\n\t\tif (typeof parts[1] === \"undefined\") {\r\n\t\t\tinfo.negative = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.negative.source = parts[1];\r\n\t\t}\r\n\r\n\t\t// Parse each\r\n\t\t$object.each(info, (part, item) => {\r\n\t\t\t// Already parsed\r\n\t\t\tif (item.parsed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check cached\r\n\t\t\tif (typeof this.getCache(item.source) !== \"undefined\") {\r\n\t\t\t\tinfo[part] = this.getCache(item.source);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Begin parsing\r\n\t\t\tlet partFormat: string = item.source;\r\n\r\n\t\t\t// Check for [] directives\r\n\t\t\tlet dirs: string[] | null = [];\r\n\t\t\tdirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n\t\t\tif (dirs && dirs.length && dirs[0] !== \"\") {\r\n\t\t\t\tpartFormat = item.source.substr(dirs[0].length);\r\n\t\t\t\titem.color = dirs[1];\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Let TextFormatter split into chunks\r\n\t\t\tlet chunks: ITextChunk[] = getTextFormatter().chunk(partFormat, true);\r\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\t\tlet chunk: ITextChunk = chunks[i];\r\n\r\n\t\t\t\t// replace back double vertical bar\r\n\t\t\t\tchunk.text = chunk.text.replace($strings.PLACEHOLDER2, \"|\");\r\n\r\n\t\t\t\tif (chunk.type === \"value\") {\r\n\r\n\t\t\t\t\t// Just \"Duration\"?\r\n\t\t\t\t\t// if (chunk.text.toLowerCase() === \"duration\") {\r\n\t\t\t\t\t// \tchunk.text = durationFormat;\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t// Check for \"a\" (absolute) modifier\r\n\t\t\t\t\tif (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n\t\t\t\t\t\titem.absolute = true;\r\n\t\t\t\t\t\tchunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Find all possible parts\r\n\t\t\t\t\tlet matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t// Populate template\r\n\t\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\r\n\t\t\t\t\t\t\t// Is it an alias?\r\n\t\t\t\t\t\t\tif (!$type.hasValue(matches[x])) {\r\n\t\t\t\t\t\t\t\tmatches[x] = this._unitAliases[matches[x]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\titem.parts.push(matches[x]);\r\n\t\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $strings.PLACEHOLDER);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply to template\r\n\t\t\t\titem.template += chunk.text;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply style formatting\r\n\t\t\t//item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n\r\n\t\t\t// Save cache\r\n\t\t\tthis.setCache(item.source, item);\r\n\r\n\t\t\t// Mark this as parsed\r\n\t\t\titem.parsed = true;\r\n\t\t});\r\n\r\n\t\t// Save cache (the whole thing)\r\n\t\tthis.setCache(format, info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies parsed format to a numeric value.\r\n\t *\r\n\t * @param value    Value\r\n\t * @param details  Parsed format as returned by {parseFormat}\r\n\t * @return Formatted duration\r\n\t */\r\n\tprotected applyFormat(value: number, details: any): string {\r\n\r\n\t\t// Use absolute values\r\n\t\tlet negative: boolean = !details.absolute && (value < this._negativeBase);\r\n\t\tvalue = Math.abs(value);\r\n\r\n\t\t// Recalculate to milliseconds\r\n\t\tlet tstamp: number = this.toTimeStamp(value, details.baseUnit);\r\n\r\n\t\t// Init return value\r\n\t\tlet res: string = details.template;\r\n\r\n\t\t// Iterate through duration parts\r\n\t\tfor (let i = 0, len = details.parts.length; i < len; i++) {\r\n\r\n\t\t\t// Gather the part\r\n\t\t\tlet part: string = details.parts[i];\r\n\t\t\tlet unit: TimeUnit = this.toTimeUnit(part.substr(0, 1));\r\n\t\t\tlet digits: number = part.length;\r\n\r\n\t\t\t// Calculate current unit value\r\n\t\t\tlet ints: number = Math.floor(tstamp / this._unitValues[unit]);\r\n\t\t\tres = res.replace($strings.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n\r\n\t\t\t// Reduce timestamp\r\n\t\t\ttstamp -= ints * this._unitValues[unit];\r\n\t\t}\r\n\r\n\t\t// Reapply negative sign\r\n\t\tif (negative) {\r\n\t\t\tres = \"-\" + res;\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value to timestamp in milliseconds.\r\n\t *\r\n\t * @param value     A source value\r\n\t * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n\t * @return Value representation as a timestamp in milliseconds\r\n\t */\r\n\tpublic toTimeStamp(value: number, baseUnit: TimeUnit): number {\r\n\t\treturn value * this._unitValues[baseUnit];\r\n\t}\r\n\r\n\tprotected toTimeUnit(code: string): Optional<TimeUnit> {\r\n\t\tswitch (code) {\r\n\t\t\tcase \"S\":\r\n\t\t\t\treturn \"millisecond\";\r\n\t\t\tcase \"s\":\r\n\t\t\t\treturn \"second\";\r\n\t\t\tcase \"m\":\r\n\t\t\t\treturn \"minute\";\r\n\t\t\tcase \"h\":\r\n\t\t\t\treturn \"hour\";\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn \"day\";\r\n\t\t\tcase \"w\":\r\n\t\t\t\treturn \"week\";\r\n\t\t\tcase \"M\":\r\n\t\t\t\treturn \"month\";\r\n\t\t\tcase \"y\":\r\n\t\t\t\treturn \"year\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the parent [[Sprite]] object.\r\n\t */\r\n\tprotected invalidateSprite(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis.sprite.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Base unit the values are in.\r\n\t *\r\n\t * A base unit will be used to recalculate the numeric value to millisecond\r\n\t * timestamps.\r\n\t *\r\n\t * Available options:\r\n\t *\r\n\t * * \"millisecond\"\r\n\t * * \"second\"\r\n\t * * \"minute\"\r\n\t * * \"hour\"\r\n\t * * \"day\"\r\n\t * * \"week\"\r\n\t * * \"month\"\r\n\t * * \"year\"\r\n\t *\r\n\t * @default \"s\"\r\n\t * @param baseUnit  A base unit\r\n\t */\r\n\tpublic set baseUnit(baseUnit: TimeUnit) {\r\n\t\tthis._baseUnit = baseUnit;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Base unit\r\n\t */\r\n\tpublic get baseUnit(): TimeUnit {\r\n\t\treturn this._baseUnit;\r\n\t}\r\n\r\n\t/**\r\n\t * Setter for output format: \"svg\" or \"html.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Output format\r\n\t */\r\n\tpublic set outputFormat(outputFormat: string) {\r\n\t\tthis._outputFormat = outputFormat.toLowerCase();\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * Getter for output format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Output format\r\n\t */\r\n\tpublic get outputFormat(): string {\r\n\t\treturn this._outputFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns appropriate default format for the value.\r\n\t *\r\n\t * If `maxValue` is sepcified, it will use that value to determine the time\r\n\t * unit for the format.\r\n\t *\r\n\t * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n\t * will get `\"10\"`.\r\n\t *\r\n\t * However, you might want it to be formatted in the context of bigger scale,\r\n\t * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n\t * values, including small ones will use format with minutes, e.g.:\r\n\t * `00:10`, `00:50`, `12: 30`, etc.\r\n\t *\r\n\t * @param value     Value to format\r\n\t * @param maxValue  Maximum value to be used to determine format\r\n\t * @param baseUnit  Base unit of the value\r\n\t * @return Format\r\n\t */\r\n\tpublic getFormat(value: number, maxValue?: number, baseUnit?: TimeUnit): string {\r\n\r\n\t\t// Is format override set?\r\n\t\tif ($type.hasValue(this.durationFormat)) {\r\n\t\t\treturn this.durationFormat;\r\n\t\t}\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.baseUnit;\r\n\t\t}\r\n\r\n\t\tif ($type.hasValue(maxValue) && value != maxValue) {\r\n\t\t\tvalue = Math.abs(value);\r\n\t\t\tmaxValue = Math.abs(maxValue);\r\n\t\t\tlet maxUnit = this.getValueUnit($math.max(value, maxValue), baseUnit);\r\n\t\t\t//let diffUnit = this.getValueUnit(Math.abs(maxValue - value), baseUnit);\r\n\t\t\t//console.log(maxUnit, diffUnit);\r\n\t\t\treturn this.durationFormats[baseUnit][maxUnit];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet unit = this.getValueUnit(value, baseUnit);\r\n\t\t\treturn this.durationFormats[baseUnit][unit];\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value's closest denominator time unit, e.g 100 seconds is\r\n\t * `\"minute\"`, while 59 seconds would still be `second`.\r\n\t *\r\n\t * @param value     Source duration value\r\n\t * @param baseUnit  Base unit\r\n\t * @return Denominator\r\n\t */\r\n\tpublic getValueUnit(value: number, baseUnit?: TimeUnit): TimeUnit {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.baseUnit;\r\n\t\t}\r\n\r\n\t\t// Convert to milliseconds\r\n\t\tlet currentUnit: TimeUnit;\r\n\t\tlet ms = this.getMilliseconds(value, baseUnit);\r\n\t\t$object.eachContinue(this._unitValues, (key, val) => {\r\n\t\t\tif (key == baseUnit || currentUnit) {\r\n\t\t\t\tlet num = ms / val;\r\n\t\t\t\tif (num <= 1) {\r\n\t\t\t\t\tif (!currentUnit) {\r\n\t\t\t\t\t\tcurrentUnit = key;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tcurrentUnit = key;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\treturn currentUnit;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts value to milliseconds according to `baseUnit`.\r\n\t *\r\n\t * @param value     Source duration value\r\n\t * @param baseUnit  Base unit\r\n\t * @return Value in milliseconds\r\n\t */\r\n\tpublic getMilliseconds(value: number, baseUnit?: TimeUnit): number {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.baseUnit;\r\n\t\t}\r\n\r\n\t\treturn value * this._unitValues[baseUnit];\r\n\t}\r\n\r\n\t/**\r\n\t * If set, this format will be used instead of the one determined dynamically\r\n\t * based on the basedUnit and range of values.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Available fomatting codes\r\n\t * @param value  Format\r\n\t */\r\n\tpublic set durationFormat(value: string) {\r\n\t\tif (this._durationFormat != value) {\r\n\t\t\tthis._durationFormat = value;\r\n\t\t\tthis.invalidateSprite();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Format\r\n\t */\r\n\tpublic get durationFormat(): Optional<string> {\r\n\t\treturn this._durationFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Duration formats for various combination of base units.\r\n\t *\r\n\t * @param value  Formats\r\n\t */\r\n\tpublic set durationFormats(value: Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>) {\r\n\t\tthis._durationFormats = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Formats\r\n\t */\r\n\tpublic get durationFormats(): Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>> {\r\n\t\tif (!this._durationFormats) {\r\n\t\t\tthis._durationFormats = {\r\n\t\t\t\t\"millisecond\": {\r\n\t\t\t\t\t\"millisecond\": this.language.translate(\"_duration_millisecond\"),\r\n\t\t\t\t\t\"second\": this.language.translate(\"_duration_millisecond_second\"),\r\n\t\t\t\t\t\"minute\": this.language.translate(\"_duration_millisecond_minute\"),\r\n\t\t\t\t\t\"hour\": this.language.translate(\"_duration_millisecond_hour\"),\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_millisecond_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_millisecond_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_millisecond_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_millisecond_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"second\": {\r\n\t\t\t\t\t\"second\": this.language.translate(\"_duration_second\"),\r\n\t\t\t\t\t\"minute\": this.language.translate(\"_duration_second_minute\"),\r\n\t\t\t\t\t\"hour\": this.language.translate(\"_duration_second_hour\"),\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_second_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_second_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_second_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_second_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"minute\": {\r\n\t\t\t\t\t\"minute\": this.language.translate(\"_duration_minute\"),\r\n\t\t\t\t\t\"hour\": this.language.translate(\"_duration_minute_hour\"),\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_minute_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_minute_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_minute_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_minute_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"hour\": {\r\n\t\t\t\t\t\"hour\": this.language.translate(\"_duration_hour\"),\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_hour_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_hour_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_hour_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_hour_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"day\": {\r\n\t\t\t\t\t\"day\": this.language.translate(\"_duration_day\"),\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_day_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_day_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_day_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"week\": {\r\n\t\t\t\t\t\"week\": this.language.translate(\"_duration_week\"),\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_week_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_week_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"month\": {\r\n\t\t\t\t\t\"month\": this.language.translate(\"_duration_month\"),\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_month_year\")\r\n\t\t\t\t},\r\n\t\t\t\t\"year\": {\r\n\t\t\t\t\t\"year\": this.language.translate(\"_duration_year\")\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn this._durationFormats;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DurationFormatter\"] = DurationFormatter;\r\n","/**\r\n * Handles date and time formatting\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Language, ILocaleProperties } from \"../utils/Language\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { ITextChunk, getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $time from \"../utils/Time\";\r\n\r\n/**\r\n * Interface describing parsed date format definition.\r\n */\r\nexport interface DateFormatInfo {\r\n\t\"template\": string;\r\n\t\"parts\": any[];\r\n}\r\n\r\n/**\r\n * Month names.\r\n */\r\nexport type MonthNames = \"January\" | \"February\" | \"March\" | \"April\" | \"May\" | \"June\" | \"July\" | \"August\" | \"September\" | \"October\" | \"November\" | \"December\";\r\n\r\n/**\r\n * Short month names.\r\n *\r\n * @param {string}\r\n */\r\nexport type ShortMonthNames = \"Jan\" | \"Feb\" | \"Mar\" | \"Apr\" | \"May(short)\" | \"Jun\" | \"Jul\" | \"Aug\" | \"Sep\" | \"Oct\" | \"Nov\" | \"Dec\";\r\n\r\n/**\r\n * Weekedays.\r\n */\r\nexport type Weekdays = \"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\";\r\n\r\n/**\r\n * Short weekday names.\r\n */\r\nexport type ShortWeekdays = \"Sun\" | \"Mon\" | \"Tue\" | \"Wed\" | \"Thu\" | \"Fri\" | \"Sat\";\r\n\r\n/**\r\n * Handles date and time formatting.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/} Tutorial on date/time formatting\r\n * @todo Better type casting of passed in date?\r\n * @todo Quarter support?\r\n * @todo When parsing named months make the search case-insensitive\r\n * @todo Escape a.m./p.m. properly when used in RegEx\r\n */\r\nexport class DateFormatter extends BaseObject {\r\n\r\n\t/**\r\n\t * Date format.\r\n\t */\r\n\tprotected _dateFormat: string | Intl.DateTimeFormatOptions = \"yyyy-MM-dd\";\r\n\r\n\t/**\r\n\t * Locales to use when formatting using Intl.DateFormatter\r\n\t */\r\n\tprotected _intlLocales: string;\r\n\r\n\t/**\r\n\t * Input date format.\r\n\t */\r\n\tprotected _inputDateFormat: string = \"yyyy-MM-dd\";\r\n\r\n\t/**\r\n\t * Assume UTC time zone.\r\n\t */\r\n\tprotected _utc: boolean = false;\r\n\r\n\t/**\r\n\t * Timezone offset.\r\n\t */\r\n\tprotected _timezoneOffset: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Timezone.\r\n\t */\r\n\tprotected _timezone: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * If `timezone` is set, this will hold minute fraction of the timezone.\r\n\t * \r\n\t * @readonly\r\n\t * @ignore\r\n\t */\r\n\tpublic timezoneMinutes: number = 0;\r\n\r\n\t/**\r\n\t * First day of week.\r\n\t *\r\n\t * 0 - Sunday\r\n\t * 1 - Monday\r\n\t *\r\n\t * Etc.\r\n\t */\r\n\tprotected _firstDayOfWeek: number = 1;\r\n\r\n\t/**\r\n\t * A list of month names.\r\n\t */\r\n\tpublic months: Array<MonthNames> = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n\t/**\r\n\t * A list of short month names.\r\n\t */\r\n\tpublic monthsShort: Array<ShortMonthNames> = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n\t/**\r\n\t * A list of weekday names.\r\n\t */\r\n\tpublic weekdays: Array<Weekdays> = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n\t/**\r\n\t * A list of short weekday names.\r\n\t */\r\n\tpublic weekdaysShort: Array<ShortWeekdays> = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n\t/**\r\n\t * Output format to produce. If the format calls for applying color to the\r\n\t * formatted value, this setting will determine what markup to use: SVG or\r\n\t * HTML.\r\n\t *\r\n\t * Available options: svg, html.\r\n\t *\r\n\t * @default \"svg\"\r\n\t */\r\n\tprotected _outputFormat: string = \"svg\";\r\n\r\n\t/**\r\n\t * Holds reference to parent [[Sprite]] object.\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Language]] object.\r\n\t */\r\n\tpublic _language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * Should the first letter of the formatted date be capitalized?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic capitalize: boolean = true;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"DateFormatter\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to [[Language]] object.\r\n\t *\r\n\t * @param  value  Language\r\n\t */\r\n\tpublic set language(value: $type.Optional<Language>) {\r\n\t\tthis._language = value;\r\n\t\tthis.dateFormat = this._language.translate(\"_date\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Language\r\n\t */\r\n\tpublic get language(): $type.Optional<Language> {\r\n\t\treturn this._language;\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the date value according to specified format.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/} Tutorial on date/time formatting\r\n\t * @param source  Date value\r\n\t * @param format  Format\r\n\t * @return Formatted date string\r\n\t */\r\n\tpublic format(source: any, format?: string | Intl.DateTimeFormatOptions, applyTimezone?: boolean): string {\r\n\r\n\t\t// No language?\r\n\t\tif (!this.language) {\r\n\t\t\tif (this.sprite) {\r\n\t\t\t\tthis.language = this.sprite.language;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.language = new Language();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// No format passed in or it's empty\r\n\t\tif (typeof format === \"undefined\" || format === \"\") {\r\n\t\t\tformat = this._dateFormat;\r\n\t\t}\r\n\r\n\t\t// Init return value\r\n\t\tlet formatted;\r\n\r\n\t\t// Do casting if required\r\n\t\t// This will take care of timestamps as well as Date objects\r\n\t\tlet date: Date;\r\n\t\tif ($type.isString(source)) {\r\n\t\t\t// If it's a string, let's try parsing it using our own functionality\r\n\t\t\tdate = this.parse(source);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdate = $utils.anyToDate(source);\r\n\t\t}\r\n\r\n\t\t// Is it a built-in format or Intl.DateTimeFormat\r\n\t\tif ($type.isObject(format)) {\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (this.intlLocales) {\r\n\t\t\t\t\treturn new Intl.DateTimeFormat(this.intlLocales, <Intl.DateTimeFormatOptions>format).format(date);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn new Intl.DateTimeFormat(undefined, <Intl.DateTimeFormatOptions>format).format(date);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\treturn \"Invalid\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Clean format\r\n\t\t\tformat = $utils.cleanFormat(format);\r\n\r\n\t\t\t// get format info (it will also deal with parser caching)\r\n\t\t\tlet info = this.parseFormat(format);\r\n\r\n\t\t\t// Should we apply custom time zone?\r\n\t\t\tif ($type.hasValue(this.timezoneOffset)) {\r\n\t\t\t\tdate.setMinutes(date.getMinutes() + date.getTimezoneOffset() - this.timezoneOffset);\r\n\t\t\t}\r\n\t\t\telse if ($type.hasValue(this.timezone) && applyTimezone !== false) {\r\n\t\t\t\tdate = $time.setTimezone(date, this.timezone);\r\n\t\t\t}\r\n\r\n\t\t\t// Check if it's a valid date\r\n\t\t\tif (!$type.isNumber(date.getTime())) {\r\n\t\t\t\treturn this.language.translate(\"Invalid date\");\r\n\t\t\t}\r\n\r\n\t\t\t// Apply format\r\n\t\t\tformatted = this.applyFormat(date, info, this.language);\r\n\r\n\t\t\t// Capitalize\r\n\t\t\tif (this.capitalize) {\r\n\t\t\t\tformatted = formatted.replace(\r\n\t\t\t\t\t/^.{1}/, formatted.substr(0, 1).toUpperCase()\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// We're done\r\n\t\treturn formatted;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses format into structured infromation.\r\n\t *\r\n\t * @param format Format template\r\n\t */\r\n\tprotected parseFormat(format: string): DateFormatInfo {\r\n\r\n\t\t// Check cache\r\n\t\tlet cached = this.getCache(format);\r\n\t\tif ($type.hasValue(cached)) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\r\n\t\t// Init format parse info holder\r\n\t\tlet info: DateFormatInfo = {\r\n\t\t\t\"template\": \"\",\r\n\t\t\t\"parts\": <any>[]\r\n\t\t};\r\n\r\n\t\t// Let TextFormatter split into chunks\r\n\t\tlet chunks: ITextChunk[] = getTextFormatter().chunk(format, true);\r\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\tlet chunk: ITextChunk = chunks[i];\r\n\r\n\t\t\tif (chunk.type === \"value\") {\r\n\r\n\t\t\t\t// Just \"Date\"?\r\n\t\t\t\tif (chunk.text.match(/^date$/i) && $type.isString(this._dateFormat)) {\r\n\t\t\t\t\tchunk.text = this._dateFormat;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Find all possible parts\r\n\t\t\t\tlet matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n\r\n\t\t\t\t// Found?\r\n\t\t\t\tif (matches) {\r\n\r\n\t\t\t\t\t// Populate template\r\n\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\r\n\t\t\t\t\t\tinfo.parts.push(matches[x]);\r\n\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $strings.PLACEHOLDER);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Apply to template\r\n\t\t\tinfo.template += chunk.text;\r\n\t\t}\r\n\r\n\t\t// Apply style formatting\r\n\t\t//info.template = getTextFormatter().format(info.template, this.outputFormat);\r\n\r\n\t\t// Save cache\r\n\t\tthis.setCache(format, info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies format to Date.\r\n\t *\r\n\t * @param date      Date object\r\n\t * @param info      Parsed format information\r\n\t * @param language  Language\r\n\t * @return Formatted date string\r\n\t */\r\n\tprotected applyFormat(date: Date, info: DateFormatInfo, language: Language): string {\r\n\r\n\t\t// Init return value\r\n\t\tlet res = info.template;\r\n\r\n\t\t// Get values\r\n\t\tlet fullYear: number,\r\n\t\t\tmonth: number,\r\n\t\t\tweekday: number,\r\n\t\t\tday: number,\r\n\t\t\thours: number,\r\n\t\t\tminutes: number,\r\n\t\t\tseconds: number,\r\n\t\t\tmilliseconds: number,\r\n\t\t\toffset: number = date.getTimezoneOffset(),\r\n\t\t\ttimestamp: number = date.getTime();\r\n\t\tif (this.utc) {\r\n\t\t\tfullYear = date.getUTCFullYear();\r\n\t\t\tmonth = date.getUTCMonth();\r\n\t\t\tweekday = date.getUTCDay();\r\n\t\t\tday = date.getUTCDate();\r\n\t\t\thours = date.getUTCHours();\r\n\t\t\tminutes = date.getUTCMinutes();\r\n\t\t\tseconds = date.getUTCSeconds();\r\n\t\t\tmilliseconds = date.getUTCMilliseconds();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfullYear = date.getFullYear();\r\n\t\t\tmonth = date.getMonth();\r\n\t\t\tweekday = date.getDay();\r\n\t\t\tday = date.getDate();\r\n\t\t\thours = date.getHours();\r\n\t\t\tminutes = date.getMinutes();\r\n\t\t\tseconds = date.getSeconds();\r\n\t\t\tmilliseconds = date.getMilliseconds();\r\n\t\t}\r\n\r\n\t\t// Go through each part and format/replace it in template\r\n\t\tfor (let i = 0, len = info.parts.length; i < len; i++) {\r\n\t\t\tlet value: string = \"\";\r\n\t\t\tswitch (info.parts[i]) {\r\n\r\n\t\t\t\tcase \"G\":\r\n\t\t\t\t\tvalue = language.translate(\r\n\t\t\t\t\t\tfullYear < 0\r\n\t\t\t\t\t\t\t? \"_era_bc\"\r\n\t\t\t\t\t\t\t: \"_era_ad\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"yyyy\":\r\n\t\t\t\t\tvalue = Math.abs(fullYear).toString();\r\n\t\t\t\t\tif (fullYear < 0) {\r\n\t\t\t\t\t\tvalue += language.translate(\"_era_bc\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"yyy\":\r\n\t\t\t\tcase \"yy\":\r\n\t\t\t\tcase \"y\":\r\n\t\t\t\t\tvalue = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n\t\t\t\t\tif (fullYear < 0) {\r\n\t\t\t\t\t\tvalue += language.translate(\"_era_bc\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"YYYY\":\r\n\t\t\t\tcase \"YYY\":\r\n\t\t\t\tcase \"YY\":\r\n\t\t\t\tcase \"Y\":\r\n\t\t\t\t\tlet year = $utils.getWeekYear(date);\r\n\t\t\t\t\tif (info.parts[i] == \"YYYY\") {\r\n\t\t\t\t\t\tvalue = Math.abs(year).toString();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = Math.abs(year).toString().substr(-info.parts[i].length);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (year < 0) {\r\n\t\t\t\t\t\tvalue += language.translate(\"_era_bc\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"u\":\r\n\t\t\t\t\t// @todo\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"q\":\r\n\t\t\t\t\tvalue = \"\" + Math.ceil((date.getMonth() + 1) / 3);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMMMM\":\r\n\t\t\t\t\tvalue = language.translate(this.months[month]).substr(0, 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMMM\":\r\n\t\t\t\t\tvalue = language.translate(this.months[month]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMM\":\r\n\t\t\t\t\tvalue = language.translate(this.monthsShort[month]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MM\":\r\n\t\t\t\t\tvalue = $utils.padString(month + 1, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"M\":\r\n\t\t\t\t\tvalue = (month + 1).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ww\":\r\n\t\t\t\t\tvalue = $utils.padString($utils.getWeek(date, this.utc), 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"w\":\r\n\t\t\t\t\tvalue = $utils.getWeek(date, this.utc).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"W\":\r\n\t\t\t\t\tvalue = $utils.getMonthWeek(date, this.utc).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"dd\":\r\n\t\t\t\t\tvalue = $utils.padString(day, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"d\":\r\n\t\t\t\t\tvalue = day.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"DD\":\r\n\t\t\t\tcase \"DDD\":\r\n\t\t\t\t\tvalue = $utils.padString($utils.getYearDay(date, this.utc).toString(), info.parts[i].length, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"D\":\r\n\t\t\t\t\tvalue = $utils.getYearDay(date, this.utc).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"F\":\r\n\t\t\t\t\t// @todo\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"g\":\r\n\t\t\t\t\t// @todo\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\tvalue = language.translateFunc(\"_dateOrd\").call(this, day);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"E\":\r\n\t\t\t\t\tvalue = (weekday || 7).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"EE\":\r\n\t\t\t\t\tvalue = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"EEE\":\r\n\t\t\t\tcase \"eee\":\r\n\t\t\t\t\tvalue = language.translate(this.weekdaysShort[weekday]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"EEEE\":\r\n\t\t\t\tcase \"eeee\":\r\n\t\t\t\t\tvalue = language.translate(this.weekdays[weekday]);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"EEEEE\":\r\n\t\t\t\tcase \"eeeee\":\r\n\t\t\t\t\tvalue = language.translate(this.weekdays[weekday]).substr(0, 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"e\":\r\n\t\t\t\tcase \"ee\":\r\n\t\t\t\t\tvalue = (weekday - this.firstDayOfWeek + 1).toString();\r\n\t\t\t\t\tif (info.parts[i] == \"ee\") {\r\n\t\t\t\t\t\tvalue = $utils.padString(value, 2, \"0\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"a\":\r\n\t\t\t\t\tif (hours >= 12) {\r\n\t\t\t\t\t\tvalue = language.translate(\"PM\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = language.translate(\"AM\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aa\":\r\n\t\t\t\t\tif (hours >= 12) {\r\n\t\t\t\t\t\tvalue = language.translate(\"P.M.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = language.translate(\"A.M.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aaa\":\r\n\t\t\t\t\tif (hours >= 12) {\r\n\t\t\t\t\t\tvalue = language.translate(\"P\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = language.translate(\"A\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"h\":\r\n\t\t\t\t\tvalue = $utils.get12Hours(hours).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hh\":\r\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"H\":\r\n\t\t\t\t\tvalue = hours.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"HH\":\r\n\t\t\t\t\tvalue = $utils.padString(hours, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"K\":\r\n\t\t\t\t\tvalue = $utils.get12Hours(hours, 0).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"KK\":\r\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"k\":\r\n\t\t\t\t\tvalue = (hours + 1).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kk\":\r\n\t\t\t\t\tvalue = $utils.padString(hours + 1, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"m\":\r\n\t\t\t\t\tvalue = minutes.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"mm\":\r\n\t\t\t\t\tvalue = $utils.padString(minutes, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"s\":\r\n\t\t\t\t\tvalue = seconds.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ss\":\r\n\t\t\t\t\tvalue = $utils.padString(seconds, 2, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"S\":\r\n\t\t\t\tcase \"SS\":\r\n\t\t\t\tcase \"SSS\":\r\n\t\t\t\t\tvalue = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"x\":\r\n\t\t\t\t\tvalue = timestamp.toString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"n\":\r\n\t\t\t\tcase \"nn\":\r\n\t\t\t\tcase \"nnn\":\r\n\t\t\t\t\tvalue = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"z\":\r\n\t\t\t\t\tvalue = $utils.getTimeZone(date, false, false, this.utc);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"zz\":\r\n\t\t\t\t\tvalue = $utils.getTimeZone(date, true, false, this.utc);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"zzz\":\r\n\t\t\t\t\tvalue = $utils.getTimeZone(date, false, true, this.utc);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"zzzz\":\r\n\t\t\t\t\tvalue = $utils.getTimeZone(date, true, true, this.utc);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"Z\":\r\n\t\t\t\tcase \"ZZ\":\r\n\t\t\t\t\tlet tz = Math.abs(offset) / 60;\r\n\t\t\t\t\tlet tzh = Math.floor(tz);\r\n\t\t\t\t\tlet tzm = tz * 60 - tzh * 60;\r\n\r\n\t\t\t\t\tif (this.utc) {\r\n\t\t\t\t\t\ttzh = 0;\r\n\t\t\t\t\t\ttzm = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (info.parts[i] == \"Z\") {\r\n\t\t\t\t\t\tvalue = \"GMT\";\r\n\t\t\t\t\t\tvalue += offset > 0 ? \"-\" : \"+\";\r\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tvalue = offset > 0 ? \"-\" : \"+\";\r\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\tvalue = date.toISOString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"I\":\r\n\t\t\t\t\tvalue = date.toUTCString();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\t\t\tres = res.replace($strings.PLACEHOLDER, value);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses any input value into Date object.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Parsing_Dates} Tutorial on date/time parsing\r\n\t * @param source  Source value\r\n\t * @param format  Source format\r\n\t * @return Date object\r\n\t */\r\n\tpublic parse(source: any, format?: string): Date {\r\n\r\n\t\t// Format set?\r\n\t\tif (!$type.hasValue(format)) {\r\n\t\t\tformat = this.inputDateFormat;\r\n\t\t}\r\n\r\n\t\t// Is it already a Date\r\n\t\tif (source instanceof Date) {\r\n\t\t\treturn source;\r\n\t\t}\r\n\r\n\t\t// Is it a numeric timestamp\r\n\t\tif (typeof source === \"number\") {\r\n\t\t\treturn new Date(source);\r\n\t\t}\r\n\r\n\t\t// No? Let's check if it's string, and try converting to it if nec\r\n\t\tif (typeof source !== \"string\") {\r\n\t\t\tsource = source.toString();\r\n\t\t}\r\n\r\n\t\t// no language?\r\n\t\tif (!this.language) {\r\n\t\t\tif (this.sprite) {\r\n\t\t\t\tthis.language = this.sprite.language;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.language = new Language;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Init return value\r\n\t\tlet res: Date;\r\n\r\n\t\t// Init RegEx for parsing\r\n\t\tlet reg: string = \"\";\r\n\r\n\t\t// Clean format\r\n\t\tformat = $utils.cleanFormat(format);\r\n\r\n\t\t// Clip format to length of the source string\r\n\t\tformat = format.substr(0, source.length);\r\n\r\n\t\t// Parse format\r\n\t\tlet info = this.parseFormat(format);\r\n\r\n\t\t// Init parsed items holder\r\n\t\tlet parsedIndexes = {\r\n\t\t\t\"year\": -1,\r\n\t\t\t\"year3\": -1,\r\n\t\t\t\"year2\": -1,\r\n\t\t\t\"year1\": -1,\r\n\t\t\t\"month\": -1,\r\n\t\t\t\"monthShort\": -1,\r\n\t\t\t\"monthLong\": -1,\r\n\t\t\t\"weekdayShort\": -1,\r\n\t\t\t\"weekdayLong\": -1,\r\n\t\t\t\"day\": -1,\r\n\t\t\t\"yearDay\": -1,\r\n\t\t\t\"week\": -1,\r\n\t\t\t\"hourBase0\": -1,\r\n\t\t\t\"hour12Base0\": -1,\r\n\t\t\t\"hourBase1\": -1,\r\n\t\t\t\"hour12Base1\": -1,\r\n\t\t\t\"minute\": -1,\r\n\t\t\t\"second\": -1,\r\n\t\t\t\"millisecond\": -1,\r\n\t\t\t\"millisecondDigits\": -1,\r\n\t\t\t\"am\": -1,\r\n\t\t\t\"zone\": -1,\r\n\t\t\t\"timestamp\": -1,\r\n\t\t\t\"iso\": -1\r\n\t\t};\r\n\r\n\t\t// Init values\r\n\t\tlet resValues = {\r\n\t\t\t\"year\": 1970,\r\n\t\t\t\"month\": 0,\r\n\t\t\t\"day\": 1,\r\n\t\t\t\"hour\": 0,\r\n\t\t\t\"minute\": 0,\r\n\t\t\t\"second\": 0,\r\n\t\t\t\"millisecond\": 0,\r\n\t\t\t\"timestamp\": <any>null,\r\n\t\t\t\"offset\": 0,\r\n\t\t\t\"utc\": this.utc\r\n\t\t}\r\n\r\n\t\t// Index adjuster\r\n\t\tlet indexAdjust: number = 0,\r\n\t\t\tindex: number = 0;\r\n\r\n\t\t// Iterate through all of the parts\r\n\t\tfor (let i: number = 0; i < info.parts.length; i++) {\r\n\r\n\t\t\t// Set current match index\r\n\t\t\tindex = i + indexAdjust + 1;\r\n\r\n\t\t\tswitch (info.parts[i]) {\r\n\r\n\t\t\t\tcase \"yyyy\":\r\n\t\t\t\tcase \"YYYY\":\r\n\t\t\t\t\treg += \"([0-9]{4})\";\r\n\t\t\t\t\tparsedIndexes.year = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"yyy\":\r\n\t\t\t\tcase \"YYY\":\r\n\t\t\t\t\treg += \"([0-9]{3})\";\r\n\t\t\t\t\tparsedIndexes.year3 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"yy\":\r\n\t\t\t\tcase \"YY\":\r\n\t\t\t\t\treg += \"([0-9]{2})\";\r\n\t\t\t\t\tparsedIndexes.year2 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"y\":\r\n\t\t\t\tcase \"Y\":\r\n\t\t\t\t\treg += \"([0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.year1 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMMM\":\r\n\t\t\t\t\treg += \"(\" + this.getStringList(this.months).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.monthLong = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MMM\":\r\n\t\t\t\t\treg += \"(\" + this.getStringList(this.monthsShort).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.monthShort = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"MM\":\r\n\t\t\t\tcase \"M\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.month = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ww\":\r\n\t\t\t\tcase \"w\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.week = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"dd\":\r\n\t\t\t\tcase \"d\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.day = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"DDD\":\r\n\t\t\t\tcase \"DD\":\r\n\t\t\t\tcase \"D\":\r\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.yearDay = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\tcase \"dddd\":\r\n\t\t\t\t\treg += \"(\" + this.getStringList(this.weekdays).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.weekdayLong = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ddd\":\r\n\t\t\t\t\treg += \"(\" + this.getStringList(this.weekdaysShort).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.weekdayShort = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"aaa\":\r\n\t\t\t\tcase \"aa\":\r\n\t\t\t\tcase \"a\":\r\n\t\t\t\t\t// TODO: fix (escape regex)\r\n\t\t\t\t\treg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n\t\t\t\t\tparsedIndexes.am = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"hh\":\r\n\t\t\t\tcase \"h\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.hour12Base1 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"HH\":\r\n\t\t\t\tcase \"H\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.hourBase0 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"KK\":\r\n\t\t\t\tcase \"K\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.hour12Base0 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"kk\":\r\n\t\t\t\tcase \"k\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.hourBase1 = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"mm\":\r\n\t\t\t\tcase \"m\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.minute = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ss\":\r\n\t\t\t\tcase \"s\":\r\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.second = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"SSS\":\r\n\t\t\t\tcase \"SS\":\r\n\t\t\t\tcase \"S\":\r\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.millisecond = index;\r\n\t\t\t\t\tparsedIndexes.millisecondDigits = info.parts[i].length;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"nnn\":\r\n\t\t\t\tcase \"nn\":\r\n\t\t\t\tcase \"n\":\r\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n\t\t\t\t\tparsedIndexes.millisecond = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"x\":\r\n\t\t\t\t\treg += \"([0-9]{1,})\";\r\n\t\t\t\t\tparsedIndexes.timestamp = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"Z\":\r\n\t\t\t\t\treg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n\t\t\t\t\tparsedIndexes.zone = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"ZZ\":\r\n\t\t\t\t\treg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n\t\t\t\t\tparsedIndexes.zone = index;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"i\":\r\n\t\t\t\t\treg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\.?([0-9]{0,3})([zZ]|[+\\-][0-9]{2}:?[0-9]{2}|$)\";\r\n\t\t\t\t\tparsedIndexes.iso = index;\r\n\t\t\t\t\tindexAdjust += 7;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"G\":\r\n\t\t\t\tcase \"YYYY\":\r\n\t\t\t\tcase \"YYY\":\r\n\t\t\t\tcase \"YY\":\r\n\t\t\t\tcase \"Y\":\r\n\t\t\t\tcase \"MMMMM\":\r\n\t\t\t\tcase \"W\":\r\n\t\t\t\tcase \"EEEEE\":\r\n\t\t\t\tcase \"EEEE\":\r\n\t\t\t\tcase \"EEE\":\r\n\t\t\t\tcase \"EE\":\r\n\t\t\t\tcase \"E\":\r\n\t\t\t\tcase \"eeeee\":\r\n\t\t\t\tcase \"eeee\":\r\n\t\t\t\tcase \"eee\":\r\n\t\t\t\tcase \"ee\":\r\n\t\t\t\tcase \"e\":\r\n\t\t\t\tcase \"zzzz\":\r\n\t\t\t\tcase \"zzz\":\r\n\t\t\t\tcase \"zz\":\r\n\t\t\t\tcase \"z\":\r\n\t\t\t\tcase \"t\":\r\n\t\t\t\t\t// Ignore\r\n\t\t\t\t\tindexAdjust--;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treg += \"[^0-9]*\";\r\n\t\t}\r\n\r\n\t\t// Try matching\r\n\t\tlet regex = new RegExp(reg);\r\n\t\tlet matches: RegExpMatchArray = source.match(regex);\r\n\r\n\t\tif (matches) {\r\n\t\t\t// Populate the date object\r\n\r\n\t\t\t// Full year\r\n\t\t\tif (parsedIndexes.year > -1) {\r\n\t\t\t\tresValues.year = parseInt(matches[parsedIndexes.year]);\r\n\t\t\t}\r\n\r\n\t\t\t// 3-digit year\r\n\t\t\tif (parsedIndexes.year3 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year3]);\r\n\t\t\t\tval += 1000;\r\n\t\t\t\tresValues.year = val;\r\n\t\t\t}\r\n\r\n\t\t\t// 2-digit year\r\n\t\t\tif (parsedIndexes.year2 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year2]);\r\n\t\t\t\tif (val > 50) {\r\n\t\t\t\t\tval += 1000;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tval += 2000;\r\n\t\t\t\t}\r\n\t\t\t\tresValues.year = val;\r\n\t\t\t}\r\n\r\n\t\t\t// 1-digit year\r\n\t\t\tif (parsedIndexes.year1 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year1]);\r\n\t\t\t\tval = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n\t\t\t\tresValues.year = val;\r\n\t\t\t}\r\n\r\n\t\t\t// Full month\r\n\t\t\tif (parsedIndexes.monthLong > -1) {\r\n\t\t\t\tresValues.month = this.resolveMonth(<any>matches[parsedIndexes.monthLong]);\r\n\t\t\t}\r\n\r\n\t\t\t// Short month\r\n\t\t\tif (parsedIndexes.monthShort > -1) {\r\n\t\t\t\tresValues.month = this.resolveShortMonth(<any>matches[parsedIndexes.monthShort]);\r\n\t\t\t}\r\n\r\n\t\t\t// Numeric month\r\n\t\t\tif (parsedIndexes.month > -1) {\r\n\t\t\t\tresValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n\t\t\t}\r\n\r\n\t\t\t// Weekday\r\n\t\t\t// @todo\r\n\r\n\t\t\t// Week\r\n\t\t\tif ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n\t\t\t\t// We parse weeks ONLY if day is not explicitly set\r\n\t\t\t\t// TODO: this needs work\r\n\t\t\t\t// (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n\t\t\t\tresValues.month = 0;\r\n\t\t\t\tresValues.day = $utils.getDayFromWeek(\r\n\t\t\t\t\tparseInt(matches[parsedIndexes.week]),\r\n\t\t\t\t\tresValues.year,\r\n\t\t\t\t\t1,\r\n\t\t\t\t\tthis.utc\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\t// Day\r\n\t\t\tif (parsedIndexes.day > -1) {\r\n\t\t\t\tresValues.day = parseInt(matches[parsedIndexes.day]);\r\n\t\t\t}\r\n\r\n\t\t\t// Year day\r\n\t\t\tif (parsedIndexes.yearDay > -1) {\r\n\t\t\t\tresValues.month = 0;\r\n\t\t\t\tresValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n\t\t\t}\r\n\r\n\t\t\t// 24 Hour (0-23)\r\n\t\t\tif (parsedIndexes.hourBase0 > -1) {\r\n\t\t\t\tresValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n\t\t\t}\r\n\r\n\t\t\t// 24 Hour (1-24)\r\n\t\t\tif (parsedIndexes.hourBase1 > -1) {\r\n\t\t\t\tresValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n\t\t\t}\r\n\r\n\t\t\t// 12 Hour (0-11)\r\n\t\t\tif (parsedIndexes.hour12Base0 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n\t\t\t\tif (val == 11) {\r\n\t\t\t\t\tval = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n\t\t\t\t\tval += 12;\r\n\t\t\t\t}\r\n\t\t\t\tresValues.hour = val;\r\n\t\t\t}\r\n\r\n\t\t\t// 12 Hour (1-12)\r\n\t\t\tif (parsedIndexes.hour12Base1 > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n\t\t\t\tif (val == 12) {\r\n\t\t\t\t\tval = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n\t\t\t\t\tval += 12;\r\n\t\t\t\t}\r\n\t\t\t\tresValues.hour = val;\r\n\t\t\t}\r\n\r\n\t\t\t// Minute\r\n\t\t\tif (parsedIndexes.minute > -1) {\r\n\t\t\t\tresValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n\t\t\t}\r\n\r\n\t\t\t// Second\r\n\t\t\tif (parsedIndexes.second > -1) {\r\n\t\t\t\tresValues.second = parseInt(matches[parsedIndexes.second]);\r\n\t\t\t}\r\n\r\n\t\t\t// Millisecond\r\n\t\t\tif (parsedIndexes.millisecond > -1) {\r\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.millisecond]);\r\n\t\t\t\tif (parsedIndexes.millisecondDigits == 2) {\r\n\t\t\t\t\tval *= 10;\r\n\t\t\t\t}\r\n\t\t\t\telse if (parsedIndexes.millisecondDigits == 1) {\r\n\t\t\t\t\tval *= 100;\r\n\t\t\t\t}\r\n\t\t\t\tresValues.millisecond = val;\r\n\t\t\t}\r\n\r\n\t\t\t// Timestamp\r\n\t\t\tif (parsedIndexes.timestamp > -1) {\r\n\t\t\t\tresValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n\r\n\t\t\t\tconst ts = new Date(resValues.timestamp);\r\n\t\t\t\tresValues.year = ts.getUTCFullYear();\r\n\t\t\t\tresValues.month = ts.getUTCMonth();\r\n\t\t\t\tresValues.day = ts.getUTCDate();\r\n\t\t\t\tresValues.hour = ts.getUTCHours();\r\n\t\t\t\tresValues.minute = ts.getUTCMinutes();\r\n\t\t\t\tresValues.second = ts.getUTCSeconds();\r\n\t\t\t\tresValues.millisecond = ts.getUTCMilliseconds();\r\n\t\t\t}\r\n\r\n\t\t\t// Adjust time zone\r\n\t\t\tif (parsedIndexes.zone > -1) {\r\n\t\t\t\tresValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\r\n\t\t\t}\r\n\r\n\t\t\t// ISO\r\n\t\t\tif (parsedIndexes.iso > -1) {\r\n\r\n\t\t\t\tresValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n\t\t\t\tresValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n\t\t\t\tresValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n\t\t\t\tresValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n\t\t\t\tresValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n\t\t\t\tresValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n\t\t\t\tresValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n\r\n\t\t\t\tif (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n\t\t\t\t\tresValues.utc = true;\r\n\t\t\t\t}\r\n\t\t\t\telse if (matches[parsedIndexes.iso + 7] != \"\") {\r\n\t\t\t\t\tresValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Create Date object\r\n\t\t\tif (resValues.utc) {\r\n\t\t\t\tres = new Date(Date.UTC(\r\n\t\t\t\t\tresValues.year,\r\n\t\t\t\t\tresValues.month,\r\n\t\t\t\t\tresValues.day,\r\n\t\t\t\t\tresValues.hour,\r\n\t\t\t\t\tresValues.minute,\r\n\t\t\t\t\tresValues.second,\r\n\t\t\t\t\tresValues.millisecond\r\n\t\t\t\t));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres = new Date(\r\n\t\t\t\t\tresValues.year,\r\n\t\t\t\t\tresValues.month,\r\n\t\t\t\t\tresValues.day,\r\n\t\t\t\t\tresValues.hour,\r\n\t\t\t\t\tresValues.minute + resValues.offset,\r\n\t\t\t\t\tresValues.second,\r\n\t\t\t\t\tresValues.millisecond\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Didn't match anything\r\n\t\t\t// Let's try dropping it into Date constructor and hope for the best\r\n\t\t\tres = new Date(source);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprotected resolveTimezoneOffset(date: Date, zone: string): number {\r\n\t\tlet value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\r\n\t\tif (value) {\r\n\t\t\tlet match = $type.getValue(zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/));\r\n\t\t\tlet dir = match[1];\r\n\t\t\tlet hour = match[2];\r\n\t\t\tlet minute = match[3];\r\n\t\t\tlet offset = parseInt(hour) * 60 + parseInt(minute);\r\n\r\n\t\t\t// Adjust offset\r\n\t\t\t// Making it negative does not seem to make sense, but it's right\r\n\t\t\t// because of how JavaScript calculates GMT offsets\r\n\t\t\tif (dir == \"+\") {\r\n\t\t\t\toffset *= -1;\r\n\t\t\t}\r\n\r\n\t\t\t// Check the difference in offset\r\n\t\t\tlet originalOffset = (date || new Date()).getTimezoneOffset();\r\n\t\t\tlet diff = offset - originalOffset;\r\n\t\t\treturn diff;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolves month name (i.e. \"December\") into a month number (11).\r\n\t *\r\n\t * @param value  Month name\r\n\t * @return Month number\r\n\t */\r\n\tprotected resolveMonth(value: MonthNames): number {\r\n\r\n\t\t// Let's try English first\r\n\t\tlet month: number = this.months.indexOf(value);\r\n\t\tif (month > -1) {\r\n\t\t\treturn month;\r\n\t\t}\r\n\r\n\t\t// Try the translation\r\n\t\tif (this.language && !this.language.isDefault()) {\r\n\t\t\tmonth = this.language.translateAll(this.months).indexOf(value);\r\n\t\t\tif (month > -1) {\r\n\t\t\t\treturn month\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Resolves short month name (i.e. \"Dec\") into a month number.\r\n\t *\r\n\t * @param value  Short month name\r\n\t * @return Month number\r\n\t */\r\n\tprotected resolveShortMonth(value: ShortMonthNames): number {\r\n\r\n\t\t// Let's try English first\r\n\t\tlet month: number = this.monthsShort.indexOf(value);\r\n\t\tif (month > -1) {\r\n\t\t\treturn month;\r\n\t\t}\r\n\r\n\t\t// Maybe long month (workaround for May)\r\n\t\tmonth = this.months.indexOf(<any>value);\r\n\t\tif (month > -1) {\r\n\t\t\treturn month;\r\n\t\t}\r\n\r\n\t\t// Try the translation\r\n\t\tif (this.language && !this.language.isDefault()) {\r\n\t\t\tmonth = this.language.translateAll(this.monthsShort).indexOf(value);\r\n\t\t\tif (month > -1) {\r\n\t\t\t\treturn month\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if passed in string represents AM/PM notation in many of its\r\n\t * versions.\r\n\t *\r\n\t * @param value  Source string\r\n\t * @return Is it AM/PM?\r\n\t */\r\n\tprotected isAm(value: string): boolean {\r\n\t\tlet list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n\t\treturn list.indexOf(value.toUpperCase()) > -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates related [[Sprite]] causing it to redraw.\r\n\t */\r\n\tprotected invalidateSprite(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis.sprite.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Translates list of strings.\r\n\t *\r\n\t * @param list  Source strings\r\n\t * @return Translated strings\r\n\t */\r\n\tprotected getStringList(list: Array<keyof ILocaleProperties>): Array<string> {\r\n\t\tlet res: string[] = [];\r\n\t\tfor (let i: number = 0; i < list.length; i++) {\r\n\t\t\t// translate?\r\n\t\t\tif (this.language) {\r\n\t\t\t\tres.push($utils.escapeForRgex(this.language.translate(list[i])));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tres.push($utils.escapeForRgex(list[i]));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Date format to use.\r\n\t *\r\n\t * If format is not supplied in-line in the string, this setting will be\r\n\t * used.\r\n\t *\r\n\t * @default \"yyyy-MM-dd\"\r\n\t * @param value Date format\r\n\t */\r\n\tpublic set dateFormat(value: string | Intl.DateTimeFormatOptions) {\r\n\t\tthis._dateFormat = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date format\r\n\t */\r\n\tpublic get dateFormat(): string | Intl.DateTimeFormatOptions {\r\n\t\treturn this._dateFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Date format to use when parsing dates.\r\n\t *\r\n\t * @default \"yyyy-MM-dd\"\r\n\t * @param value Date format\r\n\t */\r\n\tpublic set inputDateFormat(value: string) {\r\n\t\tthis._inputDateFormat = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date format\r\n\t */\r\n\tpublic get inputDateFormat(): string {\r\n\t\treturn this._inputDateFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * Locales if you are using date formats in `Intl.DateTimeFormatOptions` syntax.\r\n\t *\r\n\t * @param value Locales\r\n\t */\r\n\tpublic set intlLocales(value: string) {\r\n\t\tthis._intlLocales = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date format\r\n\t */\r\n\tpublic get intlLocales(): string {\r\n\t\treturn this._intlLocales;\r\n\t}\r\n\r\n\t/**\r\n\t * Should formatter use UTC functions?\r\n\t *\r\n\t * If UTC is used, all date/time values will be independent on client's\r\n\t * time zone.\r\n\t *\r\n\t * @param value Use UTC?\r\n\t */\r\n\tpublic set utc(value: boolean) {\r\n\t\tthis._utc = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use UTC?\r\n\t */\r\n\tpublic get utc(): boolean {\r\n\t\treturn this._utc;\r\n\t}\r\n\r\n\t/**\r\n\t * If set, will apply specific offset in minutes before formatting the date\r\n\t * text.\r\n\t *\r\n\t * The value is a number of minutes from target time zone to UTC.\r\n\t *\r\n\t * E.g. `300` will recalculate Dates in \"GMT-5\" time zone.\r\n\t *\r\n\t * @param  value  Offset (minutes)\r\n\t */\r\n\tpublic set timezoneOffset(value: $type.Optional<number>) {\r\n\t\tif (this._timezoneOffset != value) {\r\n\t\t\tthis._timezoneOffset = value;\r\n\t\t\tthis.invalidateSprite();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Offset (minutes)\r\n\t */\r\n\tpublic get timezoneOffset(): $type.Optional<number> {\r\n\t\treturn this._timezoneOffset;\r\n\t}\r\n\r\n\t/**\r\n\t * If set, will format date/time in specific time zone.\r\n\t *\r\n\t * The value should be named time zone, e.g.:\r\n\t * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\r\n\t *\r\n\t * @since 4.10.1\r\n\t * @param  value  Timezone\r\n\t */\r\n\tpublic set timezone(value: $type.Optional<string>) {\r\n\t\tif (this._timezone != value) {\r\n\t\t\tthis._timezone = value;\r\n\t\t\tthis.timezoneMinutes = $time.getTimezoneMinutes(value);\r\n\t\t\tthis.invalidateSprite();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Timezone\r\n\t */\r\n\tpublic get timezone(): $type.Optional<string> {\r\n\t\treturn this._timezone;\r\n\t}\r\n\r\n\t/**\r\n\t * First day of the week:\r\n\t *\r\n\t * * 0 - Sunday\r\n\t * * 1 - Monday\r\n\t * * 2 - Tuesday\r\n\t *\r\n\t * Etc.\r\n\t *\r\n\t * @param value First day of week\r\n\t */\r\n\tpublic set firstDayOfWeek(value: number) {\r\n\t\tthis._firstDayOfWeek = value;\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @return First day of week\r\n\t */\r\n\tpublic get firstDayOfWeek(): number {\r\n\t\treturn this._firstDayOfWeek;\r\n\t}\r\n\r\n\t/**\r\n\t * Output format for the formatted date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Format\r\n\t */\r\n\tpublic set outputFormat(value: string) {\r\n\t\tthis._outputFormat = value.toLowerCase();\r\n\t\tthis.invalidateSprite();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Format\r\n\t */\r\n\tpublic get outputFormat(): string {\r\n\t\treturn this._outputFormat;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateFormatter\"] = DateFormatter;\r\n","/**\r\n * Contains code and logic for generating radial gradients.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { List } from \"../../utils/List\";\r\nimport { Group } from \"../Group\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Paper, getGhostPaper } from \"../Paper\";\r\nimport { registry } from \"../../Registry\";\r\nimport { IGradientStop } from \"./LinearGradient\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $type from \"../../utils/Type\";\r\nimport { Percent } from \"../../utils/Percent\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Radial gradient class.\r\n */\r\nexport class RadialGradient extends BaseObject {\r\n\r\n\t/**\r\n\t * List of colors switch definitions in a gradient.\r\n\t */\r\n\tprotected _stops: List<IGradientStop> = new List<IGradientStop>();\r\n\r\n\t/**\r\n\t * An SVG `<group>` element used to draw gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic element: Group;\r\n\r\n\t/**\r\n\t * Reference to Paper to add element to.\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * A center x coordinate for the radial gradient, can be set in pixels or as Percent\r\n\t */\r\n\tprotected _cx: $type.Optional<number | Percent>;\r\n\r\n\t/**\r\n\t * A center y coordinate for the radial gradient, can be set in pixels or as Percent\r\n\t */\r\n\tprotected _cy: $type.Optional<number | Percent>;\r\n\r\n\t/**\r\n\t * A y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n\t */\r\n\tprotected _fx: $type.Optional<number | Percent>;\r\n\r\n\t/**\r\n\t * A y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n\t */\r\n\tprotected _fy: $type.Optional<number | Percent>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.element = this.paper.addGroup(\"radialGradient\");\r\n\t\tthis.id = \"gradient-\" + registry.getUniqueId();\r\n\t\tthis.element.attr({ \"id\": this.id });\r\n\t\tthis._disposers.push(this.element);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws gradient.\r\n\t */\r\n\tprotected draw(): void {\r\n\r\n\t\tlet gradientElement = this.element;\r\n\r\n\t\tif ($type.isNumber(this.cx)) {\r\n\t\t\tlet value:any = this.cx;\r\n\t\t\tif(value instanceof Percent){\r\n\t\t\t\tvalue = value.percent + \"%\";\r\n\t\t\t}\r\n\t\t\tgradientElement.attr({ \"cx\": value });\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this.cy)) {\r\n\t\t\tlet value:any = this.cy;\r\n\t\t\tif(value instanceof Percent){\r\n\t\t\t\tvalue = value.percent + \"%\";\r\n\t\t\t}\r\n\t\t\tgradientElement.attr({ \"cy\": value });\r\n\t\t}\r\n\r\n\t\tif (this.fx) {\r\n\t\t\tlet value:any = this.fx;\r\n\t\t\tif(value instanceof Percent){\r\n\t\t\t\tvalue = value.percent + \"%\";\r\n\t\t\t}\r\n\t\t\tgradientElement.attr({ \"fx\": value});\r\n\t\t}\r\n\r\n\t\tif (this.fy) {\r\n\t\t\tlet value:any = this.fy;\r\n\t\t\tif(value instanceof Percent){\r\n\t\t\t\tvalue = value.percent + \"%\";\r\n\t\t\t}\r\n\t\t\tgradientElement.attr({ \"fy\": value});\r\n\t\t}\r\n\r\n\t\tgradientElement.removeChildNodes();\r\n\r\n\t\t$iter.each($iter.indexed(this._stops.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet stop = a[1];\r\n\t\t\tlet offset: $type.Optional<number> = stop.offset;\r\n\r\n\t\t\tif (!$type.isNumber(offset)) {\r\n\t\t\t\toffset = i / (this._stops.length - 1)\r\n\t\t\t}\r\n\r\n\t\t\tlet gradientStop: AMElement = this.paper.add(\"stop\");\r\n\t\t\tif ($type.hasValue(stop.color)) {\r\n\t\t\t\tgradientStop.attr({ \"stop-color\": stop.color.toString() });\r\n\t\t\t}\r\n\t\t\tif ($type.isNumber(stop.opacity)) {\r\n\t\t\t\tgradientStop.attr({ \"stop-opacity\": stop.opacity });\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(offset)) {\r\n\t\t\t\tgradientStop.attr({ \"offset\": offset });\r\n\t\t\t}\r\n\r\n\t\t\tgradientElement.add(gradientStop);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a color step to the gradient.\r\n\t *\r\n\t * @param color    Color (hex code or named color)\r\n\t * @param opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n\t * @param offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n\t */\r\n\tpublic addColor(color: Color, opacity?: number, offset?: number): void {\r\n\t\tthis._stops.push({ color: color, opacity: opacity, offset: offset });\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Paper]] instace to use for the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tif (this._paper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\t\t\tthis.draw();\r\n\t\t\tpaper.appendDef(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * Center x coordinate of the gradient, can be set as number or Percent\r\n\t *\r\n\t * @param point  Center point\r\n\t */\r\n\tpublic set cx(value: $type.Optional<number | Percent>) {\r\n\t\tthis._cx = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get cx(): $type.Optional<number | Percent> {\r\n\t\treturn this._cx;\r\n\t}\r\n\r\n\t/**\r\n\t * Center y coordinate of the gradient, can be set as number or Percent\r\n\t *\r\n\t * @param point  Center point\r\n\t */\r\n\tpublic set cy(value: $type.Optional<number | Percent>) {\r\n\t\tthis._cy = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get cy(): $type.Optional<number | Percent> {\r\n\t\treturn this._cy;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n\t *\r\n\t * @param point  Center point\r\n\t */\r\n\tpublic set fx(value: $type.Optional<number | Percent>) {\r\n\t\tthis._fx = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get fx(): $type.Optional<number | Percent> {\r\n\t\treturn this._fx;\r\n\t}\r\n\r\n\t/**\r\n\t * y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n\t *\r\n\t * @param point  Center point\r\n\t */\r\n\tpublic set fy(value: $type.Optional<number | Percent>) {\r\n\t\tthis._fy = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\tpublic get fy(): $type.Optional<number | Percent> {\r\n\t\treturn this._fy;\r\n\t}\r\n\r\n\r\n\r\n\tpublic copyFrom(source:this){\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tthis.stops.copyFrom(source.stops);\r\n\r\n\t\tthis.cx = source.cx;\r\n\t\tthis.cy = source.cy;\r\n\r\n\t\tthis.fx = source.fx;\r\n\t\tthis.fy = source.fy;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of color stops in the gradient.\r\n\t *\r\n\t * @return Stops\r\n\t */\r\n\tpublic get stops(): List<IGradientStop> {\r\n\t\treturn this._stops;\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis._stops.clear();\r\n\t}\r\n\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadialGradient\"] = RadialGradient;\r\n","/**\r\n * Provides functionality used to creating and showing tooltips (balloons).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { PointedRectangle } from \"./PointedRectangle\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Label } from \"../elements/Label\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { color } from \"../utils/Color\";\r\nimport { DropShadowFilter } from \"../rendering/filters/DropShadowFilter\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents options for tooltip pointer (arrow) orientation.\r\n */\r\nexport type PointerOrientation = \"horizontal\" | \"vertical\" | \"left\" | \"right\" | \"up\" | \"down\";\r\n\r\n/**\r\n * Defines properties for [[Tooltip]].\r\n */\r\nexport interface ITooltipProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Pointer orientation: \"horizontal\", \"vertical\", \"left\", \"right\", \"up\", \"down\".\r\n\t *\r\n\t * @default \"vertical\"\r\n\t */\r\n\tpointerOrientation?: PointerOrientation;\r\n\r\n\t/**\r\n\t * Duration (ms) that takes for a Tooltip to move from one place to another.\r\n\t *\r\n\t * If set to a zero value, the Tooltop will jump to a new location\r\n\t * instantenously.\r\n\t *\r\n\t * If set to a non-zero value, the Tooltip will \"glide\" to a new location at\r\n\t * a speed determined by this setting.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * An easing function to use when animating Tooltip position.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tanimationEasing?: (value: number) => number;\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get stroke color from the sprite\r\n\t * it is pointing to.\r\n\t */\r\n\tgetStrokeFromObject?: boolean;\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get fill color from the sprite it\r\n\t * is pointing to.\r\n\t */\r\n\tgetFillFromObject?: boolean;\r\n\r\n\t/**\r\n\t * Specifies if text color should be chosen automatically for a better\r\n\t * readability.\r\n\t */\r\n\tautoTextColor?: boolean;\r\n\r\n\t/**\r\n\t * If this tooltip is displayed on hover on some other object, keep that\r\n\t * element hovered if hovering on the tooltip.\r\n\t *\r\n\t * @since 4.1.13\r\n\t */\r\n\tkeepTargetHover?: boolean;\r\n\r\n\t/**\r\n\t * Normally, a tooltip will hide itself if it is pointing to a coordinate\r\n\t * that is outside viewport.\r\n\t *\r\n\t * Setting this setting to `true` will override that and make tooltip\r\n\t * appear next to the viewport edge closest to the target point.\r\n\t *\r\n\t * @since 4.5.7\r\n\t */\r\n\tshowInViewport?: boolean\r\n\r\n\t/**\r\n\t * Normally, a tooltip's position will be adjusted so it always fits into\r\n\t * chart's boundaries.\r\n\t *\r\n\t * Setting this to `false` will disable such checks and will allow tooltip\r\n\t * to \"bleed over\" the edge of the chart.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.10.8\r\n\t */\r\n\tignoreBounds?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[Tooltip]].\r\n */\r\nexport interface ITooltipEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Tooltip]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ITooltipAdapters extends IContainerAdapters, ITooltipProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Tooltip displays text and/or multimedia information in a balloon over chart\r\n * area.\r\n * @see {@link ITooltipEvents} for a list of available events\r\n * @see {@link ITooltipAdapters} for a list of available Adapters\r\n */\r\nexport class Tooltip extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ITooltipProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ITooltipAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ITooltipEvents;\r\n\r\n\t/**\r\n\t * A type for the background element.\r\n\t */\r\n\tpublic _background: PointedRectangle;\r\n\r\n\t/**\r\n\t * Text element that represents tooltip contents.\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * A container that should be considered a \"boundary\" for the tooltip. A\r\n\t * bounding container is used to calculate numeric boundaries\r\n\t * (`boundingRect`). It is used to constrain the Tooltip to specific area on\r\n\t * the chart, like for example cursor tooltip in plot area.\r\n\t */\r\n\tprotected _boundingContainer: Container;\r\n\r\n\t/**\r\n\t * Holds numeric boundary values. Calculated from the `boundingContainer`.\r\n\t * @ignore\r\n\t */\r\n\tpublic _boundingRect: IRectangle = { x: -40000, y: -40000, width: 80000, height: 80000 };\r\n\r\n\t/**\r\n\t * Coordinates tooltip's pointer (stem) should point to.\r\n\t */\r\n\tprotected _pointTo: IPoint = { x: 0, y: 0 };\r\n\r\n\t/**\r\n\t * If set to `true` the pointer/stem of the Tooltip will not go outside\r\n\t * Tooltip's width or height depending on pointer's orientation.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic fitPointerToBounds: boolean = false;\r\n\r\n\t/**\r\n\t * If `tooltipOrientation` is vertical, it can be drawn below or above point\r\n\t * We need to know this when solving overlapping.\r\n\t */\r\n\tprotected _verticalOrientation: \"up\" | \"down\" = \"up\";\r\n\r\n\t/**\r\n\t * Position animation of a tooltip\r\n\t */\r\n\tprotected _animation: $type.Optional<Animation>;\r\n\r\n\t/**\r\n\t * A [[Sprite]] element this tooltip is displayed for, if any.\r\n\t *\r\n\t * @since 4.1.13\r\n\t */\r\n\tpublic targetSprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * reference to a sprite which now shows this tooltip instance.\r\n\t */\r\n\tpublic currentSprite: Sprite;\r\n\r\n\tprotected _pointToDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic fixDoc: boolean = true;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Tooltip\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.getFillFromObject = true;\r\n\t\tthis.margin(5, 5, 5, 5);\r\n\r\n\t\tthis.defaultState.transitionDuration = 1;\r\n\t\tthis.hiddenState.transitionDuration = 1;\r\n\r\n\t\t// Create chrome/background\r\n\t\tlet background = this.background;\r\n\t\tbackground.interactionsEnabled = false;\r\n\t\tbackground.fillOpacity = 0.9;\r\n\t\tbackground.strokeWidth = 1;\r\n\t\tbackground.strokeOpacity = 1;\r\n\t\tbackground.stroke = color(\"#ffffff\");\r\n\t\tbackground.cornerRadius = 3;\r\n\t\tbackground.pointerLength = 6;\r\n\t\tbackground.pointerBaseWidth = 10;\r\n\r\n\t\tlet dropShadow = new DropShadowFilter();\r\n\t\tdropShadow.dy = 1;\r\n\t\tdropShadow.dx = 1;\r\n\t\tdropShadow.opacity = 0.5;\r\n\t\tbackground.filters.push(dropShadow);\r\n\r\n\t\tthis.autoTextColor = true;\r\n\r\n\t\t// Create text element\r\n\t\tlet label = this.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tthis.label = label;\r\n\t\tlabel.padding(7, 12, 4, 12);\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.fill = color(\"#ffffff\");\r\n\t\tthis._disposers.push(label);\r\n\r\n\t\tthis.label.events.on(\"sizechanged\", this.drawBackground, this);\r\n\r\n\t\tthis.label.zIndex = 1; // @todo remove this line when bg sorting is solved\r\n\r\n\t\t// Set defaults\r\n\t\tthis.pointerOrientation = \"vertical\";\r\n\r\n\t\tthis.animationDuration = 0;\r\n\t\tthis.animationEasing = $ease.cubicOut;\r\n\r\n\t\tthis.setPropertyValue(\"showInViewport\", false);\r\n\r\n\t\t// Set accessibility options\r\n\t\tthis.role = \"tooltip\";\r\n\r\n\t\tthis.visible = false;\r\n\t\tthis.opacity = 0;\r\n\r\n\t\tthis.x = 0;\r\n\t\tthis.y = 0;\r\n\r\n\t\tthis.events.on(\"visibilitychanged\", this.handleVisibility, this);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tprotected handleVisibility() {\r\n\t\tif (this.visible) {\r\n\t\t\tthis.label.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get stroke color from the sprite it is pointing to.\r\n\t *\r\n\t * @return {boolean}\r\n\t * @default false\r\n\t */\r\n\tpublic get getStrokeFromObject(): boolean {\r\n\t\treturn this.getPropertyValue(\"getStrokeFromObject\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get stroke color from the sprite it is pointing to.\r\n\t *\r\n\t * @param value boolean\r\n\t */\r\n\tpublic set getStrokeFromObject(value: boolean) {\r\n\t\tthis.setPropertyValue(\"getStrokeFromObject\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if text color should be chosen automatically for a better\r\n\t * readability.\r\n\t *\r\n\t * IMPORTANT: this feature is generally ignored, if `getFillFromObject = false`.\r\n\t *\r\n\t * If inheriting of `fill` color from object tooltip is displayed for is\r\n\t * disabled, this feature will not work. If you are explicitly setting a\r\n\t * color for tooltip background, you may set a color for its label as well\r\n\t * using `tooltip.label.fill` property.\r\n\t *\r\n\t *\r\n\t * @param value boolean\r\n\t */\r\n\tpublic set autoTextColor(value: boolean) {\r\n\t\tthis.setPropertyValue(\"autoTextColor\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {boolean}\r\n\t */\r\n\tpublic get autoTextColor(): boolean {\r\n\t\treturn this.getPropertyValue(\"autoTextColor\");\r\n\t}\r\n\r\n\t/**\r\n\t * If this tooltip is displayed on hover on some other object, keep that\r\n\t * element hovered if hovering on the tooltip.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.1.13\r\n\t * @param  value  Keep target hovered?\r\n\t */\r\n\tpublic set keepTargetHover(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"keepTargetHover\", value, true)) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.hoverable = true;\r\n\t\t\t\tthis.background.interactionsEnabled = true;\r\n\t\t\t\tthis._disposers.push(this.events.on(\"over\", (ev) => {\r\n\t\t\t\t\tif (this.targetSprite && this.targetSprite.hoverable) {\r\n\t\t\t\t\t\tthis.targetSprite.isHover = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tthis._disposers.push(this.events.on(\"out\", (ev) => {\r\n\t\t\t\t\tif (this.targetSprite && this.targetSprite.hoverable) {\r\n\t\t\t\t\t\t//this.hideTooltip();\r\n\t\t\t\t\t\t//this.targetSprite.handleOut();\r\n\t\t\t\t\t\tthis.targetSprite.isHover = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Normally, a tooltip will hide itself if it is pointing to a coordinate\r\n\t * that is outside viewport.\r\n\t *\r\n\t * Setting this setting to `true` will override that and make tooltip\r\n\t * appear next to the viewport edge closest to the target point.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.7\r\n\t * @param  value  Force showing tooltip?\r\n\t */\r\n\tpublic set showInViewport(value: boolean) {\r\n\t\tthis.setPropertyValue(\"showInViewport\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Force showing tooltip?\r\n\t */\r\n\tpublic get showInViewport(): boolean {\r\n\t\treturn this.getPropertyValue(\"showInViewport\");\r\n\t}\r\n\r\n\t/**\r\n\t * @return Keep target hovered?\r\n\t */\r\n\tpublic get keepTargetHover(): boolean {\r\n\t\treturn this.getPropertyValue(\"keepTargetHover\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if tooltip background should get fill color from the sprite it is pointing to.\r\n\t *\r\n\t * @return {boolean}\r\n\t * @default true\r\n\t */\r\n\tpublic get getFillFromObject(): boolean {\r\n\t\treturn this.getPropertyValue(\"getFillFromObject\");\r\n\t}\r\n\r\n\t/**\r\n\t * @param value boolean\r\n\t */\r\n\tpublic set getFillFromObject(value: boolean) {\r\n\t\tthis.setPropertyValue(\"getFillFromObject\", value, true);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates and returns a background element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new PointedRectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Pointer orientation: `\"horizontal\"`, `\"vertical\"`, `\"up\"`, `\"down\"`,\r\n\t * `\"right\"`, or `\"left\"`.\r\n\t *\r\n\t * Options`\"horizontal\"` or `\"vertical\"` are location-aware, meaning they\r\n\t * will change position of the Tooltip based on the target point's position\r\n\t * in relation to chart center.\r\n\t *\r\n\t * Options `\"up\"`, `\"down\"`, `\"right\"`, `\"left\"` are static and will point\r\n\t * in the specified direction regardless of the position, even if that means\r\n\t * going out of chart/screen bounds.\r\n\t *\r\n\t * IMPORTANT: in some situations, like having multiple tooltips stacked for\r\n\t * multiple series, the `\"up\"` and `\"down\"` values might be ignored in order\r\n\t * to make tooltip overlap algorithm work.\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param  value  Orientation\r\n\t */\r\n\tpublic set pointerOrientation(value: PointerOrientation) {\r\n\t\tthis.setPropertyValue(\"pointerOrientation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get pointerOrientation(): PointerOrientation {\r\n\t\treturn this.getPropertyValue(\"pointerOrientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Duration in milliseconds for the animation to take place when the tooltip\r\n\t * is moving from one place to another.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  number\r\n\t */\r\n\tpublic set animationDuration(value: number) {\r\n\t\tthis.setPropertyValue(\"animationDuration\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get animationDuration(): number {\r\n\t\treturn this.getPropertyValue(\"animationDuration\");\r\n\t}\r\n\r\n\t/**\r\n\t * Tooltip animation (moving from one place to another) easing function.\r\n\t *\r\n\t * @default $ease.cubicOut\r\n\t * @param value (value: number) => number\r\n\t */\r\n\tpublic set animationEasing(value: (value: number) => number) {\r\n\t\tthis.setPropertyValue(\"animationEasing\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Function}\r\n\t */\r\n\tpublic get animationEasing(): (value: number) => number {\r\n\t\treturn this.getPropertyValue(\"animationEasing\");\r\n\t}\r\n\r\n\t/**\r\n\t * HTML content for the Tooltip.\r\n\t *\r\n\t * Provided value will be used as is, without applying any further\r\n\t * formatting to it.\r\n\t *\r\n\t * @param value  HTML content\r\n\t */\r\n\tpublic set html(value: string) {\r\n\t\tif (this.label.html != value) {\r\n\t\t\tthis.label.html = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return HTML content\r\n\t */\r\n\tpublic get html(): string {\r\n\t\treturn this.label.html;\r\n\t}\r\n\r\n\t/**\r\n\t * SVG text content for the Tooltip.\r\n\t *\r\n\t * Text can have a number of formatting options supported by\r\n\t * [[TextFormatter]].\r\n\t *\r\n\t * @param value  SVG text\r\n\t */\r\n\tpublic set text(value: string) {\r\n\t\tif (this.label.text != value) {\r\n\t\t\tthis.label.text = value;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return SVG text\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this.label.text;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the Tooltip.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet label = this.label;\r\n\r\n\t\tif (label.invalid) {\r\n\t\t\tlabel.validate();\r\n\t\t}\r\n\r\n\t\tlet x: number = this._pointTo.x;\r\n\t\tlet y: number = this._pointTo.y;\r\n\r\n\t\tlet boundingRect: IRectangle = this._boundingRect;\r\n\r\n\t\tlet textW: number = label.measuredWidth;\r\n\t\tlet textH: number = label.measuredHeight;\r\n\r\n\t\tlet pointerLength = this.background.pointerLength;\r\n\r\n\t\tlet textX: number;\r\n\t\tlet textY: number;\r\n\r\n\t\tif (this.ignoreBounds) {\r\n\t\t\tboundingRect = undefined;\r\n\t\t}\r\n\r\n\t\t// try to handle if text is wider than br\r\n\t\tif (boundingRect && this.fixDoc && textW > boundingRect.width) {\r\n\t\t\t// TODO maybe this isn't needed ?\r\n\t\t\t$utils.spritePointToDocument({ x: boundingRect.x, y: boundingRect.y }, this.parent);\r\n\t\t\tlet p1 = $utils.spritePointToDocument({ x: boundingRect.x + boundingRect.width, y: boundingRect.y + boundingRect.height }, this.parent);\r\n\r\n\t\t\tlet documentWidth = document.body.offsetWidth;\r\n\t\t\t// TODO maybe this isn't needed ?\r\n\t\t\t$utils.used(document.body.offsetHeight);\r\n\r\n\t\t\tif (p1.x > documentWidth / 2) {\r\n\t\t\t\tboundingRect.x = boundingRect.width - textW;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tboundingRect.width = boundingRect.x + textW;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet pointerOrientation = this.pointerOrientation;\r\n\r\n\t\t// horizontal\r\n\t\tif (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n\t\t\ttextY = - textH / 2;\r\n\t\t\tif (pointerOrientation == \"horizontal\") {\r\n\t\t\t\tif (boundingRect && x > boundingRect.x + boundingRect.width / 2) {\r\n\t\t\t\t\ttextX = - textW / 2 - pointerLength;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttextX = textW / 2 + pointerLength;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (pointerOrientation == \"left\") {\r\n\t\t\t\ttextX = textW / 2 + pointerLength;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttextX = -textW / 2 - pointerLength;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// vertical pointer\r\n\t\telse {\r\n\t\t\tif (boundingRect) {\r\n\t\t\t\ttextX = $math.fitToRange(0, boundingRect.x - x + textW / 2, boundingRect.x - x + boundingRect.width - textW / 2);\r\n\t\t\t}\r\n\r\n\t\t\tif (pointerOrientation == \"vertical\") {\r\n\t\t\t\tif (boundingRect && y > boundingRect.y + textH + pointerLength) {\r\n\t\t\t\t\ttextY = - textH - pointerLength;\r\n\t\t\t\t\tthis._verticalOrientation = \"up\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttextY = pointerLength;\r\n\t\t\t\t\tthis._verticalOrientation = \"down\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (pointerOrientation == \"down\") {\r\n\t\t\t\ttextY = - textH - pointerLength;\r\n\t\t\t\tthis._verticalOrientation = \"up\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttextY = pointerLength;\r\n\t\t\t\tthis._verticalOrientation = \"down\";\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (boundingRect) {\r\n\t\t\ttextY = $math.fitToRange(textY, boundingRect.y - y, boundingRect.y + boundingRect.height - textH - y);\r\n\t\t}\r\n\r\n\t\tlabel.x = textX;\r\n\t\tlabel.y = textY;\r\n\r\n\t\tthis.drawBackground();\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides functionality from the superclass.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateBackground(): void {\r\n\t\tthis.group.addToBack(this.background.group);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws Tooltip background (chrome, background and pointer/stem).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic drawBackground(): void {\r\n\t\tlet label = this.label;\r\n\t\tlet background: PointedRectangle = this.background;\r\n\r\n\t\tlet textWidth: number = label.measuredWidth;\r\n\t\tlet textHeight: number = label.measuredHeight;\r\n\r\n\t\tlet boundingRect: IRectangle = this._boundingRect;\r\n\r\n\t\tlet bgWidth: number = textWidth;\r\n\t\tlet bgX: number = label.pixelX - textWidth / 2;\r\n\r\n\t\tlet bgHeight: number = textHeight;\r\n\t\tlet bgY: number = label.pixelY;\r\n\r\n\t\tlet x: number = this._pointTo.x;\r\n\t\tlet y: number = this._pointTo.y;\r\n\r\n\t\tlet boundX1: number = boundingRect.x - x;\r\n\t\tlet boundX2: number = boundX1 + boundingRect.width;\r\n\t\tlet boundY1: number = boundingRect.y - y;\r\n\t\tlet boundY2: number = boundY1 + boundingRect.height;\r\n\r\n\t\tbackground.x = bgX;\r\n\t\tbackground.y = bgY;\r\n\r\n\t\tbackground.width = bgWidth;\r\n\t\tbackground.height = bgHeight;\r\n\r\n\t\tif (this.fitPointerToBounds) {\r\n\t\t\tbackground.pointerX = $math.fitToRange(- background.x, boundX1 - background.x, boundX2 - background.x);\r\n\t\t\tbackground.pointerY = $math.fitToRange(- background.y, boundY1 - background.y, boundY2 - background.y);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbackground.pointerX = - background.x;\r\n\t\t\tbackground.pointerY = - background.y;\r\n\t\t}\r\n\r\n\t\tbackground.validate();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tpublic delayedPointTo(point: IPoint, instantly?: boolean) {\r\n\t\tif (this._pointToDisposer) {\r\n\t\t\tthis._pointToDisposer.dispose();\r\n\t\t}\r\n\t\tthis._pointToDisposer = registry.events.once(\"exitframe\", () => {\r\n\t\t\tthis.pointTo(point, instantly);\r\n\t\t})\r\n\r\n\t\tthis.addDisposer(this._pointToDisposer);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Set nes tooltip's anchor point and moves whole tooltip.\r\n\t *\r\n\t * @param x  X coordinate\r\n\t * @param y  Y coordinate\r\n\t */\r\n\tpublic pointTo(point: IPoint, instantly?: boolean): void {\r\n\t\tif (this._pointTo.x != point.x || this._pointTo.y != point.y) {\r\n\t\t\tthis._pointTo = point;\r\n\t\t\tthis.invalidate();\r\n\r\n\t\t\t// this helps to avoid strange animation from nowhere on initial show or when balloon was hidden already\r\n\t\t\tif (!this.visible || instantly) {\r\n\t\t\t\tthis.moveTo(this._pointTo);\r\n\t\t\t\tif (this._animation) {\r\n\t\t\t\t\tthis._animation.kill();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// helps to avoid flicker on top/left corner\r\n\t\t\t\tif (this.pixelX == 0 && this.pixelY == 0) {\r\n\t\t\t\t\tthis.moveTo(this._pointTo);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this._animation) {\r\n\t\t\t\t\t\tthis._animation.kill();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._animation = new Animation(this, [{ property: \"x\", to: point.x, from: this.pixelX }, { property: \"y\", to: point.y, from: this.pixelY }], this.animationDuration, this.animationEasing).start();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets numeric boundaries Tooltip needs to obey (so it does not go outside\r\n\t * specific area).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param rectangle Boundary rectangle\r\n\t */\r\n\tpublic setBounds(rectangle: IRectangle): void {\r\n\t\tlet oldRect = this._boundingRect;\r\n\t\tif (oldRect.x != rectangle.x || oldRect.y != rectangle.y || oldRect.width != rectangle.width || oldRect.height != rectangle.height) {\r\n\t\t\tthis._boundingRect = rectangle;\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[Container]] instance to be used when calculating numeric\r\n\t * boundaries for the Tooltip.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param container  Boundary container\r\n\t */\r\n\tpublic set boundingContainer(container: Container) {\r\n\t\tthis._boundingContainer = container;\r\n\t\t// TODO remove closures ?\r\n\t\tcontainer.events.on(\"sizechanged\", this.updateBounds, this);\r\n\t\tcontainer.events.on(\"positionchanged\", this.updateBounds, this);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates numeric boundaries for the Tooltip, based on the\r\n\t * `boundingCountrainer`.\r\n\t */\r\n\tprotected updateBounds(): void {\r\n\t\tlet boundingContainer: Container = this._boundingContainer;\r\n\t\t// to global\r\n\t\tlet rect: IRectangle = $utils.spriteRectToSvg({\r\n\t\t\tx: boundingContainer.pixelX,\r\n\t\t\ty: boundingContainer.pixelY,\r\n\t\t\twidth: boundingContainer.maxWidth,\r\n\t\t\theight: boundingContainer.maxHeight\r\n\t\t}, boundingContainer);\r\n\t\tthis.setBounds(rect);\r\n\t}\r\n\r\n\t/**\r\n\t * Normally, a tooltip's position will be adjusted so it always fits into\r\n\t * chart's coundaries.\r\n\t *\r\n\t * Setting this to `false` will disable such checks and will allow tooltip\r\n\t * to \"bleed over\" the edge of the chart.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.10.8\r\n\t * @param  value  Ignore chart bounds?\r\n\t */\r\n\tpublic set ignoreBounds(value: boolean) {\r\n\t\tthis.setPropertyValue(\"ignoreBounds\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ignore chart bounds?\r\n\t */\r\n\tpublic get ignoreBounds(): boolean {\r\n\t\treturn this.getPropertyValue(\"ignoreBounds\");\r\n\t}\r\n\r\n\t/**\r\n\t * If tooltipOrientation is vertical, it can be drawn below or above point.\r\n\t * We need to know this when solving overlapping.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return \"up\" | \"down\"\r\n\t */\r\n\tpublic get verticalOrientation(): \"up\" | \"down\" {\r\n\t\treturn this._verticalOrientation;\r\n\t}\r\n\r\n\t/**\r\n\t * To avoid stackoverflow\r\n\t * @ignore\r\n\t */\r\n\tpublic get tooltip(): Tooltip {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties and other attributes.\r\n\t *\r\n\t * @param source  Source\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.label.copyFrom(source.label);\r\n\r\n\t\tif (source._boundingRect) {\r\n\t\t\tthis._boundingRect = source._boundingRect;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds easing functions to \"function\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn field == \"animationEasing\" || super.asIs(field);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Tooltip\"] = Tooltip;\r\n","/**\r\n * A collection of network-related functions\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Defines an interface for objects that hold a net request result.\r\n */\r\nexport interface INetLoadResult<A> {\r\n\r\n\t/**\r\n\t * A reference to original [[XMLHttpRequest]].\r\n\t */\r\n\txhr: XMLHttpRequest;\r\n\r\n\t/**\r\n\t * Request response body.\r\n\t */\r\n\tresponse?: string;\r\n\r\n\t/**\r\n\t * Request response as Blob. (if set `responseType = \"blob\"`)\r\n\t */\r\n\tblob?: Blob;\r\n\r\n\t/**\r\n\t * Response `Content-Type`.\r\n\t */\r\n\ttype: string | null;\r\n\r\n\t/**\r\n\t * Was there an error?\r\n\t */\r\n\terror: boolean;\r\n\r\n\t/**\r\n\t * A target object that made the net load request.\r\n\t */\r\n\ttarget?: A;\r\n\r\n}\r\n\r\nexport interface INetRequestOptions {\r\n\r\n\t/**\r\n\t * Custom request headers to be added to HTTP(S) request.\r\n\t */\r\n\trequestHeaders?: { key: string, value: string }[];\r\n\r\n\t/**\r\n\t * Specify expected response type.\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType} for more info\r\n\t */\r\n\tresponseType?: XMLHttpRequestResponseType;\r\n\r\n\t/**\r\n\t * Specify whether to send CORS credentials (defaults to `false`).\r\n\t *\r\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials} for more info\r\n\t */\r\n\twithCredentials?: boolean;\r\n}\r\n\r\n/**\r\n * Loads an external file via its URL.\r\n *\r\n * Please note that this is an asynchronous function.\r\n *\r\n * It will not return the result, but rather a `Promise`.\r\n *\r\n * You can use the `await` notion, or `then()`.\r\n *\r\n * ```TypeScript\r\n * // Using await\r\n * let response = await Net.load( \"http://www.my.com/data.json\" );\r\n * console.log( response.response );\r\n *\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( ( response ) => {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n * ```JavaScript\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( function( response ) {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n *\r\n * @async\r\n * @param url      URL for the file to load\r\n * @param target   A target element that is requesting the net load\r\n * @param options  Request options\r\n * @return Result (Promise)\r\n */\r\nexport function load<A>(url: string, target?: A, options?: INetRequestOptions): Promise<INetLoadResult<A>> {\r\n\treturn new Promise<INetLoadResult<A>>((success, error) => {\r\n\r\n\t\t// Is return type Blob?\r\n\t\tlet isBlob = $type.hasValue(options) && options.responseType == \"blob\";\r\n\r\n\t\t// Create request and set up handlers\r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.onload = () => {\r\n\t\t\tif (xhr.status === 200) {\r\n\r\n\t\t\t\tlet response: $type.Optional<string>;\r\n\t\t\t\tlet blob: $type.Optional<Blob>;\r\n\r\n\t\t\t\tif (isBlob) {\r\n\t\t\t\t\tblob = xhr.response;\r\n\t\t\t\t\treadBlob(blob).then((response) => {\r\n\t\t\t\t\t\tlet output: INetLoadResult<A> = {\r\n\t\t\t\t\t\t\txhr: xhr,\r\n\t\t\t\t\t\t\terror: false,\r\n\t\t\t\t\t\t\tresponse: response,\r\n\t\t\t\t\t\t\tblob: blob,\r\n\t\t\t\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\r\n\t\t\t\t\t\t\ttarget: target\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tsuccess(output);\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tresponse = xhr.responseText || xhr.response\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet output: INetLoadResult<A> = {\r\n\t\t\t\t\txhr: xhr,\r\n\t\t\t\t\terror: false,\r\n\t\t\t\t\tresponse: response,\r\n\t\t\t\t\tblob: blob,\r\n\t\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\r\n\t\t\t\t\ttarget: target\r\n\t\t\t\t};\r\n\t\t\t\tsuccess(output);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\terror({\r\n\t\t\t\t\txhr: xhr,\r\n\t\t\t\t\terror: true,\r\n\t\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\r\n\t\t\t\t\ttarget: target\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t\txhr.onerror = () => {\r\n\t\t\terror({\r\n\t\t\t\txhr: xhr,\r\n\t\t\t\terror: true,\r\n\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\r\n\t\t\t\ttarget: target\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// Open request\r\n\t\txhr.open(\"GET\", url, true);\r\n\r\n\t\tif (options && options.withCredentials) {\r\n\t\t\txhr.withCredentials = true;\r\n\t\t}\r\n\r\n\t\t// Process options\r\n\t\tif ($type.hasValue(options)) {\r\n\r\n\t\t\tif ($type.hasValue(options.requestHeaders)) {\r\n\t\t\t\tfor (let i = 0; i < options.requestHeaders.length; i++) {\r\n\t\t\t\t\tlet header = options.requestHeaders[i];\r\n\t\t\t\t\txhr.setRequestHeader(header.key, header.value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(options.responseType)) {\r\n\t\t\t\txhr.responseType = options.responseType;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Send request\r\n\t\txhr.send();\r\n\r\n\t});\r\n\r\n}\r\n\r\n/**\r\n * Returns textual representation of a Blob object.\r\n *\r\n * @param   blob  Target blob\r\n * @return        Text promise\r\n */\r\nexport function readBlob(blob: Blob): Promise<string> {\r\n\treturn new Promise<string>((success, error) => {\r\n\t\tconst reader = new FileReader()\r\n\r\n\t\treader.onload = event => {\r\n\t\t\tsuccess(<string>reader.result);\r\n\t\t}\r\n\r\n\t\treader.onerror = (e) => {\r\n\t\t\terror(e);\r\n\t\t}\r\n\r\n\t\treader.readAsText(blob);\r\n\t});\r\n}\r\n","/**\r\n * Interaction Object module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IInteractionObjectEvents, InteractionObjectEventDispatcher } from \"./InteractionObjectEvents\";\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../utils/Dictionary\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IPointer } from \"./Pointer\";\r\nimport { IInertiaOptions, ISwipeOptions, IHitOptions, IHoverOptions, ICursorOptions, IKeyboardOptions, IMouseOptions } from \"./InteractionOptions\";\r\nimport { getInteraction } from \"./Interaction\";\r\nimport { Inertia, InertiaTypes } from \"./Inertia\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * Re-exports\r\n */\r\nexport { IInteractionObjectEvents, InteractionObjectEventDispatcher };\r\n\r\n/**\r\n * Interaction object represents an object that is subject for any kind of\r\n * interaction with it with any input devices: mouse, touch or keyboard.\r\n *\r\n * Any DOM element can be wrapped into an Internaction object which in turn\r\n * enables attaching various interaction events to it, such as: hit, drag,\r\n * swipe, etc.\r\n *\r\n * To create an [[InteractionObject]] out of a [[Sprite]], use:\r\n * `interaction.getInteractionFromSprite(sprite: Sprite)`\r\n *\r\n * To create an [[InteractionObject]] out of a a regular element:\r\n * `interaction.getInteraction(element: HTMLElement)`\r\n */\r\nexport class InteractionObject extends BaseObjectEvents {\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IInteractionObjectEvents;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * An [[EventDispatcher]] instance which holds events for this object\r\n\t */\r\n\tpublic _eventDispatcher: InteractionObjectEventDispatcher<AMEvent<this, this[\"_events\"]>> = new InteractionObjectEventDispatcher(this);;\r\n\r\n\t/**\r\n\t * An [[EventDispatcher]] instance which holds events for this object\r\n\t */\r\n\tpublic get events(): InteractionObjectEventDispatcher<AMEvent<this, this[\"_events\"]>> {\r\n\t\treturn this._eventDispatcher;\r\n\t}\r\n\r\n\t/**\r\n\t * A related [[Sprite]] if any.\r\n\t */\r\n\tpublic sprite!: Sprite;\r\n\r\n\t/**\r\n\t * Collection of Disposers for various events. (so that those get disposed\r\n\t * when the whole InteractionObject is disposed)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic eventDisposers: Dictionary<string, IDisposer> = new Dictionary<string, IDisposer>();\r\n\r\n\t/**\r\n\t * A [[Dictionary]] that holds temporarily replaced original style values for\r\n\t * HTML element, so that they can be restored when the functionality that\r\n\t * replaced them is done.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic replacedStyles: Dictionary<string, string> = new Dictionary<string, string>();\r\n\r\n\tprotected _clickable: boolean = false;\r\n\tprotected _contextMenuDisabled: boolean = false;\r\n\tprotected _hoverable: boolean = false;\r\n\tprotected _trackable: boolean = false;\r\n\tprotected _draggable: boolean = false;\r\n\tprotected _swipeable: boolean = false;\r\n\tprotected _resizable: boolean = false;\r\n\tprotected _wheelable: boolean = false;\r\n\tprotected _inert: boolean = false;\r\n\tprotected _focusable: $type.Optional<boolean>;\r\n\tprotected _tabindex: Optional<number>;\r\n\r\n\t/**\r\n\t * Element to attach events to.\r\n\t */\r\n\tprivate _element: HTMLElement | SVGSVGElement;\r\n\r\n\t/**\r\n\t * Original coordinates for the [[InteractionObject]]. (before application\r\n\t * of the drag)\r\n\t */\r\n\tpublic _originalPosition: Optional<IPoint>;\r\n\r\n\t/**\r\n\t * Original angle for the [[InteractionObject]]. (before rotation started)\r\n\t */\r\n\tpublic _originalAngle: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Original scale of the [[InteractionObject]]. (before resizing started)\r\n\t */\r\n\tpublic _originalScale: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * List of pointers current over element.\r\n\t */\r\n\tprotected _overPointers: $type.Optional<List<IPointer>>;\r\n\r\n\t/**\r\n\t * List of pointer currently pressing down on element.\r\n\t */\r\n\tprotected _downPointers: $type.Optional<List<IPointer>>;\r\n\r\n\t/**\r\n\t * Is element currently hovered?\r\n\t */\r\n\tprotected _isHover: boolean = false;\r\n\r\n\t/**\r\n\t * Was this element hovered via pointer or is it just \"pretenting\" to be\r\n\t * hovered.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic isRealHover: boolean = false;\r\n\r\n\t/**\r\n\t * Is the element hovered by touch pointer?\r\n\t */\r\n\tprotected _isHoverByTouch: boolean = false;\r\n\r\n\t/**\r\n\t * Has element got any pointers currently pressing down on it?\r\n\t */\r\n\tprotected _isDown: boolean = false;\r\n\r\n\t/**\r\n\t * Does element have focus?\r\n\t */\r\n\tprotected _isFocused: boolean = false;\r\n\r\n\t/**\r\n\t * Is element currently protected from touch interactions?\r\n\t */\r\n\tprotected _isTouchProtected: boolean = false;\r\n\r\n\t/**\r\n\t * A timestamp of the last hit.\r\n\t *\r\n\t * Used to calculate double-hit.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lastHit: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * A pointer element that was used for the last hit.\r\n\t *\r\n\t * We need to keep this since only the same pointer can generate doublehit.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo still needed?\r\n\t */\r\n\tpublic lastHitPointer: $type.Optional<IPointer>;\r\n\r\n\t/**\r\n\t * Indicates whether object has delayed events initiated by touch.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hasDelayedOut?: boolean;\r\n\r\n\t/**\r\n\t * Options used for inertia functionality.\r\n\t */\r\n\tprivate _inertiaOptions: Dictionary<InertiaTypes, IInertiaOptions> = new Dictionary<InertiaTypes, IInertiaOptions>();\r\n\r\n\t/**\r\n\t * A collection of different inertia types, currently playing out.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic inertias: Dictionary<InertiaTypes, Inertia> = new Dictionary<InertiaTypes, Inertia>();\r\n\r\n\t/**\r\n\t * Click/tap options.\r\n\t */\r\n\tprivate _hitOptions: IHitOptions = {};\r\n\r\n\t/**\r\n\t * Hover options.\r\n\t */\r\n\tprivate _hoverOptions: IHoverOptions = {};\r\n\r\n\t/**\r\n\t * Swipe gesture options.\r\n\t */\r\n\tprivate _swipeOptions: ISwipeOptions = {};\r\n\r\n\t/**\r\n\t * Keyboard options.\r\n\t */\r\n\tprivate _keyboardOptions: IKeyboardOptions = {};\r\n\r\n\t/**\r\n\t * Mouse options.\r\n\t */\r\n\tprivate _mouseOptions: IMouseOptions = {};\r\n\r\n\t/**\r\n\t * Cursor options.\r\n\t */\r\n\tprivate _cursorOptions: ICursorOptions = {\r\n\t\t\"defaultStyle\": [{\r\n\t\t\t\"property\": \"cursor\",\r\n\t\t\t\"value\": \"default\"\r\n\t\t}]\r\n\t};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(element: HTMLElement | SVGSVGElement) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis._disposers.push(this._eventDispatcher);\r\n\r\n\t\tthis._element = element;\r\n\t\tthis.className = \"InteractionObject\";\r\n\t\tthis._disposers.push(new DictionaryDisposer(this.inertias));\r\n\t\tthis._disposers.push(new DictionaryDisposer(this.eventDisposers));\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is currently hovered.\r\n\t *\r\n\t * @param value Hovered?\r\n\t */\r\n\tpublic set isHover(value: boolean) {\r\n\t\tif (this.isHover != value) {\r\n\t\t\tthis._isHover = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tgetInteraction().overObjects.moveValue(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.isRealHover = false;\r\n\t\t\t\tgetInteraction().overObjects.removeValue(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hovered?\r\n\t */\r\n\tpublic get isHover(): boolean {\r\n\t\treturn this._isHover;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is currently hovered.\r\n\t *\r\n\t * @param value Hovered?\r\n\t */\r\n\tpublic set isHoverByTouch(value: boolean) {\r\n\t\tif (this.isHoverByTouch != value) {\r\n\t\t\tthis._isHoverByTouch = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hovered?\r\n\t */\r\n\tpublic get isHoverByTouch(): boolean {\r\n\t\treturn this._isHoverByTouch;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of pointers currently over the element.\r\n\t *\r\n\t * @see {@link Pointer}\r\n\t * @return List if pointers currently hovering the element\r\n\t */\r\n\tpublic get overPointers(): List<IPointer> {\r\n\t\tif (!this._overPointers) {\r\n\t\t\tthis._overPointers = new List<IPointer>();\r\n\t\t}\r\n\t\treturn this._overPointers;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element has currently any pointers pressing on it.\r\n\t *\r\n\t * @param value Has down pointers?\r\n\t */\r\n\tpublic set isDown(value: boolean) {\r\n\t\tif (this.isDown != value) {\r\n\t\t\tthis._isDown = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tgetInteraction().downObjects.moveValue(this);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgetInteraction().downObjects.removeValue(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Has down pointers?\r\n\t */\r\n\tpublic get isDown(): boolean {\r\n\t\treturn this._isDown;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of pointers currently pressing down on this element.\r\n\t *\r\n\t * @see {@link Pointer}\r\n\t * @return List of down pointers\r\n\t */\r\n\tpublic get downPointers(): List<IPointer> {\r\n\t\tif (!this._downPointers) {\r\n\t\t\tthis._downPointers = new List<IPointer>();\r\n\t\t}\r\n\t\treturn this._downPointers;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is currently focused.\r\n\t *\r\n\t * @param value Focused?\r\n\t */\r\n\tpublic set isFocused(value: boolean) {\r\n\t\tif (this.isFocused != value) {\r\n\t\t\tthis._isFocused = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tgetInteraction().focusedObject = this;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgetInteraction().focusedObject = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Focused?\r\n\t */\r\n\tpublic get isFocused(): boolean {\r\n\t\treturn this._isFocused;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if this element is currently being protected from touch actions.\r\n\t *\r\n\t * @ignore\r\n\t * @param value Touch protected?\r\n\t */\r\n\tpublic set isTouchProtected(value: boolean) {\r\n\t\tif (this._isTouchProtected != value) {\r\n\t\t\tthis._isTouchProtected = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tgetInteraction().unprepElement(this);\r\n\t\t\t}\r\n\t\t\telse if (this.draggable || this.swipeable || this.trackable || this.resizable) {\r\n\t\t\t\tgetInteraction().prepElement(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Touch protected?\r\n\t */\r\n\tpublic get isTouchProtected(): boolean {\r\n\t\treturn this._isTouchProtected;\r\n\t}\r\n\r\n\t/**\r\n\t * Is element clickable? Clickable elements will generate \"hit\" events when\r\n\t * clicked or tapped.\r\n\t *\r\n\t * @param value Clickable?\r\n\t */\r\n\tpublic set clickable(value: boolean) {\r\n\t\tif (this._clickable !== value) {\r\n\t\t\tthis._clickable = value;\r\n\t\t\tgetInteraction().processClickable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Clickable?\r\n\t */\r\n\tpublic get clickable(): boolean {\r\n\t\treturn this._clickable;\r\n\t}\r\n\r\n\t/**\r\n\t * Should element prevent context menu to be displayed, e.g. when\r\n\t * right-clicked?\r\n\t *\r\n\t * @default false\r\n\t * @param value Context menu disabled?\r\n\t */\r\n\tpublic set contextMenuDisabled(value: boolean) {\r\n\t\tif (this._contextMenuDisabled !== value) {\r\n\t\t\tthis._contextMenuDisabled = value;\r\n\t\t\tgetInteraction().processContextMenu(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Context menu disabled?\r\n\t */\r\n\tpublic get contextMenuDisabled(): boolean {\r\n\t\treturn this._contextMenuDisabled;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if element should generate hover events.\r\n\t *\r\n\t * @param value Hoverable?\r\n\t */\r\n\tpublic set hoverable(value: boolean) {\r\n\t\tif (this._hoverable !== value) {\r\n\t\t\tthis._hoverable = value;\r\n\t\t\tgetInteraction().processHoverable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hoverable?\r\n\t */\r\n\tpublic get hoverable(): boolean {\r\n\t\treturn this._hoverable;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if pointer movement over element should be tracked.\r\n\t *\r\n\t * @param value Track pointer?\r\n\t */\r\n\tpublic set trackable(value: boolean) {\r\n\t\tif (this._trackable !== value) {\r\n\t\t\tthis._trackable = value;\r\n\t\t\tgetInteraction().processTrackable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Track pointer?\r\n\t */\r\n\tpublic get trackable(): boolean {\r\n\t\treturn this._trackable;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if element can be dragged. (moved)\r\n\t *\r\n\t * @param value Draggable?\r\n\t */\r\n\tpublic set draggable(value: boolean) {\r\n\t\tif (this._draggable !== value) {\r\n\t\t\tthis._draggable = value;\r\n\t\t\tgetInteraction().processDraggable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Draggable?\r\n\t */\r\n\tpublic get draggable(): boolean {\r\n\t\treturn this._draggable;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether element should react to swipe gesture.\r\n\t *\r\n\t * @param value Track swipe?\r\n\t */\r\n\tpublic set swipeable(value: boolean) {\r\n\t\tif (this._swipeable !== value) {\r\n\t\t\tthis._swipeable = value;\r\n\t\t\tgetInteraction().processSwipeable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Track swipe?\r\n\t */\r\n\tpublic get swipeable(): boolean {\r\n\t\treturn this._swipeable;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if element can be resized.\r\n\t *\r\n\t * @param value Resizeable?\r\n\t */\r\n\tpublic set resizable(value: boolean) {\r\n\t\tif (this._resizable !== value) {\r\n\t\t\tthis._resizable = value;\r\n\t\t\tgetInteraction().processResizable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Resizeble?\r\n\t */\r\n\tpublic get resizable(): boolean {\r\n\t\treturn this._resizable;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether track moouse wheel rotation over element.\r\n\t *\r\n\t * @param value Track wheel?\r\n\t */\r\n\tpublic set wheelable(value: boolean) {\r\n\t\tif (this._wheelable !== value) {\r\n\t\t\tthis._wheelable = value;\r\n\t\t\tgetInteraction().processWheelable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Track wheel?\r\n\t */\r\n\tpublic get wheelable(): boolean {\r\n\t\treturn this._wheelable;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if element is inert, i.e. if it should carry movement momentum\r\n\t * after it is dragged and released.\r\n\t *\r\n\t * @param value Inert?\r\n\t */\r\n\tpublic set inert(value: boolean) {\r\n\t\tif (this._inert !== value) {\r\n\t\t\tthis._inert = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Inert?\r\n\t */\r\n\tpublic get inert(): boolean {\r\n\t\treturn this._inert;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if element can gain focus.\r\n\t *\r\n\t * @param value Focusable?\r\n\t */\r\n\tpublic set focusable(value: $type.Optional<boolean>) {\r\n\t\tif (this._focusable !== value) {\r\n\t\t\tthis._focusable = value;\r\n\t\t\tif (this._focusable && this.tabindex == -1) {\r\n\t\t\t\tthis._tabindex = 1;\r\n\t\t\t}\r\n\t\t\tgetInteraction().processFocusable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Focusable?\r\n\t */\r\n\tpublic get focusable(): $type.Optional<boolean> {\r\n\t\treturn this._focusable;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's tab index.\r\n\t *\r\n\t * @param value Tab index\r\n\t */\r\n\tpublic set tabindex(value: number) {\r\n\t\tif (this._tabindex !== value) {\r\n\t\t\tthis._tabindex = value;\r\n\t\t\tif (value > -1) {\r\n\t\t\t\tthis.focusable = true;\r\n\t\t\t}\r\n\t\t\tgetInteraction().processFocusable(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tab index\r\n\t */\r\n\tpublic get tabindex(): number {\r\n\t\treturn $type.getValueDefault(this._tabindex, -1 as number);\r\n\t}\r\n\r\n\t/**\r\n\t * A DOM element associated with this element.\r\n\t *\r\n\t * @param element Element\r\n\t */\r\n\tpublic set element(element: HTMLElement | SVGSVGElement) {\r\n\t\tthis._element = element;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Element\r\n\t */\r\n\tpublic get element(): HTMLElement | SVGSVGElement {\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's original position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Position\r\n\t */\r\n\tpublic set originalPosition(value: Optional<IPoint>) {\r\n\t\tthis._originalPosition = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Position.\r\n\t */\r\n\tpublic get originalPosition(): Optional<IPoint> {\r\n\t\treturn this._originalPosition || { x: 0, y: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * Element's original scale.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Scale\r\n\t */\r\n\tpublic set originalScale(value: number) {\r\n\t\tif (this._originalScale !== value) {\r\n\t\t\tthis._originalScale = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Scale\r\n\t */\r\n\tpublic get originalScale(): number {\r\n\t\treturn $type.getValueDefault(this._originalScale, 1 as number);\r\n\t}\r\n\r\n\t/**\r\n\t * Element's original angle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value Angle\r\n\t */\r\n\tpublic set originalAngle(value: number) {\r\n\t\tif (this._originalAngle !== value) {\r\n\t\t\tthis._originalAngle = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get originalAngle(): number {\r\n\t\treturn $type.getValueDefault(this._originalAngle, 0 as number);\r\n\t}\r\n\r\n\t/**\r\n\t * Inertia options.\r\n\t *\r\n\t * @param value  Options\r\n\t */\r\n\tpublic set inertiaOptions(value: Dictionary<InertiaTypes, IInertiaOptions>) {\r\n\t\tthis._inertiaOptions = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Options\r\n\t */\r\n\tpublic get inertiaOptions(): Dictionary<InertiaTypes, IInertiaOptions> {\r\n\t\tif (this.sprite && this.sprite._adapterO) {\r\n\t\t\treturn this.sprite._adapterO.apply(\"inertiaOptions\", this._inertiaOptions);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._inertiaOptions;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hit options.\r\n\t *\r\n\t * @param value  Options\r\n\t */\r\n\tpublic set hitOptions(value: IHitOptions) {\r\n\t\tthis._hitOptions = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Options\r\n\t */\r\n\tpublic get hitOptions(): IHitOptions {\r\n\t\tif (this.sprite && this.sprite._adapterO) {\r\n\t\t\treturn this.sprite._adapterO.apply(\"hitOptions\", this._hitOptions);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._hitOptions;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hover options.\r\n\t *\r\n\t * @param value  Options\r\n\t */\r\n\tpublic set hoverOptions(value: IHoverOptions) {\r\n\t\tthis._hoverOptions = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Options\r\n\t */\r\n\tpublic get hoverOptions(): IHoverOptions {\r\n\t\tif (this.sprite && this.sprite._adapterO) {\r\n\t\t\treturn this.sprite._adapterO.apply(\"hoverOptions\", this._hoverOptions);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._hoverOptions;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Swipe options.\r\n\t *\r\n\t * @param value  Options\r\n\t */\r\n\tpublic set swipeOptions(value: ISwipeOptions) {\r\n\t\tthis._swipeOptions = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Options\r\n\t */\r\n\tpublic get swipeOptions(): ISwipeOptions {\r\n\t\tif (this.sprite && this.sprite._adapterO) {\r\n\t\t\treturn this.sprite._adapterO.apply(\"swipeOptions\", this._swipeOptions);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._swipeOptions;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Keyboard options.\r\n\t *\r\n\t * @param value  Options\r\n\t */\r\n\tpublic set keyboardOptions(value: IKeyboardOptions) {\r\n\t\tthis._keyboardOptions = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Options\r\n\t */\r\n\tpublic get keyboardOptions(): IKeyboardOptions {\r\n\t\tif (this.sprite && this.sprite._adapterO) {\r\n\t\t\treturn this.sprite._adapterO.apply(\"keyboardOptions\", this._keyboardOptions);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._keyboardOptions;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Mouse options.\r\n\t *\r\n\t * Enables controlling options related to the mouse, for example sensitivity\r\n\t * of its mouse wheel.\r\n\t *\r\n\t * E.g. the below will reduce chart's wheel-zoom speed to half its default\r\n\t * speed:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.plotContainer.mouseOptions.sensitivity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.plotContainer.mouseOptions.sensitivity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"plotContainer\": {\r\n\t *     \"mouseOptions\": {\r\n\t *       \"sensitivity\": 0.5\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.5.14\r\n\t * @param value  Options\r\n\t */\r\n\tpublic set mouseOptions(value: IMouseOptions) {\r\n\t\tthis._mouseOptions = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Options\r\n\t */\r\n\tpublic get mouseOptions(): IMouseOptions {\r\n\t\tif (this.sprite && this.sprite._adapterO) {\r\n\t\t\treturn this.sprite._adapterO.apply(\"mouseOptions\", this._mouseOptions);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._mouseOptions;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cursor options.\r\n\t *\r\n\t * @param value  Options\r\n\t */\r\n\tpublic set cursorOptions(value: ICursorOptions) {\r\n\t\tthis._cursorOptions = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Options\r\n\t */\r\n\tpublic get cursorOptions(): ICursorOptions {\r\n\t\tif (this.sprite && this.sprite._adapterO) {\r\n\t\t\treturn this.sprite._adapterO.apply(\"cursorOptions\", this._cursorOptions);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._cursorOptions;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related assets from another object of the same\r\n\t * type.\r\n\t *\r\n\t * @param source Source object\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.inertiaOptions = source.inertiaOptions;\r\n\t\tthis.hitOptions = source.hitOptions;\r\n\t\tthis.hoverOptions = source.hoverOptions;\r\n\t\tthis.swipeOptions = source.swipeOptions;\r\n\t\tthis.keyboardOptions = source.keyboardOptions;\r\n\t\tthis.cursorOptions = source.cursorOptions;\r\n\t\tthis.contextMenuDisabled = source.contextMenuDisabled;\r\n\t\tgetInteraction().applyCursorOverStyle(this);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic setEventDisposer(key: string, value: boolean, f: () => IDisposer): void {\r\n\t\tconst disposer = this.eventDisposers.getKey(key);\r\n\r\n\t\tif (value) {\r\n\t\t\tif (disposer == null) {\r\n\t\t\t\tthis.eventDisposers.setKey(key, f());\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tthis.eventDisposers.removeKey(key);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\t// Remove from all interaction registries\r\n\t\tconst interaction = getInteraction();\r\n\t\tinteraction.overObjects.removeValue(this);\r\n\t\tinteraction.downObjects.removeValue(this);\r\n\t\tinteraction.trackedObjects.removeValue(this);\r\n\t\tinteraction.transformedObjects.removeValue(this);\r\n\r\n\t\t// Unlock document wheel\r\n\t\tif (this.isHover && this.wheelable) {\r\n\t\t\tinteraction.unlockWheel();\r\n\t\t}\r\n\r\n\t\tif (interaction.focusedObject === this) {\r\n\t\t\tinteraction.focusedObject = undefined;\r\n\t\t}\r\n\t}\r\n}\r\n","/**\r\n * This module contains Color object definition\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { iRGB, iHSV, iHSL } from \"./Colors\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $colors from \"./Colors\";\r\nimport * as $type from \"./Type\";\r\n\r\n// Re-export\r\nexport { iRGB, iHSV, iHSL };\r\n\r\n/**\r\n * Represents a color.\r\n *\r\n * `Color` accepts value only in [[iRGB]] object format. To create `Color`\r\n * object by parsing it from any supported string-based formats, use helper\r\n * [[color]] function:\r\n *\r\n * ```TypeScript\r\n * am4core.color(\"#ff0000\");\r\n * am4core.color(\"#f00\");\r\n * am4core.color(\"rgb(255, 0, 0)\");\r\n * am4core.color(\"rgba(255, 0, 0, 0.5)\");\r\n * am4core.color({ r: 255, g: 0, b: 0 });\r\n * am4core.color(\"red\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.color(\"#ff0000\");\r\n * am4core.color(\"#f00\");\r\n * am4core.color(\"rgb(255, 0, 0)\");\r\n * am4core.color(\"rgba(255, 0, 0, 0.5)\");\r\n * am4core.color({ r: 255, g: 0, b: 0 });\r\n * am4core.color(\"red\");\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nexport class Color {\r\n\r\n\t/**\r\n\t * Light color (used when light contrasting color is required).\r\n\t *\r\n\t * @param {Color}\r\n\t * @ignore\r\n\t */\r\n\tprotected _lightColor: $type.Optional<Color>;\r\n\r\n\t/**\r\n\t * Dark color (used when dark contrasting color is required).\r\n\t *\r\n\t * @param {Color}\r\n\t * @ignore\r\n\t */\r\n\tprotected _darkColor: $type.Optional<Color>;\r\n\r\n\t/**\r\n\t * Holds RGB value of the color.\r\n\t */\r\n\tprotected _value: $type.Optional<iRGB>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param color Source color\r\n\t */\r\n\tconstructor(color: $type.Optional<iRGB>) {\r\n\t\tthis._value = color;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns [[iRGB]] representation of the color.\r\n\t *\r\n\t * @return RGB object\r\n\t */\r\n\tpublic get rgb(): $type.Optional<iRGB> {\r\n\t\treturn this._value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns color hex value string, e.g. \"#FF0000\".\r\n\t *\r\n\t * @return Hex color code\r\n\t */\r\n\tpublic get hex(): string {\r\n\t\treturn this._value ? $colors.rgbToHex(this._value) : \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an `rgba()` representation of the color, e.g.:\r\n\t * `rgba(255, 0, 0, 0.5)`.\r\n\t *\r\n\t * @return rgba color string\r\n\t */\r\n\tpublic get rgba(): string {\r\n\t\treturn this._value ? $colors.rgbToRGBA(this._value) : \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * Set alpha (transparency) of the color.\r\n\t *\r\n\t * @param value Alpha (0-1)\r\n\t */\r\n\tpublic set alpha(value: number) {\r\n\t\tif (this._value) {\r\n\t\t\tthis._value.a = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current transparency.\r\n\t *\r\n\t * @return Alpha (0-1)\r\n\t */\r\n\tpublic get alpha(): number {\r\n\t\tif (this._value != null && this._value.a != null) {\r\n\t\t\treturn this._value.a;\r\n\r\n\t\t} else {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets \"light\" color. Used when determining contrasting color.\r\n\t *\r\n\t * @param color Color\r\n\t */\r\n\tpublic set lightColor(color: Color) {\r\n\t\tthis._lightColor = color;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current light color setting.\r\n\t *\r\n\t * @return Color\r\n\t */\r\n\tpublic get lightColor(): Color {\r\n\t\tif (!this._lightColor) {\r\n\t\t\tthis._lightColor = new Color({ r: 255, g: 255, b: 255 });\r\n\t\t}\r\n\t\treturn this._lightColor;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets \"dark\" color. Used when determining contrasting color.\r\n\t *\r\n\t * @param color Color\r\n\t */\r\n\tpublic set darkColor(color: Color) {\r\n\t\tthis._darkColor = color;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current dark color setting.\r\n\t *\r\n\t * @return Color\r\n\t */\r\n\tpublic get darkColor(): Color {\r\n\t\tif (!this._darkColor) {\r\n\t\t\tthis._darkColor = new Color({ r: 0, g: 0, b: 0 });\r\n\t\t}\r\n\t\treturn this._darkColor;\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides `toString` method so that [[Color]] object can be used as\r\n\t * string.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return String represantion of color (usable in CSS)\r\n\t */\r\n\tpublic toString(): string {\r\n\t\treturn this.alpha < 1 ? this.rgba : this.hex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new [[Color]] which is percent lighter (positive value),\r\n\t * or darker (negative value).\r\n\t *\r\n\t * Parameter is in the scale of -1 to 1.\r\n\t *\r\n\t * @param percent  Increase/decrease lightness by X\r\n\t * @return New Color\r\n\t */\r\n\tpublic lighten(percent: number): Color {\r\n\t\treturn new Color($colors.lighten(this.rgb, percent));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new [[Color]] which is percent brighter (positive value),\r\n\t * or darker (negative value).\r\n\t *\r\n\t * Parameter is in the scale of -1 to 1.\r\n\t *\r\n\t * @param percent  Increase/decrease brightness by X\r\n\t * @return New Color\r\n\t */\r\n\tpublic brighten(percent: number): Color {\r\n\t\treturn new Color($colors.brighten(this.rgb, percent));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new [[Color]] based on current color with specific saturation\r\n\t * applied.\r\n\t *\r\n\t * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n\t * saturated).\r\n\t *\r\n\t * @param saturation  Saturation (0-1)\r\n\t * @return New (saturated) color\r\n\t */\r\n\tpublic saturate(saturation: number): Color {\r\n\t\treturn new Color($colors.saturate(this.rgb, saturation));\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a either light or dark color that contrasts specifically with\r\n\t * this color.\r\n\t *\r\n\t * Uses properties `darkColor` (default black) and `lightColor` (default\r\n\t * white).\r\n\t *\r\n\t * Useful when determining which color label should be on a colored\r\n\t * background, so that it stands out.\r\n\t *\r\n\t * @return Contrasting color\r\n\t */\r\n\tpublic get alternative(): Color {\r\n\t\tif (this.rgb != null) {\r\n\t\t\treturn $colors.isLight(this.rgb) ? this.darkColor : this.lightColor;\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Color does not exist\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Resolves an input variable to a normal [[iRGB]] color and creates [[Color]]\r\n * object for it.\r\n *\r\n * @param value  Input value\r\n * @param alpha  Alpha (0-1)\r\n * @return Color object\r\n */\r\nexport function color(value?: string | iRGB | Color, alpha?: number): Color {\r\n\r\n\tif (!$type.hasValue(value)) {\r\n\t\treturn new Color(undefined);\r\n\t}\r\n\r\n\tif (typeof value == \"string\") {\r\n\t\tlet cacheId = \"_color_\" + value + \"_\" + (alpha || \"1\");\r\n\t\tlet cached = registry.getCache(cacheId);\r\n\t\tif (cached) {\r\n\t\t\treturn new Color({\r\n\t\t\t\tr: cached.r,\r\n\t\t\t\tg: cached.g,\r\n\t\t\t\tb: cached.b,\r\n\t\t\t\ta: cached.a\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet rgb = $colors.rgb(value, alpha);\r\n\t\tregistry.setCache(cacheId, rgb);\r\n\t\treturn new Color(rgb);\r\n\t}\r\n\r\n\t// Check if it's already a Color object\r\n\tif (value instanceof Color) {\r\n\t\tif ($type.hasValue(alpha)) {\r\n\t\t\tvalue.alpha = alpha;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t// Not a string or Color instance, it's the iRGB object then\r\n\treturn new Color(value);\r\n}\r\n\r\n/**\r\n * Checks if supplied argument is instance of [[Color]].\r\n *\r\n * @param value  Input value\r\n * @return Is Color?\r\n */\r\nexport function isColor(value: any): boolean {\r\n\treturn value instanceof Color;\r\n}\r\n\r\n/**\r\n * Converts any value to [[Color]].\r\n *\r\n * @param value  Input value\r\n * @return Color\r\n */\r\nexport function castColor(value: any): Color {\r\n\treturn color(value);\r\n}\r\n\r\n/**\r\n * Converts any value into a [[Color]].\r\n *\r\n * @param value  Source value\r\n * @return Color object\r\n */\r\nexport function toColor(value: any): Color {\r\n\tif ($type.hasValue(value) && !isColor(value)) {\r\n\t\treturn castColor(value);\r\n\t}\r\n\treturn value;\r\n}\r\n","/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ExportMenu } from \"./ExportMenu\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\r\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { Color, color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport { options } from \"../Options\";\r\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\r\nimport { Align } from \"../defs/Align\";\r\nimport * as $browser from \"../utils/Browser\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $log from \"../utils/Log\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $strings from \"../utils/Strings\";\r\n\r\n\r\nexport interface IFile {\r\n\tpath: string;\r\n\tbytes: string;\r\n}\r\n\r\nexport interface IFont {\r\n\tname: string;\r\n\tnormal: IFile;\r\n\tbold?: IFile;\r\n\titalics?: IFile;\r\n\tbolditalics?: IFile;\r\n}\r\n\r\n\r\n// This is used to cache the pdfmake loading\r\nlet pdfmakePromise: Promise<any>;\r\n\r\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\r\nasync function _pdfmake(): Promise<any> {\r\n\tlet a = await Promise.all([\r\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\r\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"../../pdfmake/vfs_fonts\")\r\n\t]);\r\n\r\n\tlet pdfmake = a[0].default || a[0];\r\n\tlet vfs_fonts = a[1].default || a[1];\r\n\tconst global = <any>window;\r\n\tglobal.pdfMake = global.pdfMake || {};\r\n\tglobal.pdfMake.vfs = vfs_fonts;\r\n\tpdfmake.vfs = vfs_fonts;\r\n\treturn pdfmake;\r\n}\r\n\r\n\r\n// TODO better parsing\r\nconst fontFamilySrcRegexp = /src: ([^;]+);/;\r\n\r\n// TODO better checks\r\nfunction supportsBlobUri(): boolean {\r\n\treturn window.navigator.msSaveOrOpenBlob != null;\r\n}\r\n\r\n// TODO move into utils or something ?\r\nfunction blobToDataUri(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// TODO handle abort ?\r\n\t\tconst f = new FileReader();\r\n\t\tf.onload = (e) => { resolve(<string>f.result); };\r\n\t\tf.onerror = (e) => { reject(e); };\r\n\t\tf.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nasync function getCssRules(s: HTMLStyleElement): Promise<CSSRuleList> {\r\n\tconst sheet = <CSSStyleSheet>s.sheet;\r\n\r\n\ttry {\r\n\t\treturn sheet.cssRules;\r\n\r\n\t} catch (e) {\r\n\t\t// Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\r\n\t\treturn await new Promise<CSSRuleList>((success, error) => {\r\n\t\t\ts.addEventListener(\"load\", () => {\r\n\t\t\t\tsuccess(sheet.cssRules);\r\n\t\t\t}, true);\r\n\r\n\t\t\ts.addEventListener(\"error\", (e) => {\r\n\t\t\t\terror(e);\r\n\t\t\t}, true);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\terror(new Error(\"Timeout while waiting for <style> to load\"));\r\n\t\t\t}, 10000);\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// This loads a stylesheet by URL and then calls the function with it\r\n// TODO this should be moved into utils or something\r\nasync function loadStylesheet(doc: Document, url: string, f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tlet response;\r\n\r\n\ttry {\r\n\t\tresponse = await $net.load(url);\r\n\r\n\t} catch (e) {\r\n\t\tconsole.error(\"Failed to load stylesheet\", url, e);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst s = doc.createElement(\"style\");\r\n\ts.textContent = response.response;\r\n\tif (options.nonce != \"\") {\r\n\t\ts.setAttribute(\"nonce\", options.nonce)\r\n\t}\r\n\tdoc.head.appendChild(s);\r\n\r\n\ttry {\r\n\t\tconst rules = await getCssRules(s);\r\n\t\tawait eachStylesheet(doc, url, rules, f);\r\n\r\n\t} finally {\r\n\t\tdoc.head.removeChild(s);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheet(doc: Document, topUrl: string, rules: CSSRuleList, f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tconst promises: Array<Promise<void>> = [];\r\n\r\n\tconst length = rules.length;\r\n\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tconst rule = rules[i];\r\n\r\n\t\tif (rule.type === CSSRule.IMPORT_RULE) {\r\n\t\t\tlet url = (<CSSImportRule>rule).href;\r\n\r\n\t\t\tif (url) {\r\n\t\t\t\turl = $utils.joinUrl(topUrl, url);\r\n\t\t\t\tpromises.push(loadStylesheet(doc, url, f));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tf(topUrl, rule);\r\n\t\t}\r\n\t}\r\n\r\n\tif (promises.length) {\r\n\t\tawait Promise.all(promises);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule for all of the stylesheets in the page.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheets(f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\t// This uses an <iframe> so it doesn't screw up the site's styles\r\n\tconst iframe = document.createElement(\"iframe\");\r\n\r\n\t// This causes it to use the same origin policy as the parent page\r\n\tiframe.src = \"about:blank\";\r\n\t// This tries to make it more accessible for screen readers\r\n\tiframe.setAttribute(\"title\", \"\");\r\n\r\n\tdocument.head.appendChild(iframe);\r\n\r\n\ttry {\r\n\t\tconst doc = iframe.contentDocument;\r\n\r\n\t\t// TODO use $dom.getRoot instead of document ?\r\n\t\tawait Promise.all($array.map(document.styleSheets, (sheet) => {\r\n\t\t\tlet url = sheet.href;\r\n\r\n\t\t\tif (url == null) {\r\n\t\t\t\treturn eachStylesheet(doc, location.href, (<CSSStyleSheet>sheet).cssRules, f);\r\n\r\n\t\t\t} else {\r\n\t\t\t\turl = $utils.joinUrl(location.href, url);\r\n\t\t\t\treturn loadStylesheet(doc, url, f);\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t} finally {\r\n\t\tdocument.head.removeChild(iframe);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an Event object that comes from [[Export]].\r\n */\r\nexport type ExportOperation = {\r\n\tformat?: string;\r\n\toptions?: any;\r\n}\r\n\r\n/**\r\n * Defines image formats available for export.\r\n */\r\nexport type imageFormats = \"png\" | \"gif\" | \"jpg\";\r\n\r\n/**\r\n * An interface describing extra elements to include in export.\r\n *\r\n * @since 4.2.0\r\n */\r\nexport interface IExportCanvas {\r\n\r\n\t/**\r\n\t * Top margin in pixels.\r\n\t */\r\n\tmarginTop?: number;\r\n\r\n\t/**\r\n\t * Right margin in pixels.\r\n\t */\r\n\tmarginRight?: number;\r\n\r\n\t/**\r\n\t * Bottom margin in pixels.\r\n\t */\r\n\tmarginBottom?: number;\r\n\r\n\t/**\r\n\t * Left margin in pixels.\r\n\t */\r\n\tmarginLeft?: number;\r\n\r\n\t/**\r\n\t * Position to put extra element in relation to main chart.\r\n\t */\r\n\tposition?: \"left\" | \"right\" | \"top\" | \"bottom\";\r\n\r\n\t/**\r\n\t * Reference to element.\r\n\t */\r\n\tsprite?: Sprite;\r\n\r\n\t/**\r\n\t * If this is set to `true` and extra element is higher/wider than main\r\n\t * chart element, the extra element will be cropped.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.6.1\r\n\t */\r\n\tcrop?: boolean;\r\n}\r\n\r\n/**\r\n * Represents options for image export.\r\n */\r\nexport interface IExportImageOptions {\r\n\r\n\t/**\r\n\t * Quality of the exported image. (0-1)\r\n\t */\r\n\tquality?: number;\r\n\r\n\t/**\r\n\t * Rescale image.\r\n\t *\r\n\t * Number less than 1 will shrink the image.\r\n\t *\r\n\t * Number bigger than 1 will scale up the image.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tscale?: number;\r\n\r\n\t/**\r\n\t * Minimum width in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tminWidth?: number;\r\n\r\n\t/**\r\n\t * Minimum height in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tminHeight?: number;\r\n\r\n\t/**\r\n\t * Maximum width in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minWidth`.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tmaxWidth?: number;\r\n\r\n\t/**\r\n\t * Maximum height in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minHeight`.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tmaxHeight?: number;\r\n\r\n\t/**\r\n\t * Normally, Export removes \"tainted\" images (images that are loaded from\r\n\t * other host than the chart itself) before export.\r\n\t *\r\n\t * Set this to `true` to disable it.\r\n\t *\r\n\t * Please note that removal of tainted images might trigger cross-origin\r\n\t * security restrictions in browser and prevent the whole export operation,\r\n\t * so use with caution.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tkeepTainted?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for SVG export.\r\n */\r\nexport interface IExportSVGOptions {\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n\t/**\r\n\t * Rescale image.\r\n\t *\r\n\t * Number less than 1 will shrink the image.\r\n\t *\r\n\t * Number bigger than 1 will scale up the image.\r\n\t *\r\n\t * @default 1\r\n\t * @since 4.10.06\r\n\t */\r\n\tscale?: number;\r\n\r\n\t/**\r\n\t * Minimum width in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.10.06\r\n\t */\r\n\tminWidth?: number;\r\n\r\n\t/**\r\n\t * Minimum height in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.10.06\r\n\t */\r\n\tminHeight?: number;\r\n\r\n\t/**\r\n\t * Maximum width in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minWidth`.\r\n\t *\r\n\t * @since 4.10.06\r\n\t */\r\n\tmaxWidth?: number;\r\n\r\n\t/**\r\n\t * Maximum height in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minHeight`.\r\n\t *\r\n\t * @since 4.10.06\r\n\t */\r\n\tmaxHeight?: number;\r\n\r\n}\r\n\r\n/**\r\n * Available PDF page sizes.\r\n */\r\nexport type pageSizes = \"4A0\" | \"2A0\" | \"A0\" | \"A1\" | \"A2\" | \"A3\" | \"A4\" | \"A5\" | \"A6\" | \"A7\" | \"A8\" | \"A9\" | \"A10\" |\r\n\t\"B0\" | \"B1\" | \"B2\" | \"B3\" | \"B4\" | \"B5\" | \"B6\" | \"B7\" | \"B8\" | \"B9\" | \"B10\" |\r\n\t\"C0\" | \"C1\" | \"C2\" | \"C3\" | \"C4\" | \"C5\" | \"C6\" | \"C7\" | \"C8\" | \"C9\" | \"C10\" |\r\n\t\"RA0\" | \"RA1\" | \"RA2\" | \"RA3\" | \"RA4\" |\r\n\t\"SRA0\" | \"SRA1\" | \"SRA2\" | \"SRA3\" | \"SRA4\" |\r\n\t\"EXECUTIVE\" | \"FOLIO\" | \"LEGAL\" | \"LETTER\" | \"TABLOID\";\r\n\r\n/**\r\n * Represents options for PDF export.\r\n */\r\nexport interface IExportPDFOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * Font size to use for all texts.\r\n\t */\r\n\tfontSize?: number;\r\n\r\n\t/**\r\n\t * An image format to use for embedded images in PDF.\r\n\t *\r\n\t * See `imageFormats` in [[Export_module]].\r\n\t */\r\n\timageFormat?: imageFormats;\r\n\r\n\t/**\r\n\t * Whether to add a URL of the web page the chart has been exported from.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddURL?: boolean;\r\n\r\n\t/**\r\n\t * Page size of the exported PDF.\r\n\t */\r\n\tpageSize?: pageSizes;\r\n\r\n\t/**\r\n\t * Page orientation.\r\n\t */\r\n\tpageOrientation?: \"landscape\" | \"portrait\";\r\n\r\n\t/**\r\n\t * Alignment of the chart image in PDF.\r\n\t *\r\n\t * Supported options: `\"left\"` (default), `\"center\"`, `\"right\"`.\r\n\t *\r\n\t * @since 4.9.14\r\n\t * @default left\r\n\t */\r\n\talign?: Align;\r\n\r\n\t/**\r\n\t * Page margins.\r\n\t *\r\n\t * Can be one of the following:\r\n\t *\r\n\t * A single number, in which case it will act as margin setting\r\n\t * for all four edges of the page.\r\n\t *\r\n\t * An array of two numbers `[ horizontal, vertical ]`.\r\n\t *\r\n\t * An array of four numbers `[ left, top, right, bottom ]`.\r\n\t */\r\n\tpageMargins?: number | number[];\r\n\r\n\t/**\r\n\t * Should data table be included together with the image?\r\n\t *\r\n\t * Use \"pdfdata\" options to configure table output.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\taddData?: boolean;\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.7.0\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.7.0\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t * @since 4.7.0\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n\t/**\r\n\t * Font which should be used for the export.\r\n\t *\r\n\t * Default font used for PDF includes only Latin-based and Cyrilic\r\n\t * characters. If you are exporting text in other languages, you might need\r\n\t * to use some other export font.\r\n\t *\r\n\t * @since 4.9.19\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-pdf-export-fonts/}\r\n\t */\r\n\tfont?: IFont;\r\n\r\n\t/**\r\n\t * Additional optional fonts which can be used on individual elements.\r\n\t *\r\n\t * @since 4.9.19\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-pdf-export-fonts/}\r\n\t */\r\n\textraFonts?: Array<IFont>;\r\n\r\n\t/**\r\n\t * Rescale image.\r\n\t *\r\n\t * Number less than 1 will shrink the image.\r\n\t *\r\n\t * Number bigger than 1 will scale up the image.\r\n\t *\r\n\t * @default 1\r\n\t * @since 4.10.13\r\n\t */\r\n\tscale?: number;\r\n\r\n\t/**\r\n\t * Minimum width in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.10.13\r\n\t */\r\n\tminWidth?: number;\r\n\r\n\t/**\r\n\t * Minimum height in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.10.13\r\n\t */\r\n\tminHeight?: number;\r\n\r\n\t/**\r\n\t * Maximum width in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minWidth`.\r\n\t *\r\n\t * @since 4.10.13\r\n\t */\r\n\tmaxWidth?: number;\r\n\r\n\t/**\r\n\t * Maximum height in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minHeight`.\r\n\t *\r\n\t * @since 4.10.13\r\n\t */\r\n\tmaxHeight?: number;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for CSV export.\r\n */\r\nexport interface IExportCSVOptions {\r\n\r\n\t/**\r\n\t * Separator string to separate columns with.\r\n\t *\r\n\t * @default \",\"\r\n\t */\r\n\tseparator?: string;\r\n\r\n\t/**\r\n\t * CSV format does not require enclosing values in quotes, unless it\r\n\t * contains strings.\r\n\t *\r\n\t * This setting can be used to enforce enclosing of all values in CSV with\r\n\t * quotes.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tforceQuotes?: boolean;\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Add rows in reverse order.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\treverse?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.6.8\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n\r\n\t/**\r\n\t * Add BOM character to output file, so that it can be used with UTF-8\r\n\t * characters properly in Excel.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.10.21\r\n\t */\r\n\taddBOM?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for JSON export\r\n */\r\nexport interface IExportJSONOptions {\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Sets indent size for each hierarchical elements.\r\n\t *\r\n\t * @default \"  \"\r\n\t */\r\n\tindent?: number;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for XLSX export.\r\n */\r\nexport interface IExportExcelOptions {\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.6.8\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for HTML export.\r\n * @since 4.7.0\r\n */\r\nexport interface IExportHTMLOptions {\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * A class name to add to table.\r\n\t */\r\n\ttableClass?: string;\r\n\r\n\t/**\r\n\t * A class name to add to table headers.\r\n\t */\r\n\trowClass?: string;\r\n\r\n\t/**\r\n\t * A class name to add to table headers.\r\n\t */\r\n\theaderClass?: string;\r\n\r\n\t/**\r\n\t * A class name to add to table cells.\r\n\t */\r\n\tcellClass?: string;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for print.\r\n */\r\nexport interface IExportPrintOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * A delay in milliseconds to wait before initiating print.\r\n\t *\r\n\t * This delay is necessary to ensure DOM is prepared and repainted before\r\n\t * print dialog kicks in.\r\n\t *\r\n\t * @default 500\r\n\t */\r\n\tdelay?: number;\r\n\r\n\t/**\r\n\t * Method to use for printing.\r\n\t *\r\n\t * If one fails for your particular setup, try the other.\r\n\t *\r\n\t * \"css\" - inserts dynamic CSS that hides everything, except the image being printed.\r\n\t * \"iframe\" - creates a dynamic `<iframe>` with the image, then prints it.\r\n\t *\r\n\t * @default \"iframe\"\r\n\t */\r\n\tprintMethod?: \"css\" | \"iframe\";\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for custom menu items.\r\n */\r\nexport interface IExportCustomOptions {\r\n\r\n\t/**\r\n\t * A callback function reference that will be called when this custom item\r\n\t * is clicked.\r\n\t */\r\n\tcallback?: (branch?: any) => any;\r\n\r\n\t/**\r\n\t * A target which will be `this` context for callback calls.\r\n\t */\r\n\tcallbackTarget?: any;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents interface for a temporarily removed image.\r\n */\r\nexport interface IExportRemovedObject {\r\n\r\n\t/**\r\n\t * Element that was removed out of DOM.\r\n\t */\r\n\telement: Node;\r\n\r\n\t/**\r\n\t * A placeholder element that was placed instead of removed element so that\r\n\t * we know where to put removed element back in.\r\n\t */\r\n\tplaceholder: Node;\r\n\r\n}\r\n\r\n/**\r\n * Represents all available options for all export operations.\r\n */\r\nexport interface IExportOptions {\r\n\tpng: IExportImageOptions;\r\n\tgif: IExportImageOptions;\r\n\tjpg: IExportImageOptions;\r\n\tsvg: IExportSVGOptions;\r\n\tpdf: IExportPDFOptions;\r\n\txlsx: IExportExcelOptions;\r\n\tcsv: IExportCSVOptions;\r\n\tjson: IExportJSONOptions;\r\n\tpdfdata: IExportPDFOptions;\r\n\thtml: IExportHTMLOptions;\r\n\tprint: IExportPrintOptions;\r\n\tcustom: IExportCustomOptions;\r\n}\r\n\r\n/**\r\n * All export options as a type.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport type ExportOptions = IExportImageOptions | IExportSVGOptions | IExportPDFOptions | IExportExcelOptions | IExportCSVOptions | IExportJSONOptions | IExportHTMLOptions | IExportPrintOptions;\r\n\r\n/**\r\n * Defines events for export operations.\r\n */\r\nexport interface IExportEvents {\r\n\r\n\t/**\r\n\t * Invoked when Export initializes.\r\n\t */\r\n\tinited: {};\r\n\r\n\t/**\r\n\t * Invoked when Export menu is created.\r\n\t */\r\n\tmenucreated: {};\r\n\r\n\t/**\r\n\t * Invoked when the Export starts export procedure.\r\n\t *\r\n\t * You can use event handlers here to modify config before actual export\r\n\t * starts.\r\n\t */\r\n\texportstarted: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation finishes.\r\n\t */\r\n\texportfinished: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation encounters error.\r\n\t */\r\n\terror: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation times out.\r\n\t *\r\n\t * Use Export's `timeoutDelay` setting to set timeout. (default: 2000ms)\r\n\t */\r\n\texporttimedout: ExportOperation;\r\n\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport type Keys = keyof IExportOptions;\r\n\r\n/**\r\n * Represents a list of available adapters for [[Export]].\r\n */\r\nexport interface IExportAdapters {\r\n\r\n\tsupported: {\r\n\t\tsupported: boolean,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\texportFunction: {\r\n\t\tfunc: <Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]) => Promise<any>,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\toptions: {\r\n\t\toptions: IExportOptions[Keys],\r\n\t\ttype?: Keys\r\n\t},\r\n\r\n\ttitle: {\r\n\t\ttitle: $type.Optional<string>,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcharset: {\r\n\t\tcharset: string,\r\n\t\ttype?: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t}\r\n\r\n\tsvgToDataURI: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tnormalizeSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetCSV: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetJSON: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetExcel: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetHTML: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tpdfmakeDocument: {\r\n\t\tdoc: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tpdfmakeTable: {\r\n\t\ttable: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcontainer: {\r\n\t\tcontainer: HTMLElement\r\n\t},\r\n\r\n\tsprite: {\r\n\t\tsprite: Sprite\r\n\t},\r\n\r\n\textraSprites: {\r\n\t\textraSprites: Array<Sprite | IExportCanvas>\r\n\t},\r\n\r\n\tvalidateSprites: {\r\n\t\tvalidateSprites: Array<Sprite>\r\n\t},\r\n\r\n\tdata: {\r\n\t\tdata: Array<any>\r\n\t},\r\n\r\n\tdataFields: {\r\n\t\tdataFields: any\r\n\t},\r\n\r\n\tformatDataFields: {\r\n\t\tdataFields: any,\r\n\t\tformat: string\r\n\t},\r\n\r\n\tdataFieldsOrder: {\r\n\t\tdataFieldsOrder: string[],\r\n\t\tformat: string\r\n\t},\r\n\r\n\tdateFormatter: {\r\n\t\tdateFormatter: DateFormatter\r\n\t},\r\n\r\n\tdateFormat: {\r\n\t\tdateFormat: $type.Optional<string | Intl.DateTimeFormatOptions>\r\n\t},\r\n\r\n\tdateFields: {\r\n\t\tdateFields: any\r\n\t},\r\n\r\n\tnumberFormatter: {\r\n\t\tnumberFormatter: NumberFormatter\r\n\t},\r\n\r\n\tnumberFormat: {\r\n\t\tnumberFormat: $type.Optional<string>\r\n\t},\r\n\r\n\tnumberFields: {\r\n\t\tnumberFields: any\r\n\t},\r\n\r\n\tdurationFormatter: {\r\n\t\tdurationFormatter: DurationFormatter\r\n\t},\r\n\r\n\tdurationFormat: {\r\n\t\tdurationFormat: $type.Optional<string>\r\n\t},\r\n\r\n\tdurationFields: {\r\n\t\tdurationFields: any\r\n\t},\r\n\r\n\tdataFieldName: {\r\n\t\tname: string,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisDateField: {\r\n\t\tisDateField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisNumberField: {\r\n\t\tisNumberField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisDurationField: {\r\n\t\tisDurationField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tcontentType: {\r\n\t\tcontentType: string,\r\n\t\ttype: Keys\r\n\t},\r\n\r\n\tfilePrefix: {\r\n\t\tfilePrefix: string\r\n\t},\r\n\r\n\tbackgroundColor: {\r\n\t\tbackgroundColor: $type.Optional<Color>\r\n\t},\r\n\r\n\ttimeoutMessage: {\r\n\t\tmessage: string\r\n\t},\r\n\r\n\txlsxWorkbookOptions: {\r\n\t\toptions: any,\r\n\t\txlsx: any\r\n\t},\r\n\r\n\txlsxSheetName: {\r\n\t\tname: string,\r\n\t\txlsx: any\r\n\t},\r\n\r\n\t/**\r\n\t * @since 4.9.28\r\n\t */\r\n\txlsxWorkbook: {\r\n\t\tworkbook: any,\r\n\t\txlsx: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\r\nexport class Export extends Validatable {\r\n\r\n\t/**\r\n\t * XLINK namespace definition.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tstatic XLINK: string = \"http://www.w3.org/1999/xlink\";\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IExportEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IExportAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter = new Adapter<Export, IExportAdapters>(this);\r\n\r\n\t/**\r\n\t * Holds options for each format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprivate _formatOptions: Dictionary<string, ExportOptions> = new Dictionary<string, ExportOptions>();\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _menu: $type.Optional<ExportMenu>;\r\n\r\n\t/**\r\n\t * Reference to main container to place menu in.\r\n\t */\r\n\tprotected _container: HTMLElement;\r\n\r\n\t/**\r\n\t * [[Sprite]] instance to be used when converting to image.\r\n\t */\r\n\tprotected _sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Extra [[Sprite]] elements to include in exports.\r\n\t */\r\n\tprotected _extraSprites: Array<Sprite | IExportCanvas> = [];\r\n\r\n\t/**\r\n\t * A list of [[Sprite]] elements that need to be valid before export\r\n\t * commences.\r\n\t */\r\n\tprotected _validateSprites: Array<Sprite> = [];\r\n\r\n\t/**\r\n\t * Data storage to be used when exporting to data formats.\r\n\t */\r\n\tprotected _data: any;\r\n\r\n\t/**\r\n\t * Holds an object of field key / field name used to name columns when\r\n\t * exporting to data formats.\r\n\t */\r\n\tprotected _dataFields: any;\r\n\r\n\t/**\r\n\t * Holds an array of data field names. If set, exported data fields will try\r\n\t * to maintain this order.\r\n\t *\r\n\t * If not set (default), the export will try to maintain the same order as\r\n\t * in source data, or as in `dataFields` (if set).\r\n\t *\r\n\t * @since 4.9.7\r\n\t */\r\n\tpublic dataFieldsOrder: string[] = [];\r\n\r\n\t/**\r\n\t * Indicates whether data fields were generated dynamically (`true`) or\r\n\t * if they were pre-set by the user (`false`).\r\n\t */\r\n\tprotected _dynamicDataFields: boolean = true;\r\n\r\n\t/**\r\n\t * A reference to [[DateFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFormatter: $type.Optional<DateFormatter>;\r\n\r\n\t/**\r\n\t * A Date format to be used when formatting dates in string-based data\r\n\t * formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFormat: $type.Optional<string | Intl.DateTimeFormatOptions>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold date values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * A reference to [[DurationFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFormatter: $type.Optional<DurationFormatter>;\r\n\r\n\t/**\r\n\t * A duration format to be used when formatting numeric values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFormat: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold duration values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * A reference to [[NumberFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFormatter: $type.Optional<NumberFormatter>;\r\n\r\n\t/**\r\n\t * A number format to be used when formatting numbers in string-based data\r\n\t * formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFormat: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold number values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * Holds a list of objects that were temporarily removed from the DOM while\r\n\t * exporting. Those most probably are tainted images, or foreign objects that\r\n\t * would otherwise prevent SVG to be converted to canvas.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _removedObjects: List<IExportRemovedObject> = new List<IExportRemovedObject>();\r\n\r\n\t/**\r\n\t * Holds references to the objects that were temporarily hidden when export\r\n\t * started, so that we can reveal them back when export ends.\r\n\t */\r\n\tprotected _hiddenObjects: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Indicates if non-exportable objects are now hidden;\r\n\t */\r\n\tprotected _objectsAlreadyHidden: boolean = false;\r\n\r\n\t/**\r\n\t * Exported files will be prefixed with whatever it is set here.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _filePrefix: string = \"amCharts\";\r\n\r\n\t/**\r\n\t * Export will try to determine proper background color itself. If you want to\r\n\t * override it and use some other color, set this property.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _backgroundColor: $type.Optional<Color>;\r\n\r\n\t/**\r\n\t * A title to use for some document exports, mainly for print.\r\n\t * A document.title will be used if not set.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _title: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * If you are using web fonts (such as Google Fonts), your chart might be\r\n\t * using them as well.\r\n\t *\r\n\t * Normally, exporting to image will require to download these fonts so the\r\n\t * are carried over to exported image.\r\n\t *\r\n\t * This setting can be used to disable or enable this functionality.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic useWebFonts: boolean = true;\r\n\r\n\t/**\r\n\t * A regular expression that will be matched against each URL of an external\r\n\t * font being loaded. Font will only be loaded of regular expression matches.\r\n\t *\r\n\t * Has no effect of `useWebFonts` is set to `false`.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.webFontFilter = /pacifico|roboto/;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.webFontFilter = /pacifico|roboto/;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     // ...\r\n\t *     \"webFontFilter\": /pacifico|roboto/\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.10.17\r\n\t */\r\n\tpublic webFontFilter: RegExp;\r\n\r\n\t/**\r\n\t * Many modern displays have use more actual pixels per displayed pixel. This\r\n\t * results in sharper images on screen. Unfortunately, when exported to a\r\n\t * bitmap image of the sam width/height size it will lose those extra pixels,\r\n\t * resulting in somewhat blurry image.\r\n\t *\r\n\t * This is why we are going to export images larger than they are, so that we\r\n\t * don't lose any details.\r\n\t *\r\n\t * If you'd rather export images without change in size, set this to `false`.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic useRetina: boolean = true;\r\n\r\n\t/**\r\n\t * By default Export will try to use built-in method for transforming chart\r\n\t * into an image for download, then fallback to external library (canvg) for\r\n\t * conversion if failed.\r\n\t *\r\n\t * Setting this to `false` will force use of external library for all export\r\n\t * operations.\r\n\t *\r\n\t * It might be useful to turn off simplified export if you are using strict\r\n\t * content security policies, that disallow images with blobs as their\r\n\t * source.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.2.5\r\n\t */\r\n\tpublic useSimplifiedExport: boolean = true;\r\n\r\n\t/**\r\n\t * If export operation takes longer than milliseconds in this second, we will\r\n\t * show a modal saying export operation took longer than expected.\r\n\t */\r\n\tpublic timeoutDelay: number = 2000;\r\n\r\n\t/**\r\n\t * A reference to export timeout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _timeoutTimeout: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Modal]] instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _modal: $type.Optional<Modal>;\r\n\r\n\t/**\r\n\t * Used to log original value of `interactionsEnabled` so that it can be restored\r\n\t * after temporarily disabling it.\r\n\t */\r\n\tprivate _spriteInteractionsEnabled: $type.Optional<boolean>;\r\n\r\n\tprivate _exportRunning: boolean = false;\r\n\r\n\t/**\r\n\t * Indicator used by [[Component]].\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprivate _prevHasData: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(container: HTMLElement) {\r\n\t\tsuper();\r\n\r\n\t\tthis._container = container;\r\n\r\n\t\tthis.className = \"Export\";\r\n\r\n\t\t// Set default options\r\n\t\tthis._formatOptions.setKey(\"png\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"jpg\", {\r\n\t\t\tquality: 0.8\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"gif\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"svg\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"pdf\", {\r\n\t\t\tfontSize: 14,\r\n\t\t\timageFormat: \"png\",\r\n\t\t\talign: \"left\",\r\n\t\t\taddURL: true,\r\n\t\t\taddColumnNames: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"json\", {\r\n\t\t\tindent: 2,\r\n\t\t\tuseLocale: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"csv\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\",\r\n\t\t\taddBOM: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"xlsx\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\tuseLocale: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"html\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"pdfdata\", {\r\n\t\t\tfontSize: 14,\r\n\t\t\timageFormat: \"png\",\r\n\t\t\taddURL: true,\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"print\", {\r\n\t\t\tdelay: 500,\r\n\t\t\tprintMethod: \"iframe\"\r\n\t\t});\r\n\r\n\t\t// Add options adapter\r\n\t\tthis.adapter.add(\"options\", (arg) => {\r\n\t\t\tlet formatOptions = this._formatOptions.getKey(arg.type);\r\n\t\t\tif (arg.options) {\r\n\t\t\t\targ.options = $object.merge(formatOptions, arg.options);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\targ.options = formatOptions;\r\n\t\t\t}\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.dispatchImmediately(\"inited\");\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * To add an export menu to a chart, set this to a new instance of\r\n\t * [[ExportMenu]].\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     \"menu\": {}\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param menu  ExportMenu instance\r\n\t */\r\n\tpublic set menu(menu: $type.Optional<ExportMenu>) {\r\n\t\tif (this._menu) {\r\n\t\t\tthis.removeDispose(this._menu);\r\n\t\t}\r\n\t\tthis._menu = menu;\r\n\r\n\t\t// Set container and language\r\n\t\tthis._menu.container = this.container;\r\n\t\tthis._menu.language = this._language;\r\n\r\n\t\t// Add adapter to check for browser support\r\n\t\tthis._menu.adapter.add(\"branch\", (arg) => {\r\n\t\t\targ.branch.unsupported = !this.typeSupported(arg.branch.type);\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\t// Add click events\r\n\t\tthis._menu.events.on(\"hit\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"enter\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"over\", (ev) => {\r\n\t\t\tthis._disablePointers();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"out\", (ev) => {\r\n\t\t\tsetTimeout(() => { this._releasePointers(); }, 10);\r\n\t\t});\r\n\r\n\t\t// Dispatch event\r\n\t\tthis.dispatchImmediately(\"menucreated\");\r\n\r\n\t\t// Prefix with Sprite's class name\r\n\t\tthis._menu.adapter.add(\"classPrefix\", (obj) => {\r\n\t\t\tobj.classPrefix = options.classNamePrefix + obj.classPrefix;\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\t// Add menu to disposers so that it's destroyed when Export is disposed\r\n\t\tthis._disposers.push(this._menu);\r\n\t}\r\n\r\n\t/**\r\n\t * @return ExportMenu instance\r\n\t */\r\n\tpublic get menu(): $type.Optional<ExportMenu> {\r\n\t\treturn this._menu;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this specific menu item type is supported by current system.\r\n\t *\r\n\t * @param type  Menu item type\r\n\t * @return `false` if not supported\r\n\t */\r\n\tpublic typeSupported<Key extends keyof IExportOptions>(type: Key): boolean {\r\n\t\tlet supported = true;\r\n\t\tconst options = this.getFormatOptions(type);\r\n\t\tif ($type.hasValue(options) && options.disabled) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\telse if (type === \"pdf\") {\r\n\t\t\t//supported = this.downloadSupport();\r\n\t\t}\r\n\t\telse if (type === \"xlsx\") {\r\n\t\t\t//supported = (this.downloadSupport() && this._hasData()) ? true : false;\r\n\t\t\tsupported = this._hasData() ? true : false;\r\n\t\t}\r\n\t\telse if (type == \"print\" && !(<any>window).print) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\telse if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"supported\", {\r\n\t\t\tsupported: supported,\r\n\t\t\ttype: type\r\n\t\t}).supported;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if data is available.\r\n\t *\r\n\t * @return Has data?\r\n\t */\r\n\tprivate _hasData(): boolean {\r\n\t\treturn this.data && this.data.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Get function to handle export for particular format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprivate _getFunction<Key extends keyof IExportOptions>(type: Key): (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\treturn <any>this.getImage;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\treturn <any>this.getSVG;\r\n\t\t\tcase \"pdf\":\r\n\t\t\tcase \"pdfdata\":\r\n\t\t\t\treturn <any>this.getPDF;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\treturn <any>this.getExcel;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\treturn <any>this.getCSV;\r\n\t\t\tcase \"json\":\r\n\t\t\t\treturn <any>this.getJSON;\r\n\t\t\tcase \"html\":\r\n\t\t\t\treturn <any>this.getHTML;\r\n\t\t\tcase \"print\":\r\n\t\t\t\treturn <any>this.getPrint;\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.unsupported;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates export procedure.\r\n\t *\r\n\t * @param type     Export type\r\n\t * @param options  Options\r\n\t * @return `true` if export was successful\r\n\t * @async\r\n\t */\r\n\tpublic async export<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<boolean> {\r\n\r\n\t\t// Check if it's a custom item, and do nothing or execute custom callback\r\n\t\tif (type == \"custom\") {\r\n\t\t\tthis.handleCustom(<IExportCustomOptions>options);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Set export running flag\r\n\t\tthis._exportRunning = true;\r\n\r\n\t\t// Dispatch event\r\n\t\tif (this.events.isEnabled(\"exportstarted\")) {\r\n\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportstarted\"] = {\r\n\t\t\t\t\"type\": \"exportstarted\",\r\n\t\t\t\t\"target\": this,\r\n\t\t\t\t\"format\": type,\r\n\t\t\t\t\"options\": options\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"exportstarted\", event);\r\n\t\t}\r\n\r\n\t\t// Schedule a preloader\r\n\t\tthis.showPreloader()\r\n\r\n\t\t// Schedule a timeout\r\n\t\tif (this.timeoutDelay) {\r\n\t\t\tthis.hideTimeout();\r\n\t\t\tthis._timeoutTimeout = this.setTimeout((): void => {\r\n\r\n\t\t\t\t// Dispatch event\r\n\t\t\t\tif (this.events.isEnabled(\"exporttimedout\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exporttimedout\"] = {\r\n\t\t\t\t\t\t\"type\": \"exporttimedout\",\r\n\t\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\t\"options\": options\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"exporttimedout\", event);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show modal\r\n\t\t\t\tthis.showTimeout()\r\n\r\n\t\t\t}, this.timeoutDelay);\r\n\t\t}\r\n\r\n\t\t// Hide items that should not be exported\r\n\t\tthis.hideNonExportableSprites();\r\n\r\n\t\t// Get the actual export function\r\n\t\tlet func: (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> = this._getFunction(type);\r\n\r\n\t\t// Give chance for plugins to override both function and options\r\n\t\toptions = this.adapter.apply(\"options\", {\r\n\t\t\toptions: options,\r\n\t\t\ttype: type\r\n\t\t}).options;\r\n\r\n\t\tfunc = this.adapter.apply(\"exportFunction\", {\r\n\t\t\tfunc: func as any,\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).func;\r\n\r\n\t\t// Get exported stuff\r\n\t\tlet data = await func.call(this, type, options);\r\n\r\n\t\t// Release pointers\r\n\t\tthis._exportRunning = false;\r\n\t\tthis._releasePointers();\r\n\r\n\t\t// Restore temporarily hidden elements\r\n\t\tthis.restoreNonExportableSprites();\r\n\r\n\t\tif (data) {\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"exportfinished\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportfinished\"] = {\r\n\t\t\t\t\t\"type\": \"exportfinished\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"exportfinished\", event);\r\n\t\t\t}\r\n\r\n\t\t\t// Hide preloader and timeout modals\r\n\t\t\tthis.hidePreloader();\r\n\t\t\tthis.hideTimeout();\r\n\t\t\tif (this.menu) {\r\n\t\t\t\tthis.menu.close();\r\n\t\t\t}\r\n\r\n\t\t\t// Download or print\r\n\t\t\tif (type === \"print\") {\r\n\t\t\t\treturn this.print(data, <IExportOptions[\"print\"]>options, this.adapter.apply(\"title\", {\r\n\t\t\t\t\ttitle: this.title,\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t}).title);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (type == \"pdfdata\") {\r\n\t\t\t\t\treturn this.download(data, this.filePrefix + \".pdf\");\r\n\t\t\t\t}\r\n\t\t\t\treturn this.download(data, this.filePrefix + \".\" + type, (options && (<IExportCSVOptions>options).addBOM));\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Throw exception?\r\n\t\t\t// @todo\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"error\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"error\"] = {\r\n\t\t\t\t\t\"type\": \"error\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"error\", event);\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A function that should handle unsupported export types.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param type     Export type\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async unsupported<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<string> {\r\n\t\t// TODO should this return `undefined`?\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on a \"custom\" menu item.\r\n\t *\r\n\t * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param options  Options\r\n\t */\r\n\tpublic handleCustom(options: IExportCustomOptions): void {\r\n\t\tif ($type.hasValue(options) && $type.hasValue(options.callback)) {\r\n\t\t\toptions.callback.call(options.callbackTarget || this, options);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Requests a Print of the chart.\r\n\t *\r\n\t * @param type     Export type\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getPrint(type: string, options?: IExportPrintOptions): Promise<string> {\r\n\t\treturn this.getImage(\"png\", options);\r\n\t}\r\n\r\n\t/**\r\n\t * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return String which can be embedded directly into a <style> element.\r\n\t * @async\r\n\t */\r\n\tpublic async getFontFamilies(): Promise<{ blobs: Array<string>, cssText: string }> {\r\n\t\tconst DOMURL = this.getDOMURL();\r\n\r\n\t\tconst blobs: Array<string> = [];\r\n\t\tconst promises: Array<Promise<string>> = [];\r\n\r\n\t\tawait eachStylesheets((topUrl, rule) => {\r\n\t\t\tif (rule.type === CSSRule.FONT_FACE_RULE) {\r\n\t\t\t\tconst cssText = rule.cssText;\r\n\r\n\t\t\t\t// TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\r\n\t\t\t\tconst src = fontFamilySrcRegexp.exec(cssText);\r\n\r\n\t\t\t\tif (src !== null) {\r\n\t\t\t\t\t// TODO make this faster (don't create Promises for non-url stuff)\r\n\t\t\t\t\tconst urls: Array<Promise<string | null>> = src[1].split(/ *, */).map(async (url) => {\r\n\t\t\t\t\t\t// TODO better parsing for this\r\n\t\t\t\t\t\t// TODO is it necessary to handle ' ?\r\n\t\t\t\t\t\tconst a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\r\n\r\n\t\t\t\t\t\tif (a === null) {\r\n\t\t\t\t\t\t\treturn url;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst after = a[2];\r\n\r\n\t\t\t\t\t\t\tconst fullUrl = $utils.joinUrl(topUrl, a[1]);\r\n\r\n\t\t\t\t\t\t\tif (this.webFontFilter && !fullUrl.match(this.webFontFilter)) {\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t// Fetch the actual font-file (.woff)\r\n\t\t\t\t\t\t\t\tconst response = await $net.load(fullUrl, undefined, { responseType: \"blob\" });\r\n\r\n\t\t\t\t\t\t\t\tlet url;\r\n\r\n\t\t\t\t\t\t\t\t// We need blob for IE and Edge\r\n\t\t\t\t\t\t\t\tif (supportsBlobUri()) {\r\n\t\t\t\t\t\t\t\t\turl = DOMURL.createObjectURL(response.blob);\r\n\t\t\t\t\t\t\t\t\tblobs.push(url);\r\n\r\n\t\t\t\t\t\t\t\t\t// We need a data URI for Firefox and Chrome\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\turl = await blobToDataUri(response.blob);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// TODO should it should escape the URI ?\r\n\t\t\t\t\t\t\t\treturn \"url(\\\"\" + url + \"\\\")\" + after;\r\n\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Failed to load font\", fullUrl, e);\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tpromises.push(Promise.all(urls).then((a) => {\r\n\t\t\t\t\t\ta = a.filter((x) => x != null);\r\n\r\n\t\t\t\t\t\tif (a.length === 0) {\r\n\t\t\t\t\t\t\treturn \"\";\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn cssText.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst a = await Promise.all(promises);\r\n\r\n\t\treturn {\r\n\t\t\tblobs: blobs,\r\n\t\t\tcssText: a.filter((x) => !!x).join(\"\\n\")\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Produces image output from the element.\r\n\t *\r\n\t * Converts to a `Canvas` first, then produces an image to download.\r\n\t *\r\n\t * This is an asynchronous function. Rather than returning a result, it\r\n\t * returns a Promise.\r\n\t *\r\n\t * You can use `await` notion from other async functions, or `then()`\r\n\t * anywhere else.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let img;\r\n\t *\r\n\t * // Async\r\n\t * img = await chart.exporting.getImage( \"png\" );\r\n\t *\r\n\t * // Sync\r\n\t * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n\t *   img = data;\r\n\t * } );\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var img;\r\n\t * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n\t *   img = data;\r\n\t * } );\r\n\t * ```\r\n\t *\r\n\t * @param  type           Image format\r\n\t * @param  options        Options\r\n\t * @param  includeExtras  Should extra sprites be included if set?\r\n\t * @return Promise\r\n\t */\r\n\tpublic async getImage<Key extends imageFormats>(type: Key, options?: IExportImageOptions, includeExtras?: boolean): Promise<string> {\r\n\r\n\t\tlet prehidden = this._objectsAlreadyHidden;\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.hideNonExportableSprites();\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(type);\r\n\t\t}\r\n\r\n\t\t// Wait for required elements to be ready before proceeding\r\n\t\tawait this.awaitValidSprites();\r\n\r\n\t\t// Are we using simplified export option?\r\n\t\tif (await this.simplifiedImageExport()) {\r\n\r\n\t\t\tlet canvas;\r\n\t\t\ttry {\r\n\t\t\t\tcanvas = await this.getCanvas(options);\r\n\r\n\t\t\t\t// Add extra sprites\r\n\t\t\t\tif (includeExtras !== false) {\r\n\t\t\t\t\tconst newCanvas = await this.addExtras(canvas, options);\r\n\t\t\t\t\tthis.disposeCanvas(canvas);\r\n\t\t\t\t\tcanvas = newCanvas;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Convert to data uri\r\n\t\t\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t\t\t// Get rid of the canvas\r\n\t\t\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\t\t\tif (!prehidden) {\r\n\t\t\t\t\tthis.restoreNonExportableSprites();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn uri;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tconsole.error(e.message + \"\\n\" + e.stack);\r\n\t\t\t\t$log.warn(\"Simple export failed, falling back to advanced export\");\r\n\r\n\t\t\t\tif (canvas) {\r\n\t\t\t\t\tthis.disposeCanvas(canvas);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// An error occurred, let's try advanced method\r\n\t\t\t\tconst data = await this.getImageAdvanced(type, options, includeExtras);\r\n\r\n\t\t\t\tif (!prehidden) {\r\n\t\t\t\t\tthis.restoreNonExportableSprites();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * Going the hard way. Converting to canvas from each node\r\n\t\t\t */\r\n\t\t\tconst data = await this.getImageAdvanced(type, options, includeExtras);\r\n\r\n\t\t\tif (!prehidden) {\r\n\t\t\t\tthis.restoreNonExportableSprites();\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds extra elements to the canvas.\r\n\t *\r\n\t * @param  canvas   Original canvas\r\n\t * @param  options  Options\r\n\t */\r\n\tprivate async addExtras(canvas: HTMLCanvasElement, options?: IExportImageOptions, advanced?: boolean): Promise<HTMLCanvasElement> {\r\n\t\tif (this.extraSprites.length) {\r\n\t\t\tlet middleLeft = 0;\r\n\t\t\tlet middleTop = 0;\r\n\t\t\tlet middleWidth = canvas.width;\r\n\t\t\tlet middleHeight = canvas.height;\r\n\t\t\tlet extraRight = 0;\r\n\t\t\tlet extraBottom = 0;\r\n\r\n\t\t\tconst extras = await Promise.all($array.map(this.extraSprites, async (extraSprite) => {\r\n\t\t\t\t// Get that extra\r\n\t\t\t\tlet extra: IExportCanvas;\r\n\r\n\t\t\t\tif (extraSprite instanceof Sprite) {\r\n\t\t\t\t\textra = {\r\n\t\t\t\t\t\tsprite: extraSprite,\r\n\t\t\t\t\t\tposition: \"bottom\"\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\textra = extraSprite;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set defaults\r\n\t\t\t\textra.position = extra.position || \"bottom\";\r\n\t\t\t\textra.marginTop = extra.marginTop || 0;\r\n\t\t\t\textra.marginRight = extra.marginRight || 0;\r\n\t\t\t\textra.marginBottom = extra.marginBottom || 0;\r\n\t\t\t\textra.marginLeft = extra.marginLeft || 0;\r\n\r\n\t\t\t\tlet extraCanvas;\r\n\r\n\t\t\t\tif (advanced) {\r\n\t\t\t\t\textraCanvas = await extra.sprite.exporting.getCanvasAdvanced(options);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\textraCanvas = await extra.sprite.exporting.getCanvas(options);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\r\n\t\t\t\tconst extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\r\n\r\n\t\t\t\tif (extra.position == \"top\") {\r\n\t\t\t\t\tmiddleWidth = extra.crop ? middleHeight : $math.max(middleWidth, extraWidth);\r\n\t\t\t\t\tmiddleTop += extraHeight;\r\n\r\n\t\t\t\t} else if (extra.position == \"right\") {\r\n\t\t\t\t\tmiddleHeight = extra.crop ? middleHeight : $math.max(middleHeight, extraHeight);\r\n\t\t\t\t\textraRight += extraWidth;\r\n\r\n\t\t\t\t} else if (extra.position == \"left\") {\r\n\t\t\t\t\tmiddleHeight = extra.crop ? middleHeight : $math.max(middleHeight, extraHeight);\r\n\t\t\t\t\tmiddleLeft += extraWidth;\r\n\r\n\t\t\t\t} else if (extra.position === \"bottom\") {\r\n\t\t\t\t\tmiddleWidth = extra.crop ? middleHeight : $math.max(middleWidth, extraWidth);\r\n\t\t\t\t\textraBottom += extraHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcanvas: extraCanvas,\r\n\t\t\t\t\tposition: extra.position,\r\n\t\t\t\t\tleft: extra.marginLeft,\r\n\t\t\t\t\ttop: extra.marginTop,\r\n\t\t\t\t\twidth: extraWidth,\r\n\t\t\t\t\theight: extraHeight\r\n\t\t\t\t};\r\n\t\t\t}));\r\n\r\n\t\t\tconst newCanvas = this.getDisposableCanvas();\r\n\r\n\t\t\tnewCanvas.width = middleLeft + middleWidth + extraRight;\r\n\t\t\tnewCanvas.height = middleTop + middleHeight + extraBottom;\r\n\r\n\t\t\tconst ctx = newCanvas.getContext(\"2d\");\r\n\r\n\t\t\t// Get background\r\n\t\t\tconst background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t\tif (background) {\r\n\t\t\t\tctx.fillStyle = background.toString();\r\n\t\t\t\tctx.fillRect(0, 0, newCanvas.width, newCanvas.height);\r\n\t\t\t}\r\n\r\n\t\t\tlet left = middleLeft;\r\n\t\t\tlet top = middleTop;\r\n\t\t\tlet right = left + middleWidth;\r\n\t\t\tlet bottom = top + middleHeight;\r\n\r\n\t\t\t// Radiates outwards from center\r\n\t\t\t$array.each(extras, (extra) => {\r\n\t\t\t\tif (extra.position == \"top\") {\r\n\t\t\t\t\ttop -= extra.height;\r\n\t\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, top + extra.top);\r\n\r\n\t\t\t\t} else if (extra.position == \"right\") {\r\n\t\t\t\t\tctx.drawImage(extra.canvas, right + extra.left, middleTop + extra.top);\r\n\t\t\t\t\tright += extra.width;\r\n\r\n\t\t\t\t} else if (extra.position == \"left\") {\r\n\t\t\t\t\tleft -= extra.width;\r\n\t\t\t\t\tctx.drawImage(extra.canvas, left + extra.left, middleTop + extra.top);\r\n\r\n\t\t\t\t} else if (extra.position === \"bottom\") {\r\n\t\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, bottom + extra.top);\r\n\t\t\t\t\tbottom += extra.height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.disposeCanvas(extra.canvas);\r\n\t\t\t});\r\n\r\n\t\t\tctx.drawImage(canvas, middleLeft, middleTop);\r\n\r\n\t\t\treturn newCanvas;\r\n\r\n\t\t} else {\r\n\t\t\treturn canvas;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvas representation of the [[Sprite]].\r\n\t *\r\n\t * @param   options  Options\r\n\t * @return           Canvas\r\n\t */\r\n\tpublic async getCanvas(options?: IExportImageOptions): Promise<HTMLCanvasElement> {\r\n\r\n\t\t// Options are set?\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\t// Get background\r\n\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t// Get DOM URL\r\n\t\tlet DOMURL = this.getDOMURL();\r\n\t\tlet url: string | null = null;\r\n\t\tlet blobs: Array<string> | null = null;\r\n\t\tlet canvas;\r\n\r\n\t\t// Create temporary image element\r\n\t\ttry {\r\n\t\t\t/**\r\n\t\t\t * Simplified version using `createObjectURL`\r\n\t\t\t * Not supported in older browsers\r\n\t\t\t */\r\n\r\n\t\t\t// Get dimensions\r\n\t\t\tlet width = this.sprite.pixelWidth;\r\n\t\t\tlet height = this.sprite.pixelHeight;\r\n\t\t\tlet font = $dom.findFont(this.sprite.dom);\r\n\t\t\tlet fontSize = $dom.findFontSize(this.sprite.dom);\r\n\t\t\tlet scale = options.scale || 1;\r\n\t\t\tlet pixelRatio = this.getPixelRatio(options);\r\n\r\n\t\t\t// Check if scale needs to be updated as per min/max dimensions\r\n\t\t\tscale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n\r\n\t\t\t// Create canvas and its 2D context\r\n\t\t\tcanvas = this.getDisposableCanvas();\r\n\r\n\t\t\t// Set canvas width/height\r\n\t\t\tcanvas.style.width = width * scale + 'px';\r\n\t\t\tcanvas.style.height = height * scale + 'px';\r\n\t\t\tcanvas.width = width * scale;\r\n\t\t\tcanvas.height = height * scale;\r\n\r\n\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\r\n\t\t\t// if (pixelRatio != 1) {\r\n\t\t\t// \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n\t\t\t// }\r\n\r\n\t\t\t// Add background if necessary\r\n\t\t\tif (background) {\r\n\t\t\t\tctx.fillStyle = background.toString();\r\n\t\t\t\tctx.fillRect(0, 0, width * scale, height * scale);\r\n\t\t\t}\r\n\r\n\t\t\tlet promises: Promise<any>[] = [];\r\n\r\n\t\t\tif (this.useWebFonts) {\r\n\t\t\t\t// TODO what if one of the other things errors before it's been able to set `blobs` ?\r\n\t\t\t\tpromises.push(this.getFontFamilies().then((fonts) => {\r\n\t\t\t\t\tblobs = fonts.blobs;\r\n\t\t\t\t\treturn fonts.cssText;\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\r\n\t\t\tpromises.push(this.imagesToDataURI(this.sprite.dom, options));\r\n\t\t\tpromises.push(this.prepForeignObjects(this.sprite.dom, options));\r\n\r\n\t\t\t// Do prepareations on a document\r\n\t\t\tlet a = await Promise.all(promises);\r\n\r\n\t\t\t// Get SVG representation of the Sprite\r\n\t\t\tlet data = this.normalizeSVG(\r\n\t\t\t\t\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\t\toptions,\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tscale,\r\n\t\t\t\tfont,\r\n\t\t\t\tfontSize\r\n\t\t\t);\r\n\r\n\t\t\t// Get Blob representation of SVG and create object URL\r\n\t\t\tlet svg = new Blob([data], { type: \"image/svg+xml\" });\r\n\t\t\turl = DOMURL.createObjectURL(svg);\r\n\t\t\tlet img = await this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\");\r\n\r\n\t\t\t// Draw image on canvas\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\r\n\t\t} finally {\r\n\t\t\tif (url !== null) {\r\n\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t}\r\n\r\n\t\t\tif (blobs !== null) {\r\n\t\t\t\t$array.each(blobs, (url) => {\r\n\t\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Restore replaced tainted images in DOM\r\n\t\t\tthis.restoreRemovedObjects();\r\n\t\t}\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvas representation of the [[Sprite]] using canvg.\r\n\t *\r\n\t * @param   options  Options\r\n\t * @return           Canvas\r\n\t */\r\n\tpublic async getCanvasAdvanced(options?: IExportImageOptions): Promise<HTMLCanvasElement> {\r\n\r\n\t\t// Options are set?\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t// Convert external images to data uris\r\n\t\tawait this.imagesToDataURI(this.sprite.dom, options);\r\n\r\n\t\t// Get background\r\n\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t// Get canvg\r\n\t\tlet canvg = await this.canvg;\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth;\r\n\t\tlet height = this.sprite.pixelHeight;\r\n\t\tlet font = $dom.findFont(this.sprite.dom);\r\n\t\tlet fontSize = $dom.findFontSize(this.sprite.dom);\r\n\t\tlet scale = options.scale || 1;\r\n\t\tlet pixelRatio = this.getPixelRatio(options);\r\n\r\n\t\t// Check if scale needs to be updated as per min/max dimensions\r\n\t\tscale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n\r\n\t\t// Get SVG representation of the Sprite\r\n\t\tlet data = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tscale,\r\n\t\t\tfont,\r\n\t\t\tfontSize,\r\n\t\t\tbackground\r\n\t\t);\r\n\r\n\t\t// Create canvas and its 2D context\r\n\t\tlet canvas = this.getDisposableCanvas();\r\n\r\n\t\t// Set canvas width/height\r\n\t\tcanvas.style.width = (width * pixelRatio * scale) + 'px';\r\n\t\tcanvas.style.height = (height * pixelRatio * scale) + 'px';\r\n\t\tcanvas.width = width * pixelRatio * scale;\r\n\t\tcanvas.height = height * pixelRatio * scale;\r\n\r\n\t\tlet config: any = {\r\n\t\t\t//ignoreDimensions: true,\r\n\t\t\tuseCORS: true\r\n\t\t};\r\n\r\n\t\tif (pixelRatio != 1) {\r\n\t\t\tconfig.ignoreDimensions = true;\r\n\t\t\tconfig.scaleWidth = width * pixelRatio * scale;\r\n\t\t\tconfig.scaleHeight = height * pixelRatio * scale;\r\n\t\t}\r\n\r\n\t\tawait canvg.fromString(canvas.getContext(\"2d\"), data, config).render();\r\n\r\n\t\treturn canvas;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n\t * export an image using its functions.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type     Image format\r\n\t * @param options  Options\r\n\t * @return Data uri\r\n\t */\r\n\tpublic async getImageAdvanced(type: imageFormats, options?: IExportImageOptions, includeExtras?: boolean): Promise<string> {\r\n\r\n\t\tlet prehidden = this._objectsAlreadyHidden;\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.hideNonExportableSprites();\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(type);\r\n\t\t}\r\n\t\t// Get canvas\r\n\t\tlet canvas = await this.getCanvasAdvanced(options);\r\n\r\n\t\t// Add extra sprites\r\n\t\tif (includeExtras !== false) {\r\n\t\t\tcanvas = await this.addExtras(canvas, options, true);\r\n\t\t}\r\n\r\n\t\t// Convert canvas to data url\r\n\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t// Get rid of the canvas\r\n\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.restoreNonExportableSprites();\r\n\t\t}\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `<canvas>` element and returns it.\r\n\t *\r\n\t * @return Canvas element\r\n\t */\r\n\tprotected getDisposableCanvas(): HTMLCanvasElement {\r\n\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\tcanvas.style.position = \"fixed\";\r\n\t\tcanvas.style.top = \"-10000px\";\r\n\t\tdocument.body.appendChild(canvas);\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes canvas.\r\n\t *\r\n\t * @param canvas  Canvas element\r\n\t */\r\n\tprotected disposeCanvas(canvas: HTMLCanvasElement): void {\r\n\t\tif (document.body.contains(canvas)) {\r\n\t\t\tdocument.body.removeChild(canvas);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel ratio for retina displays.\r\n\t *\r\n\t * @return Pixel ratio\r\n\t */\r\n\tprotected getPixelRatio(options?: IExportImageOptions): number {\r\n\t\t// const scale = options && options.scale ? options.scale : 1;\r\n\t\t// return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\r\n\t\treturn this.useRetina ? $utils.getPixelRatio() : 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates adjusted scale if image does not fit or is larger than min/max\r\n\t * settings.\r\n\t *\r\n\t * @param   width    Width of the source image\r\n\t * @param   height   Height of the source image\r\n\t * @param   scale    Current scale\r\n\t * @param   options  Options\r\n\t * @return           Adjusted scale\r\n\t */\r\n\tprotected getAdjustedScale(width: number, height: number, scale: number, options?: IExportImageOptions): number {\r\n\r\n\t\tif (!options) {\r\n\t\t\treturn scale;\r\n\t\t}\r\n\r\n\t\tlet adjWidth = width * scale;\r\n\t\tlet adjHeight = width * scale;\r\n\r\n\t\t// Check max restrictions\r\n\t\tlet widthScale;\r\n\t\tlet heightScale;\r\n\t\tif (options.maxWidth && (adjWidth > options.maxWidth)) {\r\n\t\t\twidthScale = options.maxWidth / width;\r\n\t\t}\r\n\t\tif (options.maxHeight && (adjHeight > options.maxHeight)) {\r\n\t\t\theightScale = options.maxHeight / height;\r\n\t\t}\r\n\t\tif (widthScale || heightScale) {\r\n\t\t\treturn $math.min(widthScale, heightScale)\r\n\t\t}\r\n\r\n\t\t// Check min restrictions\r\n\t\tif (options.minWidth && (adjWidth < options.minWidth)) {\r\n\t\t\twidthScale = options.minWidth / width;\r\n\t\t}\r\n\t\tif (options.minHeight && (adjHeight < options.minHeight)) {\r\n\t\t\theightScale = options.minHeight / height;\r\n\t\t}\r\n\t\tif (widthScale || heightScale) {\r\n\t\t\treturn $math.max(widthScale, heightScale)\r\n\t\t}\r\n\r\n\t\treturn scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all `<image>` tags in SVG to use data uris instead of external\r\n\t * URLs\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el       SVG node\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t */\r\n\tpublic async imagesToDataURI(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all images\r\n\t\tlet images = el.querySelectorAll(\"image\");\r\n\t\tif (images.length) {\r\n\r\n\t\t\t// Init promises\r\n\t\t\tlet promises = [];\r\n\r\n\t\t\t// There are images, process each of them\r\n\t\t\tfor (let count = images.length, i = 0; i < count; i++) {\r\n\r\n\t\t\t\t// Get image and its href\r\n\t\t\t\tlet image = images[i];\r\n\t\t\t\tlet href = image.getAttributeNS(Export.XLINK, \"href\");\r\n\r\n\t\t\t\t// no href?\r\n\t\t\t\tif (!href) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (href.indexOf(\"data:image\") !== -1) {\r\n\t\t\t\t\t// Ignore image if it's already in Data URI format\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// SVG or bitmap image?\r\n\t\t\t\t\tif (href.indexOf(\".svg\") !== -1) {\r\n\t\t\t\t\t\tpromises.push(this.svgToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpromises.push(this.imageToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tawait Promise.all(promises);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * `foreignObject` elements cannot be exported. This function hides them\r\n\t * temprarily. In the future it might try to convert them to SVG to make them\r\n\t * exportable.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el       SVG node\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t */\r\n\tpublic async prepForeignObjects(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all foreign objects\r\n\t\tlet objects = el.querySelectorAll(\"foreignObject\");\r\n\t\tif (objects.length) {\r\n\r\n\t\t\t// There are foreign objects, process each of them\r\n\t\t\tfor (let count = objects.length, i = 0; i < count; i++) {\r\n\t\t\t\tthis.temporarilyRemoveObject(objects[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n\t * external file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el       SVG element\r\n\t * @param options  Options\r\n\t */\r\n\tpublic async imageToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\r\n\t\t// Create a new image and set its `crossOrigin`. This might not work on some\r\n\t\t// browsers. We'll deal with it if error occurs\r\n\t\tlet img: HTMLImageElement;\r\n\t\ttry {\r\n\r\n\t\t\t// Create image\r\n\t\t\timg = await this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\");\r\n\r\n\t\t\t// Create new canvas\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\r\n\t\t\t// Draw new image on it via `toDataURL`\r\n\t\t\tcanvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n\r\n\t\t\t// Replace image `href` with data uri\r\n\t\t\t// If we got to this point it means image has loaded, however we might\r\n\t\t\t// still get an error with `toDataURL()`\r\n\t\t\ttry {\r\n\t\t\t\tlet uri = canvas.toDataURL();\r\n\t\t\t\tel.setAttribute(\"href\", uri);\r\n\t\t\t\treturn uri;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\t// Give up and temporarily remove the element href temporarily\r\n\t\t\t\tif (options.keepTainted !== false) {\r\n\t\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (e) {\r\n\r\n\t\t\t// Give up and temporarily remove the element's href\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n\t * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el        An SVG element\r\n\t * @param options   Options\r\n\t */\r\n\tpublic async svgToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\t\tlet href = el.getAttributeNS(Export.XLINK, \"href\");\r\n\t\ttry {\r\n\t\t\tlet data = await $net.load(href);\r\n\t\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\t\tcharset: \"base64\",\r\n\t\t\t\ttype: \"svg\",\r\n\t\t\t\toptions: options\r\n\t\t\t}).charset;\r\n\r\n\t\t\tlet uri = this.adapter.apply(\"svgToDataURI\", {\r\n\t\t\t\tdata: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\r\n\t\t\t\toptions: options\r\n\t\t\t}).data;\r\n\r\n\t\t\tel.setAttributeNS(Export.XLINK, \"href\", uri);\r\n\t\t\treturn uri;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\t// Disable temporarily\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": href\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Temporarily removes element from DOM, and replaces it with a dummy\r\n\t * placeholder, as well as stores it for later restoration.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el Node\r\n\t */\r\n\tpublic temporarilyRemoveObject(el: Node, placeholder?: SVGSVGElement): void {\r\n\r\n\t\t// Get parent\r\n\t\tlet parent = el.parentElement || el.parentNode;\r\n\r\n\t\t// Create a placeholder group element if it has not been passed in\r\n\t\tif (!placeholder) {\r\n\t\t\tplaceholder = this.sprite.paper.add(\"g\").node;\r\n\t\t}\r\n\t\tparent.insertBefore(placeholder, el);\r\n\r\n\t\t// Check if we have a textContents we can replace with\r\n\t\t// @todo Perhaps we should explore alternatives to creating text nodes\r\n\t\t// i.e. creating a text version of the HTML-based Text, just for export\r\n\t\t// purposes. Converting HTML into SVG is very complicated\r\n\t\tif (el.textContent) {\r\n\t\t\t/*let text = this.sprite.paper.add(\"text\").node;\r\n\t\t\ttext.textContent = el.textContent;\r\n\t\t\tplaceholder.appendChild(text);\r\n\r\n\t\t\t// Copy properties from the removing element to the placeholder\r\n\t\t\t$dom.copyAttributes(el, placeholder);*/\r\n\t\t}\r\n\r\n\t\t// Remove the old element\r\n\t\tparent.removeChild(el);\r\n\r\n\t\t// Log removed item\r\n\t\tthis._removedObjects.push({\r\n\t\t\t\"element\": el,\r\n\t\t\t\"placeholder\": placeholder\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores all (possibly tainted or unsupported) objects that were\r\n\t * temporarily removed when exporting.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic restoreRemovedObjects(): void {\r\n\t\tlet obj: IExportRemovedObject;\r\n\r\n\t\twhile (true) {\r\n\t\t\tobj = this._removedObjects.pop()\r\n\r\n\t\t\tif (!obj) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t//obj.element.setAttribute(\"href\", obj.originalHref);\r\n\t\t\tlet parent = obj.placeholder.parentElement || obj.placeholder.parentNode;\r\n\t\t\tparent.insertBefore(obj.element, obj.placeholder);\r\n\t\t\t//parent.removeChild(obj.placeholder);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n\t * document does not contain any external images.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return `true` if simplified export can be used\r\n\t */\r\n\tpublic async simplifiedImageExport(): Promise<boolean> {\r\n\r\n\t\tif (this.useSimplifiedExport === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"simplifiedImageExport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\r\n\t\t// Try generating a small SVG-embedded canvas\r\n\t\t// If exception occurs, simplified method is not supported\r\n\t\ttry {\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = 1;\r\n\t\t\tcanvas.height = 1;\r\n\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\t\t\tlet DOMURL = this.getDOMURL();\r\n\t\t\tlet svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], { type: \"image/svg+xml\" });\r\n\t\t\tlet url = DOMURL.createObjectURL(svg);\r\n\t\t\tlet img;\r\n\t\t\ttry {\r\n\t\t\t\timg = await this.loadNewImage(url, 1, 1);\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\ttry {\r\n\t\t\t\t//let uri = canvas.toDataURL(\"image/png\");\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", true);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t} catch (e) {\r\n\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new `<image>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param url          URL of the image\r\n\t * @param width        Width (px)\r\n\t * @param height       Height (px)\r\n\t * @param crossOrigin  Cross-Origin setting\r\n\t * @return Promise\r\n\t */\r\n\tpublic loadNewImage(url: string, width?: number, height?: number, crossOrigin?: string): Promise<HTMLImageElement> {\r\n\t\treturn new Promise((success, error) => {\r\n\r\n\t\t\t// New image\r\n\t\t\tlet image: HTMLImageElement;\r\n\t\t\tif (width && height) {\r\n\t\t\t\timage = new Image(width, height);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\timage = new Image();\r\n\t\t\t}\r\n\r\n\t\t\t// Set crossorigin\r\n\t\t\tif (crossOrigin) {\r\n\t\t\t\timage.setAttribute(\"crossOrigin\", crossOrigin);\r\n\t\t\t}\r\n\r\n\t\t\t// Report success on load\r\n\t\t\timage.onload = () => {\r\n\t\t\t\tsuccess(image);\r\n\t\t\t};\r\n\r\n\t\t\tfunction onerror() {\r\n\t\t\t\t// Error occurred. Just in case it's the crossOrigin issue, let's try\r\n\t\t\t\t// stripping off this attribute and trying again\r\n\t\t\t\tif (crossOrigin) {\r\n\r\n\t\t\t\t\t// Retain old uri\r\n\t\t\t\t\tlet currentHref = image.src;\r\n\r\n\t\t\t\t\t// Set up another `onerror` to handle situations where image is not\r\n\t\t\t\t\t// loadable at all (i.e. protected by CORS)\r\n\t\t\t\t\timage.onerror = () => {\r\n\t\t\t\t\t\t// Nope, no luck\r\n\t\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// remove the `crossOrigin` attribute\r\n\t\t\t\t\timage.removeAttribute(\"crossorigin\");\r\n\r\n\t\t\t\t\t// retry\r\n\t\t\t\t\timage.src = \"\";\r\n\t\t\t\t\timage.src = currentHref;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set image error handlers\r\n\t\t\timage.onabort = onerror;\r\n\t\t\timage.onerror = onerror;\r\n\r\n\t\t\t// Trigger load\r\n\t\t\timage.src = url;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current DOM URL.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return URL\r\n\t */\r\n\tpublic getDOMURL(): any {\r\n\t\treturn self.URL || (<any>self).webkitURL || self;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG representation of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t */\r\n\tpublic async getSVG(type: \"svg\", options?: IExportSVGOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\tlet prehidden = this._objectsAlreadyHidden;\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.hideNonExportableSprites();\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"svg\");\r\n\t\t}\r\n\r\n\t\t// Wait for required elements to be ready before proceeding\r\n\t\tawait this.awaitValidSprites();\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth;\r\n\t\tlet height = this.sprite.pixelHeight;\r\n\t\tlet font = $dom.findFont(this.sprite.dom);\r\n\t\tlet fontSize = $dom.findFontSize(this.sprite.dom);\r\n\t\tlet scale = options.scale || 1;\r\n\t\tlet pixelRatio = this.getPixelRatio(options);\r\n\r\n\t\t// Check if scale needs to be updated as per min/max dimensions\r\n\t\tscale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n\r\n\t\t// Get SVG\r\n\t\tlet svg = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tscale,\r\n\t\t\tfont,\r\n\t\t\tfontSize\r\n\t\t);\r\n\r\n\t\t// Prep data URI\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: \"svg\",\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getSVG\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.restoreNonExportableSprites();\r\n\t\t}\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n\t * necessary.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param svg       Input SVG\r\n\t * @param options   Options\r\n\t * @param width     Width of the SVG viewport\r\n\t * @param height    Height of the SVG viewport\r\n\t * @param font      Font family to use as a base\r\n\t * @param fontSize  Font size to use as a base\r\n\t * @return Output SVG\r\n\t * @todo Add style params to existing <svg>\r\n\t */\r\n\tpublic normalizeSVG(svg: string, options?: IExportSVGOptions, width?: number, height?: number, scale?: number, font?: string, fontSize?: string, background?: Color): string {\r\n\r\n\t\t// Construct width/height params\r\n\t\tlet dimParams = \"\";\r\n\t\tif (width) {\r\n\t\t\tdimParams += \"width=\\\"\" + Math.round(width * (scale || 1)) + \"px\\\" \";\r\n\t\t}\r\n\t\tif (height) {\r\n\t\t\tdimParams += \"height=\\\"\" + Math.round(height * (scale || 1)) + \"px\\\" \";\r\n\t\t}\r\n\r\n\t\t// Apply font settings\r\n\t\tlet styleParams = \"\";\r\n\t\tif (font) {\r\n\t\t\tstyleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\r\n\t\t}\r\n\t\tif (fontSize) {\r\n\t\t\tstyleParams += \"font-size: \" + fontSize + \";\";\r\n\t\t}\r\n\r\n\t\t// Scale\r\n\t\tif (scale) {\r\n\t\t\tdimParams += \"viewBox=\\\"0 0 \" + (width) + \" \" + (height) + \"\\\" \";\r\n\t\t}\r\n\r\n\t\t// Remove foreign objects temporarily\r\n\t\tlet fos: string[] = [];\r\n\t\tlet ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\r\n\t\tif (ms) {\r\n\t\t\tfor (let i = 0; i < ms.length; i++) {\r\n\t\t\t\tsvg = svg.replace(ms[i], $strings.PLACEHOLDER);\r\n\t\t\t\tfos.push(ms[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add missing <svg> enclosure\r\n\t\tif (!svg.match(/<svg/)) {\r\n\t\t\tsvg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tif (dimParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}\r\n\r\n\t\t\t/*if (styleParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}*/\r\n\t\t}\r\n\r\n\r\n\t\tif (background) {\r\n\t\t\tsvg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\r\n\t\t\t//svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\r\n\t\t}\r\n\r\n\t\tif ($browser.isInternetExplorer()) {\r\n\t\t\t// IE can't handle exporting <feColorMatrix> for some reason\r\n\t\t\tsvg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\r\n\t\t}\r\n\r\n\t\t// Remove base uri-related stuff\r\n\t\tlet reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\r\n\t\tsvg = svg.replace(reg, \"url(#\");\r\n\r\n\t\t// Remove escaped quotes in url() parameters\r\n\t\tsvg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\");\r\n\r\n\t\t// Put foreignObjects back in\r\n\t\tif (fos.length) {\r\n\t\t\tfor (let i = 0; i < fos.length; i++) {\r\n\t\t\t\tsvg = svg.replace($strings.PLACEHOLDER, fos[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsvg = this.adapter.apply(\"normalizeSVG\", {\r\n\t\t\tdata: svg,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn svg;\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes an element and returns its contents.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param element  An element to serialize\r\n\t * @return A serialized XML\r\n\t */\r\n\tpublic serializeElement(element: HTMLElement | SVGSVGElement | SVGDefsElement): string {\r\n\t\treturn new XMLSerializer().serializeToString(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a PDF containing chart image.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type     Type of the export\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t * @todo Account for header when calculating vertical fit\r\n\t */\r\n\tpublic async getPDF(type: \"pdf\" | \"pdfdata\", options?: IExportPDFOptions): Promise<string> {\r\n\r\n\t\t// Get image\r\n\t\tlet image = await this.getImage(options.imageFormat || \"png\", options);\r\n\r\n\t\t// Load pdfmake\r\n\t\tlet pdfmake = await this.pdfmake;\r\n\r\n\t\t// Defaults\r\n\t\tlet defaultMargins = [30, 30, 30, 30];\r\n\r\n\t\t// Init content for PDF\r\n\t\tlet doc = {\r\n\t\t\tpageSize: options.pageSize || \"A4\",\r\n\t\t\tpageOrientation: options.pageOrientation || \"portrait\",\r\n\t\t\tpageMargins: options.pageMargins || defaultMargins,\r\n\t\t\tdefaultStyle: {\r\n\t\t\t\tfont: options.font ? options.font.name : undefined\r\n\t\t\t},\r\n\t\t\t//header: <any>[],\r\n\t\t\tcontent: <any>[]\r\n\t\t};\r\n\r\n\t\t// Should we add title?\r\n\t\tlet title = this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this.title,\r\n\t\t\toptions: options\r\n\t\t}).title;\r\n\r\n\t\tlet extraMargin = 0;\r\n\r\n\t\tif (title) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: title,\r\n\t\t\t\tfontSize: options.fontSize || 14,\r\n\t\t\t\tbold: true,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\r\n\t\t\t// Add some leftover margin for title\r\n\t\t\textraMargin += 50;\r\n\t\t}\r\n\r\n\t\t// Add page URL?\r\n\t\tif (options.addURL) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: this.language.translate(\"Saved from\") + \": \" + document.location.href,\r\n\t\t\t\tfontSize: options.fontSize,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\r\n\t\t\t// Add some leftover margin for URL\r\n\t\t\textraMargin += 50;\r\n\t\t}\r\n\r\n\t\t// Add image\r\n\t\tif (type != \"pdfdata\") {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\timage: image,\r\n\t\t\t\talignment: options.align || \"left\",\r\n\t\t\t\tfit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add data\r\n\t\tif (type == \"pdfdata\" || options.addData) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttable: await this.getPDFData(\"pdf\", options),\r\n\t\t\t\tfontSize: options.fontSize || 14\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Apply adapters\r\n\t\tdoc = this.adapter.apply(\"pdfmakeDocument\", {\r\n\t\t\tdoc: doc,\r\n\t\t\toptions: options\r\n\t\t}).doc;\r\n\r\n\t\tlet fonts: { [name: string]: { [types: string]: string } } | null = null;\r\n\t\tlet vfs: { [path: string]: string } | null = null;\r\n\r\n\t\tfunction addFont(font: IFont) {\r\n\t\t\tconst paths: { [path: string]: string } = {};\r\n\r\n\t\t\tpaths.normal = font.normal.path;\r\n\t\t\tvfs[font.normal.path] = font.normal.bytes;\r\n\r\n\t\t\tif (font.bold) {\r\n\t\t\t\tpaths.bold = font.bold.path;\r\n\t\t\t\tvfs[font.bold.path] = font.bold.bytes;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tpaths.bold = font.normal.path;\r\n\t\t\t}\r\n\r\n\t\t\tif (font.italics) {\r\n\t\t\t\tpaths.italics = font.italics.path;\r\n\t\t\t\tvfs[font.italics.path] = font.italics.bytes;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tpaths.italics = font.normal.path;\r\n\t\t\t}\r\n\r\n\t\t\tif (font.bolditalics) {\r\n\t\t\t\tpaths.bolditalics = font.bolditalics.path;\r\n\t\t\t\tvfs[font.bolditalics.path] = font.bolditalics.bytes;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tpaths.bolditalics = font.normal.path;\r\n\t\t\t}\r\n\r\n\t\t\tfonts[font.name] = paths;\r\n\t\t}\r\n\r\n\t\tif (options.font) {\r\n\t\t\tfonts = {};\r\n\t\t\tvfs = {};\r\n\t\t\taddFont(options.font);\r\n\r\n\t\t\tif (options.extraFonts) {\r\n\t\t\t\t$array.each(options.extraFonts, addFont);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create PDF\r\n\t\treturn await new Promise<string>((success, error) => {\r\n\t\t\tpdfmake.createPdf(doc, null, fonts, vfs).getDataUrl((uri: string) => {\r\n\t\t\t\tsuccess(uri);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @param type     Type of the export\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getPDFData(type: \"pdf\", options?: IExportPDFOptions): Promise<any> {\r\n\r\n\t\t// Init output\r\n\t\tlet content = <any>{\r\n\t\t\t\"body\": <any>[]\r\n\t\t};\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"pdf\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tconst data = this.data;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"pdfdata\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"pdf\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataRow, options, undefined, true));\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\t//console.log(a, b)\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\r\n\t\t\t\tcontent.headerRows = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\tcontent.body.push(this.getPDFDataRow(data[i], options, dataFields));\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"pdfmakeTable\", {\r\n\t\t\ttable: content,\r\n\t\t\toptions: options\r\n\t\t}).table;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of data for use in PDF data table (pdfmake).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @since 4.7.0\r\n\t * @param  row         An object holding data for the row\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Formated Data line\r\n\t */\r\n\tpublic getPDFDataRow(row: any, options?: IExportPDFOptions, dataFields?: any, asIs: boolean = false): Array<string> {\r\n\r\n\t\t// Init\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"pdfdata\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// Process each row item\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"csv\">(key, value, options);\r\n\t\t\titem = \"\" + item;\r\n\r\n\t\t\t// Add to item\r\n\t\t\titems.push(item);\r\n\t\t}, (a, b) => {\r\n\t\t\t//console.log(a, b)\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns fit dimensions for available page sizes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pageSize Page size\r\n\t * @return `[width, height]` in pixels\r\n\t */\r\n\tpublic getPageSizeFit(pageSize: pageSizes, margins?: number | number[], extraMargin: number = 0): number[] {\r\n\r\n\t\t// Check margins\r\n\t\tlet newMargins = [0, 0, 0, 0];\r\n\t\tif (typeof margins == \"number\") {\r\n\t\t\tnewMargins = [margins, margins, margins, margins];\r\n\t\t}\r\n\t\telse if (margins.length == 2) {\r\n\t\t\tnewMargins = [margins[0], margins[1], margins[0], margins[1]];\r\n\t\t}\r\n\t\telse if (margins.length == 4) {\r\n\t\t\tnewMargins = margins;\r\n\t\t}\r\n\r\n\t\t// Define available page sizes\r\n\t\tlet sizes = {\r\n\t\t\t\"4A0\": [4767.87, 6740.79],\r\n\t\t\t\"2A0\": [3370.39, 4767.87],\r\n\t\t\tA0: [2383.94, 3370.39],\r\n\t\t\tA1: [1683.78, 2383.94],\r\n\t\t\tA2: [1190.55, 1683.78],\r\n\t\t\tA3: [841.89, 1190.55],\r\n\t\t\tA4: [595.28, 841.89],\r\n\t\t\tA5: [419.53, 595.28],\r\n\t\t\tA6: [297.64, 419.53],\r\n\t\t\tA7: [209.76, 297.64],\r\n\t\t\tA8: [147.40, 209.76],\r\n\t\t\tA9: [104.88, 147.40],\r\n\t\t\tA10: [73.70, 104.88],\r\n\t\t\tB0: [2834.65, 4008.19],\r\n\t\t\tB1: [2004.09, 2834.65],\r\n\t\t\tB2: [1417.32, 2004.09],\r\n\t\t\tB3: [1000.63, 1417.32],\r\n\t\t\tB4: [708.66, 1000.63],\r\n\t\t\tB5: [498.90, 708.66],\r\n\t\t\tB6: [354.33, 498.90],\r\n\t\t\tB7: [249.45, 354.33],\r\n\t\t\tB8: [175.75, 249.45],\r\n\t\t\tB9: [124.72, 175.75],\r\n\t\t\tB10: [87.87, 124.72],\r\n\t\t\tC0: [2599.37, 3676.54],\r\n\t\t\tC1: [1836.85, 2599.37],\r\n\t\t\tC2: [1298.27, 1836.85],\r\n\t\t\tC3: [918.43, 1298.27],\r\n\t\t\tC4: [649.13, 918.43],\r\n\t\t\tC5: [459.21, 649.13],\r\n\t\t\tC6: [323.15, 459.21],\r\n\t\t\tC7: [229.61, 323.15],\r\n\t\t\tC8: [161.57, 229.61],\r\n\t\t\tC9: [113.39, 161.57],\r\n\t\t\tC10: [79.37, 113.39],\r\n\t\t\tRA0: [2437.80, 3458.27],\r\n\t\t\tRA1: [1729.13, 2437.80],\r\n\t\t\tRA2: [1218.90, 1729.13],\r\n\t\t\tRA3: [864.57, 1218.90],\r\n\t\t\tRA4: [609.45, 864.57],\r\n\t\t\tSRA0: [2551.18, 3628.35],\r\n\t\t\tSRA1: [1814.17, 2551.18],\r\n\t\t\tSRA2: [1275.59, 1814.17],\r\n\t\t\tSRA3: [907.09, 1275.59],\r\n\t\t\tSRA4: [637.80, 907.09],\r\n\t\t\tEXECUTIVE: [521.86, 756.00],\r\n\t\t\tFOLIO: [612.00, 936.00],\r\n\t\t\tLEGAL: [612.00, 1008.00],\r\n\t\t\tLETTER: [612.00, 792.00],\r\n\t\t\tTABLOID: [792.00, 1224.00]\r\n\t\t};\r\n\r\n\t\t// Calculate size\r\n\t\tlet fitSize = sizes[pageSize]\r\n\t\tfitSize[0] -= newMargins[0] + newMargins[2];\r\n\t\tfitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\r\n\t\treturn fitSize;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an Excel file of chart's data.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type     Type of the export\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t * @todo Handle dates\r\n\t * @todo Support for multi-sheet\r\n\t */\r\n\tpublic async getExcel(type: \"xlsx\", options?: IExportExcelOptions): Promise<string> {\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"xlsx\");\r\n\t\t}\r\n\r\n\t\t// Load xlsx\r\n\t\tlet XLSX = await this.xlsx;\r\n\r\n\t\t// Create workbook options\r\n\t\tlet wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\r\n\t\t\txlsx: XLSX,\r\n\t\t\toptions: {\r\n\t\t\t\tbookType: \"xlsx\",\r\n\t\t\t\tbookSST: false,\r\n\t\t\t\ttype: \"base64\",\r\n\t\t\t\t//dateNF: 'yyyy-mm-dd'\r\n\t\t\t}\r\n\t\t}).options;\r\n\r\n\t\t// Get sheet name\r\n\t\tlet sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\r\n\t\t\txlsx: XLSX,\r\n\t\t\tname: this.title || this.language.translate(\"Data\")\r\n\t\t}).name);\r\n\r\n\t\t// Create a workbook\r\n\t\tlet wb = {\r\n\t\t\tSheetNames: <any>[sheetName],\r\n\t\t\tSheets: <any>{}\r\n\t\t};\r\n\r\n\t\t// Init worksheet data\r\n\t\tlet data: Array<any> = [];\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"xslx\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"xlsx\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = this.data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"xlsx\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\tdata.push(this.getExcelRow(dataRow, options, undefined, true));\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\t//console.log(a, b)\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\tdata.push(this.getExcelRow(dataFields, options, undefined, true));\r\n\t\t\t}\r\n\r\n\t\t\t// Add lines\r\n\t\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\t\tdata.push(this.getExcelRow(this.data[i], options, dataFields));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create sheet and add data\r\n\t\twb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\r\n\r\n\t\t// Apply adapters\r\n\t\twb = this.adapter.apply(\"xlsxWorkbook\", {\r\n\t\t\txlsx: XLSX,\r\n\t\t\tworkbook: wb,\r\n\t\t\toptions: options\r\n\t\t}).workbook;\r\n\r\n\t\t// Generate data uri\r\n\t\tlet uri = this.adapter.apply(\"getExcel\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * This is needed to work around Excel limitations.\r\n\t *\r\n\t * @param name  Source name\r\n\t * @return Normalized name\r\n\t */\r\n\tprivate normalizeExcelSheetName(name: string): string {\r\n\t\tname = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\r\n\t\treturn $utils.truncateWithEllipsis(name, 31, \"...\", true);\r\n\t}\r\n\r\n\t/**\r\n\t * Rertuns an array of values to be used as Excel row.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  row         Row data\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Array of values\r\n\t */\r\n\tpublic getExcelRow(row: any, options?: IExportExcelOptions, dataFields?: any, asIs: boolean = false): any[] {\r\n\r\n\t\t// Init\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"xlsx\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// Process each row item\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"xlsx\">(key, value, options, true);\r\n\r\n\t\t\titems.push(item);\r\n\t\t}, (a, b) => {\r\n\t\t\t//console.log(a, b)\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted as CSV.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getCSV(type: \"csv\", options?: IExportCSVOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"csv\");\r\n\t\t}\r\n\r\n\t\t// Init output\r\n\t\tlet csv = \"\";\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"csv\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tlet br = \"\";\r\n\t\tconst data = this.data;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"csv\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"csv\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\tcsv += br + this.getCSVRow(dataRow, options, undefined, true);\r\n\t\t\t\tbr = \"\\n\";\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn 1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet row = this.getCSVRow(data[i], options, dataFields);\r\n\t\t\t\tif (options.reverse) {\r\n\t\t\t\t\tcsv = row + br + csv;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcsv += br + row;\r\n\t\t\t\t}\r\n\t\t\t\tbr = \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\tcsv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getCSV\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv) : csv,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of CSV data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  row         An object holding data for the row\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Formated CSV line\r\n\t */\r\n\tpublic getCSVRow(row: any, options?: IExportCSVOptions, dataFields?: any, asIs: boolean = false): string {\r\n\r\n\t\t// Init\r\n\t\tlet separator = options.separator || \",\";\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"csv\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// Process each row item\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Check if we need to skip\r\n\t\t\t// This is no longer required because we are iterating via dataFields anyway\r\n\t\t\t/*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n\t\t\t\treturn;\r\n\t\t\t}*/\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"csv\">(key, value, options);\r\n\r\n\t\t\t// Cast and escape doublequotes\r\n\t\t\titem = \"\" + item;\r\n\t\t\titem = item.replace(/\"/g, '\"\"');\r\n\r\n\t\t\t// Enclose into double quotes\r\n\t\t\tif (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\r\n\t\t\t\titem = \"\\\"\" + item + \"\\\"\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add to item\r\n\t\t\titems.push(item);\r\n\t\t}, (a, b) => {\r\n\t\t\t//console.log(a, b)\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\treturn items.join(separator);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted as HTML table.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getHTML(type: \"html\", options?: IExportHTMLOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"html\");\r\n\t\t}\r\n\r\n\t\t// Init output\r\n\t\tlet html = \"<table>\";\r\n\t\tif (options.tableClass) {\r\n\t\t\thtml = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\r\n\t\t}\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"html\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tconst data = this.data;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"html\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\thtml += \"\\n<tbody>\";\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"html\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(dataRow, options, undefined, true);\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn 1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\thtml += \"\\n</tbody>\";\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\thtml += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\r\n\t\t\t}\r\n\r\n\t\t\thtml += \"\\n<tbody>\";\r\n\r\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\r\n\t\t\t}\r\n\r\n\t\t\thtml += \"\\n</tbody>\";\r\n\t\t}\r\n\r\n\t\thtml += \"\\n</table>\";\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getHTML\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of HTML data.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @ignore Exclude from docs\r\n\t * @param  row         An object holding data for the row\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Formated HTML row\r\n\t */\r\n\tpublic getHTMLRow(row: any, options?: IExportHTMLOptions, dataFields?: any, asIs: boolean = false, headerRow: boolean = false): string {\r\n\r\n\t\t// Init output\r\n\t\tlet html = \"\\t<tr>\";\r\n\t\tif (options.rowClass) {\r\n\t\t\thtml = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\r\n\t\t}\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"html\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// th or dh?\r\n\t\tconst tag = headerRow ? \"th\" : \"td\";\r\n\r\n\t\t// Process each row item\r\n\t\tlet first = true;\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"html\">(key, value, options);\r\n\r\n\t\t\t// Escape HTML entities\r\n\t\t\titem = \"\" + item;\r\n\t\t\titem = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i: string) {\r\n\t\t\t\treturn \"&#\" + i.charCodeAt(0) + \";\";\r\n\t\t\t});\r\n\r\n\t\t\t// Which tag to use\r\n\t\t\tlet useTag = tag;\r\n\t\t\tif (options.pivot && first) {\r\n\t\t\t\tuseTag = \"th\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add cell\r\n\t\t\tif (options.cellClass) {\r\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\r\n\t\t\t}\r\n\r\n\t\t\tfirst = false;\r\n\t\t}, (a, b) => {\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\thtml += \"\\n\\t</tr>\";\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data in JSON format.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getJSON(type: \"json\", options?: IExportJSONOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(\"json\");\r\n\t\t}\r\n\r\n\t\t// Check if we need to regenerate data based on `dataFields`\r\n\t\tlet data: any[];\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"json\"\r\n\t\t}).dataFields;\r\n\t\tif (!this._dynamicDataFields) {\r\n\t\t\tdata = [];\r\n\t\t\tconst sourceData = this.data;\r\n\t\t\tfor (let len = sourceData.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet value = sourceData[i];\r\n\t\t\t\tif (typeof value == \"object\") {\r\n\t\t\t\t\tlet newValue: any = {};\r\n\t\t\t\t\t$object.each(value, (field, item) => {\r\n\t\t\t\t\t\tif ($type.hasValue(dataFields[field])) {\r\n\t\t\t\t\t\t\tnewValue[dataFields[field]] = this.convertToSpecialFormat<\"json\">(field, item, options);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdata.push(newValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdata = this.data;\r\n\t\t}\r\n\r\n\t\t// Stringify JSON\r\n\t\tlet json = JSON.stringify(data, (key, value) => {\r\n\t\t\tif (typeof value == \"object\") {\r\n\t\t\t\t$object.each(value, (field, item) => {\r\n\t\t\t\t\tvalue[field] = this.convertToSpecialFormat<\"json\">(field, item, options);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}, options.indent);\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getJSON\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the value to proper date format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  field         Field name\r\n\t * @param  value         Value\r\n\t * @param  options       Options\r\n\t * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n\t * @return Formatted date value or unmodified value\r\n\t */\r\n\tpublic convertToSpecialFormat<Key extends \"json\" | \"csv\" | \"xlsx\" | \"html\" | \"pdf\">(field: string, value: any, options?: IExportOptions[Key], keepOriginal?: boolean): any {\r\n\r\n\t\t// Is this a timestamp or duration?\r\n\t\tif (typeof value == \"number\") {\r\n\t\t\tif (this.isDateField(field)) {\r\n\t\t\t\tvalue = new Date(value);\r\n\t\t\t}\r\n\t\t\telse if (this.isDurationField(field)) {\r\n\t\t\t\treturn this.durationFormatter.format(value, this.durationFormat);\r\n\t\t\t}\r\n\t\t\telse if (this.isNumberField(field) && this.numberFormat) {\r\n\t\t\t\treturn this.numberFormatter.format(value, this.numberFormat);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tif (options.useTimestamps) {\r\n\t\t\t\tvalue = value.getTime();\r\n\t\t\t}\r\n\t\t\telse if (options.useLocale) {\r\n\t\t\t\tif (!keepOriginal) {\r\n\t\t\t\t\tvalue = value.toLocaleString();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.dateFormatter.format(value, this.dateFormat);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\r\n\t\t\tvalue = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts empty value based on `emptyAs` option.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic convertEmptyValue<Key extends \"csv\" | \"xlsx\">(field: string, value: any, options?: IExportOptions[Key]): any {\r\n\t\treturn $type.hasValue(value) ? value : options.emptyAs;\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers download of the file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param uri       Data URI with file content\r\n\t * @param fileName  File name\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async download(uri: string, fileName: string, addBOM: boolean = false): Promise<boolean> {\r\n\r\n\t\tif (this.msBlobDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For all IEs 10 and up we use native method `msSaveBlob`\r\n\t\t\t */\r\n\r\n\t\t\t// Extract content type and get pure data without headers\r\n\t\t\tlet parts = uri.split(\";\");\r\n\t\t\tlet contentType = parts.shift().replace(/data:/, \"\");\r\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n\r\n\r\n\t\t\t// Check if we need to Base64-decode\r\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet decoded = atob(uri);\r\n\t\t\t\t\turi = decoded;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\r\n\t\t\t\twindow.navigator.msSaveBlob(blob, fileName);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Dissect uri into array\r\n\t\t\tlet chars = new Array(uri.length);\r\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\r\n\t\t\t\tlet charCode = uri.charCodeAt(i);\r\n\t\t\t\tchars[i] = charCode;\r\n\t\t\t}\r\n\r\n\t\t\t// Prep Blob and force the download\r\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n\t\t\twindow.navigator.msSaveBlob(blob, fileName);\r\n\r\n\t\t}\r\n\r\n\t\telse if (this.blobDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * Supports Blob object.\r\n\t\t\t * Use it.\r\n\t\t\t */\r\n\t\t\tlet link = document.createElement(\"a\");\r\n\t\t\tlink.download = fileName;\r\n\t\t\tdocument.body.appendChild(link);\r\n\r\n\t\t\t// Extract content type and get pure data without headers\r\n\t\t\tlet parts = uri.split(\";\");\r\n\t\t\tlet contentType = parts.shift().replace(/data:/, \"\");\r\n\r\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n\r\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet decoded = atob(uri);\r\n\t\t\t\t\turi = decoded;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (addBOM) {\r\n\t\t\t\t\turi = \"\\ufeff\" + uri;\r\n\t\t\t\t}\r\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\r\n\t\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\t\tlink.href = url;\r\n\t\t\t\tlink.download = fileName;\r\n\t\t\t\tlink.click();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdocument.body.removeChild(link);\r\n\t\t\t\t\twindow.URL.revokeObjectURL(url);\r\n\t\t\t\t}, 100);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Dissect uri into array\r\n\t\t\tlet chars = new Array(uri.length);\r\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\r\n\t\t\t\tlet charCode = uri.charCodeAt(i);\r\n\t\t\t\tchars[i] = charCode;\r\n\t\t\t}\r\n\r\n\t\t\tif (addBOM) {\r\n\t\t\t\tchars = [0xEF, 0xBB, 0xBF].concat(chars);\r\n\t\t\t}\r\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\tlink.href = url;\r\n\t\t\tlink.download = fileName;\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.URL.revokeObjectURL(url);\r\n\t\t\t}, 100);\r\n\r\n\t\t}\r\n\r\n\t\telse if (this.linkDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For regular browsers, we create a link then simulate a click on it\r\n\t\t\t */\r\n\r\n\t\t\tlet link = document.createElement(\"a\");\r\n\t\t\tlink.download = fileName;\r\n\t\t\tlink.href = uri;\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\r\n\t\t}\r\n\t\telse if (this.legacyIE()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * Old IEs (9 and down) we will use an <iframe> trick\r\n\t\t\t */\r\n\r\n\t\t\tlet parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\r\n\r\n\t\t\tif (parts.length === 4) {\r\n\t\t\t\t// Base64-encoded or text-based stuff?\r\n\t\t\t\tif (parts[2] == \"base64\") {\r\n\r\n\t\t\t\t\t// Base64-encoded - probably an image\r\n\t\t\t\t\tif (parts[1].match(/^image\\//)) {\r\n\r\n\t\t\t\t\t\t// Yep, an image. Let's create a temporary image placeholder,\r\n\t\t\t\t\t\t// so that user can use do Save As.\r\n\t\t\t\t\t\tthis.showModal(\r\n\t\t\t\t\t\t\t\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" +\r\n\t\t\t\t\t\t\t\"<p>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\"\r\n\t\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t\t\"</p>\" +\r\n\t\t\t\t\t\t\t\"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"(Press ESC to close this message)\"\r\n\t\t\t\t\t\t\t) + \"</small></p>\",\r\n\t\t\t\t\t\t\tthis.language.translate(\"Image Export Complete\")\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// Text-based\r\n\r\n\t\t\t\t\t// IE9 is trippy about saving files with filenames of the extensions it\r\n\t\t\t\t\t// does not know. Let's use .txt extension for all text-based export\r\n\t\t\t\t\t// formats, except SVG.\r\n\t\t\t\t\tlet contentType;\r\n\t\t\t\t\tif (fileName.match(/\\.svg$/)) {\r\n\t\t\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcontentType = \"text/plain\";\r\n\t\t\t\t\t\tfileName += \".txt\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Create temporary iframe\r\n\t\t\t\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\t\t\t\tiframe.width = \"1px\";\r\n\t\t\t\t\tiframe.height = \"1px\"\r\n\t\t\t\t\tiframe.style.display = \"none\";\r\n\t\t\t\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t\t\t\t// Add our stuff to the document of the iframe and trigger save as\r\n\t\t\t\t\tlet idoc = iframe.contentDocument;\r\n\t\t\t\t\tidoc.open(contentType, \"replace\");\r\n\t\t\t\t\t// TODO test this with various encodings (e.g. UTF)\r\n\t\t\t\t\t//idoc.charset = parts[2].replace(/charset=/, \"\");\r\n\t\t\t\t\tidoc.write(decodeURIComponent(parts[3]));\r\n\t\t\t\t\tidoc.close();\r\n\t\t\t\t\tidoc.execCommand(\"SaveAs\", true, fileName);\r\n\r\n\t\t\t\t\t// Destroy the iframe\r\n\t\t\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * Something else - perhaps a mobile.\r\n\t\t\t * Let's just display it in the same page.\r\n\t\t\t * (hey we don't like it either)\r\n\t\t\t */\r\n\t\t\twindow.location.href = uri;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if browser has any supported methods to trigger download\r\n\t * of a binary file.\r\n\t *\r\n\t * @return Supports downloads?\r\n\t */\r\n\tpublic downloadSupport(): boolean {\r\n\t\t//return !this.legacyIE();\r\n\t\treturn this.linkDownloadSupport() || this.msBlobDownloadSupport();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports \"download\" attribute on links.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Browser supports triggering downloads?\r\n\t */\r\n\tpublic linkDownloadSupport(): boolean {\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"linkDownloadSupport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\t\tlet a = document.createElement(\"a\");\r\n\t\tlet res = typeof a.download !== \"undefined\";\r\n\t\tregistry.setCache(\"linkDownloadSupport\", res);\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports download via `msBlob`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Browser supports triggering downloads?\r\n\t */\r\n\tpublic blobDownloadSupport(): boolean {\r\n\t\treturn $type.hasValue(window.Blob);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports download via `msBlob`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Browser supports triggering downloads?\r\n\t */\r\n\tpublic msBlobDownloadSupport(): boolean {\r\n\t\treturn $type.hasValue(window.navigator.msSaveOrOpenBlob);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this is a legacy version of IE.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return IE9 or less?\r\n\t */\r\n\tpublic legacyIE(): boolean {\r\n\t\t// Create a temporary <div> with conditional tags in it an an <i> tag.\r\n\t\t// Count <i>s. If there are some, we have IE9 or late on our hands.\r\n\t\tlet div = document.createElement(\"div\");\r\n\t\tdiv.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\r\n\t\treturn div.getElementsByTagName(\"i\").length == 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates print of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param data     Data URI for the image\r\n\t * @param options  Options\r\n\t * @param title    Optional title to use (uses window's title by default)\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async print(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\tif (options.printMethod == \"css\") {\r\n\t\t\treturn this.printViaCSS(data, options, title);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.printViaIframe(data, options, title);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected async printViaCSS(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\t\t// Save current scroll position\r\n\t\tlet scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n\r\n\t\t// Hide all current nodes of the document and save their current states\r\n\t\t// of `display` style\r\n\t\t/*let states: Array<string> = [];\r\n\t\tlet items = document.body.childNodes;\r\n\t\tfor (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\tstates[i] = item.style.display;\r\n\t\t\t\titem.style.display = \"none\";\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\t// Hide all document nodes by applyin custom CSS\r\n\t\tlet rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\r\n\t\t\t\"display\": \"none\",\r\n\t\t\t\"position\": \"fixed\",\r\n\t\t\t\"visibility\": \"hidden\",\r\n\t\t\t\"opacity\": \"0\",\r\n\t\t\t\"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\r\n\t\t});\r\n\r\n\t\t// Replace title?\r\n\t\tlet originalTitle: string;\r\n\t\tif (title && document && document.title) {\r\n\t\t\toriginalTitle = document.title;\r\n\t\t\tdocument.title = title;\r\n\t\t}\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\timg.style.display = \"block\";\r\n\t\timg.style.position = \"relative\";\r\n\t\timg.style.visibility = \"visible\";\r\n\t\timg.style.opacity = \"1\";\r\n\t\timg.style.clipPath = \"none\";\r\n\t\tdocument.body.appendChild(img);\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\t(<any>window).print();\r\n\t\t}, 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(img);\r\n\r\n\t\t\t// Reset back all elements\r\n\t\t\t/*for (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\t\titem.style.display = states[i];\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\trule.dispose();\r\n\r\n\t\t\t// Restore title\r\n\t\t\tif (originalTitle) {\r\n\t\t\t\tdocument.title = document.title;\r\n\t\t\t}\r\n\r\n\t\t\t// Scroll back the document the way it was before\r\n\t\t\tdocument.documentElement.scrollTop = document.body.scrollTop = scroll;\r\n\r\n\t\t}, options.delay || 500);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected async printViaIframe(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\t// Create an iframe\r\n\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\tiframe.style.visibility = \"hidden\";\r\n\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t// This is needed for FireFox\r\n\t\tiframe.contentWindow.document.open();\r\n\t\tiframe.contentWindow.document.close();\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\timg.style.height = \"auto\";\r\n\t\tif (title) {\r\n\t\t\tiframe.contentWindow.document.title = title;\r\n\t\t}\r\n\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\r\n\t\t(<any>iframe).load = function() {\r\n\t\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\t\t};\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!(<any>iframe).contentWindow.document.execCommand(\"print\", false, null)) {\r\n\t\t\t\t\t(<any>iframe).contentWindow.print();\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\t(<any>iframe).contentWindow.print();\r\n\t\t\t}\r\n\t\t}, options.delay || 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t}, options.delay + 50 || 100);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a background color for the element. If element is transparent it goes\r\n\t * up the DOM hierarchy to find a parent element that does.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param element Element\r\n\t * @return Color code\r\n\t */\r\n\tpublic findBackgroundColor(element: Element): Color {\r\n\r\n\t\t// Check if element has styles set\r\n\t\tlet opacity = 1,\r\n\t\t\tcurrentColor = (<string>getComputedStyle(element, \"background-color\"));\r\n\r\n\t\t// Check opacity\r\n\t\tif (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\r\n\t\t\topacity = 0;\r\n\t\t}\r\n\r\n\t\tif (opacity == 0) {\r\n\t\t\tlet parent = element.parentElement;// || <Element>element.parentNode;\r\n\r\n\t\t\t// Completely transparent. Look for a parent\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn this.findBackgroundColor(parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn color(\"#fff\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn color(currentColor, opacity);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a container to be used to place [[ExportMenu]] in.\r\n\t *\r\n\t * @param value Reference\r\n\t */\r\n\tpublic set container(value: HTMLElement) {\r\n\t\tthis._container = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Reference\r\n\t */\r\n\tpublic get container(): HTMLElement {\r\n\t\treturn this.adapter.apply(\"container\", {\r\n\t\t\tcontainer: this._container\r\n\t\t}).container;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n\t * internal elements.\r\n\t *\r\n\t * @param value Sprite\r\n\t */\r\n\tpublic set sprite(value: Sprite) {\r\n\t\tthis._sprite = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sprite\r\n\t */\r\n\tpublic get sprite(): Sprite {\r\n\t\treturn this.adapter.apply(\"sprite\", {\r\n\t\t\tsprite: this._sprite\r\n\t\t}).sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of extra [[Sprite]] elements to include in export.\r\n\t *\r\n\t * It can be used to export any external elements, or even other charts.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.extraSprites.push(chart2);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.extraSprites.push(chart2);\r\n\t * ```\r\n\t *\r\n\t * IMPORTANT: This setting is ignored when exporting to SVG format.\r\n\t *\r\n\t * @since 4.2.0\r\n\t * @param value Sprite\r\n\t */\r\n\tpublic set extraSprites(value: Array<Sprite | IExportCanvas>) {\r\n\t\tthis._extraSprites = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sprite\r\n\t */\r\n\tpublic get extraSprites(): Array<Sprite | IExportCanvas> {\r\n\t\treturn this.adapter.apply(\"extraSprites\", {\r\n\t\t\textraSprites: this._extraSprites\r\n\t\t}).extraSprites;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of [[Sprite]] elements that need to be valid before export\r\n\t * commences.\r\n\t *\r\n\t * If any of those elements is not completely ready when export is triggered,\r\n\t * the export will wait until they are (their `validated` event triggers)\r\n\t * before going through with the export opertaion.\r\n\t *\r\n\t * This is useful if you need to modify chart appearance for the export.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Add watermark\r\n\t * let watermark = chart.createChild(am4core.Label);\r\n\t * watermark.text = \"Copyright (C) 2019\";\r\n\t * watermark.disabled = true;\r\n\t *\r\n\t * // Add watermark to validated sprites\r\n\t * chart.exporting.validateSprites.push(watermark);\r\n\t *\r\n\t * // Enable watermark on export\r\n\t * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n\t *   watermark.disabled = false;\r\n\t * });\r\n\t *\r\n\t * // Disable watermark when export finishes\r\n\t * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n\t *   watermark.disabled = true;\r\n\t * });\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Add watermark\r\n\t * var watermark = chart.createChild(am4core.Label);\r\n\t * watermark.text = \"Copyright (C) 2019\";\r\n\t * watermark.disabled = true;\r\n\t *\r\n\t * // Add watermark to validated sprites\r\n\t * chart.exporting.validateSprites.push(watermark);\r\n\t *\r\n\t * // Enable watermark on export\r\n\t * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n\t *   watermark.disabled = false;\r\n\t * });\r\n\t *\r\n\t * // Disable watermark when export finishes\r\n\t * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n\t *   watermark.disabled = true;\r\n\t * });\r\n\t * ```\r\n\t *\r\n\t * @since 4.6.8\r\n\t * @param value Sprite\r\n\t */\r\n\tpublic set validateSprites(value: Array<Sprite>) {\r\n\t\tthis._validateSprites = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sprite\r\n\t */\r\n\tpublic get validateSprites(): Array<Sprite> {\r\n\t\treturn this.adapter.apply(\"validateSprites\", {\r\n\t\t\tvalidateSprites: this._validateSprites\r\n\t\t}).validateSprites;\r\n\t}\r\n\r\n\t/**\r\n\t * Data to export.\r\n\t *\r\n\t * @param value Data\r\n\t */\r\n\tpublic set data(value: any) {\r\n\t\tthis._data = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data\r\n\t */\r\n\tpublic get data(): any {\r\n\t\treturn this.adapter.apply(\"data\", {\r\n\t\t\tdata: this._data\r\n\t\t}).data;\r\n\t}\r\n\r\n\t/**\r\n\t * Data fields in `{ field: fieldName }` format. Those are used for\r\n\t * exporting in data formats to name the columns.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n\t * @param value Field names\r\n\t */\r\n\tpublic set dataFields(value: any) {\r\n\t\tthis._dataFields = value;\r\n\t\tthis._dynamicDataFields = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Field names `{ field: fieldName }`\r\n\t */\r\n\tpublic get dataFields(): any {\r\n\t\tif (!this._dataFields) {\r\n\t\t\tthis.generateDataFields();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dataFields\", {\r\n\t\t\tdataFields: this._dataFields\r\n\t\t}).dataFields;\r\n\t}\r\n\r\n\t/**\r\n\t * Called after target chart's data updates.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic handleDataUpdated(): void {\r\n\t\tif (this._dynamicDataFields) {\r\n\t\t\tthis._dataFields = undefined;\r\n\t\t}\r\n\t\tconst hasData = this.data.length > 0;\r\n\t\tif (this._prevHasData != hasData) {\r\n\t\t\tthis._prevHasData = hasData;\r\n\t\t\tif (this.menu) {\r\n\t\t\t\tthis.menu.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n\t *\r\n\t * @param value DateFormatter instance\r\n\t */\r\n\tpublic set dateFormatter(value: DateFormatter) {\r\n\t\tthis._dateFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A DateFormatter instance\r\n\t */\r\n\tpublic get dateFormatter(): DateFormatter {\r\n\t\tif (!this._dateFormatter) {\r\n\t\t\tthis._dateFormatter = new DateFormatter();\r\n\t\t\tthis._dateFormatter.language = this.language;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFormatter\", {\r\n\t\t\tdateFormatter: this._dateFormatter\r\n\t\t}).dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n\t * format if not set.\r\n\t *\r\n\t * @param value Date format\r\n\t */\r\n\tpublic set dateFormat(value: $type.Optional<string | Intl.DateTimeFormatOptions>) {\r\n\t\tthis._dateFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date format\r\n\t */\r\n\tpublic get dateFormat(): $type.Optional<string | Intl.DateTimeFormatOptions> {\r\n\t\treturn this.adapter.apply(\"dateFormat\", {\r\n\t\t\tdateFormat: this._dateFormat\r\n\t\t}).dateFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold date values.\r\n\t *\r\n\t * @param value Date field list\r\n\t */\r\n\tpublic set dateFields(value: List<string>) {\r\n\t\tthis._dateFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date field list\r\n\t */\r\n\tpublic get dateFields(): List<string> {\r\n\t\tif (!this._dateFields) {\r\n\t\t\tthis._dateFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFields\", {\r\n\t\t\tdateFields: this._dateFields\r\n\t\t}).dateFields;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param value NumberFormatter instance\r\n\t */\r\n\tpublic set numberFormatter(value: NumberFormatter) {\r\n\t\tthis._numberFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A NumberFormatter instance\r\n\t */\r\n\tpublic get numberFormatter(): NumberFormatter {\r\n\t\tif (!this._numberFormatter) {\r\n\t\t\tthis._numberFormatter = new NumberFormatter();\r\n\t\t\tthis._numberFormatter.language = this.language;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"numberFormatter\", {\r\n\t\t\tnumberFormatter: this._numberFormatter\r\n\t\t}).numberFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n\t * format if not set.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param value Number format\r\n\t */\r\n\tpublic set numberFormat(value: $type.Optional<string>) {\r\n\t\tthis._numberFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number format\r\n\t */\r\n\tpublic get numberFormat(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"numberFormat\", {\r\n\t\t\tnumberFormat: this._numberFormat\r\n\t\t}).numberFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold number values.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param value Number field list\r\n\t */\r\n\tpublic set numberFields(value: List<string>) {\r\n\t\tthis._numberFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number field list\r\n\t */\r\n\tpublic get numberFields(): List<string> {\r\n\t\tif (!this._numberFields) {\r\n\t\t\tthis._numberFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"numberFields\", {\r\n\t\t\tnumberFields: this._numberFields\r\n\t\t}).numberFields;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DurationFormatter]] to use when formatting duration values when\r\n\t * exporting data.\r\n\t *\r\n\t * @param value  DurationFormatter instance\r\n\t */\r\n\tpublic set durationFormatter(value: DurationFormatter) {\r\n\t\tthis._durationFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A DurationFormatter instance\r\n\t */\r\n\tpublic get durationFormatter(): DurationFormatter {\r\n\t\tif (!this._durationFormatter) {\r\n\t\t\tthis._durationFormatter = new DurationFormatter();\r\n\t\t\tthis._durationFormatter.language = this.language;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"durationFormatter\", {\r\n\t\t\tdurationFormatter: this._durationFormatter\r\n\t\t}).durationFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A format to use when formatting values from `durationFields`.\r\n\t * Will use [[DurationFormatter]] format if not set.\r\n\t *\r\n\t * @param value Duration format\r\n\t */\r\n\tpublic set durationFormat(value: $type.Optional<string>) {\r\n\t\tthis._durationFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Duration format\r\n\t */\r\n\tpublic get durationFormat(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"durationFormat\", {\r\n\t\t\tdurationFormat: this._durationFormat\r\n\t\t}).durationFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold duration values.\r\n\t *\r\n\t * @param value Duration field list\r\n\t */\r\n\tpublic set durationFields(value: List<string>) {\r\n\t\tthis._durationFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Duration field list\r\n\t */\r\n\tpublic get durationFields(): List<string> {\r\n\t\tif (!this._durationFields) {\r\n\t\t\tthis._durationFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"durationFields\", {\r\n\t\t\tdurationFields: this._durationFields\r\n\t\t}).durationFields;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates data fields out of the first row of data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic generateDataFields(): void {\r\n\t\tthis._dataFields = {};\r\n\t\tif (this.data.length) {\r\n\t\t\t$array.each(this.data, (row) => {\r\n\t\t\t\t$object.each(row, (key, value) => {\r\n\t\t\t\t\tif (!$type.hasValue(this._dataFields[key])) {\r\n\t\t\t\t\t\tthis._dataFields[key] = this.adapter.apply(\"dataFieldName\", {\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tfield: key\r\n\t\t\t\t\t\t}).name;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `dateFields` property to determine if this field holds\r\n\t * dates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param field   Field name\r\n\t * @param options Options\r\n\t * @return `true` if it's a date field\r\n\t */\r\n\tpublic isDateField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isDateField\", {\r\n\t\t\tisDateField: this.dateFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isDateField;\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `numberFields` property to determine if this field holds\r\n\t * numbers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param field   Field name\r\n\t * @param options Options\r\n\t * @return `true` if it's a number field\r\n\t */\r\n\tpublic isNumberField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isNumberField\", {\r\n\t\t\tisNumberField: this.numberFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isNumberField;\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `durationFields` property to determine if this field holds\r\n\t * durations.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param field   Field name\r\n\t * @param options Options\r\n\t * @return `true` if it's a date field\r\n\t */\r\n\tpublic isDurationField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isDurationField\", {\r\n\t\t\tisDurationField: this.durationFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isDurationField;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns proper content type for the export type.\r\n\t *\r\n\t * @param type  Export format/type\r\n\t * @return Proper content type, i.e. \"image/jpeg\"\r\n\t */\r\n\tpublic getContentType<Key extends keyof IExportOptions>(type: Key): string {\r\n\r\n\t\tlet contentType = \"\";\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\t\tcontentType = \"image/\" + type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\tcontentType = \"image/jpeg\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\tcontentType = \"text/csv\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tcontentType = \"application/json\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"html\":\r\n\t\t\t\tcontentType = \"text/html\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pdf\":\r\n\t\t\tcase \"pdfdata\":\r\n\t\t\t\tcontentType = \"application/pdf\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\tcontentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"contentType\", {\r\n\t\t\tcontentType: contentType,\r\n\t\t\ttype: type\r\n\t\t}).contentType;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A file prefix to be used for all exported formats.\r\n\t *\r\n\t * Export will apply format-related extension to it. E.g. if this is set to\r\n\t * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n\t *\r\n\t * @param value File prefix\r\n\t */\r\n\tpublic set filePrefix(value: string) {\r\n\t\tthis._filePrefix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return File prefix\r\n\t */\r\n\tpublic get filePrefix(): string {\r\n\t\treturn this.adapter.apply(\"filePrefix\", {\r\n\t\t\tfilePrefix: this._filePrefix\r\n\t\t}).filePrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * A background color to be used for exported images. If set, this will\r\n\t * override the automatically acquired background color.\r\n\t *\r\n\t * @param value Color\r\n\t */\r\n\tpublic set backgroundColor(value: $type.Optional<Color>) {\r\n\t\tthis._backgroundColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Background color\r\n\t */\r\n\tpublic get backgroundColor(): $type.Optional<Color> {\r\n\t\treturn this.adapter.apply(\"backgroundColor\", {\r\n\t\t\tbackgroundColor: this._backgroundColor\r\n\t\t}).backgroundColor;\r\n\t}\r\n\r\n\t/**\r\n\t * A title to be used when printing.\r\n\t *\r\n\t * @param value Title\r\n\t */\r\n\tpublic set title(value: $type.Optional<string>) {\r\n\t\tthis._title = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Title\r\n\t */\r\n\tpublic get title(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this._title\r\n\t\t}).title;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Add ability to change text\r\n\t */\r\n\tpublic showPreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 0.5;\r\n\t\t\tpreloader.label.text = \"...\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hidePreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n\t * exported.\r\n\t *\r\n\t * @return Preloader\r\n\t */\r\n\tpublic get preloader(): Preloader {\r\n\t\treturn this._sprite && this._sprite.parent && this._sprite.parent.preloader ?\r\n\t\t\tthis._sprite.parent.preloader :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal saying export is taking longer than expected.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic showTimeout(): void {\r\n\t\tthis.showModal(\r\n\t\t\tthis.adapter.apply(\"timeoutMessage\", {\r\n\t\t\t\tmessage: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\r\n\t\t\t}).message\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideTimeout(): void {\r\n\t\tif (this._timeoutTimeout) {\r\n\t\t\tthis.removeDispose(this._timeoutTimeout);\r\n\t\t\tthis._timeoutTimeout = null;\r\n\t\t}\r\n\t\tthis.hideModal();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Language]] instance to be used for translations.\r\n\t *\r\n\t * @param value An instance of [[Language]]\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tif (!this._language) {\r\n\t\t\tthis._language = new Language();\r\n\t\t}\r\n\r\n\t\treturn this._language;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns (and creates) [[Modal]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Modal instance\r\n\t */\r\n\tpublic get modal(): Modal {\r\n\t\tif (!this._modal) {\r\n\t\t\tthis._modal = new Modal();\r\n\r\n\t\t\t// Prefix with Sprite's class name\r\n\t\t\tthis._modal.adapter.add(\"classPrefix\", (value) => {\r\n\t\t\t\tvalue = options.classNamePrefix + value;\r\n\t\t\t\treturn value;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._modal;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows [[Modal]] with specific text.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text Modal contents\r\n\t */\r\n\tpublic showModal(text: string, title?: string): void {\r\n\r\n\t\t// Hide previous modal and preloader\r\n\t\tthis.hideModal();\r\n\t\tthis.hidePreloader();\r\n\r\n\t\t// Create modal\r\n\t\tlet modal = this.modal;\r\n\t\tmodal.container = this.sprite.svgContainer.SVGContainer;\r\n\t\tmodal.content = text;\r\n\t\tmodal.readerTitle = title;\r\n\t\tmodal.open();\r\n\t}\r\n\r\n\t/**\r\n\t * Hides modal window if one's currently open.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideModal(): void {\r\n\t\tif (this._modal) {\r\n\t\t\tthis.modal.close();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Loads canvg dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of canvg\r\n\t * @async\r\n\t */\r\n\tprivate async _canvg(): Promise<typeof import(\"../../canvg/index.js\")[\"default\"]> {\r\n\t\tconst canvg = (await import(/* webpackChunkName: \"canvg\" */ \"../../canvg/index.js\")) as any;\r\n\r\n\t\tif (canvg.default != null) {\r\n\t\t\treturn canvg.default;\r\n\r\n\t\t} else {\r\n\t\t\treturn canvg;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvg instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of canvg\r\n\t */\r\n\tpublic get canvg(): Promise<typeof import(\"../../canvg/index.js\")[\"default\"]> {\r\n\t\treturn this._canvg();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pdfmake instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of pdfmake\r\n\t */\r\n\tpublic get pdfmake(): Promise<any> {\r\n\t\tif (pdfmakePromise == null) {\r\n\t\t\tpdfmakePromise = _pdfmake();\r\n\t\t}\r\n\r\n\t\treturn pdfmakePromise;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads xlsx dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of pdfmake\r\n\t * @async\r\n\t */\r\n\tprivate async _xlsx(): Promise<any> {\r\n\t\treturn await import(/* webpackChunkName: \"xlsx\" */ \"../../bundled/xlsx\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns xlsx instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of pdfmake\r\n\t */\r\n\tpublic get xlsx(): Promise<any> {\r\n\t\treturn this._xlsx();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets options for a format.\r\n\t */\r\n\tpublic setFormatOptions<Key extends keyof IExportOptions>(type: Key, options: IExportOptions[Key]): void {\r\n\t\tthis._formatOptions.setKey(type, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current options for a format.\r\n\t */\r\n\tpublic getFormatOptions<Key extends keyof IExportOptions>(type: Key): IExportOptions[Key] {\r\n\t\treturn this._formatOptions.getKey(type);\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Dictionary]] object containing format-specific options.\r\n\t *\r\n\t * May be used to change specific option for the format:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     // ...\r\n\t *     \"formatOptions\": {\r\n\t *       \"csv\": {\r\n\t *         \"disabled\": true\r\n\t *       }\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.9.12\r\n\t * @return  Options\r\n\t */\r\n\tpublic get formatOptions(): Dictionary<string, ExportOptions> {\r\n\t\treturn this._formatOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Disables interactivity on parent chart.\r\n\t */\r\n\tprotected _disablePointers(): void {\r\n\t\tif (!$type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n\t\t}\r\n\t\tthis.sprite.interactionsEnabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Releases temporarily disabled pointers on parent chart.\r\n\t */\r\n\tprotected _releasePointers(): void {\r\n\t\tif ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\r\n\t\t\tthis.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all elements that should not be included in the exported image.\r\n\t */\r\n\tprivate hideNonExportableSprites(): void {\r\n\t\tif (this._objectsAlreadyHidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst svgContainer = this.sprite.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\t$array.each(svgContainer.nonExportableSprites, (item) => {\r\n\t\t\t\tif (!item.isHidden && !item.isHiding && item.visible) {\r\n\t\t\t\t\tthis._hiddenObjects.push(item);\r\n\t\t\t\t}\r\n\t\t\t\titem.hide(0);\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._objectsAlreadyHidden = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Respores elements that were hidden before export.\r\n\t */\r\n\tprivate restoreNonExportableSprites(): void {\r\n\t\tif (!this._objectsAlreadyHidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$array.each(this._hiddenObjects, (item) => {\r\n\t\t\titem.show(0);\r\n\t\t});\r\n\t\tthis._hiddenObjects = [];\r\n\t\tthis._objectsAlreadyHidden = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are elements that absolutely need to be validated before\r\n\t * export.\r\n\t *\r\n\t * If there are invalid elements, it will await for them to be validated.\r\n\t *\r\n\t * @return Promise\r\n\t */\r\n\tprivate async awaitValidSprites(): Promise<void> {\r\n\t\tlet promises: Promise<any>[] = [];\r\n\r\n\t\tif (this.validateSprites.length) {\r\n\t\t\t$array.each(this.validateSprites, (sprite, index) => {\r\n\t\t\t\tif (sprite.invalid) {\r\n\t\t\t\t\tpromises.push(new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tsprite.events.once(\"validated\", (ev) => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (promises.length) {\r\n\t\t\tawait Promise.all(promises);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tregistry.registeredClasses[\"ExportMenu\"] = ExportMenu;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up menu\r\n\t\t\tif ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\r\n\t\t\t\tconfig.menu.type = \"ExportMenu\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(config.dataFields) && $type.isObject(config.dataFields)) {\r\n\t\t\t\tthis.dataFields = config.dataFields;\r\n\t\t\t\tdelete config.dataFields;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n}\r\n","/**\r\n * A collection of functions that deals with path calculations.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { getGhostPaper } from \"../rendering/Paper\";\r\nimport { options } from \"../Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * PATH FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Returns an SVG path from a number of points.\r\n *\r\n * @ignore Exclude from docs\r\n * @param points  An array of line elbow points\r\n * @return SVG path\r\n */\r\nexport function polyline(points: IPoint[]): string {\r\n\tlet path = lineTo(points[0]);\r\n\tlet prevPoint = { x: 0, y: 0 };\r\n\r\n\tlet minStep = options.minPolylineStep;\r\n\tif (!$type.isNumber(minStep)) {\r\n\t\tminStep = 0.5;\r\n\t}\r\n\r\n\tfor (let i = 0, len = points.length; i < len; i++) {\r\n\t\tlet point = points[i];\r\n\t\tif ($math.getDistance(point, prevPoint) > minStep) {\r\n\t\t\tpath += lineTo(point);\r\n\t\t\tprevPoint = point;\r\n\t\t}\r\n\t}\r\n\treturn path;\r\n}\r\n\r\n\r\n/**\r\n * Returns a starting point of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param point  Starting point\r\n * @return SVG path\r\n */\r\nexport function moveTo(point: IPoint): string {\r\n\treturn \" M\" + $math.round(point.x, 4) + \",\" + $math.round(point.y, 4) + \" \";\r\n}\r\n\r\n/**\r\n * Returns a line part of SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param point  SVG path\r\n * @return SVG path\r\n */\r\nexport function lineTo(point: IPoint): string {\r\n\treturn \" L\" + $math.round(point.x, 4) + \",\" + $math.round(point.y, 4) + \" \";\r\n}\r\n\r\n/**\r\n * Returns a quadratic curve part of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param point         End point of the curve\r\n * @param controlPoint  Control point\r\n * @return SVG path\r\n */\r\nexport function quadraticCurveTo(point: IPoint, controlPoint: IPoint): string {\r\n\treturn \" Q\" + $math.round(controlPoint.x, 4)\r\n\t\t+ \",\" + $math.round(controlPoint.y, 4) + \" \" + $math.round(point.x, 4)\r\n\t\t+ \",\" + $math.round(point.y, 4);\r\n}\r\n\r\n/**\r\n * Returns a cubic curve part of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param point          End point of the curve\r\n * @param controlPointA  Control point A\r\n * @param controlPointB  Control point B\r\n * @return SVG path\r\n */\r\nexport function cubicCurveTo(point: IPoint, controlPointA: IPoint, controlPointB: IPoint): string {\r\n\treturn \" C\" + $math.round(controlPointA.x, 4)\r\n\t\t+ \",\" + $math.round(controlPointA.y, 4) + \" \" + $math.round(controlPointB.x, 4)\r\n\t\t+ \",\" + $math.round(controlPointB.y, 4) + \" \" + $math.round(point.x, 4)\r\n\t\t+ \",\" + $math.round(point.y, 4);\r\n}\r\n\r\n/**\r\n * Returns a terminator for an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @return SVG path\r\n */\r\nexport function closePath(): string {\r\n\treturn \" Z\";\r\n}\r\n\r\n/**\r\n * Returns an arc part of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Better parameter descriptions\r\n * @param startAngle  Starting angle\r\n * @param arc         Arc\r\n * @param radius      Radius\r\n * @param radiusY     Vertical radius\r\n * @return SVG path\r\n */\r\nexport function arcTo(startAngle: number, arc: number, radius: number, radiusY?: number): string {\r\n\r\n\tif (arc == 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tif (!$type.isNumber(radiusY)) {\r\n\t\tradiusY = radius;\r\n\t}\r\n\r\n\tlet path = \"\";\r\n\tlet c = \",\";\r\n\tlet segments = Math.ceil(Math.abs(arc) / 180);\r\n\tlet l = 1;\r\n\r\n\tif (arc < 0) {\r\n\t\tl = 0;\r\n\t}\r\n\r\n\t// previous, as we use a not A\r\n\tlet pax: number = 0;\r\n\tlet pay: number = 0;\r\n\r\n\t// center\r\n\tlet cx: number = -$math.cos(startAngle) * radius;\r\n\tlet cy: number = -$math.sin(startAngle) * radiusY;\r\n\r\n\t// foir very short angles and big radius, solves artefacts\r\n\tif (arc < 0.5 && radius > 3000) {\r\n\t\tlet endAngle = startAngle + arc\r\n\t\tlet ax = $math.round($math.cos(endAngle) * radius, 4);\r\n\t\tlet ay = $math.round($math.sin(endAngle) * radiusY, 4);\r\n\t\treturn lineTo({ x: ax, y: ay })\r\n\t}\r\n\r\n\tfor (let i = 0; i < segments; i++) {\r\n\t\tlet endAngle = startAngle + arc / segments * (i + 1);\r\n\r\n\t\tlet ax = $math.round($math.cos(endAngle) * radius + cx - pax, 4);\r\n\t\tlet ay = $math.round($math.sin(endAngle) * radiusY + cy - pay, 4);\r\n\r\n\t\tpath += \" a\" + radius + c + radiusY + c + 0 + c + 0 + c + l + c + ax + c + ay;\r\n\r\n\t\tpax = ax;\r\n\t\tpay = ay;\r\n\t}\r\n\treturn path;\r\n}\r\n\r\n/**\r\n * Creates an arc path.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param startAngle         [description]\r\n * @param arc                [description]\r\n * @param radius             [description]\r\n * @param innerRadius        [description]\r\n * @param radiusY            [description]\r\n * @param cornerRadius       [description]\r\n * @param innerCornerRadius  [description]\r\n * @return SVG path\r\n */\r\nexport function arc(startAngle: number, arc: number, radius: number, innerRadius?: number, radiusY?: number, cornerRadius?: number, innerCornerRadius?: number): string {\r\n\tif (arc == 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tif (!$type.isNumber(innerRadius)) {\r\n\t\tinnerRadius = 0;\r\n\t}\r\n\r\n\tif (radius == 0 && innerRadius <= 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\tif (radius < innerRadius) {\r\n\t\tlet temp = radius;\r\n\t\tradius = innerRadius;\r\n\t\tinnerRadius = temp;\r\n\r\n\t\tif ($type.isNumber(radiusY)) {\r\n\t\t\tradiusY = radiusY / innerRadius * radius;\r\n\t\t}\r\n\t}\r\n\r\n\tarc = $math.min(arc, 360);\r\n\r\n\tif (arc == 360) {\r\n\t\tcornerRadius = 0;\r\n\t\tinnerCornerRadius = 0;\r\n\t}\r\n\r\n\tlet endAngle = startAngle + arc;\r\n\tlet crSin = $math.sin($math.min(arc, 45) / 2);\r\n\r\n\tradiusY = $type.isNumber(radiusY) ? radiusY : radius;\r\n\tcornerRadius = cornerRadius || 0;\r\n\tinnerCornerRadius = $type.isNumber(innerCornerRadius) ? innerCornerRadius : cornerRadius;\r\n\r\n\tlet innerRadiusY = (radiusY / radius) * innerRadius;\r\n\r\n\tlet cornerRadiusY = (radiusY / radius) * cornerRadius;\r\n\tlet innerCornerRadiusY = (radiusY / radius) * innerCornerRadius;\r\n\r\n\tcornerRadius = $math.fitToRange(cornerRadius, 0, (radius - innerRadius) / 2);\r\n\tcornerRadiusY = $math.fitToRange(cornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\tinnerCornerRadius = $math.fitToRange(innerCornerRadius, 0, (radius - innerRadius) / 2);\r\n\tinnerCornerRadiusY = $math.fitToRange(innerCornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\tcornerRadius = $math.round($math.fitToRange(cornerRadius, 0, radius * crSin), 4);\r\n\tcornerRadiusY = $math.round($math.fitToRange(cornerRadiusY, 0, radiusY * crSin), 4);\r\n\r\n\tinnerCornerRadius = $math.round($math.fitToRange(innerCornerRadius, 0, innerRadius * crSin), 4);\r\n\tinnerCornerRadiusY = $math.round($math.fitToRange(innerCornerRadiusY, 0, innerRadiusY * crSin), 4);\r\n\r\n\tlet crAngle: number = Math.asin(cornerRadius / radius / 2) * $math.DEGREES * 2;\r\n\tlet crAngleY: number = Math.asin(cornerRadiusY / radiusY / 2) * $math.DEGREES * 2;\r\n\r\n\tif (innerRadius < innerCornerRadius) {\r\n\t\tinnerRadius = innerCornerRadius;\r\n\t}\r\n\r\n\tif (innerRadiusY < innerCornerRadiusY) {\r\n\t\tinnerRadiusY = innerCornerRadiusY;\r\n\t}\r\n\r\n\tlet crInnerAngle: number = Math.asin(innerCornerRadius / innerRadius / 2) * $math.DEGREES * 2;\r\n\tlet crInnerAngleY: number = Math.asin(innerCornerRadiusY / innerRadiusY / 2) * $math.DEGREES * 2;\r\n\r\n\tif (!$type.isNumber(crInnerAngle)) {\r\n\t\tcrInnerAngle = 0;\r\n\t}\r\n\tif (!$type.isNumber(crInnerAngleY)) {\r\n\t\tcrInnerAngleY = 0;\r\n\t}\r\n\r\n\tlet middleAngle = startAngle + arc / 2;\r\n\tlet mPoint = { x: $math.round($math.cos(middleAngle) * innerRadius, 4), y: $math.sin(middleAngle) * innerRadiusY };\r\n\r\n\tlet a0 = { x: $math.cos(startAngle) * (innerRadius + innerCornerRadius), y: $math.sin(startAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n\tlet b0 = { x: $math.cos(startAngle) * (radius - cornerRadius), y: $math.sin(startAngle) * (radiusY - cornerRadiusY) };\r\n\tlet c0 = { x: $math.cos(endAngle) * (radius - cornerRadius), y: $math.sin(endAngle) * (radiusY - cornerRadiusY) };\r\n\tlet d0 = { x: $math.cos(endAngle) * (innerRadius + innerCornerRadius), y: $math.sin(endAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n\r\n\tlet b1 = { x: $math.cos(startAngle + crAngle) * radius, y: $math.sin(startAngle + crAngleY) * radiusY };\r\n\tlet d1 = { x: $math.cos(endAngle - crInnerAngle) * innerRadius, y: $math.sin(endAngle - crInnerAngleY) * innerRadiusY };\r\n\r\n\t// some magic math\r\n\tinnerCornerRadius += innerCornerRadius * $math.sin(crInnerAngle / 2);\r\n\tinnerCornerRadiusY += innerCornerRadiusY * $math.sin(crInnerAngleY / 2);\r\n\r\n\tif (crInnerAngle > (endAngle - startAngle) / 2) {\r\n\t\td1 = mPoint;\r\n\t}\r\n\r\n\tlet path: string = \"\";\r\n\t// start from b if this is full circle\r\n\tif (arc == 360) {\r\n\t\tpath = moveTo(b0);\r\n\t}\r\n\t// otherwise start from a\r\n\telse {\r\n\t\tpath = moveTo(a0);\r\n\t\tpath += lineTo(b0);\r\n\t\tpath += arcToPoint(b1, cornerRadius, cornerRadiusY, true);\r\n\t}\r\n\r\n\t// draw arc\r\n\tpath += arcTo(startAngle + crAngle, arc - 2 * crAngle, radius, radiusY);\r\n\r\n\t// draw inner arc\r\n\tif ($type.isNumber(innerRadius) && innerRadius != 0) {\r\n\r\n\t\t// move to B if this is full circle\r\n\t\tif (arc == 360 && cornerRadius == 0) {\r\n\t\t\tpath += moveTo(d0);\r\n\t\t}\r\n\t\t// draw line otherwise\r\n\t\telse {\r\n\t\t\tpath += arcToPoint(c0, cornerRadius, cornerRadiusY, true);\r\n\t\t\tpath += lineTo(d0);\r\n\t\t\tpath += arcToPoint(d1, innerCornerRadius, innerCornerRadiusY, true);\r\n\t\t}\r\n\r\n\t\tpath += arcTo(endAngle - crInnerAngle, -(arc - 2 * crInnerAngle), innerRadius, innerRadiusY);\r\n\t\tif (arc < 360 || cornerRadius > 0) {\r\n\t\t\tpath += arcToPoint(a0, innerCornerRadius, innerCornerRadiusY, true);\r\n\t\t}\r\n\t\tpath += lineTo(a0);\r\n\t}\r\n\telse {\r\n\t\tpath += arcToPoint(c0, cornerRadius, cornerRadiusY, true);\r\n\t\tif (arc < 360) {\r\n\t\t\tpath += lineTo(a0);\r\n\t\t}\r\n\t}\r\n\r\n\treturn path;\r\n}\r\n\r\n/**\r\n * Creates a path for an arc to specific coordinate.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param point         Reference point\r\n * @param radius        Radius\r\n * @param radiusY       Vertical radius (for skewed arcs)\r\n * @param sweepFlag     [description]\r\n * @param largeArcFlag  [description]\r\n * @param xAxisRotation [description]\r\n * @return Arc path\r\n */\r\nexport function arcToPoint(point: IPoint, radius: number, radiusY?: number, sweepFlag?: boolean, largeArcFlag?: boolean, xAxisRotation?: number): string {\r\n\tif (radius == 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\txAxisRotation = xAxisRotation || 0;\r\n\tlargeArcFlag = Boolean(largeArcFlag);\r\n\tsweepFlag = Boolean(sweepFlag);\r\n\r\n\tlet c = \",\";\r\n\tlet sweepFlagValue: number = +sweepFlag; // converts to 1 or 0\r\n\tlet largeArcFlagValue: number = +largeArcFlag;  // converts to 1 or 0\r\n\r\n\treturn \" A\" + radius + c + radiusY + c + xAxisRotation + c + largeArcFlagValue + c + sweepFlagValue + c + $math.round(point.x, 4) + c + $math.round(point.y, 4);\r\n}\r\n\r\n/**\r\n * Creates a new rectangle.\r\n *\r\n * @ignore Exclude from docs\r\n * @param width   Width (px)\r\n * @param height  Height (px)\r\n * @param x       X position\r\n * @param y       Y position\r\n * @return Rectangle\r\n */\r\nexport function rectangle(width: number, height: number, x?: number, y?: number): string {\r\n\tif (!$type.isNumber(x)) {\r\n\t\tx = 0;\r\n\t}\r\n\tif (!$type.isNumber(y)) {\r\n\t\ty = 0;\r\n\t}\r\n\treturn moveTo({ x: x, y: y }) + lineTo({ x: x + width, y: y }) + lineTo({ x: x + width, y: y + height }) + lineTo({ x: x, y: y + height }) + closePath();\r\n}\r\n\r\n/**\r\n * Converts a rectangle to an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param rect  Rectangle\r\n * @param ccw   Counter-clockwise?\r\n * @return SVG path\r\n */\r\nexport function rectToPath(rect: IRectangle, ccw?: boolean): string {\r\n\tlet c = \",\";\r\n\tlet L = \" L\";\r\n\tif (ccw) {\r\n\t\treturn \"M\" + rect.x\r\n\t\t\t+ c + rect.y + L + rect.x\r\n\t\t\t+ c + (rect.y + rect.height) + L + (rect.x + rect.width)\r\n\t\t\t+ c + (rect.y + rect.height) + L + (rect.x + rect.width)\r\n\t\t\t+ c + rect.y + L + rect.x\r\n\t\t\t+ c + rect.y;\r\n\t}\r\n\telse {\r\n\t\treturn \"M\" + rect.x\r\n\t\t\t+ c + rect.y + L + (rect.x + rect.width)\r\n\t\t\t+ c + rect.y + L + (rect.x + rect.width)\r\n\t\t\t+ c + (rect.y + rect.height) + L + rect.x\r\n\t\t\t+ c + (rect.y + rect.height) + L + rect.x\r\n\t\t\t+ c + rect.y;\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts SVG path to array of points.\r\n *\r\n * Note, this is experimental feature based on method which is deprecated\r\n * on some browsers and some browsers do not support it at all.\r\n *\r\n * You can save the output of this function, but not rely on it completely.\r\n */\r\nexport function pathToPoints(path: string, pointCount: number): IPoint[] {\r\n\r\n\tlet paper = getGhostPaper();\r\n\tlet svgPath: SVGPathElement = <any>paper.add(\"path\").node;\r\n\tsvgPath.setAttribute(\"d\", path);\r\n\r\n\tif (svgPath.getPointAtLength && svgPath.getTotalLength) {\r\n\t\tlet length = svgPath.getTotalLength();\r\n\r\n\t\tlet toPoints = []\r\n\t\tfor (let i = 0; i < pointCount; i++) {\r\n\t\t\tlet point = svgPath.getPointAtLength(i / pointCount * length);\r\n\t\t\ttoPoints.push({ x: point.x, y: point.y });\r\n\t\t}\r\n\r\n\t\treturn toPoints;\r\n\t}\r\n\r\n\tsvgPath.remove();\r\n}\r\n\r\n\r\nexport function spiralPoints(cx: number, cy: number, radius: number, radiusY: number, innerRadius: number, step: number, radiusStep: number, startAngle?: number, endAngle?: number): IPoint[] {\r\n\r\n\tif (!$type.isNumber(startAngle)) {\r\n\t\tstartAngle = 0;\r\n\t}\r\n\r\n\tif (!$type.isNumber(startAngle)) {\r\n\t\tendAngle = startAngle;\r\n\t}\r\n\r\n\tlet r = innerRadius + 0.01;\r\n\tlet angle = startAngle * $math.RADIANS;\r\n\tlet points = [];\r\n\r\n\twhile (r < radius + radiusStep) {\r\n\r\n\t\tlet stepSize = step;\r\n\t\tif (stepSize / 2 > r) {\r\n\t\t\tstepSize = 2 * r;\r\n\t\t}\r\n\r\n\t\tangle += 2 * Math.asin(stepSize / 2 / r);\t\t\r\n\r\n\t\tif (angle * $math.DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tlet degrees = angle * $math.DEGREES;\r\n\r\n\t\tlet point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n\t\tpoints.push(point);\r\n\r\n\t\tr = innerRadius + degrees / 360 * radiusStep;\r\n\r\n\t}\r\n\r\n\tpoints.shift();\r\n\r\n\treturn points;\r\n}\r\n\r\nexport function pointsToPath(points: IPoint[]) {\r\n\tif (!points || points.length == 0) {\r\n\t\treturn \"\";\r\n\t}\r\n\tlet path = moveTo(points[0]);\r\n\tif (points && points.length > 0) {\r\n\t\tfor (let i = 1; i < points.length; i++) {\r\n\t\t\tpath += lineTo(points[i]);\r\n\t\t}\r\n\t}\r\n\treturn path;\r\n}\r\n","/**\r\n * A collection of Math-related functions\r\n *\r\n * @todo Comment trigonometric functions?\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\nimport { IRange } from \"../defs/IRange\";\r\nimport * as $type from \"./Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport const PI = Math.PI;\r\nexport const HALFPI = PI / 2;\r\nexport const RADIANS = PI / 180;\r\nexport const DEGREES = 180 / PI;\r\n\r\n/**\r\n * Converts any value and fits it into a specific value range.\r\n *\r\n * @param value  Source value\r\n * @param min    Minimum allowable value\r\n * @param max    Maximum allowable value\r\n * @return Number\r\n */\r\nexport function toNumberRange(value: any, min: number, max: number): number {\r\n\tif ($type.hasValue(value)) {\r\n\t\tvalue = $type.toNumber(value);\r\n\t\treturn fitToRange(value, min, max);\r\n\t}\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value: number, precision?: number, floor?: boolean): number {\r\n\tif (!$type.isNumber(precision) || precision <= 0) {\r\n\r\n\t\tlet rounded = Math.round(value);\r\n\t\tif (floor) {\r\n\t\t\tif (rounded - value == 0.5) {\r\n\t\t\t\trounded--;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rounded;\r\n\t}\r\n\telse {\r\n\t\tlet d: number = Math.pow(10, precision);\r\n\t\treturn Math.round(value * d) / d;\r\n\t}\r\n}\r\n\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value: number, precision?: number): number {\r\n\tif (!$type.isNumber(precision) || precision <= 0) {\r\n\t\treturn Math.ceil(value);\r\n\t}\r\n\telse {\r\n\t\tlet d: number = Math.pow(10, precision);\r\n\t\treturn Math.ceil(value * d) / d;\r\n\t}\r\n}\r\n\r\n/**\r\n * Stretches `t` so that it will always be between `from` and `to`.\r\n *\r\n * @param t     Number from 0 to 1\r\n * @param from  Lowest possible value\r\n * @param to    Highest possible value\r\n * @return Adjusted value\r\n */\r\nexport function stretch(t: number, from: number, to: number): number {\r\n\treturn (t * (to - from)) + from;\r\n}\r\n\r\n\r\n/**\r\n * Adjust numeric value so it fits to specific value range.\r\n *\r\n * @param value     Value\r\n * @param minValue  Lowest possible value\r\n * @param maxValue  Highest possible value\r\n * @return Adjusted value\r\n */\r\nexport function fitToRange(value: number, minValue: $type.Optional<number>, maxValue: $type.Optional<number>): number {\r\n\tif ($type.isNumber(minValue)) {\r\n\t\tif ($type.isNumber(maxValue) && maxValue < minValue) {\r\n\t\t\tlet temp = maxValue;\r\n\t\t\tmaxValue = minValue;\r\n\t\t\tminValue = temp;\r\n\t\t}\r\n\r\n\t\tif (value < minValue) {\r\n\t\t\tvalue = minValue;\r\n\t\t}\r\n\t}\r\n\r\n\tif ($type.isNumber(maxValue)) {\r\n\t\tif (value > maxValue) {\r\n\t\t\tvalue = maxValue;\r\n\t\t}\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n/**\r\n * Returns sine of a number.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(value: number): number {\r\n\treturn round(Math.sin(RADIANS * value), 10);\r\n}\r\n\r\n/**\r\n * Returns tan of a number.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(value: number): number {\r\n\treturn round(Math.tan(RADIANS * value), 10);\r\n}\r\n\r\n/**\r\n * Returns cosine of a number.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(value: number): number {\r\n\treturn round(Math.cos(RADIANS * value), 10);\r\n}\r\n\r\n/**\r\n * Returns biggest value out of passed in numeric values.\r\n *\r\n * @param left   Numeric value\r\n * @param right  Numeric value\r\n * @return Biggest value\r\n */\r\nexport function max(left: number, right: number): number;\r\nexport function max(left: number, right: $type.Optional<number>): number;\r\nexport function max(left: $type.Optional<number>, right: number): number;\r\nexport function max(left: $type.Optional<number>, right: $type.Optional<number>): $type.Optional<number>;\r\nexport function max(left: any, right: any): any {\r\n\tif ($type.isNumber(left)) {\r\n\t\tif ($type.isNumber(right)) {\r\n\t\t\tif (right > left) {\r\n\t\t\t\treturn right;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn left;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\treturn left;\r\n\t\t}\r\n\r\n\t} else if ($type.isNumber(right)) {\r\n\t\treturn right;\r\n\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns smallest value out of passed in numeric values.\r\n *\r\n * @param left   Numeric value\r\n * @param right  Numeric value\r\n * @return Smallest value\r\n */\r\nexport function min(left: number, right: number): number;\r\nexport function min(left: number, right: $type.Optional<number>): number;\r\nexport function min(left: $type.Optional<number>, right: number): number;\r\nexport function min(left: $type.Optional<number>, right: $type.Optional<number>): $type.Optional<number>;\r\nexport function min(left: any, right: any): any {\r\n\tif ($type.isNumber(left)) {\r\n\t\tif ($type.isNumber(right)) {\r\n\t\t\tif (right < left) {\r\n\t\t\t\treturn right;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn left;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\treturn left;\r\n\t\t}\r\n\r\n\t} else if ($type.isNumber(right)) {\r\n\t\treturn right;\r\n\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values: number[], referenceValue: number): number {\r\n\treturn values.reduce(function(prev, curr) {\r\n\t\treturn (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n\t});\r\n}\r\n\r\n/**\r\n * Checks whether two ranges of values intersect.\r\n *\r\n * @param range1  Range 1\r\n * @param range2  Range 2\r\n * @return Any intersecting numbers?\r\n */\r\nexport function intersect(range1: IRange, range2: IRange): boolean {\r\n\tlet start1: number = $type.getValue(range1.start);\r\n\tlet start2: number = $type.getValue(range2.start);\r\n\tlet end1: number = $type.getValue(range1.end);\r\n\tlet end2: number = $type.getValue(range2.end);\r\n\r\n\treturn Math.max(start1, start2) <= Math.min(end1, end2);\r\n}\r\n\r\n/**\r\n * Inverts the range of values.\r\n *\r\n * @param range  Range\r\n */\r\nexport function invertRange(range: IRange) {\r\n\tlet start: number = $type.getValue(range.start);\r\n\tlet end: number = $type.getValue(range.end);\r\n\treturn { start: 1 - end, end: 1 - start };\r\n}\r\n\r\n/**\r\n * Returns an intersection range between two ranges of values.\r\n *\r\n * @param range1  Range 1\r\n * @param range2  Range 2\r\n * @return Intersecting value range\r\n */\r\nexport function intersection(range1: IRange, range2: IRange): $type.Optional<IRange> {\r\n\tlet start1: number = $type.getValue(range1.start);\r\n\tlet start2: number = $type.getValue(range2.start);\r\n\tlet end1: number = $type.getValue(range1.end);\r\n\tlet end2: number = $type.getValue(range2.end);\r\n\tlet startMax: number = Math.max(start1, start2);\r\n\tlet endMin: number = Math.min(end1, end2);\r\n\r\n\tif (endMin < startMax) {\r\n\t\treturn undefined;\r\n\t}\r\n\telse {\r\n\t\treturn { start: startMax, end: endMin };\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns pixel \"distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Distance in relative pixels\r\n */\r\nexport function getDistance(point1: IPoint, point2?: IPoint): number {\r\n\tif (!point1) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (!point2) {\r\n\t\tpoint2 = { x: 0, y: 0 };\r\n\t}\r\n\treturn Math.sqrt(Math.pow(Math.abs(point1.x - point2.x), 2) + Math.pow(Math.abs(point1.y - point2.y), 2));\r\n}\r\n\r\n/**\r\n * Returns pixel \"horizontal distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Distance in relative pixels\r\n */\r\nexport function getHorizontalDistance(point1: IPoint, point2?: IPoint): number {\r\n\tif (!point1) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (!point2) {\r\n\t\tpoint2 = { x: 0, y: 0 };\r\n\t}\r\n\treturn Math.abs(point1.x - point2.x);\r\n}\r\n\r\n/**\r\n * Returns pixel \"vertical distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Distance in relative pixels\r\n */\r\nexport function getVerticalDistance(point1: IPoint, point2?: IPoint): number {\r\n\tif (!point1) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (!point2) {\r\n\t\tpoint2 = { x: 0, y: 0 };\r\n\t}\r\n\treturn Math.abs(point1.y - point2.y);\r\n}\r\n\r\n/**\r\n * Returns approximate pixel \"distance\" between two points of cubic curve\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @param controlPointA  Control Point 1\r\n * @param controlPointB  Control Point 2\r\n * @param stepCount  number of steps (the more, the more accurate result)\r\n * @return Distance in relative pixels\r\n */\r\nexport function getCubicCurveDistance(point1: IPoint, point2: IPoint, controlPointA: IPoint, controlPointB: IPoint, stepCount:number): number {\r\n\tif (!point1) {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tif (!point2) {\r\n\t\tpoint2 = { x: 0, y: 0 };\r\n\t}\r\n\r\n\tlet distance = 0;\r\n\tlet prevPoint: IPoint = point1;\r\n\tif (stepCount > 0) {\r\n\t\tfor (let s = 0; s <= stepCount; s++) {\r\n\t\t\tlet point = getPointOnCubicCurve(point1, point2, controlPointA, controlPointB, s / stepCount);\r\n\t\t\tdistance += getDistance(prevPoint, point);\r\n\t\t\tprevPoint = point;\r\n\t\t}\r\n\t}\r\n\treturn distance;\r\n}\r\n\r\n/**\r\n * Returns scale based on original and end position of the two points.\r\n *\r\n * @param point1       Current position of point 1\r\n * @param startPoint1  Start position of point 1\r\n * @param point2       Current position of point 1\r\n * @param startPoint2  Start position of point 2\r\n * @return Scale        Calculated scale\r\n */\r\nexport function getScale(point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint): number {\r\n\tlet initialDistance: number = getDistance(startPoint1, startPoint2);\r\n\tlet currentDistance: number = getDistance(point1, point2);\r\n\r\n\treturn Math.abs(currentDistance / initialDistance);\r\n}\r\n\r\n/**\r\n * Returns an exact mid point between two points.\r\n *\r\n * @param point1     Position of point 1\r\n * @param point2     Position of point 2\r\n * @return Mid point  Position of mid-point\r\n */\r\nexport function getMidPoint(point1: IPoint, point2: IPoint, position?: number): IPoint {\r\n\tif (!$type.isNumber(position)) {\r\n\t\tposition = 0.5;\r\n\t}\r\n\r\n\treturn {\r\n\t\t\"x\": (point1.x + (point2.x - point1.x) * position),\r\n\t\t\"y\": (point1.y + (point2.y - point1.y) * position)\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns difference in angles between starting and ending position of two\r\n * vectors.\r\n *\r\n * @param point1       Current position of point 1\r\n * @param startPoint1  Start position of point 1\r\n * @param point2       Current position of point 1\r\n * @param startPoint2  Start position of point 2\r\n * @return Angle difference in degrees\r\n */\r\nexport function getRotation(point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint): number {\r\n\r\n\t// Get start and end angles\r\n\tlet startAngle: number = getAngle(startPoint1, startPoint2);\r\n\tlet angle: number = getAngle(point1, point2);\r\n\r\n\t// Calculate angle\r\n\tlet diff: number = startAngle - angle;\r\n\tif (diff < 0) {\r\n\t\tdiff += 360;\r\n\t}\r\n\r\n\treturn diff;\r\n}\r\n\r\n/**\r\n * Calculates angle of the vector based on two or one point.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Angle in degrees\r\n */\r\nexport function getAngle(point1: IPoint, point2?: IPoint): number {\r\n\tif (!point2) {\r\n\t\tpoint2 = { x: point1.x * 2, y: point1.y * 2 };\r\n\t}\r\n\tlet diffX: number = point2.x - point1.x;\r\n\tlet diffY: number = point2.y - point1.y;\r\n\tlet angle: number = Math.atan2(diffY, diffX) * DEGREES;\r\n\tif (angle < 0) {\r\n\t\tangle += 360;\r\n\t}\r\n\treturn normalizeAngle(angle);\r\n}\r\n\r\n/**\r\n * Returns the shift in coordinates of the center when item is rotated, moved\r\n * and scaled at the same time.\r\n *\r\n * @param center       Current center\r\n * @param point1       Frst reference point\r\n * @param startPoint1  Original position of the first reference point\r\n * @param point2       Second reference point\r\n * @param startPoint2  Original position of the first reference point\r\n * @return Shift in center point coordinates\r\n */\r\nexport function getCenterShift(center: IPoint, point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint): IPoint {\r\n\r\n\t// Get angle\r\n\tlet angle: number = getRotation(point1, startPoint1, point2, startPoint2) - 90;\r\n\tif (angle < 0) {\r\n\t\tangle += 360;\r\n\t}\r\n\r\n\t// Get distance between new position\r\n\tlet distance: number = getDistance(point1, point2);\r\n\r\n\t// Calculate new X\r\n\tlet x: number = Math.cos(angle) / distance + point1.x;\r\n\tlet y: number = Math.cos(angle) / distance + point1.y;\r\n\r\n\tlet shift: IPoint = {\r\n\t\t\"x\": x - center.x,\r\n\t\t\"y\": y - center.y\r\n\t}\r\n\treturn shift;\r\n}\r\n\r\n/**\r\n * Converts an array of points into a bounding box rectangle.\r\n *\r\n * Array can contain any number of points.\r\n *\r\n * @param points  Points\r\n * @return Bounding box rectangle\r\n */\r\nexport function getBBox(points: IPoint[]): $type.Optional<IRectangle> {\r\n\tif (points) {\r\n\t\tlet length = points.length;\r\n\r\n\t\tif (length !== 0) {\r\n\t\t\tlet left!: number;\r\n\t\t\tlet right!: number;\r\n\t\t\tlet top!: number;\r\n\t\t\tlet bottom!: number;\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tlet point: IPoint = points[i];\r\n\r\n\t\t\t\tif (!$type.isNumber(right) || (point.x > right)) {\r\n\t\t\t\t\tright = point.x;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(left) || (point.x < left)) {\r\n\t\t\t\t\tleft = point.x;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!$type.isNumber(top) || (point.y < top)) {\r\n\t\t\t\t\ttop = point.y;\r\n\t\t\t\t}\r\n\t\t\t\tif (!$type.isNumber(bottom) || (point.y > bottom)) {\r\n\t\t\t\t\tbottom = point.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn { x: left, y: top, width: right - left, height: bottom - top };\r\n\t\t}\r\n\t}\r\n\r\n\treturn { x: 0, y: 0, width: 0, height: 0 };\r\n}\r\n\r\n/**\r\n * Returns a [[IRectangle]] object representing a common rectangle that fits\r\n * all passed in rectangles in it.\r\n *\r\n * @param rectangles  An array of rectangles\r\n * @return Common rectangle\r\n */\r\nexport function getCommonRectangle(rectangles: IRectangle[]): $type.Optional<IRectangle> {\r\n\tlet length = rectangles.length;\r\n\r\n\tif (length !== 0) {\r\n\t\tlet minX!: number;\r\n\t\tlet minY!: number;\r\n\t\tlet maxX!: number;\r\n\t\tlet maxY!: number;\r\n\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tlet rectangle = rectangles[i];\r\n\t\t\tminX = min(rectangle.x, minX);\r\n\t\t\tminY = min(rectangle.y, minY);\r\n\t\t\tmaxX = max(rectangle.x + rectangle.width, maxX);\r\n\t\t\tmaxY = max(rectangle.y + rectangle.height, maxY);\r\n\t\t}\r\n\r\n\t\treturn { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\r\n\t}\r\n}\r\n\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA: IPoint, pointB: IPoint, controlPoint: IPoint, position: number): IPoint {\r\n\tlet x: number = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n\tlet y: number = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n\treturn { x: x, y: y };\r\n}\r\n\r\n/**\r\n * [getPointOnCubicCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA         [description]\r\n * @param pointB         [description]\r\n * @param controlPointA  [description]\r\n * @param controlPointB  [description]\r\n * @param position       [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnCubicCurve(pointA: IPoint, pointB: IPoint, controlPointA: IPoint, controlPointB: IPoint, position: number): IPoint {\r\n\tlet point: IPoint = { x: 0, y: 0 };\r\n\tlet mt1: number = 1 - position;\r\n\tlet mt2: number = mt1 * mt1;\r\n\tlet mt3: number = mt2 * mt1;\r\n\r\n\tpoint.x = pointA.x * mt3 + controlPointA.x * 3 * mt2 * position + controlPointB.x * 3 * mt1 * position * position + pointB.x * position * position * position;\r\n\tpoint.y = pointA.y * mt3 + controlPointA.y * 3 * mt2 * position + controlPointB.y * 3 * mt1 * position * position + pointB.y * position * position * position;\r\n\r\n\treturn point;\r\n}\r\n\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0: IPoint, p1: IPoint, p2: IPoint, p3: IPoint, tensionX: number, tensionY: number): IPoint {\r\n\ttensionX = adjustTension(tensionX);\r\n\ttensionY = adjustTension(tensionY);\r\n\treturn { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p0: IPoint, p1: IPoint, p2: IPoint, p3: IPoint, tensionX: number, tensionY: number): IPoint {\r\n\ttensionX = adjustTension(tensionX);\r\n\ttensionY = adjustTension(tensionY);\r\n\treturn { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\n\r\n/**\r\n * [adjustTension description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param tension  [description]\r\n * @return [description]\r\n */\r\nexport function adjustTension(tension: number): number {\r\n\treturn 1 - tension + 0.00001;\r\n}\r\n\r\n/**\r\n * [normalizeAngle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param value  [description]\r\n * @return [description]\r\n */\r\nexport function normalizeAngle(value: number): number {\r\n\tif (value == 360) {\r\n\t\treturn 360;\r\n\t}\r\n\treturn value % 360;\r\n}\r\n\r\n\r\n\r\n/**\r\n * [normalizeAngleToRange description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @todo review this with various angles, can be tested on radar chart with custom start/end angles\r\n * @param value       [description]\r\n * @param startAngle  [description]\r\n * @param endAngle    [description]\r\n * @return [description]\r\n */\r\nexport function fitAngleToRange(value: number, startAngle: number, endAngle: number): number {\r\n\r\n\tif (startAngle > endAngle) {\r\n\t\tlet temp: number = startAngle;\r\n\t\tstartAngle = endAngle;\r\n\t\tendAngle = temp;\r\n\t}\r\n\r\n\tvalue = normalizeAngle(value);\r\n\r\n\tlet count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n\r\n\tif (value < startAngle) {\r\n\t\tvalue += 360 * (count + 1);\r\n\t}\r\n\r\n\tlet maxEnd: number = startAngle + (endAngle - startAngle) / 2 + 180;\r\n\tlet maxStart: number = startAngle + (endAngle - startAngle) / 2 - 180;\r\n\r\n\tif (value > endAngle) {\r\n\r\n\t\tif (value - 360 > startAngle) {\r\n\t\t\tvalue -= 360;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (value < maxEnd) {\r\n\t\t\t\tvalue = endAngle;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = startAngle;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (value < startAngle) {\r\n\t\tif (value > maxStart) {\r\n\t\t\tvalue = startAngle;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalue = endAngle;\r\n\t\t}\r\n\t}\r\n\r\n\treturn value;\r\n}\r\n\r\n\r\n/**\r\n * Returns [[IRectangle]] of an arc in relative values, assuming that the\r\n * center is at the circle center.\r\n *\r\n * Used to find out max radius of an arc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param startAngle  Start angle\r\n * @param endAngle    End angle\r\n * @param radius    \t Relative radius\r\n * @return Rectangle\r\n */\r\nexport function getArcRect(startAngle: number, endAngle: number, radius?: number): IRectangle {\r\n\r\n\tlet minX = Number.MAX_VALUE;\r\n\tlet minY = Number.MAX_VALUE;\r\n\tlet maxX = -Number.MAX_VALUE;\r\n\tlet maxY = -Number.MAX_VALUE;\r\n\r\n\tlet bpoints = [];\r\n\r\n\tif (!$type.isNumber(radius)) {\r\n\t\tradius = 1;\r\n\t}\r\n\r\n\tbpoints.push(getArcPoint(radius, startAngle));\r\n\tbpoints.push(getArcPoint(radius, endAngle));\r\n\r\n\tlet fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n\tlet toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n\r\n\tfor (let angle = fromAngle; angle <= toAngle; angle += 90) {\r\n\t\tif (angle >= startAngle && angle <= endAngle) {\r\n\t\t\tbpoints.push(getArcPoint(radius, angle));\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < bpoints.length; i++) {\r\n\t\tlet pt = bpoints[i];\r\n\t\tif (pt.x < minX) { minX = pt.x; }\r\n\t\tif (pt.y < minY) { minY = pt.y; }\r\n\t\tif (pt.x > maxX) { maxX = pt.x; }\r\n\t\tif (pt.y > maxY) { maxY = pt.y; }\r\n\t}\r\n\r\n\treturn ({ x: minX, y: minY, width: maxX - minX, height: maxY - minY });\r\n}\r\n\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius: number, arc: number) {\r\n\treturn ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\n\r\n/**\r\n * Returns true if a point is within rectangle\r\n *\r\n * @param point\r\n * @param rectangle\r\n * @return {boolean}\r\n */\r\nexport function isInRectangle(point: IPoint, rectangle: IRectangle): boolean {\r\n\tif (point.x >= rectangle.x && point.x <= rectangle.x + rectangle.width && point.y >= rectangle.y && point.y <= rectangle.y + rectangle.height) {\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n\r\nexport function getLineIntersection(pointA1: IPoint, pointA2: IPoint, pointB1: IPoint, pointB2: IPoint) {\r\n\tlet x = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.x - pointB2.x) - (pointA1.x - pointA2.x) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));\r\n\tlet y = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));\r\n\treturn { x: x, y: y };\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IClone } from \"./Clone\";\r\nimport { Disposer, MultiDisposer, IDisposer } from \"./Disposer\";\r\nimport { EventDispatcher, AMEvent } from \"./EventDispatcher\";\r\nimport { Ordering } from \"./Order\";\r\nimport * as $array from \"./Array\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * @todo Description\r\n */\r\nexport class IndexedIterable<A> {\r\n\r\n\t/**\r\n\t * Item list\r\n\t */\r\n\tprivate _array: Array<A>;\r\n\r\n\t/**\r\n\t * Start index.\r\n\t */\r\n\tprivate _start: number;\r\n\r\n\t/**\r\n\t * End index.\r\n\t */\r\n\tprivate _end: number;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param array  List items\r\n\t * @param start  Start index\r\n\t * @param end    End index\r\n\t */\r\n\tconstructor(array: Array<A>, start: number, end: number) {\r\n\t\tthis._array = array;\r\n\t\tthis._start = start;\r\n\t\tthis._end = end;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list item iterator.\r\n\t *\r\n\t * @return Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<A> {\r\n\t\treturn (push) => {\r\n\t\t\tif (this._start !== this._end) {\r\n\t\t\t\tif (this._start < this._end) {\r\n\t\t\t\t\tfor (let i = this._start; i < this._end; ++i) {\r\n\t\t\t\t\t\tif (!push(this._array[i])) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = this._start - 1; i >= this._end; --i) {\r\n\t\t\t\t\t\tif (!push(this._array[i])) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an interable list sorted backwards than current list.\r\n\t *\r\n\t * @return List\r\n\t */\r\n\tpublic backwards(): IndexedIterable<A> {\r\n\t\treturn new IndexedIterable(this._array, this._end, this._start);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new list consisting only of specific range of items between\r\n\t * `start` and `end` indexes.\r\n\t *\r\n\t * @param start  Start index\r\n\t * @param end    End index\r\n\t * @return List\r\n\t */\r\n\tpublic range(start: number, end: number): IndexedIterable<A> {\r\n\t\tif (start <= end) {\r\n\t\t\tif (this._start === this._end) {\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if (this._start < this._end) {\r\n\t\t\t\tconst diff = end - start;\r\n\r\n\t\t\t\tstart = Math.max(this._start + start, this._start);\r\n\t\t\t\tend = Math.min(start + diff, this._end);\r\n\r\n\t\t\t\treturn new IndexedIterable(this._array, start, end);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tconst diff = end - start;\r\n\r\n\t\t\t\tstart = Math.max(this._start - start, this._end);\r\n\t\t\t\tend = Math.max(start - diff, this._end);\r\n\r\n\t\t\t\treturn new IndexedIterable(this._array, start, end);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Start index must be lower than end index\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines events for the [[List]].\r\n */\r\nexport interface IListEvents<A> {\r\n\t/**\r\n\t * Invoked when item is added to the list.\r\n\t *\r\n\t * @todo remove this later?\r\n\t */\r\n\tinserted: {\r\n\t\tnewValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when item is removed from the list.\r\n\t *\r\n\t * @todo remove this later?\r\n\t */\r\n\tremoved: {\r\n\t\toldValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `setAll` method is called.\r\n\t */\r\n\tsetAll: {\r\n\t\toldArray: Array<A>;\r\n\t\tnewArray: Array<A>;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `insertIndex` method is called.\r\n\t */\r\n\tinsertIndex: {\r\n\t\tindex: number;\r\n\t\tnewValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `setIndex` method is called.\r\n\t */\r\n\tsetIndex: {\r\n\t\tindex: number;\r\n\t\toldValue: A;\r\n\t\tnewValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when item is removed.\r\n\t */\r\n\tremoveIndex: {\r\n\t\tindex: number;\r\n\t\toldValue: A;\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * ListGrouper organizes [[List]] items into groups.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class ListGrouper<A> extends MultiDisposer {\r\n\r\n\t/**\r\n\t * Function that can be used to extract a \"value\" of the list element.\r\n\t *\r\n\t * Used for ordering.\r\n\t */\r\n\tprivate _getKey: (value: A) => number;\r\n\r\n\t/**\r\n\t * A function that  is used to order list groups.\r\n\t */\r\n\tprivate _sort: (left: number, right: number) => Ordering;\r\n\r\n\t/**\r\n\t * Grouping keys.\r\n\t */\r\n\tprivate _keys: Array<number> = [];\r\n\r\n\t/**\r\n\t * List item groups.\r\n\t */\r\n\tprivate _groups: { [key: number]: Array<A> } = {};\r\n\r\n\t/**\r\n\t * Inserts an item (`x`) to a specific group (`key`) and specific `index`.\r\n\t *\r\n\t * @param x      Item\r\n\t * @param key    Group name\r\n\t * @param index  Index\r\n\t */\r\n\tprivate _insert(x: A, key: number, index?: number): void {\r\n\t\tif (this._groups[key] == null) {\r\n\t\t\tthis._groups[key] = [];\r\n\r\n\t\t\t// TODO code duplication with SortedList\r\n\t\t\tconst { found, index } = $array.getSortedIndex(this._keys, this._sort, key);\r\n\r\n\t\t\tif (found) {\r\n\t\t\t\tthrow new Error(\"Key already exists: \" + key);\r\n\r\n\t\t\t} else {\r\n\t\t\t\t$array.insertIndex(this._keys, index, key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (index == null) {\r\n\t\t\tthis._groups[key].push(x);\r\n\r\n\t\t} else {\r\n\t\t\t$array.insertIndex(this._groups[key], index, x);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an item from the list.\r\n\t *\r\n\t * @param x Item to remove\r\n\t */\r\n\tprivate _remove(x: A): void {\r\n\t\tconst key = this._getKey(x);\r\n\r\n\t\tconst values = this._groups[key];\r\n\r\n\t\tif (values != null) {\r\n\t\t\t$array.remove(values, x);\r\n\r\n\t\t\tif (values.length === 0) {\r\n\t\t\t\tdelete this._groups[key];\r\n\r\n\t\t\t\tconst { found, index } = $array.getSortedIndex(this._keys, this._sort, key);\r\n\r\n\t\t\t\tif (found) {\r\n\t\t\t\t\t$array.removeIndex(this._keys, index);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Key doesn't exist: \" + key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor(\r\n\t\tlist: $iter.Iterable<A> & {\r\n\t\t\tevents: EventDispatcher<{\r\n\t\t\t\tinserted: { newValue: A },\r\n\t\t\t\tremoved: { oldValue: A }\r\n\t\t\t}>;\r\n\t\t},\r\n\t\tgetKey: (value: A) => number,\r\n\t\tsort: (left: number, right: number) => Ordering\r\n\t) {\r\n\t\tsuper([\r\n\t\t\tlist.events.on(\"inserted\", (x) => {\r\n\t\t\t\tconst value = x.newValue;\r\n\t\t\t\tconst key = this._getKey(value);\r\n\r\n\t\t\t\tlet index = 0;\r\n\r\n\t\t\t\t$iter.eachContinue(list.iterator(), (x) => {\r\n\t\t\t\t\tif (x === value) {\r\n\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t} else if (this._getKey(x) === key) {\r\n\t\t\t\t\t\t++index;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._insert(value, key, index);\r\n\t\t\t}, undefined, false),\r\n\r\n\t\t\tlist.events.on(\"removed\", (x) => {\r\n\t\t\t\tthis._remove(x.oldValue);\r\n\t\t\t}, undefined, false)\r\n\t\t]);\r\n\r\n\t\tthis._getKey = getKey;\r\n\t\tthis._sort = sort;\r\n\r\n\t\t$iter.each(list.iterator(), (x) => {\r\n\t\t\tthis._insert(x, getKey(x));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator for the list.\r\n\t *\r\n\t * The iterator will iterate through all items in all groups.\r\n\t *\r\n\t * @return Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<A> {\r\n\t\treturn $iter.flatten($iter.map($iter.fromArray(this._keys), (key) => {\r\n\t\t\treturn $iter.fromArray(this._groups[key]);\r\n\t\t}));\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @todo Description\r\n * @ignore Exclude from docs\r\n */\r\nexport type ListLike<A> = $iter.Iterable<A> & {\r\n\tevents: EventDispatcher<{ removed: { oldValue: A } }>;\r\n};\r\n\r\n/**\r\n * A disposable list, which when disposed itself will call `dispose()` method\r\n * on all its items.\r\n */\r\nexport class ListDisposer<A extends IDisposer> extends Disposer {\r\n\tconstructor(list: ListLike<A>, disposeOnRemove: boolean = true) {\r\n\t\tif (disposeOnRemove) {\r\n\t\t\tconst disposer = list.events.on(\"removed\", (x) => {\r\n\t\t\t\tx.oldValue.dispose();\r\n\t\t\t}, undefined, false);\r\n\r\n\t\t\tsuper(() => {\r\n\t\t\t\tdisposer.dispose();\r\n\r\n\t\t\t\t// TODO clear the list ?\r\n\t\t\t\t$iter.each(list.iterator(), (x) => {\r\n\t\t\t\t\tx.dispose();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t} else {\r\n\t\t\tsuper(() => {\r\n\t\t\t\t// TODO clear the list ?\r\n\t\t\t\t$iter.each(list.iterator(), (x) => {\r\n\t\t\t\t\tx.dispose();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n */\r\nfunction checkBounds(index: number, len: number): void {\r\n\tif (!(index >= 0 && index < len)) {\r\n\t\tthrow new Error(\"Index out of bounds: \" + index);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nexport class List<T> {\r\n\r\n\t/**\r\n\t * List values.\r\n\t */\r\n\tprivate _values: Array<T>;\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<this, IListEvents<T>>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param initial  Inital list of values to add to list\r\n\t */\r\n\tconstructor(initial: Array<T> = []) {\r\n\t\tthis._values = initial;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of values in the list.\r\n\t *\r\n\t * Do not use this property to add values. Rather use dedicated methods, like\r\n\t * `push()`, `removeIndex()`, etc.\r\n\t *\r\n\t * @readonly\r\n\t * @return List values\r\n\t */\r\n\tpublic get values(): Array<T> {\r\n\t\treturn this._values;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if list contains specific item reference.\r\n\t *\r\n\t * @param item  Item to search for\r\n\t * @return `true` if found, `false` if not found\r\n\t */\r\n\tpublic contains(value: T): boolean {\r\n\t\treturn this._values.indexOf(value) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes specific item from the list.\r\n\t *\r\n\t * @param item An item to remove\r\n\t */\r\n\tpublic removeValue(value: T): void {\r\n\t\tlet i = 0;\r\n\t\tlet length = this._values.length;\r\n\r\n\t\twhile (i < length) {\r\n\t\t\t// TODO handle NaN\r\n\t\t\tif (this._values[i] === value) {\r\n\t\t\t\tthis.removeIndex(i);\r\n\t\t\t\t--length;\r\n\r\n\t\t\t} else {\r\n\t\t\t\t++i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Searches the list for specific item and returns its index.\r\n\t *\r\n\t * @param item  An item to search for\r\n\t * @return Index or -1 if not found\r\n\t */\r\n\tpublic indexOf(value: T): number {\r\n\t\treturn $array.indexOf(this._values, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Number of items in list.\r\n\t *\r\n\t * @readonly\r\n\t * @return Number of items\r\n\t */\r\n\tpublic get length(): number {\r\n\t\treturn this._values.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there's a value at specific index.\r\n\t *\r\n\t * @param index  Index\r\n\t * @return Value exists?\r\n\t */\r\n\tpublic hasIndex(index: number): boolean {\r\n\t\treturn index >= 0 && index < this._values.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an item at specified index.\r\n\t *\r\n\t * @param index  Index\r\n\t * @return List item\r\n\t */\r\n\tpublic getIndex(index: number): T | undefined {\r\n\t\treturn this._values[index];\r\n\t}\r\n\r\n\t/**\r\n\t * Sets value at specific index.\r\n\t *\r\n\t * If there's already a value at the index, it is overwritten.\r\n\t *\r\n\t * @param index  Index\r\n\t * @param value  New value\r\n\t * @return New value\r\n\t */\r\n\tpublic setIndex(index: number, value: T): T {\r\n\t\tcheckBounds(index, this._values.length);\r\n\r\n\t\tconst oldValue = this._values[index];\r\n\r\n\t\t// Do nothing if the old value and the new value are the same\r\n\t\tif (oldValue !== value) {\r\n\t\t\tthis._values[index] = value;\r\n\r\n\t\t\tif (this.events.isEnabled(\"setIndex\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"setIndex\", {\r\n\t\t\t\t\ttype: \"setIndex\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\toldValue: oldValue,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\t\ttype: \"inserted\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn oldValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an item to the list at a specific index, which pushes all the other\r\n\t * items further down the list.\r\n\t *\r\n\t * @param index Index\r\n\t * @param item  An item to add\r\n\t */\r\n\tpublic insertIndex(index: number, value: T): void {\r\n\t\tcheckBounds(index, this._values.length + 1);\r\n\r\n\t\t$array.insertIndex(this._values, index, value);\r\n\r\n\t\tif (this.events.isEnabled(\"insertIndex\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"insertIndex\", {\r\n\t\t\t\ttype: \"insertIndex\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tindex: index,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\ttype: \"inserted\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_sortQuicksort description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param low    [description]\r\n\t * @param high   [description]\r\n\t * @param order  [description]\r\n\t */\r\n\tprivate _sortQuicksort(low: number, high: number, order: (left: T, right: T) => Ordering): void {\r\n\t\tif (low < high) {\r\n\t\t\tconst p = this._sortPartition(low, high, order);\r\n\t\t\tthis._sortQuicksort(low, p, order);\r\n\t\t\tthis._sortQuicksort(p + 1, high, order);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [_sortPartition description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param low    [description]\r\n\t * @param high   [description]\r\n\t * @param order  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprivate _sortPartition(low: number, high: number, order: (left: T, right: T) => Ordering): number {\r\n\t\tconst values = this._values;\r\n\t\tconst pivot = values[low];\r\n\r\n\t\tlet i = low - 1;\r\n\t\tlet j = high + 1;\r\n\r\n\t\tfor (; ;) {\r\n\t\t\tdo {\r\n\t\t\t\t++i;\r\n\t\t\t} while (order(values[i], pivot) < 0);\r\n\r\n\t\t\tdo {\r\n\t\t\t\t--j;\r\n\t\t\t} while (order(values[j], pivot) > 0);\r\n\r\n\t\t\tif (i >= j) {\r\n\t\t\t\treturn j;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.swap(i, j);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Reorders list items according to specific ordering function.\r\n\t *\r\n\t * @param order  Ordering function\r\n\t */\r\n\tpublic sort(order: (left: T, right: T) => Ordering): void {\r\n\t\t// https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\r\n\t\t// @todo faster implementation of this\r\n\t\t// @todo test this\r\n\t\tthis._sortQuicksort(0, this._values.length - 1, order);\r\n\t}\r\n\r\n\t/**\r\n\t * Swaps indexes of two items in the list.\r\n\t *\r\n\t * @param a  Item 1\r\n\t * @param b  Item 2\r\n\t */\r\n\tpublic swap(a: number, b: number): void {\r\n\t\tconst len = this._values.length;\r\n\r\n\t\tcheckBounds(a, len);\r\n\t\tcheckBounds(b, len);\r\n\r\n\t\tif (a !== b) {\r\n\t\t\tconst value_a = this._values[a];\r\n\t\t\tconst value_b = this._values[b];\r\n\r\n\t\t\tthis._values[a] = value_b;\r\n\r\n\t\t\tif (this.events.isEnabled(\"setIndex\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"setIndex\", {\r\n\t\t\t\t\ttype: \"setIndex\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: a,\r\n\t\t\t\t\toldValue: value_a,\r\n\t\t\t\t\tnewValue: value_b\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis._values[b] = value_a;\r\n\r\n\t\t\tif (this.events.isEnabled(\"setIndex\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"setIndex\", {\r\n\t\t\t\t\ttype: \"setIndex\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: b,\r\n\t\t\t\t\toldValue: value_b,\r\n\t\t\t\t\tnewValue: value_a\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes a value at specific index.\r\n\t *\r\n\t * @param index  Index of value to remove\r\n\t * @return Removed value\r\n\t */\r\n\tpublic removeIndex(index: number): T {\r\n\t\tcheckBounds(index, this._values.length);\r\n\r\n\t\tconst oldValue = this._values[index];\r\n\r\n\t\t$array.removeIndex(this._values, index);\r\n\r\n\t\tif (this.events.isEnabled(\"removeIndex\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"removeIndex\", {\r\n\t\t\t\ttype: \"removeIndex\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tindex: index,\r\n\t\t\t\toldValue: oldValue\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\ttype: \"removed\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\toldValue: oldValue\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn oldValue;\r\n\t}\r\n\r\n\t/**\r\n\t * Moves an item to a specific index within the list.\r\n\t *\r\n\t * If the index is not specified it will move the item to the end of the\r\n\t * list.\r\n\t *\r\n\t * @param value  Item to move\r\n\t * @param index  Index to place item at\r\n\t */\r\n\tpublic moveValue(value: T, toIndex?: number): void {\r\n\t\t// TODO don't do anything if the desired index is the same as the current index\r\n\t\tlet index = this.indexOf(value);\r\n\r\n\t\t// TODO remove all old values rather than only the first ?\r\n\t\tif (index !== -1) {\r\n\t\t\tconst oldValue = this._values[index];\r\n\r\n\t\t\t$array.removeIndex(this._values, index);\r\n\r\n\t\t\tif (this.events.isEnabled(\"removeIndex\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removeIndex\", {\r\n\t\t\t\t\ttype: \"removeIndex\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\toldValue: oldValue\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (toIndex == null) {\r\n\t\t\ttoIndex = this._values.length;\r\n\t\t\tthis._values.push(value);\r\n\r\n\t\t} else {\r\n\t\t\t$array.insertIndex(this._values, toIndex, value);\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"insertIndex\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"insertIndex\", {\r\n\t\t\t\ttype: \"insertIndex\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tindex: toIndex,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (index === -1) {\r\n\t\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\t\ttype: \"inserted\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tnewValue: value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an item to the end of the list.\r\n\t *\r\n\t * @param item  An item to add\r\n\t */\r\n\tpublic push<K extends T>(value: K): K {\r\n\t\tconst index = this._values.push(value) - 1;\r\n\r\n\t\tif (this.events.isEnabled(\"insertIndex\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"insertIndex\", {\r\n\t\t\t\ttype: \"insertIndex\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tindex: index,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\ttype: \"inserted\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds an item as a first item in the list.\r\n\t *\r\n\t * @param item  An item to add\r\n\t */\r\n\tpublic unshift(value: T): void {\r\n\t\tthis.insertIndex(0, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds multiple items to the list.\r\n\t *\r\n\t * @param items  An Array of items to add\r\n\t */\r\n\tpublic pushAll(values: Array<T>): void {\r\n\t\t$array.each(values, (value) => {\r\n\t\t\tthis.push(value);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Copies and adds items from abother list.\r\n\t *\r\n\t * @param source  A list top copy items from\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tthis.pushAll(source._values);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the last item from the list, and removes it.\r\n\t *\r\n\t * @return Item\r\n\t */\r\n\tpublic pop(): $type.Optional<T> {\r\n\t\tlet index = this._values.length - 1;\r\n\t\treturn index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the first item from the list, and removes it.\r\n\t *\r\n\t * @return Item\r\n\t */\r\n\tpublic shift(): $type.Optional<T> {\r\n\t\treturn this._values.length ? this.removeIndex(0) : undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets multiple items to the list.\r\n\t *\r\n\t * All current items are removed.\r\n\t *\r\n\t * @param newArray  New items\r\n\t */\r\n\tpublic setAll(newArray: Array<T>): void {\r\n\t\t// @tod if a value exists in both the new and old arrays, don't send remove/insert events\r\n\t\tconst oldArray = $array.copy(this._values);\r\n\r\n\t\tthis._values.length = 0;\r\n\r\n\t\t$array.each(newArray, (value) => {\r\n\t\t\tthis._values.push(value);\r\n\t\t});\r\n\r\n\t\tif (this.events.isEnabled(\"setAll\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"setAll\", {\r\n\t\t\t\ttype: \"setAll\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\toldArray: oldArray,\r\n\t\t\t\tnewArray: this._values // TODO make a copy ?\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t$array.each(oldArray, (x) => {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\toldValue: x\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\t$array.each(this._values, (x) => {\r\n\t\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\t\ttype: \"inserted\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tnewValue: x\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all items from the list.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis.setAll([]);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list iterator.\r\n\t *\r\n\t * @return Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<T> {\r\n\t\treturn $iter.fromArray(this._values);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ES6 iterator for the list.\r\n\t */\r\n\tpublic *[Symbol.iterator](): Iterator<T> {\r\n\t\tconst length = this._values.length;\r\n\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tyield this._values[i];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calls `f` for each element in the list.\r\n\t *\r\n\t * `f` should have at least one parameter defined which will get a current\r\n\t * item, with optional second argument - index.\r\n\t */\r\n\tpublic each(f: (value: T, index: number) => void): void {\r\n\t\t$array.each(this._values, f);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a specific range of list items, which can be iterated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Code duplication with IndexedIterable\r\n\t * @param start  Start index\r\n\t * @param end    End index\r\n\t * @return Range\r\n\t */\r\n\tpublic range(start: number, end: number): IndexedIterable<T> {\r\n\t\tif (start <= end) {\r\n\t\t\tconst diff = end - start;\r\n\r\n\t\t\tstart = Math.max(start, 0);\r\n\t\t\tend = Math.min(start + diff, this._values.length);\r\n\r\n\t\t\treturn new IndexedIterable(this._values, start, end);\r\n\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Start index must be lower than end index\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an iterator that has list items sorted backwards.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return List\r\n\t */\r\n\tpublic backwards(): IndexedIterable<T> {\r\n\t\treturn new IndexedIterable(this._values, this._values.length, 0);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A version of a [[List]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nexport class ListTemplate<T extends IClone<T> & { isTemplate: boolean }> extends List<T> implements IClone<ListTemplate<T>> {\r\n\t/**\r\n\t * A template object.\r\n\t *\r\n\t * @todo Make this private\r\n\t */\r\n\tpublic _template!: T;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param t Template object\r\n\t */\r\n\tpublic constructor(t: T) {\r\n\t\tsuper();\r\n\t\tthis.template = t;\r\n\t}\r\n\r\n\t/**\r\n\t * A \"template\" object to copy all properties from when creating new list\r\n\t * items.\r\n\t *\r\n\t * @param v  Template object\r\n\t */\r\n\tpublic set template(v: T) {\r\n\t\tv.isTemplate = true;\r\n\t\tthis._template = v;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Template object\r\n\t */\r\n\tpublic get template(): T {\r\n\t\treturn this._template;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all elements from other list.\r\n\t *\r\n\t * @param source  Source list\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (value) => {\r\n\t\t\tthis.push(value.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a new object of the specified type, adds it to the end of\r\n\t * the list, and returns it.\r\n\t *\r\n\t * @param make  Item type to use. Will use the default type for the list if not specified.\r\n\t * @return      Newly created item\r\n\t */\r\n\tpublic create(make: { new(): T; }): T;\r\n\tpublic create(): T;\r\n\tpublic create(make?: { new(): T; }): T {\r\n\t\tconst clone =\r\n\t\t\t(make != null\r\n\t\t\t\t? new make()\r\n\t\t\t\t: this.template.clone());\r\n\r\n\t\tthis.push(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an exact clone of the list, including its items and template.\r\n\t *\r\n\t * @return New list\r\n\t */\r\n\tpublic clone(): ListTemplate<T> {\r\n\t\tconst out = new ListTemplate(this.template);\r\n\r\n\t\tconst values = this.values;\r\n\r\n\t\tconst length = values.length;\r\n\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tout.push(values[i].clone());\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n}\r\n","/**\r\n * Module for \"Drop Shadow\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Group } from \"../Group\";\r\nimport { Color, color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Drop Shadow\" filter\r\n */\r\nexport interface DropShadowFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t */\r\n\tdx: number;\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t */\r\n\tdy: number;\r\n\r\n\t/**\r\n\t * Blur.\r\n\t */\r\n\tblur: number;\r\n\r\n\t/**\r\n\t * Shadow opacity. (0-1)\r\n\t */\r\n\topacity: number;\r\n\r\n\t/**\r\n\t * Shadow color.\r\n\t */\r\n\tcolor: Color;\r\n\r\n};\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creats a \"Drop Shadow\" filter.\r\n */\r\nexport class DropShadowFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: DropShadowFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t *\r\n\t * @see [@link DropShadowFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<DropShadowFilterProperties, any>;\r\n\r\n\r\n\t/**\r\n\t * Reference to the `<feGaussianBlur>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feGaussianBlur: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feOffset>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feOffset: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feFlood: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feComposite: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feMerge>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feMerge: Group;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"DropShadowFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\r\n\t\tthis.color = color(\"#000\");\r\n\r\n\t\tthis.feGaussianBlur = this.paper.add(\"feGaussianBlur\");\r\n\t\tthis.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n\t\tthis.filterPrimitives.push(this.feGaussianBlur);\r\n\r\n\t\tthis.feOffset = this.paper.add(\"feOffset\");\r\n\t\tthis.feOffset.attr({ \"result\": \"offsetBlur\" });\r\n\t\tthis.filterPrimitives.push(this.feOffset);\r\n\r\n\t\tthis.feFlood = this.paper.add(\"feFlood\");\r\n\t\tthis.feFlood.attr({ \"flood-color\": this.color });\r\n\t\tthis.filterPrimitives.push(this.feFlood);\r\n\r\n\t\tthis.feComposite = this.paper.add(\"feComposite\");\r\n\t\tthis.feComposite.attr({ \"in2\": \"offsetBlur\", operator: \"in\" });\r\n\t\tthis.filterPrimitives.push(this.feComposite);\r\n\r\n\t\tthis.feMerge = this.paper.addGroup(\"feMerge\");\r\n\t\tthis.feMerge.add(this.paper.add(\"feMergeNode\"));\r\n\t\tthis.feMerge.add(this.paper.add(\"feMergeNode\").attr({ \"in\": \"SourceGraphic\" }));\r\n\t\tthis.filterPrimitives.push(this.feMerge);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 200;\r\n\t\tthis.height = 200;\r\n\t\tthis.blur = 1.5;\r\n\t\tthis.dx = 3;\r\n\t\tthis.dy = 3;\r\n\t\tthis.opacity = 0.5;\r\n\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shadow color.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.properties.color = value;\r\n\t\tif(this.feFlood){\r\n\t\t\tthis.feFlood.attr({ \"flood-color\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * Opacity of the shadow. (0-1)\r\n\t *\r\n\t * @param value  Opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: number) {\r\n\t\tthis.properties.opacity = value;\r\n\t\tthis.feFlood.attr({ \"flood-opacity\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacity (0-1)\r\n\t */\r\n\tpublic get opacity(): number {\r\n\t\treturn this.properties.opacity;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t *\r\n\t * @param value  Horizontal offset (px)\r\n\t */\r\n\tpublic set dx(value: number) {\r\n\t\tthis.properties.dx = value;\r\n\t\tthis.feOffset.attr({ \"dx\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal offset (px)\r\n\t */\r\n\tpublic get dx(): number {\r\n\t\treturn this.properties.dx;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t *\r\n\t * @param value Vertical offset (px)\r\n\t */\r\n\tpublic set dy(value: number) {\r\n\t\tthis.properties.dy = value;\r\n\t\tthis.feOffset.attr({ \"dy\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical offset (px)\r\n\t */\r\n\tpublic get dy(): number {\r\n\t\treturn this.properties.dy;\r\n\t}\r\n\r\n\t/**\r\n\t * Blur.\r\n\t *\r\n\t * @param value  Blur\r\n\t */\r\n\tpublic set blur(value: number) {\r\n\t\tthis.properties.blur = value;\r\n\t\tthis.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Blur\r\n\t */\r\n\tpublic get blur(): number {\r\n\t\treturn this.properties.blur;\r\n\t}\r\n\r\n\t/**\r\n\t * [updateScale description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected updateScale() {\r\n\t\tthis.dx = this.dx;\r\n\t\tthis.dy = this.dy;\r\n\t\tthis.blur = this.blur;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DropShadowFilter\"] = DropShadowFilter;\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { dataLoader } from \"./DataLoader\";\r\nimport { DataParser } from \"./DataParser\";\r\nimport { JSONParser } from \"./JSONParser\";\r\nimport { CSVParser } from \"./CSVParser\";\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Component } from \"../Component\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { INetRequestOptions } from \"../utils/Net\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines events for [[DataSource]].\r\n */\r\nexport interface IDataSourceEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when loading of the data starts.\r\n\t */\r\n\tstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when loading of the data starts.\r\n\t */\r\n\tloadstarted: {};\r\n\r\n\t/**\r\n\t * Invoked when the loading of the data finishes.\r\n\t */\r\n\tloadended: {};\r\n\r\n\t/**\r\n\t * Invoked when parsing of the loaded data starts.\r\n\t */\r\n\tparsestarted: {};\r\n\r\n\t/**\r\n\t * Invoked when parsing of the loaded data finishes.\r\n\t */\r\n\tparseended: {};\r\n\r\n\t/**\r\n\t * Invoked when loading and parsing finishes.\r\n\t */\r\n\tended: {};\r\n\r\n\t/**\r\n\t * Invoked when data source was successfully loaded and parsed.\r\n\t */\r\n\tdone: {\r\n\t\tdata: any\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when data source encounters a loading error.\r\n\t */\r\n\terror: {\r\n\t\tcode: number,\r\n\t\tmessage: string\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when data source encounters a parsing error.\r\n\t */\r\n\tparseerror: {\r\n\t\tmessage: string\r\n\t};\r\n\r\n};\r\n\r\n/**\r\n * Defines adapters for [[DataSource]].\r\n */\r\nexport interface IDataSourceAdapters {\r\n\r\n\t/**\r\n\t * Applied to a data source URL before it is loaded.\r\n\t */\r\n\turl: string;\r\n\r\n\t/**\r\n\t * Applied to a parser type, before parsing starts.\r\n\t *\r\n\t * Can be used to supply different parser than the one set/determined by\r\n\t * Data Loader.\r\n\t */\r\n\tparser: DataParser;\r\n\r\n\t/**\r\n\t * Applied to the timeout setting.\r\n\t */\r\n\treloadTimeout: number;\r\n\r\n\t/**\r\n\t * Applied to the loaded data **before** it is passed to parser.\r\n\t */\r\n\tunparsedData: string;\r\n\r\n\t/**\r\n\t * Applied to the loaded data **after** it was parsed by a parser.\r\n\t */\r\n\tparsedData: any;\r\n\r\n\t/**\r\n\t * Applied to `incremental` setting.\r\n\t */\r\n\tincremental: boolean;\r\n\r\n\t/**\r\n\t * Applied to `incrementalParams` setting.\r\n\t */\r\n\tincrementalParams: { [index: string]: string };\r\n\r\n\t/**\r\n\t * Applied to `updateCurrentData` setting.\r\n\t */\r\n\tupdateCurrentData: boolean;\r\n\r\n\t/**\r\n\t * Applied to `keepCount` setting.\r\n\t */\r\n\tkeepCount: boolean;\r\n\r\n\t/**\r\n\t * Applied to parser options.\r\n\t */\r\n\tparserOptions: any;\r\n\r\n\t/**\r\n\t * Applied to the array that lists fields in data that hold date-based values.\r\n\t */\r\n\tdateFields: string[];\r\n\r\n\t/**\r\n\t * Applied to the array that lists fields in data that hold numeric values.\r\n\t */\r\n\tnumberFields: string[];\r\n\r\n\t/**\r\n\t * Applied to the custom request options object.\r\n\t */\r\n\trequestOptions: INetRequestOptions;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents a single data source - external file with all of its settings,\r\n * such as format, data parsing, etc.\r\n *\r\n * ```TypeScript\r\n * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n * chart.dataSource.parser = am4core.JSONParser;\r\n * ```\r\n * ```JavaScript\r\n * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n * chart.dataSource.parser = am4core.JSONParser;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"dataSource\": {\r\n *     \"url\": \"http://www.myweb.com/data.json\",\r\n *     \"parser\": \"JSONParser\"\r\n *   },\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @see {@link IDataSourceEvents} for a list of available events\r\n * @see {@link IDataSourceAdapters} for a list of available Adapters\r\n */\r\nexport class DataSource extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IDataSourceEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IDataSourceAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter: Adapter<DataSource, IDataSourceAdapters> = new Adapter<DataSource, IDataSourceAdapters>(this);\r\n\r\n\t/**\r\n\t * A [[Component]] recipient of the data.\r\n\t */\r\n\tpublic component: Component;\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t */\r\n\tprotected _language: Language;\r\n\r\n\t/**\r\n\t * An instance of [[DateFormatter]].\r\n\t */\r\n\tprotected _dateFormatter: DateFormatter;\r\n\r\n\t/**\r\n\t * An instance of parser class that can understand and parse data from the\r\n\t * source URL.\r\n\t */\r\n\tprotected _parser: DataParser;\r\n\r\n\t/**\r\n\t * An URL of the data source.\r\n\t */\r\n\tprotected _url: string;\r\n\r\n\t/**\r\n\t * Custom options for HTTP(S) request.\r\n\t */\r\n\tprotected _requestOptions: INetRequestOptions = {};\r\n\r\n\t/**\r\n\t * Reload full data source every X ms.\r\n\t */\r\n\tprotected _reloadFrequency: number;\r\n\r\n\t/**\r\n\t * Holds timeout reference for next reload.\r\n\t */\r\n\tprotected _reloadTimeout: any;\r\n\r\n\t/**\r\n\t * Holds disposer for the reload event handler.\r\n\t */\r\n\tprivate _reloadDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * If set to `true`, any subsequent data loads will be considered incremental\r\n\t * (containing only new data points that are supposed to be added to existing\r\n\t * data).\r\n\t *\r\n\t * NOTE: this setting works only with element's `data` property. It won't\r\n\t * work with any other externally-loadable data property.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tprotected _incremental: boolean = false;\r\n\r\n\t/**\r\n\t * A collection of key/value pairs to attach to a data source URL when making\r\n\t * an incremental request.\r\n\t */\r\n\tprotected _incrementalParams: { [index: string]: string } = {};\r\n\r\n\t/**\r\n\t * This setting is used only when `incremental = true`. If set to `true`,\r\n\t * it will try to retain the same number of data items across each load.\r\n\t *\r\n\t * E.g. if incremental load yeilded 5 new records, then 5 items from the\r\n\t * beginning of data will be removed so that we end up with the same number\r\n\t * of data items.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tprotected _keepCount: boolean = false;\r\n\r\n\t/**\r\n\t * If set to `true`, each subsequent load will be treated as an update to\r\n\t * currently loaded data, meaning that it will try to update values on\r\n\t * existing data items, not overwrite the whole data.\r\n\t *\r\n\t * This will work faster than complete update, and also will animate the\r\n\t * values to their new positions.\r\n\t *\r\n\t * Data sources across loads must contain the same number of data items.\r\n\t *\r\n\t * Loader will not truncate the data set if loaded data has fewer data items,\r\n\t * and if it is longer, the excess data items will be ignored.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.5.5\r\n\t */\r\n\tprotected _updateCurrentData: boolean = false;\r\n\r\n\t/**\r\n\t * Holds the date of the last load.\r\n\t */\r\n\tpublic lastLoad: Date;\r\n\r\n\t/**\r\n\t * If set to `true` it will timestamp all requested URLs to work around\r\n\t * browser cache.\r\n\t */\r\n\tpublic disableCache: boolean;\r\n\r\n\t/**\r\n\t * Will show loading indicator when loading files.\r\n\t */\r\n\tpublic showPreloader: boolean = true;\r\n\r\n\t/**\r\n\t * Loaded and parsed data.\r\n\t */\r\n\tpublic data: any;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(url?: string, parser?: string | DataParser) {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"DataSource\";\r\n\r\n\t\t// Set defaults\r\n\t\tif (url) {\r\n\t\t\tthis.url = url;\r\n\t\t}\r\n\r\n\t\t// Set parser\r\n\t\tif (parser) {\r\n\t\t\tif (typeof parser == \"string\") {\r\n\t\t\t\tthis.parser = dataLoader.getParserByType(parser);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.parser = parser;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes the loaded data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param data         Raw (unparsed) data\r\n\t * @param contentType  Content type of the loaded data (optional)\r\n\t */\r\n\tpublic processData(data: string, contentType?: string): void {\r\n\t\t// Parsing started\r\n\t\tthis.dispatchImmediately(\"parsestarted\");\r\n\r\n\t\t// Check if parser is set\r\n\t\tif (!this.parser) {\r\n\r\n\t\t\t// Try to resolve from data\r\n\t\t\tthis.parser = dataLoader.getParserByData(data, contentType);\r\n\r\n\t\t\tif (!this.parser) {\r\n\t\t\t\t// We have a problem - nobody knows what to do with the data\r\n\t\t\t\t// Raise error\r\n\t\t\t\tif (this.events.isEnabled(\"parseerror\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IDataSourceEvents>[\"parseerror\"] = {\r\n\t\t\t\t\t\ttype: \"parseerror\",\r\n\t\t\t\t\t\tmessage: this.language.translate(\"No parser available for file: %1\", null, this.url),\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"parseerror\", event);\r\n\t\t\t\t}\r\n\t\t\t\tthis.dispatchImmediately(\"parseended\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Apply options adapters\r\n\t\tthis.parser.options = this.adapter.apply(\"parserOptions\", this.parser.options);\r\n\t\tthis.parser.options.dateFields = this.adapter.apply(\"dateFields\", this.parser.options.dateFields || []);\r\n\t\tthis.parser.options.numberFields = this.adapter.apply(\"numberFields\", this.parser.options.numberFields || []);\r\n\r\n\t\t// Check if we need to pass in date formatter\r\n\t\tif (this.parser.options.dateFields && !this.parser.options.dateFormatter) {\r\n\t\t\tthis.parser.options.dateFormatter = this.dateFormatter;\r\n\t\t}\r\n\r\n\t\t// Parse\r\n\t\tthis.data = this.adapter.apply(\r\n\t\t\t\"parsedData\",\r\n\t\t\tthis.parser.parse(\r\n\t\t\t\tthis.adapter.apply(\"unparsedData\", data)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\t// Check for parsing errors\r\n\t\tif (!$type.hasValue(this.data) && this.events.isEnabled(\"parseerror\")) {\r\n\t\t\tconst event: AMEvent<this, IDataSourceEvents>[\"parseerror\"] = {\r\n\t\t\t\ttype: \"parseerror\",\r\n\t\t\t\tmessage: this.language.translate(\"Error parsing file: %1\", null, this.url),\r\n\t\t\t\ttarget: this\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"parseerror\", event);\r\n\t\t}\r\n\r\n\t\t// Wrap up\r\n\t\tthis.dispatchImmediately(\"parseended\");\r\n\r\n\t\tif ($type.hasValue(this.data)) {\r\n\t\t\tthis.dispatchImmediately(\"done\", {\r\n\t\t\t\t\"data\": this.data\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// The component is responsible for updating its own data vtriggered via\r\n\t\t// events.\r\n\r\n\t\t// Update last data load\r\n\t\tthis.lastLoad = new Date();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * URL of the data source.\r\n\t *\r\n\t * @param value  URL\r\n\t */\r\n\tpublic set url(value: string) {\r\n\t\tthis._url = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return URL\r\n\t */\r\n\tpublic get url(): string {\r\n\r\n\t\t// Get URL\r\n\t\tlet url = this.disableCache\r\n\t\t\t? this.timestampUrl(this._url)\r\n\t\t\t: this._url;\r\n\r\n\t\t// Add incremental params\r\n\t\tif (this.incremental && this.component.data.length) {\r\n\t\t\turl = this.addUrlParams(url, this.incrementalParams);\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"url\", url);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Custom options for HTTP(S) request.\r\n\t *\r\n\t * At this moment the only option supported is: `requestHeaders`, which holds\r\n\t * an array of objects for custom request headers, e.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.dataSource.requestOptions.requestHeaders = [{\r\n\t *   \"key\": \"x-access-token\",\r\n\t *   \"value\": \"123456789\"\r\n\t * }];\r\n\t * ``````JavaScript\r\n\t * chart.dataSource.requestOptions.requestHeaders = [{\r\n\t *   \"key\": \"x-access-token\",\r\n\t *   \"value\": \"123456789\"\r\n\t * }];\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"dataSource\": {\r\n\t *     // ...\r\n\t *     \"requestOptions\": {\r\n\t *       \"requestHeaders\": [{\r\n\t *         \"key\": \"x-access-token\",\r\n\t *         \"value\": \"123456789\"\r\n\t *       }]\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * NOTE: setting this options on an-already loaded DataSource will not\r\n\t * trigger a reload.\r\n\t *\r\n\t * @param value  Options\r\n\t */\r\n\tpublic set requestOptions(value: INetRequestOptions) {\r\n\t\tthis._requestOptions = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Options\r\n\t */\r\n\tpublic get requestOptions(): INetRequestOptions {\r\n\t\treturn this.adapter.apply(\"requestOptions\", this._requestOptions);\r\n\t}\r\n\r\n\t/**\r\n\t * A parser to be used to parse data.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n\t * chart.dataSource.parser = am4core.JSONParser;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n\t * chart.dataSource.parser = am4core.JSONParser;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"dataSource\": {\r\n\t *     \"url\": \"http://www.myweb.com/data.json\",\r\n\t *     \"parser\": {\r\n\t *       \"type\": \"JSONParser\"\r\n\t *     }\r\n\t *   },\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @default JSONParser\r\n\t * @param value  Data parser\r\n\t */\r\n\tpublic set parser(value: DataParser) {\r\n\t\tthis._parser = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data parser\r\n\t */\r\n\tpublic get parser(): DataParser {\r\n\t\tif (!this._parser) {\r\n\t\t\tthis._parser = new JSONParser();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"parser\", this._parser);\r\n\t}\r\n\r\n\t/**\r\n\t * Data source reload frequency.\r\n\t *\r\n\t * If set, it will reload the same URL every X milliseconds.\r\n\t *\r\n\t * @param value Reload frequency (ms)\r\n\t */\r\n\tpublic set reloadFrequency(value: number) {\r\n\t\tif (this._reloadFrequency != value) {\r\n\t\t\tthis._reloadFrequency = value;\r\n\r\n\t\t\t// Should we schedule a reload?\r\n\t\t\tif (value) {\r\n\t\t\t\tif (!$type.hasValue(this._reloadDisposer)) {\r\n\t\t\t\t\tthis._reloadDisposer = this.events.on(\"ended\", (ev) => {\r\n\t\t\t\t\t\tthis._reloadTimeout = setTimeout(() => {\r\n\t\t\t\t\t\t\tthis.load();\r\n\t\t\t\t\t\t}, this.reloadFrequency);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if ($type.hasValue(this._reloadDisposer)) {\r\n\t\t\t\tthis._reloadDisposer.dispose();\r\n\t\t\t\tthis._reloadDisposer = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Reload frequency (ms)\r\n\t */\r\n\tpublic get reloadFrequency(): number {\r\n\t\treturn this.adapter.apply(\"reloadTimeout\", this._reloadFrequency);\r\n\t}\r\n\r\n\t/**\r\n\t * Should subsequent reloads be treated as incremental?\r\n\t *\r\n\t * Incremental loads will assume that they contain only new data items\r\n\t * since the last load.\r\n\t *\r\n\t * If `incremental = false` the loader will replace all of the target's\r\n\t * data with each load.\r\n\t *\r\n\t * This setting does not have any effect trhe first time data is loaded.\r\n\t *\r\n\t * NOTE: this setting works only with element's `data` property. It won't\r\n\t * work with any other externally-loadable data property.\r\n\t *\r\n\t * @default false\r\n\t * @param Incremental load?\r\n\t */\r\n\tpublic set incremental(value: boolean) {\r\n\t\tthis._incremental = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Incremental load?\r\n\t */\r\n\tpublic get incremental(): boolean {\r\n\t\treturn this.adapter.apply(\"incremental\", this._incremental);\r\n\t}\r\n\r\n\t/**\r\n\t * An object consisting of key/value pairs to apply to an URL when data\r\n\t * source is making an incremental request.\r\n\t *\r\n\t * @param value  Incremental request parameters\r\n\t */\r\n\tpublic set incrementalParams(value: { [index: string]: string }) {\r\n\t\tthis._incrementalParams = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Incremental request parameters\r\n\t */\r\n\tpublic get incrementalParams(): { [index: string]: string } {\r\n\t\treturn this.adapter.apply(\"incrementalParams\", this._incrementalParams);\r\n\t}\r\n\r\n\t/**\r\n\t * This setting is used only when `incremental = true`. If set to `true`,\r\n\t * it will try to retain the same number of data items across each load.\r\n\t *\r\n\t * E.g. if incremental load yeilded 5 new records, then 5 items from the\r\n\t * beginning of data will be removed so that we end up with the same number\r\n\t * of data items.\r\n\t *\r\n\t * @default false\r\n\t * @param Keep record count?\r\n\t */\r\n\tpublic set keepCount(value: boolean) {\r\n\t\tthis._keepCount = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return keepCount load?\r\n\t */\r\n\tpublic get keepCount(): boolean {\r\n\t\treturn this.adapter.apply(\"keepCount\", this._keepCount);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, each subsequent load will be treated as an update to\r\n\t * currently loaded data, meaning that it will try to update values on\r\n\t * existing data items, not overwrite the whole data.\r\n\t *\r\n\t * This will work faster than complete update, and also will animate the\r\n\t * values to their new positions.\r\n\t *\r\n\t * Data sources across loads must contain the same number of data items.\r\n\t *\r\n\t * Loader will not truncate the data set if loaded data has fewer data items,\r\n\t * and if it is longer, the excess data items will be ignored.\r\n\t *\r\n\t * NOTE: this setting is ignored if `incremental = true`.\r\n\t *\r\n\t * @default false\r\n\t * @since 2.5.5\r\n\t * @param Update current data?\r\n\t */\r\n\tpublic set updateCurrentData(value: boolean) {\r\n\t\tthis._updateCurrentData = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Update current data?\r\n\t */\r\n\tpublic get updateCurrentData(): boolean {\r\n\t\treturn this.adapter.apply(\"updateCurrentData\", this._updateCurrentData);\r\n\t}\r\n\r\n\t/**\r\n\t * Language instance to use.\r\n\t *\r\n\t * Will inherit and use chart's language, if not set.\r\n\t *\r\n\t * @param value An instance of Language\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tif (this._language) {\r\n\t\t\treturn this._language;\r\n\t\t}\r\n\t\telse if (this.component) {\r\n\t\t\tthis._language = this.component.language;\r\n\t\t\treturn this._language;\r\n\t\t}\r\n\t\tthis.language = new Language();\r\n\t\treturn this.language;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DateFormatter]] to use when parsing dates from string formats.\r\n\t *\r\n\t * Will inherit and use chart's DateFormatter if not ser.\r\n\t *\r\n\t * @param value An instance of [[DateFormatter]]\r\n\t */\r\n\tpublic set dateFormatter(value: DateFormatter) {\r\n\t\tthis._dateFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A [[DateFormatter]] instance to be used\r\n\t */\r\n\tpublic get dateFormatter(): DateFormatter {\r\n\t\tif (this._dateFormatter) {\r\n\t\t\treturn this._dateFormatter;\r\n\t\t}\r\n\t\telse if (this.component) {\r\n\t\t\tthis._dateFormatter = this.component.dateFormatter;\r\n\t\t\treturn this._dateFormatter;\r\n\t\t}\r\n\t\tthis.dateFormatter = new DateFormatter();\r\n\t\treturn this.dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds current timestamp to the URL.\r\n\t *\r\n\t * @param url  Source URL\r\n\t * @return Timestamped URL\r\n\t */\r\n\tpublic timestampUrl(url: string): string {\r\n\t\tlet tstamp = new Date().getTime().toString();\r\n\t\tlet params: { [index: string]: string } = {};\r\n\t\tparams[tstamp] = \"\";\r\n\t\treturn this.addUrlParams(url, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes of this object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\t\tif (this._reloadTimeout) {\r\n\t\t\tclearTimeout(this._reloadTimeout);\r\n\t\t}\r\n\t\tif ($type.hasValue(this._reloadDisposer)) {\r\n\t\t\tthis._reloadDisposer.dispose();\r\n\t\t\tthis._reloadDisposer = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiate the load.\r\n\t *\r\n\t * All loading in JavaScript is asynchronous. This function will trigger the\r\n\t * load and will exit immediately.\r\n\t *\r\n\t * Use DataSource's events to watch for loaded data and errors.\r\n\t */\r\n\tpublic load(): void {\r\n\t\tif (this.url) {\r\n\t\t\tif (this._reloadTimeout) {\r\n\t\t\t\tclearTimeout(this._reloadTimeout);\r\n\t\t\t}\r\n\t\t\tdataLoader.load(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds parameters to `url` as query strings. Will take care of proper\r\n\t * separators.\r\n\t *\r\n\t * @param url     Source URL\r\n\t * @param params  Parameters\r\n\t * @return New URL\r\n\t */\r\n\tpublic addUrlParams(url: string, params: { [index: string]: string }): string {\r\n\t\tlet join = url.match(/\\?/) ? \"&\" : \"?\";\r\n\t\tlet add: string[] = [];\r\n\t\t$object.each(params, (key, value) => {\r\n\t\t\tif (value != \"\") {\r\n\t\t\t\tadd.push(key + \"=\" + encodeURIComponent(value));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tadd.push(key);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (add.length) {\r\n\t\t\treturn url + join + add.join(\"&\");\r\n\t\t}\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tregistry.registeredClasses[\"json\"] = JSONParser;\r\n\t\tregistry.registeredClasses[\"JSONParser\"] = JSONParser;\r\n\t\tregistry.registeredClasses[\"csv\"] = CSVParser;\r\n\t\tregistry.registeredClasses[\"CSVParser\"] = CSVParser;\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { ILocale } from \"./utils/Language\";\n\n/**\n * Defines system-wide options for amCharts 4.\n *\n * Accessible via singleton object `am4core.options`.\n *\n * Options set here are will be applicable to all charts created afterwards.\n *\n * E.g.:\n *\n * ```TypeScript\n * am4core.options.autoSetClassName = true;\n * ```\n * ```JavaScript\n * am4core.options.autoSetClassName = true;\n * ```\n */\nexport interface Options {\n\t/**\n\t * Console output enabled.\n\t */\n\tverbose: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tcommercialLicense: boolean;\n\n\t/**\n\t * amCharts will add `class` property to some elements. All those class names\n\t * will be prefixed by `classNamePrefix`.\n\t *\n\t * @default \"amcharts-\"\n\t */\n\tclassNamePrefix: string;\n\n\t/**\n\t * Normally, the chart will create its elements without any `className`\n\t * attributes.\n\t *\n\t * If you set this to `true`, it will set class names that will reflect\n\t * the actual class this the SVG element corresponds to.\n\t *\n\t * The className will contain class prefixed with `amcharts-`. (prefix is\n\t * configurable via `classNamePrefix`)\n\t *\n\t * E.g. `\"amcharts-button\"`.\n\t *\n\t * @default false\n\t */\n\tautoSetClassName: boolean;\n\n\t/**\n\t * A default locale to auto-apply to all new charts created.\n\t */\n\tdefaultLocale?: ILocale;\n\n\t/**\n\t * When multi-segment lines ([[Polyline]]) are drawn some points may be\n\t * simplified if they are closer than `minPolylineStep`.\n\t *\n\t * The bigger this value, the more simplified lines will come out.\n\t *\n\t * This setting will effect [[LineSeries]] and derivative classes.\n\t *\n\t * IMPORTANT: This setting is not compatible with [[StepLineSeries]].\n\t *\n\t * @default 0.5\n\t * @since 4.2.5\n\t */\n\tminPolylineStep?: number;\n\n\t/**\n\t * Whether the chart should only display when its container is visible\n\t * on the document viewport.\n\t *\n\t * This setting can be combined with `queue` for better performance.\n\t *\n\t * NOTE: if your charts are located in the scrollable container, make sure\n\t * you also set `viewportTarget` to a reference for that container.\n\t *\n\t * @default false\n\t * @since 4.5.0\n\t */\n\tonlyShowOnViewport: boolean;\n\n\t/**\n\t * A reference to the HTML element to be used as a secondary viewport for\n\t * charts.\n\t *\n\t * Use this if you are placing charts in a scrollable container and using\n\t * with `onlyShowOnViewport = true`.\n\t *\n\t * @since 4.7.4\n\t */\n\tviewportTarget?: HTMLElement | HTMLElement[];\n\n\t/**\n\t * Whether to queue all charts rendering. One chart will be rendered at a time. The next\n\t * chart starts to render after the previous chart's ready event.\n\t *\n\t * This setting can be combined with `onlyShowOnViewport` for better performance.\n\t *\n\t * @default false\n\t * @since 4.5.0\n\t */\n\tqueue: boolean;\n\n\t/**\n\t * Whether to automatically dispose the charts when they're removed from the DOM.\n\t *\n\t * @default false\n\t * @since 4.9.25\n\t */\n\tautoDispose: boolean;\n\n\t/**\n\t * List of applied licenses.\n\t *\n\t * @type {String[]}\n\t */\n\tlicenses: String[];\n\n\t/**\n\t * Should error modals be suppressed from displaying.\n\t *\n\t * Errors might originate from setting validation code, or generic JS-thrown\n\t * errors.\n\t *\n\t * @since 4.9.13\n\t * @default false\n\t */\n\tsuppressErrors: boolean;\n\n\t/**\n\t * Should warnings be suppressed from displaying.\n\t *\n\t * @since 4.9.29\n\t * @default false\n\t */\n\tsuppressWarnings: boolean;\n\n\t/**\n\t * Set this to `false` to effectivly disable all animations on all charts\n\t * regardless of themes used or individual animation properties.\n\t *\n\t * @since 4.9.14\n\t * @default false\n\t */\n\tanimationsEnabled: boolean\n\n\t/**\n\t * If set, amCharts will use this as a nonce-parameter for all dynamically\n\t * created stylesheets, so it can be addressed in `Content-Security-Policy`\n\t * headers.\n\t *\n\t * @since 4.9.17\n\t */\n\tnonce: string\n\n\t/**\n\t * When charts are created using `am4core.createDeferred()`, this parameter\n\t * determines number of milliseconds to wait between creation of each chart.\n\t *\n\t * @default 100\n\t * @since 4.10.0\n\t */\n\tdeferredDelay: number;\n\n\t/**\n\t * Should hovering of objects be disabled when some other element is being\n\t * transfored, e.g. dragged or resized.\n\t *\n\t * Available options:\n\t * * `\"never\"` (default) - hovers are never disabled.\n\t * * `\"touch\"` - hovers are disabled only if transforming via touch screen.\n\t * *`\"always\"` - hovers are disabled on all transforming actions.\n\t * \n\t * @default \"never\"\n\t * @since 4.10.1\n\t */\n\tdisableHoverOnTransform: \"never\" | \"touch\" | \"always\";\n\n\t/**\n\t * A precision (number of decimals) to be used for paths/lines/points\n\t * when `pixelPerfect = true`.\n\t *\n\t * @default 0\n\t * @since 4.10.11\n\t */\n\tpixelPerfectPrecision: number;\n\n}\n\n/**\n * Global options.\n */\nexport const options: Options = {\n\tverbose: true,\n\tcommercialLicense: false,\n\tclassNamePrefix: \"amcharts-\",\n\tautoSetClassName: false,\n\tminPolylineStep: 0.5,\n\tonlyShowOnViewport: false,\n\tqueue: false,\n\tautoDispose: false,\n\tlicenses: [],\n\tsuppressErrors: false,\n\tsuppressWarnings: false,\n\tanimationsEnabled: true,\n\tnonce: \"\",\n\tdeferredDelay: 100,\n\tdisableHoverOnTransform: \"never\",\n\tpixelPerfectPrecision:0\n};\n","/**\r\n * This module contains ColorSet object definition\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { Color, color, iHSL } from \"./Color\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $colors from \"./Colors\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $math from \"./Math\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an interface for objects identifying a color step.\r\n *\r\n * A \"color step\" object is used when [[ColorSet]] is generating colors, when\r\n * it has ran out of pre-set colors.\r\n *\r\n * It takes the last available color, then applies one or several of the\r\n * properties, like hue, or saturation with each subsequent generated color.\r\n */\r\nexport interface IColorSetStepOptions {\r\n\thue: number;\r\n\tbrighten: number;\r\n\tlighten: number;\r\n\tlightness: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tsaturation: number;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents a set of colors. Can also generate colors according to set rules.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nexport class ColorSet extends BaseObject {\r\n\r\n\t/**\r\n\t * Holds the list of the colors in this set. (preset or auto-generated)\r\n\t */\r\n\tprotected _list: Color[] = [];\r\n\r\n\t/**\r\n\t * Current step in a color generator's cycle.\r\n\t */\r\n\tprotected _currentStep: number = 0;\r\n\r\n\t/**\r\n\t * If set to non-zero value, the ColorSet will start iterating colors from\r\n\t * that particular index, not the first color in the list.\r\n\t */\r\n\tprotected _startIndex: number = 0;\r\n\r\n\t/**\r\n\t * Current pass in the color generator's cycle. Normally a generator would\r\n\t * cycle through all available hue range, then repeat it, alternating other\r\n\t * color properties, to generate distinctive colors.\r\n\t */\r\n\tprotected _currentPass: number = 0;\r\n\r\n\t/**\r\n\t * A base color. If there are no colors pre-set in the color list, ColorSet\r\n\t * will use this color as a base when generating new ones, applying\r\n\t * `stepOptions` and `passOptions` to this base color.\r\n\t */\r\n\tpublic baseColor: Color = new Color({\r\n\t\tr: 103,\r\n\t\tg: 183,\r\n\t\tb: 220\r\n\t});\r\n\r\n\t/**\r\n\t * Modifications to apply with each new generated color.\r\n\t */\r\n\tpublic stepOptions: Partial<IColorSetStepOptions> = {};\r\n\r\n\t/**\r\n\t * Modifications to apply on top of `stepOptions` for each \"pass\" of the\r\n\t * color generation.\r\n\t *\r\n\t * A \"pass\" is when ColorSet generates `minColors` number of colors.\r\n\t */\r\n\tpublic passOptions: Partial<IColorSetStepOptions> = {\r\n\t\tbrighten: -0.2\r\n\t};\r\n\r\n\t/**\r\n\t * An index increment to use when iterating through color list.\r\n\t *\r\n\t * Default is 1, which means returning each and every color.\r\n\t *\r\n\t * Setting it to a bigger number will make ColorSet `next()` iterator skip\r\n\t * some colors.\r\n\t *\r\n\t * E.g. setting to 2, will return every second color in the list.\r\n\t *\r\n\t * This is useful, when the color list has colors that are too close each\r\n\t * other for contrast.\r\n\t *\r\n\t * However, having bigger number will mean that `next()` iterator will go\r\n\t * through the list quicker, and the generator will kick sooner.\r\n\t */\r\n\tpublic step: number = 1;\r\n\r\n\t/**\r\n\t * A number of colors to generate in one \"pass\".\r\n\t *\r\n\t * This setting can be automatically overridden, if ColorSet has a list of\r\n\t * pre-set colors. In such case ColorSet will generate exactly the same\r\n\t * number of colors with each pass as there were colors in original set.\r\n\t */\r\n\tpublic minColors: number = 20;\r\n\r\n\t/**\r\n\t * Do not let the \"lightness\" of generated color to fall below this\r\n\t * threshold.\r\n\t */\r\n\tpublic minLightness: number = 0.2;\r\n\r\n\t/**\r\n\t * Do not let the \"lightness\" of generated color to get above this threshold.\r\n\t */\r\n\tpublic maxLightness: number = 0.9;\r\n\r\n\t/**\r\n\t * Randomly shuffle generated colors.\r\n\t */\r\n\tpublic shuffle: boolean = false;\r\n\r\n\t/**\r\n\t * When colors are generated, based on `stepOptions`, each generated color\r\n\t * gets either lighter or darker.\r\n\t *\r\n\t * If this is set to `true`, color generator will switch to opposing spectrum\r\n\t * when reaching `minLightness` or `maxLightness`.\r\n\t *\r\n\t * E.g. if we start off with a red color, then gradually generate lighter\r\n\t * colors through rose shades, then switch back to dark red and gradually\r\n\t * increase the lightness of it until it reaches the starting red.\r\n\t *\r\n\t * If set to `false` it will stop there and cap lightness at whatever level\r\n\t * we hit `minLightness` or `maxLightness`, which may result in a number of\r\n\t * the same colors.\r\n\t */\r\n\tpublic wrap: boolean = true;\r\n\r\n\t/**\r\n\t * Re-use same colors in the pre-set list, when ColorSet runs out of colors,\r\n\t * rather than start generating new ones.\r\n\t */\r\n\tpublic reuse: boolean = false;\r\n\r\n\t/**\r\n\t * Saturation of colors. This will change saturation of all colors of color\r\n\t * set.\r\n\t *\r\n\t * It is recommended to set this in theme, as changing it at run time won't\r\n\t * make the items to redraw and change color.\r\n\t */\r\n\tpublic saturation: number = 1;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ColorSet\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a list of pre-defined colors to use for the iterator.\r\n\t *\r\n\t * @param value Color list\r\n\t */\r\n\tpublic set list(value: Color[]) {\r\n\t\tthis._list = value;\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current list of colors.\r\n\t *\r\n\t * If there are none, a new list of colors is generated, based on various\r\n\t * ColorSet settings.\r\n\t *\r\n\t * @return Color list\r\n\t */\r\n\tpublic get list(): Color[] {\r\n\t\tif (!this._list) {\r\n\t\t\tthis.generate(this.minColors);\r\n\t\t}\r\n\t\treturn this._list;\r\n\t}\r\n\r\n\t/**\r\n\t * Gets reusable color.\r\n\t * \r\n\t * @param   index  Index of color\r\n\t * @return         Color\r\n\t */\r\n\tprotected getReusableColor(index: number): Color {\r\n\t\tif (this._list.length == 0) {\r\n\t\t\tthis.generate(1);\r\n\t\t\treturn this.list[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet tmpstep = index - (Math.floor(index / this._list.length) * this.list.length);\r\n\t\t\treturn this.list[tmpstep];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns next color in the list using internal iterator counter.\r\n\t *\r\n\t * If `step` is set to something other than 1, it may return other color than\r\n\t * exact next one in the list.\r\n\t *\r\n\t * @return Color\r\n\t */\r\n\tpublic next(): Color {\r\n\t\tlet color;\r\n\t\tif (this.list.length <= this._currentStep) {\r\n\t\t\tif (this.reuse) {\r\n\t\t\t\tcolor = this.getReusableColor(this._currentStep);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.generate($math.max(this.minColors, this._currentStep + 1));\r\n\t\t\t\tcolor = this.list[this._currentStep];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcolor = this.list[this._currentStep];\r\n\t\t}\r\n\t\tthis._currentStep += this.step;\r\n\t\treturn color.saturate(this.saturation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a color at specific index in the list.\r\n\t *\r\n\t * @param i  Index\r\n\t * @return Color\r\n\t */\r\n\tpublic getIndex(i: number): Color {\r\n\t\tlet color;\r\n\t\tif (this.list.length <= i) {\r\n\t\t\tif (this.reuse) {\r\n\t\t\t\tcolor = this.getReusableColor(i);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.generate(this.minColors);\r\n\t\t\t\tcolor = this.getIndex(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcolor = this.list[i];\r\n\t\t}\r\n\t\treturn color.saturate(this.saturation);\r\n\t}\r\n\r\n\t/**\r\n\t * Resets internal iterator.\r\n\t *\r\n\t * Calling `next()` after this will return the very first color in the color\r\n\t * list, even if it was already returned before.\r\n\t */\r\n\tpublic reset(): void {\r\n\t\tthis._currentStep = this._startIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current color iteration. You can use this property to skip some\r\n\t * colors from iteration. E.g. setting it to `10` will skip first ten\r\n\t * colors.\r\n\t *\r\n\t * Please note that the number is zero-based.\r\n\t *\r\n\t * @param value  Step\r\n\t */\r\n\tpublic set currentStep(value: number) {\r\n\t\tthis._currentStep = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get currentStep(): number {\r\n\t\treturn this._currentStep;\r\n\t}\r\n\r\n\t/**\r\n\t * If set to non-zero value, the ColorSet will start iterating colors from\r\n\t * that particular index, not the first color in the list.\r\n\t *\r\n\t * @default 0\r\n\t * @since 4.4.9\r\n\t * @param  value  Index\r\n\t */\r\n\tpublic set startIndex(value: number) {\r\n\t\tthis._startIndex = value;\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Index\r\n\t */\r\n\tpublic get startIndex(): number {\r\n\t\treturn this._startIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates colors based on the various ColorSet settings.\r\n\t *\r\n\t * @param count Number of colors to generate\r\n\t */\r\n\tpublic generate(count: number): void {\r\n\r\n\t\t// Init\r\n\t\tlet curColor = this.currentColor;\r\n\t\tlet hsl = $colors.rgbToHsl($type.getValue(curColor.rgb));\r\n\t\tlet hueStep = $type.hasValue(this.stepOptions.hue) ? this.stepOptions.hue : 1 / count;\r\n\t\tlet mods: IColorSetStepOptions = {\r\n\t\t\tbrighten: 0,\r\n\t\t\tlighten: 0,\r\n\t\t\thue: hsl.h,\r\n\t\t\tlightness: hsl.l,\r\n\t\t\tsaturation: hsl.s\r\n\t\t};\r\n\r\n\t\t// Generate list of hues, and shuffle them\r\n\t\tlet hues: number[] = [];\r\n\t\tconst startIndex = this.list.length == 0 ? 0 : 1;\r\n\t\tif (this.reuse) {\r\n\t\t\tfor (let i = startIndex; i <= count; i++) {\r\n\t\t\t\thues.push($colors.rgbToHsl($type.getValue(this._list[i].rgb)).h);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor (let i = startIndex; i <= count; i++) {\r\n\t\t\t\tlet h = hsl.h + hueStep * i;\r\n\t\t\t\tif (this.wrap && (h > 1)) {\r\n\t\t\t\t\th -= 1;\r\n\t\t\t\t}\r\n\t\t\t\thues.push(h);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Shuffle colors randomly\r\n\t\tif (this.shuffle) {\r\n\t\t\thues.sort((a: number, b: number) => {\r\n\t\t\t\treturn Math.random() - 0.5;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\t// Generate colors by rotating hue\r\n\t\tfor (let i = 0; i < count; i++) {\r\n\r\n\t\t\t// Update hue\r\n\t\t\tif (this.reuse) {\r\n\t\t\t\thsl = $colors.rgbToHsl($type.getValue(this._list[i].rgb));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thsl.h = <number>hues.shift();\r\n\t\t\t}\r\n\r\n\t\t\t// Apply HSL mods\r\n\t\t\tthis.applyStepOptions(hsl, mods, i, this._currentPass);\r\n\r\n\t\t\t// Convert back to Color\r\n\t\t\tlet c = color($colors.hslToRgb(hsl));\r\n\r\n\t\t\t// Apply regular color mods\r\n\t\t\tlet brighten = (this.stepOptions.brighten || 0) * i + (this.passOptions.brighten || 0) * this._currentPass;\r\n\t\t\tif (brighten != 0) {\r\n\t\t\t\tif (this.wrap) {\r\n\t\t\t\t\tbrighten = $utils.fitNumberRelative(brighten, this.minLightness, this.maxLightness);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbrighten = $utils.fitNumber(brighten, this.minLightness, this.maxLightness);\r\n\t\t\t\t}\r\n\t\t\t\tc = c.brighten(brighten);\r\n\t\t\t}\r\n\r\n\t\t\tlet lighten = (this.stepOptions.lighten || 0) * i + (this.passOptions.lighten || 0) * this._currentPass;\r\n\t\t\tif (lighten != 0) {\r\n\t\t\t\tif (this.wrap) {\r\n\t\t\t\t\tlighten = $utils.fitNumberRelative(lighten, this.minLightness, this.maxLightness);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlighten = $utils.fitNumber(lighten, this.minLightness, this.maxLightness);\r\n\t\t\t\t}\r\n\t\t\t\tc = c.lighten(lighten);\r\n\t\t\t}\r\n\r\n\t\t\tthis._list.push(c);\r\n\t\t}\r\n\r\n\t\tthis._currentPass++;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current last color. It's either the last color in the list of\r\n\t * colors, or `baseColor` if list is empty.\r\n\t *\r\n\t * @return Color\r\n\t */\r\n\tprotected get currentColor(): Color {\r\n\t\tif (this._list.length == 0) {\r\n\t\t\treturn this.baseColor.saturate(this.saturation);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._list[this._list.length - 1].saturate(this.saturation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generates modifiers for color, based on what step and pass.\r\n\t *\r\n\t * @param hsl   Curren HSL value of the color to modify\r\n\t * @param base  The modifiers that were before modification to use as a base\r\n\t * @param step  Current step\r\n\t * @param pass  Current pass\r\n\t */\r\n\tprotected applyStepOptions(hsl: iHSL, base: IColorSetStepOptions, step: number, pass: number): void {\r\n\r\n\t\t// Process lightness\r\n\t\thsl.l = base.lightness + (this.stepOptions.lightness || 0) * step + (this.passOptions.lightness || 0) * pass;\r\n\r\n\t\tif (this.wrap) {\r\n\t\t\tif (hsl.l > 1) {\r\n\t\t\t\thsl.l = hsl.l - Math.floor(hsl.l);\r\n\t\t\t}\r\n\t\t\telse if (hsl.l < 0) {\r\n\t\t\t\thsl.l = -(hsl.l - Math.floor(hsl.l));\r\n\t\t\t}\r\n\t\t\thsl.l = $utils.fitNumberRelative(hsl.l, this.minLightness, this.maxLightness);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (hsl.l > 1) {\r\n\t\t\t\thsl.l = 1\r\n\t\t\t}\r\n\t\t\telse if (hsl.l < 0) {\r\n\t\t\t\thsl.l = 0;\r\n\t\t\t}\r\n\t\t\thsl.l = $utils.fitNumber(hsl.l, this.minLightness, this.maxLightness);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Cast colors\r\n\t\t\tif ($type.hasValue(config.list) && $type.isArray(config.list)) {\r\n\t\t\t\tfor (let i = 0, len = config.list.length; i < len; i++) {\r\n\t\t\t\t\tif (!(config.list[i] instanceof Color)) {\r\n\t\t\t\t\t\tconfig.list[i] = color(config.list[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.hasValue(config.baseColor) && !(config.baseColor instanceof Color)) {\r\n\t\t\t\tconfig.baseColor = color(config.baseColor);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorSet\"] = ColorSet;","/**\n * ============================================================================\n * MAIN CLASS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Represents a relative value (percent).\n *\n * The Percent object, can be instantiated using two ways:\n *\n * * Via `new Percent(X)`.\n * * Via `am4core.percent(X)`.\n *\n * `Percent` type objects can be used in a number of dual-measuring or\n * positioning properties, like `width`. E.g.:\n *\n * ```TypeScript\n * chart.paddingRight = new Percent(10);\n * // or\n * chart.paddingRight = am4core.percent(10);\n * ```\n * ```JavaScript\n * chart.paddingRight = new Percent(10);\n * // or\n * chart.paddingRight = am4core.percent(10);\n * ```\n * ```JSON\n * {\n *   // ...\n *   \"paddingRight\": \"10%\"\n * }\n * ```\n */\nexport class Percent {\n\n\t/**\n\t * Value in percent.\n\t */\n\tprotected _value: number;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param percent  Percent value\n\t */\n\tconstructor(percent: number) {\n\t\tthis._value = percent;\n\t}\n\n\t/**\n\t * Relative value.\n\t *\n\t * E.g. 100% is 1, 50% is 0.5, etc.\n\t *\n\t * This is useful to apply transformations to other values. E.g.:\n\t *\n\t * ```TypeScript\n\t * let value = 256;\n\t * let percent = new am4core.Percent(50);\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t * ```JavaScript\n\t * var value = 256;\n\t * var percent = new am4core.Percent(50);\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t *\n\t * Alternatively, you can use `am4core.percent()` helper function:\n\t *\n\t * ```TypeScript\n\t * let value = 256;\n\t * let percent = am4core.percent(50);\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t * ```JavaScript\n\t * var value = 256;\n\t * var percent = am4core.percent(50);\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t *\n\t * @readonly\n\t * @return Relative value\n\t */\n\tpublic get value(): number {\n\t\treturn this._value / 100;\n\t}\n\n\t/**\n\t * Value in percent.\n\t *\n\t * @return Percent\n\t */\n\tpublic get percent(): number {\n\t\treturn this._value;\n\t}\n\n\tpublic toString(): string {\n\t\treturn \"\" + this._value + \"%\";\n\t}\n\n\t/*public toNumber(): number {\n\t\treturn this.percent;\n\t}*/\n\n}\n\n\n/**\n * Converts numeric percent value to a proper [[Percent]] object.\n *\n * ```TypeScript\n * pieSeries.radius = am4core.percent(80);\n * ```\n * ```JavaScript\n * pieSeries.radius = am4core.percent(80);\n * ```\n *\n * @param value  Percent\n * @return Percent object\n */\nexport function percent(value: number): Percent {\n\treturn new Percent(value);\n}\n\n\n/**\n * Checks if value is a [[Percent]] object.\n *\n * @ignore Exclude from docs\n * @param value  Input value\n * @return Is percent?\n */\nexport function isPercent(value: any): boolean {\n\treturn value instanceof Percent;\n}\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { EventDispatcher, AMEvent } from \"./EventDispatcher\";\r\nimport { Ordering } from \"./Order\";\r\nimport { IClone } from \"./Clone\";\r\nimport * as $array from \"./Array\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Defines evends for [[SortedList]].\r\n */\r\nexport interface ISortedListEvents<A> {\r\n\r\n\t/**\r\n\t * Invoked when new value is inserted into the list.\r\n\t */\r\n\tinserted: {\r\n\t\t/**\r\n\t\t * Index where the element was inserted.\r\n\t\t */\r\n\t\tindex: number;\r\n\r\n\t\t/**\r\n\t\t * Inserted value.\r\n\t\t */\r\n\t\tnewValue: A;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when a value is removed from the list.\r\n\t */\r\n\tremoved: {\r\n\t\t/**\r\n\t\t * Index of the element which was removed.\r\n\t\t */\r\n\t\tindex: number;\r\n\r\n\t\t/**\r\n\t\t * Removed value.\r\n\t\t */\r\n\t\toldValue: A;\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Ordered list contains values of any type in an indexed array.\r\n */\r\nexport class OrderedList<T> {\r\n\r\n\t/**\r\n\t * Holds list values.\r\n\t */\r\n\tprotected _values: Array<T> = [];\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<OrderedList<T>, ISortedListEvents<T>>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param initial  Inital list of values to add to list\r\n\t */\r\n\tconstructor(initial?: Array<T>) {\r\n\t\tif (initial != null) {\r\n\t\t\tthis.setAll(initial);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * All items of the list.\r\n\t *\r\n\t * Do not modify the list directly. Rather use `insert()` and `remove()`\r\n\t * methods.\r\n\t *\r\n\t * @return List values\r\n\t */\r\n\tpublic get values(): Array<T> {\r\n\t\treturn this._values;\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a value into list item array.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tprotected _insert(value: T): number {\r\n\t\tthis._values.push(value);\r\n\t\treturn this._values.length - 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Number of items in the list.\r\n\t *\r\n\t * @readonly\r\n\t * @return Length\r\n\t */\r\n\tpublic get length(): number {\r\n\t\treturn this._values.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index of the specific `value`.\r\n\t *\r\n\t * -1 if not found.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return Index\r\n\t */\r\n\tpublic indexOf(value: T): number {\r\n\t\treturn $array.indexOf(this._values, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if list contains the `value`.\r\n\t *\r\n\t * @param value  Value\r\n\t * @return In the list?\r\n\t */\r\n\tpublic contains(value: T): boolean {\r\n\t\treturn this.indexOf(value) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an item at specific `index`.\r\n\t *\r\n\t * @param index  Index\r\n\t * @return Item\r\n\t */\r\n\tpublic getIndex(index: number): T | undefined {\r\n\t\treturn this._values[index];\r\n\t}\r\n\r\n\t/**\r\n\t * First item in the list.\r\n\t *\r\n\t * @return Item\r\n\t */\r\n\tpublic get first(): T | undefined {\r\n\t\treturn this._values[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Last item in the list.\r\n\t *\r\n\t * @return Item\r\n\t */\r\n\tpublic get last(): T | undefined {\r\n\t\treturn this._values[this._values.length - 1];\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts a value into list.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic insert(value: T): void {\r\n\t\tconst index = this._insert(value);\r\n\r\n\t\tif (this.events.isEnabled(\"inserted\")) {\r\n\t\t\tthis.events.dispatchImmediately(\"inserted\", {\r\n\t\t\t\ttype: \"inserted\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tindex: index,\r\n\t\t\t\tnewValue: value\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes an item with the `value` from the list.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic remove(value: T): void {\r\n\t\tconst index = this.indexOf(value);\r\n\r\n\t\tif (index !== -1) {\r\n\t\t\tconst oldValue = this._values[index];\r\n\r\n\t\t\t$array.removeIndex(this._values, index);\r\n\r\n\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\toldValue: oldValue,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets multiple items to the list.\r\n\t *\r\n\t * All current items are removed.\r\n\t *\r\n\t * @param newArray  New items\r\n\t */\r\n\tpublic setAll(newArray: Array<T>): void {\r\n\t\t$array.eachReverse(this._values, (x, i) => {\r\n\t\t\tthis._values.pop();\r\n\r\n\t\t\tif (this.events.isEnabled(\"removed\")) {\r\n\t\t\t\tthis.events.dispatchImmediately(\"removed\", {\r\n\t\t\t\t\ttype: \"removed\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\toldValue: x\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$array.each(newArray, (value) => {\r\n\t\t\tthis.insert(value);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all items from the list.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis.setAll([]);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns part of the list between `start` and `end` indexes, as a new\r\n\t * [[OrderedList]].\r\n\t *\r\n\t * @param start  Start index\r\n\t * @param end    End index\r\n\t * @return Items in range\r\n\t */\r\n\tpublic slice(start: number, end: number): OrderedList<T> {\r\n\t\tconst out = new OrderedList<T>();\r\n\r\n\t\tout._values = this._values.slice(start, end);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a closest available index to the `value` in specified direction.\r\n\t *\r\n\t * @ignore exclude from docs\r\n\t * @param value      value to search for\r\n\t * @param fn         A callback function that returns value of the item\r\n\t * @param direction  Direciton\r\n\t * @return Index\r\n\t */\r\n\tpublic findClosestIndex(value: number, fn: (value: T) => number, direction: \"left\" | \"right\" | \"any\" = \"any\"): number {\r\n\t\t// Init temporary values\r\n\t\tlet closestIndex: number = -1;\r\n\t\tlet closestValue: number;\r\n\t\tlet closestDifference: number;\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\t$iter.eachContinue(this.iterator(), (element) => {\r\n\t\t\tconst item: number = fn(element);\r\n\r\n\t\t\t// Calc difference\r\n\t\t\tif (direction === \"any\") {\r\n\r\n\t\t\t\t// Exact match?\r\n\t\t\t\tif (item === value) {\r\n\t\t\t\t\t// Found exact value - don't bother searching further\r\n\t\t\t\t\tclosestIndex = i;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet difference = Math.abs(value - item);\r\n\t\t\t\tif (!$type.hasValue(closestDifference) || (closestDifference > difference)) {\r\n\t\t\t\t\tclosestIndex = i;\r\n\t\t\t\t\tclosestValue = item;\r\n\t\t\t\t\tclosestDifference = difference;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (direction === \"left\" && (item < value)) {\r\n\t\t\t\tif (!$type.hasValue(closestValue) || (closestValue < item)) {\r\n\t\t\t\t\tclosestIndex = i;\r\n\t\t\t\t\tclosestValue = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (direction === \"right\" && (item >= value)) {\r\n\t\t\t\tif (!$type.hasValue(closestValue) || (closestValue >= item)) {\r\n\t\t\t\t\tclosestIndex = i;\r\n\t\t\t\t\tclosestValue = item;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t++i;\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\t// Found nothing?\r\n\t\tif (closestIndex === -1) {\r\n\t\t\tif (direction === \"left\") {\r\n\t\t\t\t// Use First one\r\n\t\t\t\tclosestIndex = 0;\r\n\t\t\t}\r\n\t\t\telse if (direction === \"right\") {\r\n\t\t\t\t// Use last item\r\n\t\t\t\tclosestIndex = this.length - 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn closestIndex;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list iterator.\r\n\t *\r\n\t * @return Iterator\r\n\t */\r\n\tpublic iterator(): $iter.Iterator<T> {\r\n\t\treturn $iter.fromArray(this._values);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an ES6 iterator for the list.\r\n\t */\r\n\tpublic *[Symbol.iterator](): Iterator<T> {\r\n\t\tconst length = this._values.length;\r\n\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tyield this._values[i];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Calls `f` for each element in the list.\r\n\t */\r\n\tpublic each(f: (value: T, index: number) => void): void {\r\n\t\t$array.each(this._values, f);\r\n\t}\r\n}\r\n\r\n/**\r\n * A list where all items are ordered according to specific ordering function,\r\n * which is passed in via constructor parameter, when creating an instance of\r\n * [[SortedList]].\r\n */\r\nexport class SortedList<T> extends OrderedList<T> {\r\n\r\n\t/**\r\n\t * A reference to the ordering function.\r\n\t */\r\n\tprivate _ordering: any;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param sort  Ordering function\r\n\t */\r\n\tconstructor(sort: (left: T, right: T) => Ordering) {\r\n\t\tsuper();\r\n\t\tthis._ordering = sort;\r\n\t}\r\n\r\n\t/**\r\n\t * Inserts item into the list.\r\n\t *\r\n\t * @param value  Item\r\n\t */\r\n\tprotected _insert(value: T): number {\r\n\t\tconst { index } = $array.getSortedIndex(this._values, this._ordering, value);\r\n\r\n\t\t$array.insertIndex(this._values, index, value);\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns index of the item in list if found.\r\n\t *\r\n\t * -1 if item is not in the list.\r\n\t *\r\n\t * @param value  Item to search for\r\n\t * @return Index\r\n\t */\r\n\tpublic indexOf(value: T): number {\r\n\t\tconst { found, index } = $array.getSortedIndex(this._values, this._ordering, value);\r\n\r\n\t\tif (found) {\r\n\t\t\treturn index;\r\n\r\n\t\t} else {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [udpate description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param value [description]\r\n\t */\r\n\tpublic update(value: T): void {\r\n\t\t// @todo test this\r\n\t\tconst index = $array.indexOf(this._values, value);\r\n\r\n\t\t// @todo throw an error if it doesn't exist ?\r\n\t\tif (index !== -1) {\r\n\t\t\tconst last = this._values.length - 1;\r\n\r\n\t\t\t// Check if the current ordering is correct\r\n\t\t\tif (!((index === 0 || this._ordering(this._values[index - 1], value) < 0) &&\r\n\t\t\t\t(index === last || this._ordering(value, this._values[index + 1]) < 0))) {\r\n\t\t\t\t// TODO send remove/insert/move events\r\n\t\t\t\t$array.removeIndex(this._values, index);\r\n\t\t\t\tthis._insert(value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * A version of a [[OrderedList]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nexport class OrderedListTemplate<T extends IClone<T> & { isTemplate: boolean }> extends OrderedList<T> {\r\n\r\n\t/**\r\n\t * A template object.\r\n\t *\r\n\t * @todo Make this private\r\n\t */\r\n\tpublic _template!: T;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param t Template object\r\n\t */\r\n\tpublic constructor(t: T) {\r\n\t\tsuper();\r\n\t\tthis.template = t;\r\n\t}\r\n\r\n\t/**\r\n\t * A \"template\" object to copy all properties from when creating new list\r\n\t * items.\r\n\t *\r\n\t * @param v  Template object\r\n\t */\r\n\tpublic set template(v: T) {\r\n\t\tv.isTemplate = true;\r\n\t\tthis._template = v;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Template object\r\n\t */\r\n\tpublic get template(): T {\r\n\t\treturn this._template;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all elements from other list.\r\n\t *\r\n\t * @param source  Source list\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (value) => {\r\n\t\t\tthis.insert(value.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns part of the list, starting at `start` and ending at `end` indexes,\r\n\t * as a new [[OrderedListTemplate]].\r\n\t *\r\n\t * @param start  Start index\r\n\t * @param end    End index\r\n\t * @return New list\r\n\t */\r\n\tpublic slice(start: number, end: number): OrderedListTemplate<T> {\r\n\t\tconst out = new OrderedListTemplate<T>(this.template);\r\n\r\n\t\tout._values = this._values.slice(start, end);\r\n\r\n\t\treturn out;\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a new object of the specified type, adds it to the end of\r\n\t * the list, and returns it.\r\n\t *\r\n\t * @param make  Item type to use. Will use the default type for the list if not specified.\r\n\t * @return      Newly created item\r\n\t */\r\n\tpublic create<T>(make: { new(): T; }): T;\r\n\tpublic create(): T;\r\n\tpublic create(make?: { new(): T; }): T {\r\n\t\tconst clone =\r\n\t\t\t(make != null\r\n\t\t\t\t? new make()\r\n\t\t\t\t: this.template.clone());\r\n\r\n\t\tthis.insert(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n}\r\n\r\n/**\r\n * A version of a [[SortedList]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nexport class SortedListTemplate<T extends IClone<T> & { isTemplate: boolean }> extends SortedList<T> {\r\n\r\n\t// @todo code duplication\r\n\r\n\t/**\r\n\t * A template object.\r\n\t *\r\n\t * @todo Make this private\r\n\t */\r\n\tpublic _template!: T;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @param t     Template object\r\n\t * @param sort  Ordering function\r\n\t */\r\n\tpublic constructor(t: T, sort: (left: T, right: T) => Ordering) {\r\n\t\tsuper(sort);\r\n\t\tthis.template = t;\r\n\t}\r\n\r\n\t/**\r\n\t * A \"template\" object to copy all properties from when creating new list\r\n\t * items.\r\n\t *\r\n\t * @param v  Template object\r\n\t */\r\n\tpublic set template(v: T) {\r\n\t\tv.isTemplate = true;\r\n\t\tthis._template = v;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Template object\r\n\t */\r\n\tpublic get template(): T {\r\n\t\treturn this._template;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all elements from other list.\r\n\t *\r\n\t * @param source  Source list\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source.iterator(), (value) => {\r\n\t\t\tthis.insert(value.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Instantiates a new object of the specified type, adds it to the end of\r\n\t * the list, and returns it.\r\n\t *\r\n\t * @param make  Item type to use. Will use the default type for the list if not specified.\r\n\t * @return      Newly created item\r\n\t */\r\n\tpublic create<T>(make: { new(): T; }): T;\r\n\tpublic create(): T;\r\n\tpublic create(make?: { new(): T; }): T {\r\n\t\tconst clone =\r\n\t\t\t(make != null\r\n\t\t\t\t? new make()\r\n\t\t\t\t: this.template.clone());\r\n\r\n\t\tthis.insert(clone);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n}\r\n","/**\r\n * Functionality for drawing simple buttons.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Label } from \"./Label\";\r\nimport { RoundedRectangle } from \"../elements/RoundedRectangle\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Button]].\r\n */\r\nexport interface IButtonProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Icon (if available) position - left or right.\r\n\t */\r\n\ticonPosition?: \"left\" | \"right\";\r\n\r\n\t/**\r\n\t * Icon sprite\r\n\t */\r\n\ticon?: Sprite;\r\n}\r\n\r\n/**\r\n * Defines events for [[Button]].\r\n */\r\nexport interface IButtonEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Button]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IButtonAdapters extends IContainerAdapters, IButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Button class is capable of drawing a simple rectangular button with\r\n * optionally rounded corners and an icon in it.\r\n *\r\n * @see {@link IButtonEvents} for a list of available events\r\n * @see {@link IButtonAdapters} for a list of available Adapters\r\n */\r\nexport class Button extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IButtonEvents;\r\n\r\n\t/**\r\n\t * Icon reference.\r\n\t */\r\n\tprotected _icon: Sprite;\r\n\r\n\t/**\r\n\t * [[Label]] element for button content.\r\n\t */\r\n\tprotected _label: $type.Optional<Label>;\r\n\r\n\t/**\r\n\t * A type for background.\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Button\";\r\n\r\n\t\tthis.tooltipY = 0;\r\n\r\n\t\t// Set defaults\r\n\t\tthis.iconPosition = \"left\";\r\n\t\tthis.layout = \"horizontal\";\r\n\t\tthis.contentAlign = \"center\";\r\n\t\tthis.contentValign = \"middle\";\r\n\t\tthis.padding(8, 16, 8, 16);\r\n\t\tthis.setStateOnChildren = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create background\r\n\t\tlet background = this.background;\r\n\t\tbackground.fill = interfaceColors.getFor(\"secondaryButton\");\r\n\t\tbackground.stroke = interfaceColors.getFor(\"secondaryButtonStroke\");\r\n\t\tbackground.fillOpacity = 1;\r\n\t\tbackground.strokeOpacity = 1;\r\n\t\tbackground.cornerRadius(3, 3, 3, 3);\r\n\r\n\t\t// Create the label element\r\n\t\tthis.label = new Label();\r\n\t\tthis.label.fill = interfaceColors.getFor(\"secondaryButtonText\");;\r\n\t\tthis.label.shouldClone = false;\r\n\r\n\t\t// Create default states\r\n\t\tlet hoverState = background.states.create(\"hover\");\r\n\t\thoverState.properties.fillOpacity = 1;\r\n\t\thoverState.properties.fill = interfaceColors.getFor(\"secondaryButtonHover\");\r\n\r\n\t\tlet downState = background.states.create(\"down\");\r\n\t\tdownState.transitionDuration = 100;\r\n\t\tdownState.properties.fill = interfaceColors.getFor(\"secondaryButtonDown\");\r\n\t\tdownState.properties.fillOpacity = 1;\r\n\t\t// Set up accessibility\r\n\t\t// A button should be always focusable\r\n\t\tthis.role = \"button\";\r\n\t\tthis.focusable = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Sprite]] to be used as an icon on button.\r\n\t *\r\n\t * @param icon Icon Sprite\r\n\t */\r\n\tpublic set icon(icon: Sprite) {\r\n\t\tlet currentIcon = this._icon;\r\n\t\tif (currentIcon) {\r\n\t\t\t//this._icon.dispose();\r\n\t\t\t//this.removeDispose(currentIcon);\r\n\t\t\tcurrentIcon.parent = undefined;\r\n\t\t}\r\n\t\tif (icon) {\r\n\t\t\tthis._icon = icon;\r\n\t\t\ticon.parent = this;\r\n\t\t\ticon.interactionsEnabled = false;\r\n\t\t\ticon.shouldClone = false;\r\n\t\t\tthis.iconPosition = this.iconPosition;\r\n\t\t\tthis._disposers.push(icon);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Icon Sprite\r\n\t */\r\n\tpublic get icon(): Sprite {\r\n\t\treturn this._icon;\r\n\t}\r\n\r\n\t/**\r\n\t * Icon position: \"left\" or \"right\".\r\n\t *\r\n\t * @default \"left\"\r\n\t * @param position  Icon position\r\n\t */\r\n\tpublic set iconPosition(position: \"left\" | \"right\") {\r\n\t\tthis.setPropertyValue(\"iconPosition\", position);\r\n\r\n\t\tif (this.icon) {\r\n\t\t\tif (position == \"left\") {\r\n\t\t\t\tthis.icon.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.icon.toFront();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Icon position\r\n\t */\r\n\tpublic get iconPosition(): \"left\" | \"right\" {\r\n\t\treturn this.getPropertyValue(\"iconPosition\");\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] element to be used for text.\r\n\t *\r\n\t * @param label element\r\n\t */\r\n\tpublic set label(label: $type.Optional<Label>) {\r\n\t\tif (this._label) {\r\n\t\t\t//this._label.dispose();\r\n\t\t\tthis.removeDispose(this._label);\r\n\t\t}\r\n\t\tthis._label = label;\r\n\t\tif (label) {\r\n\t\t\tlabel.parent = this;\r\n\t\t\tlabel.interactionsEnabled = false;\r\n\t\t\tthis._disposers.push(this._label);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label element\r\n\t */\r\n\tpublic get label(): $type.Optional<Label> {\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background element for the button.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background element\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new RoundedRectangle();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies properties and other attributes.\r\n\t *\r\n\t * @param source  Source\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (source.label) {\r\n\t\t\tthis.label.copyFrom(source.label)\r\n\t\t}\r\n\t\tif (source.icon) {\r\n\t\t\tthis.icon = source.icon.clone();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Button\"] = Button;\r\n","/**\n * amCharts 4 locale\n * \n * Locale: en\n * Language: International English\n * Author: Martynas Majeris\n *\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v4/tutorials/creating-translations/) to make corrections or add new translations.\n *\n * ---\n * Edit but leave the header section above this line. You can remove any\n * subsequent comment sections.\n * ---\n *\n * Use this file as a template to create translations. Leave the key part in\n * English intact. Fill the value with a translation.\n *\n * Empty string means no translation, so default \"International English\"\n * will be used.\n *\n * If you need the translation to literally be an empty string, use `null`\n * instead.\n *\n * IMPORTANT:\n * When translating make good effort to keep the translation length\n * at least the same chartcount as the English, especially for short prompts.\n *\n * Having significantly longer prompts may distort the actual charts.\n *\n * NOTE:\n * Some prompts - like months or weekdays - come in two versions: full and\n * shortened.\n *\n * If there's no official shortened version of these in your language, and it\n * would not be possible to invent such short versions that don't seem weird\n * to native speakers of that language, fill those with the same as full\n * version.\n *\n * PLACEHOLDERS:\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\n * values during translation and should be retained in the translated prompts.\n *\n * Placeholder positions may be changed to better suit structure of the\n * sentence.\n *\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\n * actual value representing range start, and \"%2\" will be replaced by end\n * value.\n *\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\n * places where they will make sense.\n *\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\n */\nexport default {\n\t// Number formatting options.\n\t// \n\t// Please check with the local standards which separator is accepted to be\n\t// used for separating decimals, and which for thousands.\n\t\"_decimalSeparator\": \".\",\n\t\"_thousandSeparator\": \",\",\n\n\t// Position of the percent sign in numbers\n\t\"_percentPrefix\": null,\n\t\"_percentSuffix\": \"%\",\n\n\t// Suffixes for numbers\n\t// When formatting numbers, big or small numers might be reformatted to\n\t// shorter version, by applying a suffix.\n\t// \n\t// For example, 1000000 might become \"1m\".\n\t// Or 1024 might become \"1KB\" if we're formatting byte numbers.\n\t// \n\t// This section defines such suffixes for all such cases.\n\t\"_big_number_suffix_3\": \"k\",\n\t\"_big_number_suffix_6\": \"M\",\n\t\"_big_number_suffix_9\": \"G\",\n\t\"_big_number_suffix_12\": \"T\",\n\t\"_big_number_suffix_15\": \"P\",\n\t\"_big_number_suffix_18\": \"E\",\n\t\"_big_number_suffix_21\": \"Z\",\n\t\"_big_number_suffix_24\": \"Y\",\n\n\t\"_small_number_suffix_3\": \"m\",\n\t\"_small_number_suffix_6\": \"μ\",\n\t\"_small_number_suffix_9\": \"n\",\n\t\"_small_number_suffix_12\": \"p\",\n\t\"_small_number_suffix_15\": \"f\",\n\t\"_small_number_suffix_18\": \"a\",\n\t\"_small_number_suffix_21\": \"z\",\n\t\"_small_number_suffix_24\": \"y\",\n\n\t\"_byte_suffix_B\": \"B\",\n\t\"_byte_suffix_KB\": \"KB\",\n\t\"_byte_suffix_MB\": \"MB\",\n\t\"_byte_suffix_GB\": \"GB\",\n\t\"_byte_suffix_TB\": \"TB\",\n\t\"_byte_suffix_PB\": \"PB\",\n\n\t// Default date formats for various periods.\n\t// \n\t// This should reflect official or de facto formatting universally accepted\n\t// in the country translation is being made for\n\t// Available format codes here:\n\t// https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Format_codes\n\t// \n\t// This will be used when formatting date/time for particular granularity,\n\t// e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\n\t// \n\t// \"date\" is used as in default date format when showing standalone dates.\n\t\"_date\": \"yyyy-MM-dd\",\n\t\"_date_millisecond\": \"mm:ss SSS\",\n\t\"_date_second\": \"HH:mm:ss\",\n\t\"_date_minute\": \"HH:mm\",\n\t\"_date_hour\": \"HH:mm\",\n\t\"_date_day\": \"MMM dd\",\n\t\"_date_week\": \"ww\",\n\t\"_date_month\": \"MMM\",\n\t\"_date_year\": \"yyyy\",\n\n\t// Default duration formats for various base units.\n\t// \n\t// This will be used by DurationFormatter to format numeric values into\n\t// duration.\n\t// \n\t// Notice how each duration unit comes in several versions. This is to ensure\n\t// that each base unit is shown correctly.\n\t// \n\t// For example, if we have baseUnit set to \"second\", meaning our duration is\n\t// in seconds.\n\t// \n\t// If we pass in `50` to formatter, it will know that we have just 50 seconds\n\t// (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\n\t// and the formatted result will be in like `\"50\"`.\n\t// \n\t// If we pass in `70`, which is more than a minute, the formatter will switch\n\t// to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\n\t// text.\n\t// \n\t// Available codes here:\n\t// https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\n\t\"_duration_millisecond\": \"SSS\",\n\t\"_duration_millisecond_second\": \"ss.SSS\",\n\t\"_duration_millisecond_minute\": \"mm:ss SSS\",\n\t\"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\n\t\"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\n\t\"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\n\n\t\"_duration_second\": \"ss\",\n\t\"_duration_second_minute\": \"mm:ss\",\n\t\"_duration_second_hour\": \"hh:mm:ss\",\n\t\"_duration_second_day\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_week\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\n\t\"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\n\n\t\"_duration_minute\": \"mm\",\n\t\"_duration_minute_hour\": \"hh:mm\",\n\t\"_duration_minute_day\": \"d'd' hh:mm\",\n\t\"_duration_minute_week\": \"d'd' hh:mm\",\n\t\"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\n\t\"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\n\n\t\"_duration_hour\": \"hh'h'\",\n\t\"_duration_hour_day\": \"d'd' hh'h'\",\n\t\"_duration_hour_week\": \"d'd' hh'h'\",\n\t\"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\n\t\"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\n\n\t\"_duration_day\": \"d'd'\",\n\t\"_duration_day_week\": \"d'd'\",\n\t\"_duration_day_month\": \"M'm' dd'd'\",\n\t\"_duration_day_year\": \"y'y' MM'm' dd'd'\",\n\n\t\"_duration_week\": \"w'w'\",\n\t\"_duration_week_month\": \"w'w'\",\n\t\"_duration_week_year\": \"w'w'\",\n\n\t\"_duration_month\": \"M'm'\",\n\t\"_duration_month_year\": \"y'y' MM'm'\",\n\n\t\"_duration_year\": \"y'y'\",\n\n\t// Era translations\n\t\"_era_ad\": \"AD\",\n\t\"_era_bc\": \"BC\",\n\n\t// Day part, used in 12-hour formats, e.g. 5 P.M.\n\t// Please note that these come in 3 variants:\n\t// * one letter (e.g. \"A\")\n\t// * two letters (e.g. \"AM\")\n\t// * two letters with dots (e.g. \"A.M.\")\n\t// \n\t// All three need to to be translated even if they are all the same. Some\n\t// users might use one, some the other.\n\t\"A\": \"\",\n\t\"P\": \"\",\n\t\"AM\": \"\",\n\t\"PM\": \"\",\n\t\"A.M.\": \"\",\n\t\"P.M.\": \"\",\n\n\t// Date-related stuff.\n\t// \n\t// When translating months, if there's a difference, use the form which is\n\t// best for a full date, e.g. as you would use it in \"2018 January 1\".\n\t// \n\t// Note that May is listed twice. This is because in English May is the same\n\t// in both long and short forms, while in other languages it may not be the\n\t// case. Translate \"May\" to full word, while \"May(short)\" to shortened\n\t// version.\n\t// \n\t// Should month names and weekdays be capitalized or not?\n\t// \n\t// Rule of thumb is this: if the names should always be capitalized,\n\t// regardless of name position within date (\"January\", \"21st January 2018\",\n\t// etc.) use capitalized names. Otherwise enter all lowercase.\n\t// \n\t// The date formatter will automatically capitalize names if they are the\n\t// first (or only) word in resulting date.\n\t\"January\": \"\",\n\t\"February\": \"\",\n\t\"March\": \"\",\n\t\"April\": \"\",\n\t\"May\": \"\",\n\t\"June\": \"\",\n\t\"July\": \"\",\n\t\"August\": \"\",\n\t\"September\": \"\",\n\t\"October\": \"\",\n\t\"November\": \"\",\n\t\"December\": \"\",\n\t\"Jan\": \"\",\n\t\"Feb\": \"\",\n\t\"Mar\": \"\",\n\t\"Apr\": \"\",\n\t\"May(short)\": \"May\",\n\t\"Jun\": \"\",\n\t\"Jul\": \"\",\n\t\"Aug\": \"\",\n\t\"Sep\": \"\",\n\t\"Oct\": \"\",\n\t\"Nov\": \"\",\n\t\"Dec\": \"\",\n\n\t// Weekdays.\n\t\"Sunday\": \"\",\n\t\"Monday\": \"\",\n\t\"Tuesday\": \"\",\n\t\"Wednesday\": \"\",\n\t\"Thursday\": \"\",\n\t\"Friday\": \"\",\n\t\"Saturday\": \"\",\n\t\"Sun\": \"\",\n\t\"Mon\": \"\",\n\t\"Tue\": \"\",\n\t\"Wed\": \"\",\n\t\"Thu\": \"\",\n\t\"Fri\": \"\",\n\t\"Sat\": \"\",\n\n\t// Date ordinal function.\n\t// \n\t// This is used when adding number ordinal when formatting days in dates.\n\t// \n\t// E.g. \"January 1st\", \"February 2nd\".\n\t// \n\t// The function accepts day number, and returns a string to be added to the\n\t// day, like in default English translation, if we pass in 2, we will receive\n\t// \"nd\" back.\n\t\"_dateOrd\": function(day: number): string {\n\t\tlet res = \"th\";\n\t\tif ((day < 11) || (day > 13)) {\n\t\t\tswitch (day % 10) {\n\t\t\t\tcase 1:\n\t\t\t\t\tres = \"st\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tres = \"nd\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tres = \"rd\"\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\t// Various chart controls.\n\t// Shown as a tooltip on zoom out button.\n\t\"Zoom Out\": \"\",\n\n\t// Timeline buttons\n\t\"Play\": \"\",\n\t\"Stop\": \"\",\n\n\t// Chart's Legend screen reader title.\n\t\"Legend\": \"\",\n\n\t// Legend's item screen reader indicator.\n\t\"Click, tap or press ENTER to toggle\": \"\",\n\n\t// Shown when the chart is busy loading something.\n\t\"Loading\": \"\",\n\n\t// Shown as the first button in the breadcrumb navigation, e.g.:\n\t// Home > First level > ...\n\t\"Home\": \"\",\n\n\t// Chart types.\n\t// Those are used as default screen reader titles for the main chart element\n\t// unless developer has set some more descriptive title.\n\t\"Chart\": \"\",\n\t\"Serial chart\": \"\",\n\t\"X/Y chart\": \"\",\n\t\"Pie chart\": \"\",\n\t\"Gauge chart\": \"\",\n\t\"Radar chart\": \"\",\n\t\"Sankey diagram\": \"\",\n\t\"Flow diagram\": \"\",\n\t\"Chord diagram\": \"\",\n\t\"TreeMap chart\": \"\",\n\t\"Force directed tree\": \"\",\n\t\"Sliced chart\": \"\",\n\n\t// Series types.\n\t// Used to name series by type for screen readers if they do not have their\n\t// name set.\n\t\"Series\": \"\",\n\t\"Candlestick Series\": \"\",\n\t\"OHLC Series\": \"\",\n\t\"Column Series\": \"\",\n\t\"Line Series\": \"\",\n\t\"Pie Slice Series\": \"\",\n\t\"Funnel Series\": \"\",\n\t\"Pyramid Series\": \"\",\n\t\"X/Y Series\": \"\",\n\n\t// Map-related stuff.\n\t\"Map\": \"\",\n\t\"Press ENTER to zoom in\": \"\",\n\t\"Press ENTER to zoom out\": \"\",\n\t\"Use arrow keys to zoom in and out\": \"\",\n\t\"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\n\n\t// Export-related stuff.\n\t// These prompts are used in Export menu labels.\n\t// \n\t// \"Export\" is the top-level menu item.\n\t// \n\t// \"Image\", \"Data\", \"Print\" as second-level indicating type of export\n\t// operation.\n\t// \n\t// Leave actual format untranslated, unless you absolutely know that they\n\t// would convey more meaning in some other way.\n\t\"Export\": \"\",\n\t\"Image\": \"\",\n\t\"Data\": \"\",\n\t\"Print\": \"\",\n\t\"Press ENTER or use arrow keys to navigate\": \"\",\n\t\"Click, tap or press ENTER to open\": \"\",\n\t\"Click, tap or press ENTER to print.\": \"\",\n\t\"Click, tap or press ENTER to export as %1.\": \"\",\n\t'To save the image, right-click this link and choose \"Save picture as...\"': \"\",\n\t'To save the image, right-click thumbnail on the left and choose \"Save picture as...\"': \"\",\n\t\"(Press ESC to close this message)\": \"\",\n\t\"Image Export Complete\": \"\",\n\t\"Export operation took longer than expected. Something might have gone wrong.\": \"\",\n\t\"Saved from\": \"\",\n\t\"PNG\": \"\",\n\t\"JPG\": \"\",\n\t\"GIF\": \"\",\n\t\"SVG\": \"\",\n\t\"PDF\": \"\",\n\t\"JSON\": \"\",\n\t\"CSV\": \"\",\n\t\"XLSX\": \"\",\n\n\t// Scrollbar-related stuff.\n\t// \n\t// Scrollbar is a control which can zoom and pan the axes on the chart.\n\t// \n\t// Each scrollbar has two grips: left or right (for horizontal scrollbar) or\n\t// upper and lower (for vertical one).\n\t// \n\t// Prompts change in relation to whether Scrollbar is vertical or horizontal.\n\t// \n\t// The final section is used to indicate the current range of selection.\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\n\t\"Use left and right arrows to move selection\": \"\",\n\t\"Use left and right arrows to move left selection\": \"\",\n\t\"Use left and right arrows to move right selection\": \"\",\n\t\"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\n\t\"Use up and down arrows to move selection\": \"\",\n\t\"Use up and down arrows to move lower selection\": \"\",\n\t\"Use up and down arrows to move upper selection\": \"\",\n\t\"From %1 to %2\": \"\",\n\t\"From %1\": \"\",\n\t\"To %1\": \"\",\n\n\t// Data loader-related.\n\t\"No parser available for file: %1\": \"\",\n\t\"Error parsing file: %1\": \"\",\n\t\"Unable to load file: %1\": \"\",\n\t\"Invalid date\": \"\",\n\n\t// Common actions\n\t\"Close\": \"\",\n\t\"Minimize\": \"\"\n\n};","/**\r\n * Language module contains everything related to language-specific operations:\r\n * * Translating prompts\r\n * * Translating functions\r\n * * Date format localizations\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Adapter } from \"./Adapter\";\r\nimport { AMEvent } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport en from \"../../../lang/en\";\r\nimport { options } from \"../Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines events for [[Language]].\r\n */\r\nexport interface ILanguageEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when locale is changed by user.\r\n\t */\r\n\tlocalechanged: {\r\n\t\tlocale: ILocale;\r\n\t};\r\n\r\n};\r\n\r\n\r\n/**\r\n * Defines properties that exist for the locale.\r\n */\r\nexport interface ILocaleProperties {\r\n\t// number formatter related\r\n\t\"_decimalSeparator\"?: string;\r\n\t\"_thousandSeparator\"?: string;\r\n\r\n\t\"_percentPrefix\"?: string | null;\r\n\t\"_percentSuffix\"?: string | null;\r\n\r\n\t\"_big_number_suffix_3\"?: string;\r\n\t\"_big_number_suffix_6\"?: string;\r\n\t\"_big_number_suffix_9\"?: string;\r\n\t\"_big_number_suffix_12\"?: string;\r\n\t\"_big_number_suffix_15\"?: string;\r\n\t\"_big_number_suffix_18\"?: string;\r\n\t\"_big_number_suffix_21\"?: string;\r\n\t\"_big_number_suffix_24\"?: string;\r\n\r\n\t\"_small_number_suffix_24\"?: string;\r\n\t\"_small_number_suffix_21\"?: string;\r\n\t\"_small_number_suffix_18\"?: string;\r\n\t\"_small_number_suffix_15\"?: string;\r\n\t\"_small_number_suffix_12\"?: string;\r\n\t\"_small_number_suffix_9\"?: string;\r\n\t\"_small_number_suffix_6\"?: string;\r\n\t\"_small_number_suffix_3\"?: string;\r\n\r\n\t\"_byte_suffix_B\"?: string;\r\n\t\"_byte_suffix_KB\"?: string;\r\n\t\"_byte_suffix_MB\"?: string;\r\n\t\"_byte_suffix_GB\"?: string;\r\n\t\"_byte_suffix_TB\"?: string;\r\n\t\"_byte_suffix_PB\"?: string;\r\n\r\n\t// Default date formats for various periods\r\n\t\"_date\"?: string;\r\n\t\"_date_millisecond\"?: string;\r\n\t\"_date_second\"?: string;\r\n\t\"_date_minute\"?: string;\r\n\t\"_date_hour\"?: string;\r\n\t\"_date_day\"?: string;\r\n\t\"_date_week\"?: string;\r\n\t\"_date_month\"?: string;\r\n\t\"_date_year\"?: string;\r\n\r\n\t// Default duration formats for various base units\r\n\t\"_duration_millisecond\"?: string;\r\n\t\"_duration_millisecond_second\"?: string;\r\n\t\"_duration_millisecond_minute\"?: string;\r\n\t\"_duration_millisecond_hour\"?: string;\r\n\t\"_duration_millisecond_day\"?: string;\r\n\t\"_duration_millisecond_week\"?: string;\r\n\t\"_duration_millisecond_month\"?: string;\r\n\t\"_duration_millisecond_year\"?: string;\r\n\r\n\t\"_duration_second\"?: string;\r\n\t\"_duration_second_minute\"?: string;\r\n\t\"_duration_second_hour\"?: string;\r\n\t\"_duration_second_day\"?: string;\r\n\t\"_duration_second_week\"?: string;\r\n\t\"_duration_second_month\"?: string;\r\n\t\"_duration_second_year\"?: string;\r\n\r\n\t\"_duration_minute\"?: string;\r\n\t\"_duration_minute_hour\"?: string;\r\n\t\"_duration_minute_day\"?: string;\r\n\t\"_duration_minute_week\"?: string;\r\n\t\"_duration_minute_month\"?: string;\r\n\t\"_duration_minute_year\"?: string;\r\n\r\n\t\"_duration_hour\"?: string;\r\n\t\"_duration_hour_day\"?: string;\r\n\t\"_duration_hour_week\"?: string;\r\n\t\"_duration_hour_month\"?: string;\r\n\t\"_duration_hour_year\"?: string;\r\n\r\n\t\"_duration_day\"?: string;\r\n\t\"_duration_day_week\"?: string;\r\n\t\"_duration_day_month\"?: string;\r\n\t\"_duration_day_year\"?: string;\r\n\r\n\t\"_duration_week\"?: string;\r\n\t\"_duration_week_month\"?: string;\r\n\t\"_duration_week_year\"?: string;\r\n\r\n\t\"_duration_month\"?: string;\r\n\t\"_duration_month_year\"?: string;\r\n\r\n\t\"_duration_year\"?: string;\r\n\r\n\t// Era\r\n\t\"_era_ad\"?: string;\r\n\t\"_era_bc\"?: string;\r\n\r\n\t// Period\r\n\t\"A\"?: string;\r\n\t\"P\"?: string;\r\n\t\"AM\"?: string;\r\n\t\"PM\"?: string;\r\n\t\"A.M.\"?: string;\r\n\t\"P.M.\"?: string;\r\n\r\n\t// Dates\r\n\t\"January\"?: string;\r\n\t\"February\"?: string;\r\n\t\"March\"?: string;\r\n\t\"April\"?: string;\r\n\t\"May\"?: string;\r\n\t\"June\"?: string;\r\n\t\"July\"?: string;\r\n\t\"August\"?: string;\r\n\t\"September\"?: string;\r\n\t\"October\"?: string;\r\n\t\"November\"?: string;\r\n\t\"December\"?: string;\r\n\t\"Jan\"?: string;\r\n\t\"Feb\"?: string;\r\n\t\"Mar\"?: string;\r\n\t\"Apr\"?: string;\r\n\t\"May(short)\"?: string;\r\n\t\"Jun\"?: string;\r\n\t\"Jul\"?: string;\r\n\t\"Aug\"?: string;\r\n\t\"Sep\"?: string;\r\n\t\"Oct\"?: string;\r\n\t\"Nov\"?: string;\r\n\t\"Dec\"?: string;\r\n\t\"Sunday\"?: string;\r\n\t\"Monday\"?: string;\r\n\t\"Tuesday\"?: string;\r\n\t\"Wednesday\"?: string;\r\n\t\"Thursday\"?: string;\r\n\t\"Friday\"?: string;\r\n\t\"Saturday\"?: string;\r\n\t\"Sun\"?: string;\r\n\t\"Mon\"?: string;\r\n\t\"Tue\"?: string;\r\n\t\"Wed\"?: string;\r\n\t\"Thu\"?: string;\r\n\t\"Fri\"?: string;\r\n\t\"Sat\"?: string;\r\n\r\n\t// Chart elements\r\n\t\"Zoom Out\"?: string;\r\n\t\"Play\"?: string;\r\n\t\"Stop\"?: string;\r\n\t\"Legend\"?: string;\r\n\t\"Click, tap or press ENTER to toggle\"?: string;\r\n\t\"Loading\"?: string;\r\n\t\"%1 shown\"?: string;\r\n\t\"%1 hidden\"?: string;\r\n\r\n\t// Chart types\r\n\t\"Chart\"?: string;\r\n\t\"Serial chart\"?: string;\r\n\t\"X/Y chart\"?: string;\r\n\t\"Pie chart\"?: string;\r\n\t\"Sunburst chart\"?: string;\r\n\t\"Gauge chart\"?: string;\r\n\t\"Radar chart\"?: string;\r\n\t\"Sankey diagram\"?: string;\r\n\t\"Flow diagram\"?: string;\r\n\t\"Chord diagram\"?: string;\r\n\t\"TreeMap chart\"?: string;\r\n\t\"Force directed tree\"?: string;\r\n\t\"Sliced chart\"?: string;\r\n\r\n\t// Series types\r\n\t\"Series\"?: string;\r\n\t\"Candlestick Series\"?: string;\r\n\t\"OHLC Series\"?: string;\r\n\t\"Column Series\"?: string;\r\n\t\"Line Series\"?: string;\r\n\t\"Pie Slice Series\"?: string;\r\n\t\"Funnel Series\"?: string;\r\n\t\"Pyramid Series\"?: string;\r\n\t\"X/Y Series\"?: string;\r\n\r\n\t// Map-related\r\n\t\"Map\"?: string;\r\n\t\"Press ENTER to zoom in\"?: string;\r\n\t\"Press ENTER to zoom out\"?: string;\r\n\t\"Use arrow keys to zoom in and out\"?: string;\r\n\t\"Use plus and minus keys on your keyboard to zoom in and out\"?: string;\r\n\t\"Home\"?: string;\r\n\t\"Zoom level changed to %1\"?: string;\r\n\r\n\t// Export-related\r\n\t\"Export\"?: string;\r\n\t\"Image\"?: string;\r\n\t\"Data\"?: string;\r\n\t\"Print\"?: string;\r\n\t\"Press ENTER or use arrow keys to navigate\"?: string;\r\n\t\"Click, tap or press ENTER to open\"?: string;\r\n\t\"Click, tap or press ENTER to print.\"?: string;\r\n\t\"Click, tap or press ENTER to export as %1.\"?: string;\r\n\t'To save the image, right-click this link and choose \"Save picture as...\"': string;\r\n\t'To save the image, right-click thumbnail on the left and choose \"Save picture as...\"': string;\r\n\t\"(Press ESC to close this message)\"?: string;\r\n\t\"Image Export Complete\"?: string;\r\n\t\"Export operation took longer than expected. Something might have gone wrong.\"?: string;\r\n\t\"Saved from\"?: string;\r\n\t\"PNG\"?: string;\r\n\t\"JPG\"?: string;\r\n\t\"GIF\"?: string;\r\n\t\"SVG\"?: string;\r\n\t\"PDF\"?: string;\r\n\t\"JSON\"?: string;\r\n\t\"CSV\"?: string;\r\n\t\"XLSX\"?: string;\r\n\r\n\t// Scrollbar-related\r\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\"?: string;\r\n\t\"Use left and right arrows to move selection\"?: string;\r\n\t\"Use left and right arrows to move left selection\"?: string;\r\n\t\"Use left and right arrows to move right selection\"?: string;\r\n\t\"Use TAB select grip buttons or up and down arrows to change selection\"?: string;\r\n\t\"Use up and down arrows to move selection\"?: string;\r\n\t\"Use up and down arrows to move lower selection\"?: string;\r\n\t\"Use up and down arrows to move upper selection\"?: string;\r\n\t\"From %1 to %2\"?: string;\r\n\t\"From %1\"?: string;\r\n\t\"To %1\"?: string;\r\n\r\n\t// Data loader-related\r\n\t\"No parser available for file: %1\"?: string;\r\n\t\"Error parsing file: %1\"?: string;\r\n\t\"Unable to load file: %1\"?: string;\r\n\t\"Invalid date\"?: string;\r\n\r\n\t// Common actions\r\n\t\"Close\"?: string;\r\n\t\"Minimize\"?: string;\r\n\r\n\t\"Venn Series\"?: string;\r\n\t\"Venn Diagram\"?: string;\r\n}\r\n\r\n/**\r\n * Defines functions that exist for the locale.\r\n */\r\nexport interface ILocaleFunctions {\r\n\t// ordinal function\r\n\t\"_dateOrd\": (day: number) => string;\r\n}\r\n\r\n/**\r\n * Defines all of the defaults for locale properties.\r\n */\r\nexport interface ILocaleDefault extends ILocaleProperties, ILocaleFunctions { }\r\n\r\n/**\r\n * Defines locale interface.\r\n */\r\nexport interface ILocale extends Partial<ILocaleDefault> { };\r\n\r\n/**\r\n * Represents a list of available adapters for Language.\r\n */\r\nexport interface ILanguageAdapters {\r\n\r\n\t/**\r\n\t * Applied to result whenever retrieving currently set locale.\r\n\t */\r\n\tlocale: {\r\n\t\tlocale: ILocale\r\n\t},\r\n\r\n\t/**\r\n\t * Applied to a translation.\r\n\t */\r\n\ttranslate: {\r\n\t\ttranslation: string,\r\n\t\tlocale?: ILocale\r\n\t},\r\n\r\n\t/**\r\n\t * Applied to all of the locale translations.\r\n\t */\r\n\ttranslations: {\r\n\t\ttranslations: any,\r\n\t\tlocale?: ILocale\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Handles all language-related tasks, like loading and storing translations,\r\n * translating prompts, lists of prompts and even functions.\r\n *\r\n * Almost every object in amCharts4 universe will have a `language` property,\r\n * which can be accessed for prompt translation.\r\n *\r\n * @see {@link ILanguageAdapters} for a list of available Adapters\r\n * @todo Make prompt keys case-insensitive\r\n * @important\r\n */\r\nexport class Language extends BaseObjectEvents {\r\n\t/**\r\n\t * Defines type used in the Sprite.\r\n\t */\r\n\tpublic _adapter!: ILanguageAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILanguageEvents;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter: Adapter<this, this[\"_adapter\"]> = new Adapter(this);\r\n\r\n\t/**\r\n\t * Current locale.\r\n\t */\r\n\tprotected _locale: ILocale = en;\r\n\r\n\t/**\r\n\t * Default locale. A locale to fall back to if none is specified, or\r\n\t * if there's no translation for the prompt for the current language.\r\n\t */\r\n\tprotected _defaultLocale: ILocaleDefault = en;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Language\";\r\n\r\n\t\t// Set default language if necessary\r\n\t\tif ($type.hasValue(options.defaultLocale)) {\r\n\t\t\tthis.locale = options.defaultLocale;\r\n\t\t}\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns locale that is currently used.\r\n\t *\r\n\t * @param locale  Force locale. Will use current language if not set.\r\n\t * @return Locale\r\n\t */\r\n\tprotected getLocale(locale?: ILocale): ILocale {\r\n\t\tif (locale == null) {\r\n\t\t\tlocale = this._locale;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"locale\", {\r\n\t\t\tlocale: locale\r\n\t\t}).locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the translation of the string.\r\n\t *\r\n\t * If the translation is empty, it will return untranslated prompt.\r\n\t *\r\n\t * Third parameter and up are strings that can be used to replace \"%X\"\r\n\t * placeholders in prompt.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Results in \"This is a first translation test\"\r\n\t * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n\t * ```\r\n\t * ```JavaScriptScript\r\n\t * // Results in \"This is a first translation test\"\r\n\t * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n\t * ```\r\n\t *\r\n\t * @param  prompt   A string to translate\r\n\t * @param  locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param  rest     Parameters to replace in string\r\n\t * @return          Translation\r\n\t */\r\n\tpublic translate<Key extends keyof ILocaleProperties>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\r\n\r\n\t\t// Get langauge\r\n\t\tlocale = this.getLocale(locale);\r\n\r\n\t\t// Init translation\r\n\t\tlet translation: string = prompt;\r\n\r\n\t\t// Get translations for the locale\r\n\t\tlet translations = this.getTranslations(locale);\r\n\r\n\t\tlet value: $type.Optional<ILocaleDefault[Key]> = translations[prompt];\r\n\r\n\t\t// Try to look for the translation\r\n\t\tif (value === null) {\r\n\t\t\ttranslation = \"\";\r\n\t\t}\r\n\t\telse if ($type.hasValue(value)) {\r\n\t\t\t// It might be an empty string\r\n\t\t\tif (value) {\r\n\t\t\t\ttranslation = value!;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (locale !== this._defaultLocale) {\r\n\t\t\t// Try to look in default language\r\n\t\t\treturn this.translate(prompt, this._defaultLocale, ...rest);\r\n\t\t}\r\n\r\n\t\t// Replace %1, %2, etc params\r\n\t\tif (rest.length) {\r\n\t\t\tfor (let len = rest.length, i = 0; i < len; ++i) {\r\n\t\t\t\ttranslation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Return the translation\r\n\t\treturn this.adapter.apply(\"translate\", {\r\n\t\t\ttranslation: translation,\r\n\t\t\tlocale: locale\r\n\t\t}).translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Non-type-checked translation.\r\n\t *\r\n\t * Can be used by plugins and other code that may have their own non-standard\r\n\t * translation prompts.\r\n\t *\r\n\t * @since 4.5.5\r\n\t * @param  prompt   A string to translate\r\n\t * @param  locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param  rest     Parameters to replace in string\r\n\t * @return          Translation\r\n\t */\r\n\tpublic translateAny(prompt: string, locale?: ILocale, ...rest: Array<string>): string {\r\n\t\treturn this.translate(<any>prompt, locale, ...rest);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a prompt translation.\r\n\t *\r\n\t * @since 4.9.35\r\n\t * @param  prompt       Prompt in English\r\n\t * @param  translation  Translation\r\n\t * @param  locale       Locale\r\n\t */\r\n\tpublic setTranslationAny(prompt: string, translation: string, locale?: ILocale): void {\r\n\t\tconst localeTarget = locale || this.locale;\r\n\t\t(<any>localeTarget)[prompt] = translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates prompt.\r\n\t *\r\n\t * If translation is empty, it will return empty string, which is a different\r\n\t * behavior than that of regular `translate`.\r\n\t *\r\n\t * @param prompt   A string to translate\r\n\t * @param locale   Force translation into specific locale, e.g. fr_FR\r\n\t * @param ...rest  Parameters to replace in string\r\n\t * @return Translation\r\n\t */\r\n\tpublic translateEmpty<Key extends keyof ILocaleProperties>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\r\n\t\tlet translation = this.translate(prompt, locale, ...rest);\r\n\t\treturn translation == prompt ? \"\" : translation;\r\n\t}\r\n\r\n\t/**\r\n\t * Translates a function.\r\n\t *\r\n\t * This method will return a function reference, but will not run it. It's\r\n\t * up to the caller script to run the function.\r\n\t *\r\n\t * @param prompt  A function id to translate\r\n\t * @param locale  Force translation into specific locale. e.g. fr_FR\r\n\t * @return A language-specific version of the function\r\n\t * @todo Apply adapter\r\n\t */\r\n\tpublic translateFunc<Key extends keyof ILocaleFunctions>(prompt: Key, locale?: ILocale): ILocaleFunctions[Key] {\r\n\r\n\t\t// Get langauge\r\n\t\tlocale = this.getLocale(locale);\r\n\r\n\t\t// Get translations for the locale\r\n\t\tlet translations = this.getTranslations(locale);\r\n\r\n\t\tlet value: $type.Optional<ILocaleFunctions[Key]> = translations[prompt];\r\n\r\n\t\t// Try to look for the translation\r\n\t\tif (value != null) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Try to look in default language\r\n\t\tif (locale !== this._defaultLocale) {\r\n\t\t\treturn this.translateFunc(prompt, this._defaultLocale);\r\n\t\t}\r\n\r\n\t\t// Fail - return empty function\r\n\t\treturn (): string => {\r\n\t\t\treturn \"\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Translates a list of prompts in one go.\r\n\t *\r\n\t * @param list    An array of strings to translate\r\n\t * @param locale  Force translation into specific locale. e.g. fr_FR\r\n\t * @return An array of translated strings in the same order as source list\r\n\t */\r\n\tpublic translateAll<Key extends keyof ILocaleProperties>(list: Array<Key>, locale?: ILocale): Array<string> {\r\n\t\t// Translate all items in the list\r\n\t\tif (!this.isDefault()) {\r\n\t\t\treturn $array.map(list, (x) => this.translate(x, locale));\r\n\r\n\t\t} else {\r\n\t\t\treturn list;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the currently selected locale is a default locale.\r\n\t *\r\n\t * @return `true` if locale is default; `false` if it is not.\r\n\t */\r\n\tpublic isDefault(): boolean {\r\n\t\treturn this._defaultLocale === this._locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Current locale.\r\n\t *\r\n\t * @param value  Locale definition (translations)\r\n\t */\r\n\tpublic set locale(value: ILocale) {\r\n\t\tif (this._locale != value) {\r\n\t\t\tthis._locale = value;\r\n\r\n\r\n\t\t\tif (this.events.isEnabled(\"localechanged\")) {\r\n\t\t\t\tconst event: AMEvent<this, ILanguageEvents>[\"localechanged\"] = {\r\n\t\t\t\t\ttype: \"localechanged\",\r\n\t\t\t\t\tlocale: value,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"localechanged\", event);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Locale definition\r\n\t */\r\n\tpublic get locale(): ILocale {\r\n\t\treturn this._locale;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns translations for a given locale.\r\n\t *\r\n\t * @ignore\r\n\t * @deprecated\r\n\t * @param locale  Locale\r\n\t * @return Translations\r\n\t */\r\n\tpublic getTranslations(locale: ILocale): ILocale {\r\n\t\treturn this.adapter.apply(\"translations\", {\r\n\t\t\ttranslations: locale,\r\n\t\t\tlocale: locale\r\n\t\t}).translations;\r\n\t}\r\n\r\n}\r\n","import { StyleRule } from \"../utils/DOM\";\r\nimport { InterfaceColorSet } from \"../utils/InterfaceColorSet\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"../utils/Disposer\";\r\n\r\nconst rules = new Dictionary<string, CounterDisposer>();\r\n\r\n/**\r\n * A dynamically-loadable CSS module for Export menu.\r\n *\r\n * @ignore Exclude from docs\r\n * @param prefix  Prefix to addtach to class names\r\n * @return A MultiDisposer with style rules\r\n */\r\nexport default function(element: ShadowRoot | null, prefix?: string): IDisposer {\r\n\tconst newPrefix = (prefix ? prefix : \"amexport\");\r\n\r\n\tlet colorSet = new InterfaceColorSet();\r\n\r\n\tconst counter = rules.insertKeyIfEmpty(newPrefix, () => {\r\n\t\tconst disposer = new MultiDisposer([\r\n\r\n\t\t\t/*new StyleRule(`.${newPrefix}-menu`, {\r\n\t\t\t\t\"opacity\": \"0.3\",\r\n\t\t\t\t\"transition\": \"all 100ms ease-in-out\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(`div:hover .${newPrefix}-menu, .${newPrefix}-menu.active`, {\r\n\t\t\t\t\"opacity\": \"0.9\",\r\n\t\t\t}),*/\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-menu *`, {\r\n\t\t\t\t\"box-sizing\": \"border-box\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-menu-level-0`, {\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"5px\",\r\n\t\t\t\t\"right\": \"5px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-menu-level-0.${newPrefix}-left`, {\r\n\t\t\t\t\"right\": \"auto\",\r\n\t\t\t\t\"left\": \"5px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-menu-level-0.${newPrefix}-right`, {\r\n\t\t\t\t\"right\": \"5px\",\r\n\t\t\t\t\"left\": \"auto\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-menu-level-0.${newPrefix}-top`, {\r\n\t\t\t\t\"top\": \"5px\",\r\n\t\t\t\t\"bottom\": \"auto\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-menu-level-0.${newPrefix}-bottom`, {\r\n\t\t\t\t\"top\": \"auto\",\r\n\t\t\t\t\"bottom\": \"5px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item.${newPrefix}-item-level-0`, {\r\n\t\t\t\t\"opacity\": \"0.3\",\r\n\t\t\t\t\"width\": \"30px\",\r\n\t\t\t\t\"min-height\": \"30px\",\r\n\t\t\t\t\"transition\": \"all 100ms ease-in-out\",\r\n\t\t\t\t//\"text-indent\": \"-9999px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `div:hover > div > .${newPrefix}-menu .${newPrefix}-item.${newPrefix}-item-level-0, .${newPrefix}-item.${newPrefix}-item-level-0.active`, {\r\n\t\t\t\t\"opacity\": \"0.9\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item.${newPrefix}-item-level-0 > a`, {\r\n\t\t\t\t\"padding\": \"0\",\r\n\t\t\t\t\"text-align\": \"center\",\r\n\t\t\t\t\"overflow\": \"hidden\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item.${newPrefix}-item-level-0:before`, {\r\n\t\t\t\t\"display\": \"block\"\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item`, {\r\n\t\t\t\t\"position\": \"relative\",\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"opacity\": \"0\",\r\n\t\t\t\t\"z-index\": \"1\",\r\n\t\t\t\t\"border-radius\": \"3px\",\r\n\t\t\t\t\"background-color\": colorSet.getFor(\"secondaryButton\").hex,\r\n\t\t\t\t\"padding\": \"0\",\r\n\t\t\t\t\"margin\": \"1px 1px 0 0\",\r\n\t\t\t\t\"color\": colorSet.getFor(\"secondaryButton\").alternative.hex,\r\n\t\t\t\t\"transition\": \"all 100ms ease-in-out, opacity 0.5s ease 0.5s\",\r\n\t\t\t\t//\"width\": \"initial\",\r\n\t\t\t\t//\"height\": \"initial\",\r\n\t\t\t\t//\"text-indent\": \"initial\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-left .${newPrefix}-item`, {\r\n\t\t\t\t\"margin\": \"1px 0 0 1px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item:hover, .${newPrefix}-item.active`, {\r\n\t\t\t\t\"background\": colorSet.getFor(\"secondaryButtonHover\").hex,\r\n\t\t\t\t\"color\": colorSet.getFor(\"secondaryButtonText\").hex,\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"position\": \"absolute\",\r\n\t\t\t\t\"top\": \"-1px\",\r\n\t\t\t\t\"right\": \"0\",\r\n\t\t\t\t\"margin-right\": \"100%\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-left .${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"left\": \"0\",\r\n\t\t\t\t\"right\": \"auto\",\r\n\t\t\t\t\"margin-left\": \"100%\",\r\n\t\t\t\t\"margin-right\": \"auto\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-right .${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"left\": \"auto\",\r\n\t\t\t\t\"right\": \"0\",\r\n\t\t\t\t\"margin-left\": \"auto\",\r\n\t\t\t\t\"margin-right\": \"100%\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-top .${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"top\": \"-1px\",\r\n\t\t\t\t\"bottom\": \"auto\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-bottom .${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"top\": \"auto\",\r\n\t\t\t\t\"bottom\": \"0\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item > .${newPrefix}-menu`, {\r\n\t\t\t\t\"display\": \"none\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item:hover > .${newPrefix}-menu, .${newPrefix}-item.active > .${newPrefix}-menu`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item:hover > .${newPrefix}-menu > .${newPrefix}-item, .${newPrefix}-item.active > .${newPrefix}-menu > .${newPrefix}-item`, {\r\n\t\t\t\t\"opacity\": \"1\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-menu`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"list-style\": \"none\",\r\n\t\t\t\t\"margin\": \"0\",\r\n\t\t\t\t\"padding\": \"0\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-label`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"cursor\": \"default\",\r\n\t\t\t\t\"padding\": \"0.5em 1em\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-icon`, {\r\n\t\t\t\t\"display\": \"block\",\r\n\t\t\t\t\"cursor\": \"default\",\r\n\t\t\t\t\"padding\": \"0.2em 0.4em\",\r\n\t\t\t\t\"width\": \"1.2em\",\r\n\t\t\t\t\"height\": \"1.2em\",\r\n\t\t\t\t\"min-width\": \"32px\",\r\n\t\t\t\t\"min-height\": \"32px\",\r\n\t\t\t\t\"margin\": \"auto auto\",\r\n\t\t\t\t\"border-radius\": \"3px\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-item-level-0 > .${newPrefix}-icon`, {\r\n\t\t\t\t\"padding\": \"0.1em 0.2em\",\r\n\t\t\t}),\r\n\r\n\t\t\tnew StyleRule(element, `.${newPrefix}-clickable`, {\r\n\t\t\t\t\"cursor\": \"pointer\",\r\n\t\t\t}),\r\n\t\t]);\r\n\r\n\t\treturn new CounterDisposer(() => {\r\n\t\t\trules.removeKey(newPrefix);\r\n\t\t\tdisposer.dispose();\r\n\t\t});\r\n\t});\r\n\r\n\treturn counter.increment();\r\n}\r\n","/**\r\n * ExportMenu provides functionality for building Export menu\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport exportCSS from \"./ExportCSS\";\r\nimport { IExportOptions } from \"./Export\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { List } from \"../utils/List\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { InteractionObject } from \"../interaction/InteractionObject\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { IDisposer, MutableValueDisposer } from \"../utils/Disposer\";\r\nimport { Language, ILocaleProperties } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { keyboard, KeyboardKeys } from \"../utils/Keyboard\";\r\nimport { Color } from \"../utils/Color\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Export menu item interface.\r\n */\r\nexport interface IExportMenuItem {\r\n\r\n\t/**\r\n\t * Item type, usually an export format.\r\n\t */\r\n\ttype?: keyof IExportOptions;\r\n\r\n\t/**\r\n\t * Label to display in the menu.\r\n\t */\r\n\tlabel?: string;\r\n\r\n\t/**\r\n\t * Alternative title to be displayed on hover.\r\n\t *\r\n\t * @since 4.9.27\r\n\t */\r\n\ttitle?: string;\r\n\r\n\t/**\r\n\t * A `href` of the image to show instead of a label.\r\n\t */\r\n\ticon?: string;\r\n\r\n\t/**\r\n\t * Raw SVG content to add to instead of regular label.\r\n\t */\r\n\tsvg?: string;\r\n\r\n\t/**\r\n\t * Export format. (optional)\r\n\t */\r\n\tformat?: string;\r\n\r\n\t/**\r\n\t * Menu item options.\r\n\t *\r\n\t * @see {@link IExportOptions}\r\n\t */\r\n\toptions?: IExportOptions[keyof IExportOptions];\r\n\r\n\t/**\r\n\t * Priority.\r\n\t *\r\n\t * The items in Export menu will be sorted by their priority in ascending\r\n\t * order.\r\n\t *\r\n\t * @ignore Exclude from docs (this feature is not yet implemented)\r\n\t */\r\n\tpriority?: number;\r\n\r\n\t/**\r\n\t * An array of [[IExportMenuItem]] items, to construct a sub-menu out of.\r\n\t *\r\n\t * An Export menu can have any number of nesting levels.\r\n\t */\r\n\tmenu?: Array<IExportMenuItem>;\r\n\r\n\t/**\r\n\t * If this is set to true, it means that this specific menu item is not\r\n\t * supported by the current client system.\r\n\t *\r\n\t * This is usually populated by [[Export]]'s `supported` Adapter.\r\n\t *\r\n\t * @see {@link IExportAdapters}\r\n\t */\r\n\tunsupported?: boolean\r\n\r\n\t/**\r\n\t * An [[InteractionObject]] representation of the menu item label.\r\n\t */\r\n\tinteractions?: InteractionObject;\r\n\r\n\t/**\r\n\t * Actual HTML element of the menu item.\r\n\t */\r\n\telement?: HTMLElement;\r\n\r\n\t/**\r\n\t * An element that holds the sub-menu.\r\n\t *\r\n\t * @since 4.10.12\r\n\t */\r\n\tsubmenuElement?: HTMLElement;\r\n\r\n\t/**\r\n\t * Holds list of parent menu items to this item.\r\n\t */\r\n\tascendants?: List<IExportMenuItem>;\r\n\r\n\t/**\r\n\t * Holds timeout reference.\r\n\t *\r\n\t * Used to delay auto-closing of the menu when it is no longer hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tcloseTimeout?: IDisposer;\r\n\r\n\t/**\r\n\t * Should this item be hidden?\r\n\t */\r\n\thidden?: boolean;\r\n\r\n\t/**\r\n\t * A unique id to attach to the menu item.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Color to use as a background.\r\n\t */\r\n\tcolor?: Color;\r\n\r\n}\r\n\r\n/**\r\n * Defines [[ExportMenu]] events.\r\n */\r\nexport interface IExportMenuEvents {\r\n\r\n\t/**\r\n\t * Invoked when menu item is clicked/tapped.\r\n\t */\r\n\thit: {\r\n\t\tbranch: IExportMenuItem;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when menu item is hovered.\r\n\t */\r\n\tover: {\r\n\t\tbranch: IExportMenuItem;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when menu item is no longer hovered.\r\n\t */\r\n\tout: {\r\n\t\tbranch: IExportMenuItem;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when ENTER key is pressed when certain menu item is in focus.\r\n\t */\r\n\tenter: {\r\n\t\tbranch: IExportMenuItem;\r\n\t\tevent: KeyboardEvent;\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when menu branch is selected. (either by hover or keyboard)\r\n\t */\r\n\tbranchselected: {\r\n\t\tbranch: IExportMenuItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when menu branch is unselected.\r\n\t */\r\n\tbranchunselected: {\r\n\t\tbranch: IExportMenuItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when menu is closed.\r\n\t */\r\n\tclosed: {};\r\n\r\n}\r\n\r\n/**\r\n * Represents a list of available adapters for Export\r\n */\r\nexport interface IExportMenuAdapters {\r\n\r\n\titems: {\r\n\t\titems: Array<IExportMenuItem>\r\n\t},\r\n\r\n\tmenuElement: {\r\n\t\tmenuElement: HTMLElement\r\n\t},\r\n\r\n\tbranch: {\r\n\t\tbranch: IExportMenuItem,\r\n\t\tlevel: number\r\n\t},\r\n\r\n\trederLabel: {\r\n\t\tlabel: string,\r\n\t\tbranch: IExportMenuItem\r\n\t},\r\n\r\n\tmenuClass: {\r\n\t\tclassName: string,\r\n\t\tlevel: number\r\n\t},\r\n\r\n\titemClass: {\r\n\t\tclassName: string,\r\n\t\tlevel: number,\r\n\t\ttype?: keyof IExportOptions\r\n\t},\r\n\r\n\tlabelClass: {\r\n\t\tclassName: string,\r\n\t\tlevel: number,\r\n\t\ttype?: keyof IExportOptions\r\n\t},\r\n\r\n\tmenuTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\titemTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\tlabelTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\ticonTag: {\r\n\t\ttag: string\r\n\t},\r\n\r\n\talign: {\r\n\t\talign: Align\r\n\t},\r\n\r\n\tverticalAlign: {\r\n\t\tverticalAlign: VerticalAlign\r\n\t},\r\n\r\n\tclassPrefix: {\r\n\t\tclassPrefix: string\r\n\t},\r\n\r\n\tdefaultStyles: {\r\n\t\tdefaultStyles: boolean\r\n\t},\r\n\r\n\ttabindex: {\r\n\t\ttabindex: number\r\n\t},\r\n\r\n\tcloseOnClick: boolean\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a menu for Export operations.\r\n *\r\n * To add an export menu to a chart, set this to a new instance of\r\n * [[ExportMenu]].\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n * @important\r\n */\r\nexport class ExportMenu extends Validatable {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IExportMenuEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IExportMenuAdapters;\r\n\r\n\t/**\r\n\t * An [[Adapter]].\r\n\t */\r\n\tpublic adapter: Adapter<ExportMenu, IExportMenuAdapters> = new Adapter<ExportMenu, IExportMenuAdapters>(this);\r\n\r\n\t/**\r\n\t * How many milliseconds to hold menu/sub-menu open after it loses focus or\r\n\t * hover, before auto-closing it.\r\n\t *\r\n\t * @default 1000\r\n\t */\r\n\tpublic closeDelay: number = 1000;\r\n\r\n\t/**\r\n\t * Close the menu automatically when some export operation is triggered.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.2.2\r\n\t */\r\n\tpublic closeOnClick: boolean = true;\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t */\r\n\tprotected _language = new MutableValueDisposer<Language>();\r\n\r\n\t/**\r\n\t * Reference to DOM element that holds Export menu.\r\n\t */\r\n\tprotected _container: $type.Optional<HTMLElement>;\r\n\r\n\t/**\r\n\t * Menu element.\r\n\t */\r\n\tprotected _element: $type.Optional<HTMLElement>;\r\n\r\n\t/**\r\n\t * Currently selected menu item.\r\n\t */\r\n\tprotected _currentSelection: $type.Optional<IExportMenuItem>;\r\n\r\n\t/**\r\n\t * What HTML tags to use to build menu.\r\n\t */\r\n\tprotected _menuTag: \"ul\" | \"div\" = \"ul\";\r\n\r\n\t/**\r\n\t * Which tag to use to enclose individual menu items.\r\n\t */\r\n\tprotected _itemTag: \"li\" | \"div\" = \"li\";\r\n\r\n\t/**\r\n\t * Tag to wrap menu item labels in.\r\n\t */\r\n\tprotected _labelTag: \"a\" = \"a\";\r\n\r\n\t/**\r\n\t * Tag to use for icons\r\n\t */\r\n\tprotected _iconTag: \"img\" = \"img\";\r\n\r\n\t/**\r\n\t * Prefix for class names applied to menu elements.\r\n\t */\r\n\tprotected _classPrefix: string = \"amexport\";\r\n\r\n\t/**\r\n\t * If set to `true` [[ExportMenu]] will load it's own external CSS when\r\n\t * instantiated.\r\n\t */\r\n\tprotected _defaultStyles: boolean = true;\r\n\r\n\t/**\r\n\t * Horizontal positioning.\r\n\t */\r\n\tprotected _align: Align = \"right\";\r\n\r\n\t/**\r\n\t * Vertical positioning.\r\n\t */\r\n\tprotected _verticalAlign: VerticalAlign = \"top\";\r\n\r\n\t/**\r\n\t * A tabindex to apply to Export Menu.\r\n\t */\r\n\tprotected _tabindex: number = 0;\r\n\r\n\t/**\r\n\t * Whether next menu close event should be ignored.\r\n\t */\r\n\tprotected _ignoreNextClose: boolean = false;\r\n\r\n\t/**\r\n\t * Default menu items.\r\n\t */\r\n\tprotected _items: Array<IExportMenuItem> = [\r\n\t\t{\r\n\t\t\t\"label\": \"...\",\r\n\t\t\t\"menu\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"label\": \"Image\",\r\n\t\t\t\t\t\"menu\": [\r\n\t\t\t\t\t\t{ \"type\": \"png\", \"label\": \"PNG\" },\r\n\t\t\t\t\t\t{ \"type\": \"jpg\", \"label\": \"JPG\" },\r\n\t\t\t\t\t\t{ \"type\": \"svg\", \"label\": \"SVG\" },\r\n\t\t\t\t\t\t{ \"type\": \"pdf\", \"label\": \"PDF\" }\r\n\t\t\t\t\t]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"label\": \"Data\",\r\n\t\t\t\t\t\"menu\": [\r\n\t\t\t\t\t\t{ \"type\": \"json\", \"label\": \"JSON\" },\r\n\t\t\t\t\t\t{ \"type\": \"csv\", \"label\": \"CSV\" },\r\n\t\t\t\t\t\t{ \"type\": \"xlsx\", \"label\": \"XLSX\" },\r\n\t\t\t\t\t\t{ \"type\": \"html\", \"label\": \"HTML\" },\r\n\t\t\t\t\t\t{ \"type\": \"pdfdata\", \"label\": \"PDF\" }\r\n\t\t\t\t\t]\r\n\t\t\t\t}, {\r\n\t\t\t\t\t\"label\": \"Print\", \"type\": \"print\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ExportMenu\";\r\n\t\tthis._disposers.push(this._language);\r\n\t\tthis.invalidate();\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)draws the Export menu.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tthis.draw();\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the menu based on current items.\r\n\t *\r\n\t * Normally, there's no need to call this explicitly. The chart, if it has\r\n\t * export menu enabled, will automatically draw the menu.\r\n\t */\r\n\tpublic draw(): void {\r\n\r\n\t\t// Create top-level menu item, or clear it\r\n\t\tif (!this._element) {\r\n\t\t\tthis._element = this.createMenuElement(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._element.innerHTML = \"\";\r\n\t\t\tthis._element.className = this.getMenuItemClass(0);\r\n\t\t}\r\n\r\n\t\t// See if we're loading external CSS\r\n\t\t// Hide it until CSS is loaded\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis._element.style.display = \"none\";\r\n\t\t}\r\n\r\n\t\t// Append to container\r\n\t\t$type.getValue(this._container).appendChild(this._element);\r\n\r\n\t\t// Apply adapter to menu items before processing\r\n\t\tlet items = this.adapter.apply(\"items\", {\r\n\t\t\titems: this._items\r\n\t\t}).items;\r\n\r\n\t\tfor (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\tthis.drawBranch(this._element, items[i], 0);\r\n\t\t}\r\n\r\n\t\t// Apply adapter to finalized menu element\r\n\t\tthis._element = this.adapter.apply(\"menuElement\", {\r\n\t\t\tmenuElement: this._element\r\n\t\t}).menuElement;\r\n\r\n\t\t// Set up global \"down\" event\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"down\", (ev) => {\r\n\t\t\tif (!ev.pointer.touch) {\r\n\t\t\t\tthis._ignoreNextClose = false;\r\n\t\t\t}\r\n\t\t\tthis.close();\r\n\t\t}));\r\n\r\n\t\t// Set up global event on ESC press to close the menu\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keydown\", (ev) => {\r\n\t\t\tlet key = keyboard.getEventKey(ev.event);\r\n\t\t\tswitch (key) {\r\n\t\t\t\tcase \"esc\":\r\n\t\t\t\t\tthis.close();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"up\":\r\n\t\t\t\tcase \"down\":\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tif (this._currentSelection) {\r\n\t\t\t\t\t\tev.event.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.moveSelection(key);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis.loadDefaultCSS();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new branch in export menu. This function is recursive for\r\n\t * building multi-level menus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param container Container to put branch elements in\r\n\t * @param branch    Menu item\r\n\t * @param level     Current nesting level\r\n\t */\r\n\tprotected drawBranch(container: HTMLElement, branch: IExportMenuItem, level: number): void {\r\n\r\n\t\t// Apply adapter\r\n\t\tbranch = this.adapter.apply(\"branch\", {\r\n\t\t\tbranch: branch,\r\n\t\t\tlevel: level\r\n\t\t}).branch;\r\n\r\n\t\t// Unsupported?\r\n\t\t// ExportMenu does not check or know for specific browser/system\r\n\t\t// capabilities. It must happen in some other code and applied via Adapter.\r\n\t\t// Export itself will check compatibility, but there might be other plugins\r\n\t\t// that influence it or even add any specific export functionality.\r\n\t\tif (branch.unsupported === true) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init ascendants\r\n\t\tif (!branch.ascendants) {\r\n\t\t\tbranch.ascendants = new List<IExportMenuItem>();\r\n\t\t}\r\n\r\n\t\t// Get type\r\n\t\tlet type: keyof IExportOptions | undefined | null = branch.type;\r\n\r\n\t\t// Create an item\r\n\t\tlet element = this.createItemElement(level, type);\r\n\r\n\t\t// Create label\r\n\t\tlet label;\r\n\r\n\t\t// Create icon\r\n\t\tif (branch.icon) {\r\n\t\t\tlabel = this.createIconElement(level, type);\r\n\t\t\t(<HTMLImageElement>label).src = branch.icon;\r\n\t\t\tif (branch.label || branch.title) {\r\n\t\t\t\t(<HTMLImageElement>label).title = branch.title || branch.label;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (branch.svg) {\r\n\t\t\tlabel = this.createSvgElement(level, type, branch.svg);\r\n\t\t\tif (branch.label || branch.title) {\r\n\t\t\t\t(<HTMLElement>label).title = branch.title || branch.label;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabel = this.createLabelElement(level, type);\r\n\t\t\tlabel.innerHTML = (branch.label ? this.language.translate(<keyof ILocaleProperties>branch.label) : \"\");\r\n\t\t\tif (branch.title) {\r\n\t\t\t\t(<HTMLElement>label).title = branch.title;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply reader text to label\r\n\t\tlet readerLabel = this.getReaderLabel(branch, label.innerHTML);\r\n\t\tlabel.setAttribute(\"aria-label\", readerLabel);\r\n\r\n\t\t// Add Label\r\n\t\telement.appendChild(label);\r\n\r\n\t\t// Create interaction object\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions = getInteraction().getInteraction(element);\r\n\t\tbranch.element = element;\r\n\r\n\t\t// Create interaction manager we can set event listeners to\r\n\t\tif (this.typeClickable(type)) {\r\n\t\t\t//branch.interactions.clickable = true;\r\n\t\t\t// TODO clean this up when it's disposed\r\n\t\t\tbranch.interactions.events.on(\"hit\", (ev) => {\r\n\t\t\t\tif (this.events.isEnabled(\"hit\") && !this.isDisposed()) {\r\n\t\t\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"hit\"] = {\r\n\t\t\t\t\t\t\"type\": \"hit\",\r\n\t\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\t\"branch\": branch\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"hit\", event);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// TODO clean this up when it's disposed\r\n\t\t\tbranch.interactions.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (keyboard.isKey(ev.event, \"enter\")) {\r\n\t\t\t\t\tif (this.events.isEnabled(\"enter\")) {\r\n\t\t\t\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"enter\"] = {\r\n\t\t\t\t\t\t\t\"type\": \"enter\",\r\n\t\t\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\t\t\"branch\": branch\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.events.dispatchImmediately(\"enter\", event);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst submenu = this.getSubMenu(branch);\r\n\r\n\t\t\t// Add ENTER event to open sub-menus\r\n\t\t\tif (submenu != null) {\r\n\t\t\t\t// TODO clean this up when it's disposed\r\n\t\t\t\tbranch.interactions.events.on(\"keyup\", (ev) => {\r\n\t\t\t\t\tif (keyboard.isKey(ev.event, \"enter\")) {\r\n\t\t\t\t\t\t// This is item has sub-menu, activate the first child on ENTER\r\n\t\t\t\t\t\tthis.selectBranch(submenu[0]);\r\n\r\n\t\t\t\t\t\t// Attempt to set focus\r\n\t\t\t\t\t\tthis.setFocus(submenu[0]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tbranch.interactions.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\tthis.selectBranch(branch);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add events\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions.events.on(\"over\", (ev) => {\r\n\r\n\t\t\tif (ev.pointer.touch) {\r\n\t\t\t\t// Cancel pending menu closure\r\n\t\t\t\tthis._ignoreNextClose = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.selectBranch(branch);\r\n\r\n\t\t\tif (this.events.isEnabled(\"over\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"over\"] = {\r\n\t\t\t\t\t\"type\": \"over\",\r\n\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"branch\": branch\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"over\", event);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions.events.on(\"out\", (ev) => {\r\n\t\t\tif (this.isDisposed()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!ev.pointer.touch) {\r\n\t\t\t\tthis.delayUnselectBranch(branch);\r\n\t\t\t}\r\n\t\t\tif (this.events.isEnabled(\"out\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"out\"] = {\r\n\t\t\t\t\t\"type\": \"out\",\r\n\t\t\t\t\t\"event\": ev.event,\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"branch\": branch\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"out\", event);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions.events.on(\"focus\", (ev) => {\r\n\t\t\tthis.selectBranch(branch);\r\n\t\t});\r\n\r\n\t\t// TODO clean this up when it's disposed\r\n\t\tbranch.interactions.events.on(\"blur\", (ev) => {\r\n\t\t\tthis.delayUnselectBranch(branch);\r\n\t\t});\r\n\r\n\t\t// Increment level\r\n\t\tlet local_level = level + 1;\r\n\r\n\t\t// Has sub-menu?\r\n\t\tif (branch.menu) {\r\n\t\t\tlet submenu = this.createMenuElement(local_level);\r\n\t\t\tbranch.submenuElement = submenu;\r\n\t\t\tfor (let len = branch.menu.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet ascendants = new List<IExportMenuItem>();\r\n\t\t\t\tbranch.menu[i].ascendants = ascendants;\r\n\t\t\t\tif (branch.ascendants.length) {\r\n\t\t\t\t\tascendants.copyFrom(branch.ascendants);\r\n\t\t\t\t}\r\n\t\t\t\tascendants.push(branch);\r\n\t\t\t\tthis.drawBranch(submenu, branch.menu[i], local_level);\r\n\t\t\t}\r\n\r\n\t\t\t// Sub-menu is empty (all items are not supported)\r\n\t\t\t// Do not draw this menu item at all\r\n\t\t\tif (submenu.innerHTML == \"\") {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telement.appendChild(submenu);\r\n\t\t}\r\n\r\n\t\t// Should this item be hidden?\r\n\t\tif (branch.hidden) {\r\n\t\t\tthis.hideBranch(branch);\r\n\t\t}\r\n\r\n\t\t// Add id?\r\n\t\tif (branch.id) {\r\n\t\t\telement.setAttribute(\"id\", branch.id);\r\n\t\t}\r\n\r\n\t\t// Background color?\r\n\t\tif (branch.color) {\r\n\t\t\telement.style.backgroundColor = branch.color.hex;\r\n\t\t}\r\n\r\n\t\t// Append to container\r\n\t\tcontainer.appendChild(element);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a menu element to hold its elements in. Usually it's an `<ul>`\r\n\t * tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param level  Current nesting level\r\n\t * @return HTML element reference\r\n\t */\r\n\tpublic createMenuElement(level: number): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.menuTag);\r\n\t\telement.className = this.getMenuItemClass(level);\r\n\r\n\t\t// Accessibility\r\n\t\tif (level === 0) {\r\n\t\t\telement.setAttribute(\"role\", \"menubar\");\r\n\t\t}\r\n\t\telse {\r\n\t\t\telement.setAttribute(\"role\", \"menu\");\r\n\t\t}\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a class name for the menu element based on its nesting level.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param level  Current nesting level\r\n\t * @return Class name(s)\r\n\t */\r\n\tpublic getMenuItemClass(level: number): string {\r\n\t\tlet className = this.classPrefix + \"-menu \" + this.classPrefix + \"-menu-level-\" + level;\r\n\t\tif (level === 0) {\r\n\t\t\tclassName += \" \" + this.classPrefix + \"-menu-root \" +\r\n\t\t\t\tthis.classPrefix + \"-\" + this.align + \" \" +\r\n\t\t\t\tthis.classPrefix + \"-\" + this.verticalAlign;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"menuClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level\r\n\t\t}).className;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates menu item. Usually `<li>` tag. Its label and sub-elements will go\r\n\t * into this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param level  Current nesting level\r\n\t * @param type   Type of the menu item\r\n\t * @return HTML element reference\r\n\t */\r\n\tpublic createItemElement(level: number, type?: keyof IExportOptions): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.itemTag);\r\n\t\tlet className = this.classPrefix + \"-item \" + this.classPrefix\r\n\t\t\t+ \"-item-level-\" + level\r\n\t\t\t+ \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n\t\telement.className = this.adapter.apply(\"itemClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level,\r\n\t\t\ttype: type\r\n\t\t}).className;\r\n\t\telement.setAttribute(\"role\", \"menuitem\");\r\n\t\telement.setAttribute(\"tabindex\", this.tabindex.toString());\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a \"label\" part of the menu item. It could be text or any HTML\r\n\t * content.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param level  Current nesting level\r\n\t * @param type   Type of the menu item\r\n\t * @return An HTML Element\r\n\t */\r\n\tpublic createLabelElement(level: number, type?: keyof IExportOptions): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.labelTag);\r\n\t\tlet className = this.classPrefix + \"-label \" + this.classPrefix\r\n\t\t\t+ \"-label-level-\" + level\r\n\t\t\t+ \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n\t\tif (this.typeClickable(type)) {\r\n\t\t\tclassName += \" \" + this.classPrefix + \"-clickable\";\r\n\t\t}\r\n\t\telement.className = this.adapter.apply(\"labelClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level,\r\n\t\t\ttype: type\r\n\t\t}).className;\r\n\r\n\t\t// Accessible navigation\r\n\t\t//element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n\t\t//element.setAttribute(\"role\", \"menuitem\");\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a \"icon\" part of the menu item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param level  Current nesting level\r\n\t * @param type   Type of the menu item\r\n\t * @return An HTML Element\r\n\t */\r\n\tpublic createIconElement(level: number, type?: keyof IExportOptions): HTMLElement {\r\n\t\tlet element: HTMLElement = document.createElement(this.iconTag);\r\n\t\tlet className = this.classPrefix + \"-icon \" + this.classPrefix\r\n\t\t\t+ \"-icon-level-\" + level\r\n\t\t\t+ \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n\t\tif (this.typeClickable(type)) {\r\n\t\t\tclassName += \" \" + this.classPrefix + \"-clickable\";\r\n\t\t}\r\n\t\telement.className = this.adapter.apply(\"labelClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level,\r\n\t\t\ttype: type\r\n\t\t}).className;\r\n\r\n\t\t// Accessible navigation\r\n\t\telement.setAttribute(\"tabindex\", this.tabindex.toString());\r\n\t\telement.setAttribute(\"role\", \"menuitem\");\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a a custom element out of raw HTML.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param level  Current nesting level\r\n\t * @param type   Type of the menu item\r\n\t * @return An HTML Element\r\n\t */\r\n\tpublic createSvgElement(level: number, type?: keyof IExportOptions, svg?: string): HTMLElement {\r\n\t\tlet parser = new DOMParser();\r\n\t\tlet element = parser.parseFromString(svg, \"image/svg+xml\").documentElement;\r\n\t\tlet className = this.classPrefix + \"-icon \" + this.classPrefix\r\n\t\t\t+ \"-icon-level-\" + level\r\n\t\t\t+ \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n\t\tif (this.typeClickable(type)) {\r\n\t\t\tclassName += \" \" + this.classPrefix + \"-clickable\";\r\n\t\t}\r\n\t\telement.setAttribute(\"class\", this.adapter.apply(\"labelClass\", {\r\n\t\t\tclassName: className,\r\n\t\t\tlevel: level,\r\n\t\t\ttype: type\r\n\t\t}).className);\r\n\r\n\t\t// Accessible navigation\r\n\t\telement.setAttribute(\"tabindex\", this.tabindex.toString());\r\n\t\telement.setAttribute(\"role\", \"menuitem\");\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys the menu and all its elements.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this._disposed) {\r\n\t\t\tsuper.dispose();\r\n\r\n\t\t\tif (this._element && this._element.parentNode) {\r\n\t\t\t\tthis._element.parentNode.removeChild(this._element);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether menu item type is supposed to be clickable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param type  Menu item type\r\n\t * @return Is clickable?\r\n\t */\r\n\tpublic typeClickable(type: keyof IExportOptions | undefined | null): type is keyof IExportOptions {\r\n\t\treturn $type.hasValue(type);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether menu item has any sub-items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch  A menu item\r\n\t * @return Has sub-items?\r\n\t */\r\n\tpublic hasSubMenu(branch: IExportMenuItem): boolean {\r\n\t\treturn (branch.menu && branch.menu.length) ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns sub-items (if they exist).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch  A menu item\r\n\t * @return Submenus\r\n\t */\r\n\tpublic getSubMenu(branch: IExportMenuItem): $type.Optional<Array<IExportMenuItem>> {\r\n\t\tif (branch.menu && branch.menu.length) {\r\n\t\t\treturn branch.menu;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generates and returns an applicable label to be used for screen readers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item   A menu item instance\r\n\t * @param label  Current label\r\n\t * @return Reader text\r\n\t */\r\n\tpublic getReaderLabel(branch: IExportMenuItem, label: string): string {\r\n\r\n\t\t// Strip any HTML from the label\r\n\t\tlabel = $utils.stripTags(label);\r\n\r\n\t\t// Add textual note if the branch is clickable\r\n\t\tif (branch.ascendants.length == 0) {\r\n\t\t\tlabel = label == \"...\" ? this.language.translate(\"Export\") : label;\r\n\t\t\tlabel += \" [\" + this.language.translate(\"Press ENTER or use arrow keys to navigate\") + \"]\";\r\n\t\t}\r\n\t\telse if (this.hasSubMenu(branch)) {\r\n\t\t\tlabel += \" [\" + this.language.translate(\"Click, tap or press ENTER to open\") + \"]\";\r\n\t\t}\r\n\t\telse if (branch.type == \"print\") {\r\n\t\t\tlabel = this.language.translate(\"Click, tap or press ENTER to print.\");\r\n\t\t}\r\n\t\telse if (this.typeClickable(branch.type)) {\r\n\t\t\tlabel = this.language.translate(\"Click, tap or press ENTER to export as %1.\", undefined, label);\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"rederLabel\", {\r\n\t\t\tlabel: label,\r\n\t\t\tbranch: branch\r\n\t\t}).label;\r\n\t}\r\n\r\n\t/**\r\n\t * Getters and setters\r\n\t */\r\n\r\n\t/**\r\n\t * An HTML container to place the Menu in.\r\n\t *\r\n\t * A container must be an HTML element, because menu itself is HTML, and\r\n\t * cannot be placed into SVG.\r\n\t *\r\n\t * @param container Reference to container element\r\n\t * @todo Check if menu is already build. If it is, just move it to a new container\r\n\t */\r\n\tpublic set container(container: $type.Optional<HTMLElement>) {\r\n\t\tthis._container = container;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Container\r\n\t */\r\n\tpublic get container(): $type.Optional<HTMLElement> {\r\n\t\treturn this._container;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of menu items. Can be nested.\r\n\t *\r\n\t * @param items  Menu items\r\n\t */\r\n\tpublic set items(items: Array<IExportMenuItem>) {\r\n\t\tthis._items = items;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Menu items\r\n\t */\r\n\tpublic get items(): Array<IExportMenuItem> {\r\n\t\treturn this._items;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets main menu tag to place menu in.\r\n\t *\r\n\t * This also sets up how menu items are built.\r\n\t *\r\n\t * If you set this to \"ul\", menu items will be wrapped into `<li>` tags.\r\n\t *\r\n\t * If set to \"div\", menu items will be wrapped in `<div>` tags.\r\n\t *\r\n\t * @default \"ul\"\r\n\t * @param tag Tag to use for menu\r\n\t */\r\n\tpublic set tag(tag: \"ul\" | \"div\") {\r\n\t\tthis._menuTag = tag;\r\n\t\tthis._itemTag = tag == \"ul\" ? \"li\" : \"div\";\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current menu tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Menu tag (item that contains sub-items)\r\n\t */\r\n\tpublic get menuTag(): string {\r\n\t\treturn this.adapter.apply(\"menuTag\", {\r\n\t\t\ttag: this._menuTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns tag to wrap items into.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Item tag\r\n\t */\r\n\tpublic get itemTag(): string {\r\n\t\treturn this.adapter.apply(\"itemTag\", {\r\n\t\t\ttag: this._itemTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns menu label tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Label tag\r\n\t */\r\n\tpublic get labelTag(): string {\r\n\t\treturn this.adapter.apply(\"labelTag\", {\r\n\t\t\ttag: this._labelTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns icon tag.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Icon tag\r\n\t */\r\n\tpublic get iconTag(): string {\r\n\t\treturn this.adapter.apply(\"iconTag\", {\r\n\t\t\ttag: this._iconTag\r\n\t\t}).tag;\r\n\t}\r\n\r\n\t/**\r\n\t * A horizontal alignment for the menu placement.\r\n\t *\r\n\t * @param value Horizontal alignment\r\n\t */\r\n\tpublic set align(value: Align) {\r\n\t\tthis._align = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal alignment\r\n\t */\r\n\tpublic get align(): Align {\r\n\t\treturn this.adapter.apply(\"align\", {\r\n\t\t\talign: this._align\r\n\t\t}).align;\r\n\t}\r\n\r\n\t/**\r\n\t * A vertical alignment for the menu placement.\r\n\t *\r\n\t * @param value Vertical alignment\r\n\t */\r\n\tpublic set verticalAlign(value: VerticalAlign) {\r\n\t\tthis._verticalAlign = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical alignment\r\n\t */\r\n\tpublic get verticalAlign(): VerticalAlign {\r\n\t\treturn this.adapter.apply(\"verticalAlign\", {\r\n\t\t\tverticalAlign: this._verticalAlign\r\n\t\t}).verticalAlign;\r\n\t}\r\n\r\n\t/**\r\n\t * Class name prefix.\r\n\t *\r\n\t * @default \"amexport\"\r\n\t * @param value Class name prefix\r\n\t */\r\n\tpublic set classPrefix(value: string) {\r\n\t\tthis._classPrefix = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Class name prefix\r\n\t */\r\n\tpublic get classPrefix(): string {\r\n\t\treturn this.adapter.apply(\"classPrefix\", {\r\n\t\t\tclassPrefix: this._classPrefix\r\n\t\t}).classPrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether [[ExportMenu]] should load external CSS to style itself.\r\n\t *\r\n\t * If set to `false`, the menu will not be styled, and will rely on some\r\n\t * external CSS.\r\n\t *\r\n\t * @default true\r\n\t * @param Should ExportMenu load its own CSS?\r\n\t */\r\n\tpublic set defaultStyles(value: boolean) {\r\n\t\tif (this._defaultStyles != value) {\r\n\t\t\tthis._defaultStyles = value;\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.loadDefaultCSS();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Should ExportMenu load its own CSS?\r\n\t */\r\n\tpublic get defaultStyles(): boolean {\r\n\t\treturn this.adapter.apply(\"defaultStyles\", {\r\n\t\t\tdefaultStyles: this._defaultStyles\r\n\t\t}).defaultStyles;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads the default CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic loadDefaultCSS(): void {\r\n\t\tthis._disposers.push(exportCSS($dom.getShadowRoot(this.container), this.classPrefix));\r\n\r\n\t\tif (this._element) {\r\n\t\t\tthis._element.style.display = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A tab index for the menu.\r\n\t *\r\n\t * Tab index will influence the order in which elements on the chart and\r\n\t * the whole page are selected when pressing TAB key.\r\n\t *\r\n\t * @param value Tab index\r\n\t */\r\n\tpublic set tabindex(value: number) {\r\n\t\tthis._tabindex = value;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Tab index\r\n\t */\r\n\tpublic get tabindex(): number {\r\n\t\treturn this.adapter.apply(\"tabindex\", {\r\n\t\t\ttabindex: this._tabindex\r\n\t\t}).tabindex;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Language]] instance.\r\n\t *\r\n\t * @param value An instance of [[Language]]\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language.set(value, value.events.on(\"localechanged\", (ev) => {\r\n\t\t\tthis.invalidate();\r\n\t\t}));\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tlet language = this._language.get();\r\n\r\n\t\tif (language == null) {\r\n\t\t\tlanguage = new Language();\r\n\r\n\t\t\t// TODO code duplication with `set language()`\r\n\t\t\tthis._language.set(language, language.events.on(\"localechanged\", (ev) => {\r\n\t\t\t\tthis.invalidate();\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn language;\r\n\t}\r\n\r\n\t/**\r\n\t * Controlling the menu\r\n\t */\r\n\r\n\t/**\r\n\t * Removes all active classes from menu items. Useful on touch devices and\r\n\t * keyboard navigation where open menu can be closed instantly by clicking or\r\n\t * tapping outside it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic close(): void {\r\n\r\n\t\tif (this.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this._ignoreNextClose) {\r\n\t\t\tthis._ignoreNextClose = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.closeOnClick) {\r\n\t\t\tthis._element.style.pointerEvents = \"none\";\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis._element.style.pointerEvents = \"auto\";\r\n\t\t\t}, 100);\r\n\t\t}\r\n\r\n\t\tif (this._currentSelection) {\r\n\t\t\tthis.setBlur(this._currentSelection);\r\n\t\t\tthis._currentSelection = undefined;\r\n\t\t}\r\n\r\n\t\tif (this._element) {\r\n\t\t\tlet items = this._element.getElementsByClassName(\"active\");\r\n\t\t\tfor (let len = items.length, i = len - 1; i >= 0; i--) {\r\n\t\t\t\tif (items[i]) {\r\n\t\t\t\t\t$dom.removeClass(<HTMLElement>items[i], \"active\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.events.dispatchImmediately(\"closed\", {\r\n\t\t\ttype: \"closed\",\r\n\t\t\ttarget: this\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Selects a branch in the menu.\r\n\t *\r\n\t * Handles closing of currently open branch.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch Branch to select\r\n\t */\r\n\tpublic selectBranch(branch: IExportMenuItem): void {\r\n\r\n\t\tif (this.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Cancel previous closure\r\n\t\tif (branch.closeTimeout) {\r\n\t\t\tthis.removeDispose(branch.closeTimeout);\r\n\t\t\tbranch.closeTimeout = undefined;\r\n\t\t}\r\n\r\n\t\t// Add active class\r\n\t\t$dom.addClass(branch.element, \"active\");\r\n\r\n\t\t// Set expanded\r\n\t\tif (branch.submenuElement) {\r\n\t\t\tbranch.submenuElement.setAttribute(\"aria-expanded\", \"true\");\r\n\t\t}\r\n\r\n\t\t// Remove current selection\r\n\t\tif (this._currentSelection && this._currentSelection !== branch && this._currentSelection.ascendants) {\r\n\t\t\t$iter.each($iter.concat($iter.fromArray([this._currentSelection]), this._currentSelection.ascendants.iterator()), (ascendant) => {\r\n\t\t\t\tif (!branch.ascendants.contains(ascendant) && branch !== ascendant) {\r\n\t\t\t\t\tthis.unselectBranch(ascendant, true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Select and/or cancel timeout for current ascendants\r\n\t\t$iter.each(branch.ascendants.iterator(), (ascendant) => {\r\n\t\t\tif (ascendant.closeTimeout) {\r\n\t\t\t\tthis.removeDispose(ascendant.closeTimeout);\r\n\t\t\t\tascendant.closeTimeout = undefined;\r\n\t\t\t}\r\n\t\t\t$dom.addClass(ascendant.element, \"active\");\r\n\t\t});\r\n\r\n\t\t// Log current selection\r\n\t\tthis._currentSelection = branch;\r\n\r\n\t\t// Invoke event\r\n\t\tif (this.events.isEnabled(\"branchselected\")) {\r\n\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"branchselected\"] = {\r\n\t\t\t\ttype: \"branchselected\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tbranch: branch\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"branchselected\", event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unselects a branch. Also selects a branch one level up if necessary.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch Branch to unselect\r\n\t * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n\t */\r\n\tpublic unselectBranch(branch: IExportMenuItem, simple?: boolean): void {\r\n\r\n\t\tif (this.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove active class\r\n\t\t$dom.removeClass(branch.element, \"active\");\r\n\r\n\t\t// Set expanded\r\n\t\tif (branch.submenuElement) {\r\n\t\t\tbranch.submenuElement.removeAttribute(\"aria-expanded\");\r\n\t\t}\r\n\r\n\t\t// Remove current selection\r\n\t\tif (this._currentSelection == branch) {\r\n\t\t\tthis._currentSelection = undefined;\r\n\t\t}\r\n\r\n\t\t// Invoke event\r\n\t\tif (this.events.isEnabled(\"branchunselected\")) {\r\n\t\t\tconst event: AMEvent<this, IExportMenuEvents>[\"branchunselected\"] = {\r\n\t\t\t\ttype: \"branchunselected\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tbranch: branch\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"branchunselected\", event);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Delay unselection of a branch. This can still be cancelled in some other\r\n\t * place if the branch or its children regain focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch Branch to unselect\r\n\t * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n\t */\r\n\tpublic delayUnselectBranch(branch: IExportMenuItem, simple?: boolean): void {\r\n\r\n\t\tif (this.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Schedule branch unselection\r\n\t\tif (branch.closeTimeout) {\r\n\t\t\tthis.removeDispose(branch.closeTimeout);\r\n\t\t\tbranch.closeTimeout = undefined;\r\n\t\t}\r\n\t\tbranch.closeTimeout = this.setTimeout(() => {\r\n\t\t\tthis.unselectBranch(branch, simple);\r\n\t\t}, this.closeDelay);\r\n\r\n\t\t// Schedule unselection of all ascendants\r\n\t\t// In case focus went away from the export menu altogether, this will ensure\r\n\t\t// that all items will be closed.\r\n\t\t// In case we're jumping to other menu item, those delayed unselections will\r\n\t\t// be cancelled by `selectBranch`\r\n\t\tif (simple !== true && branch.ascendants) {\r\n\t\t\t$iter.each(branch.ascendants.iterator(), (ascendant) => {\r\n\t\t\t\tthis.delayUnselectBranch(ascendant, true);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates the menu based on which direction kayboard key was pressed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param key A key that was pressed\r\n\t */\r\n\tpublic moveSelection(key: KeyboardKeys): void {\r\n\r\n\t\tif (this.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check if there's a current selection\r\n\t\tif (!this._currentSelection) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet newSelection: $type.Optional<IExportMenuItem>;\r\n\r\n\t\tif (key == \"up\") {\r\n\t\t\t// Try moving up in current menu list, or to the last item if already\r\n\t\t\t// at the top\r\n\t\t\tnewSelection = this.getPrevSibling(this._currentSelection);\r\n\t\t}\r\n\t\telse if (key == \"down\") {\r\n\t\t\t// Try moving down in current menu list, or to the top item if already\r\n\t\t\t// at the bottom\r\n\t\t\tnewSelection = this.getNextSibling(this._currentSelection);\r\n\t\t}\r\n\t\telse if ((key == \"left\" && this.align == \"right\") || (key == \"right\" && this.align == \"left\")) {\r\n\t\t\tlet menu = this.getSubMenu(this._currentSelection);\r\n\r\n\t\t\t// Go one level-deeper\r\n\t\t\tif (menu != null) {\r\n\t\t\t\tnewSelection = menu[0];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ((key == \"right\" && this.align == \"right\") || (key == \"left\" && this.align == \"left\")) {\r\n\t\t\t// Go one level-deeper\r\n\t\t\tnewSelection = this.getParentItem(this._currentSelection);\r\n\t\t}\r\n\r\n\t\tif (newSelection && newSelection !== this._currentSelection) {\r\n\t\t\tthis.selectBranch(newSelection);\r\n\t\t\tthis.setFocus(newSelection);\r\n\t\t\tthis._currentSelection = newSelection;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all siblings of a menu item, including this same menu item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch  Menu item\r\n\t * @return List of sibling menu items\r\n\t */\r\n\tpublic getSiblings(branch: IExportMenuItem): Array<IExportMenuItem> {\r\n\t\tlet parent = this.getParentItem(branch);\r\n\r\n\t\tif (parent && parent.menu) {\r\n\t\t\treturn parent.menu;\r\n\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns menu items parent item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch  Menu item\r\n\t * @return Parent menu item\r\n\t */\r\n\tpublic getParentItem(branch: IExportMenuItem): $type.Optional<IExportMenuItem> {\r\n\t\tif (branch.ascendants && branch.ascendants.length) {\r\n\t\t\treturn branch.ascendants.getIndex(branch.ascendants.length - 1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns next sibling in the same menu branch. If there is no next sibling,\r\n\t * the first one is returned. If there is just one item, that item is\r\n\t * returned. Unsupported menu items are skipped.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch  Menu item to search siblings for\r\n\t * @return Menu item\r\n\t */\r\n\tpublic getNextSibling(branch: IExportMenuItem): IExportMenuItem {\r\n\t\tlet siblings = this.getSiblings(branch);\r\n\t\tif (siblings.length > 1) {\r\n\t\t\tlet next = siblings.indexOf(branch) + 1;\r\n\t\t\tnext = siblings.length == next ? 0 : next;\r\n\t\t\treturn siblings[next].unsupported ? this.getNextSibling(siblings[next]) : siblings[next];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn branch;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns previous sibling in the same menu branch. If there is no next\r\n\t * sibling, the first one is returned. If there is just one item, that item is\r\n\t * returned. Unsupported menu items are skipped.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch  Menu item to search siblings for\r\n\t * @return Menu item\r\n\t */\r\n\tpublic getPrevSibling(branch: IExportMenuItem): IExportMenuItem {\r\n\t\tlet siblings = this.getSiblings(branch);\r\n\t\tif (siblings.length > 1) {\r\n\t\t\tlet prev = siblings.indexOf(branch) - 1;\r\n\t\t\tprev = prev == -1 ? siblings.length - 1 : prev;\r\n\t\t\treturn siblings[prev].unsupported ? this.getPrevSibling(siblings[prev]) : siblings[prev];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn branch;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Attempts to set focus on particular menu element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch Menu item\r\n\t */\r\n\tpublic setFocus(branch: IExportMenuItem): void {\r\n\t\tif (branch.interactions) {\r\n\t\t\ttry {\r\n\t\t\t\t(<HTMLElement>branch.interactions.element).focus();\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\t// nothing\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Attempts to remove focus from the menu element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param branch Menu item\r\n\t */\r\n\tpublic setBlur(branch: IExportMenuItem): void {\r\n\t\tif (branch.interactions) {\r\n\t\t\ttry {\r\n\t\t\t\t(<HTMLElement>branch.interactions.element).blur();\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\t// nothing\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the whole branch of menu.\r\n\t *\r\n\t * @param  branch  branch\r\n\t */\r\n\tpublic hideBranch(branch: IExportMenuItem): void {\r\n\t\tbranch.element.style.display = \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * Show the branch of menu.\r\n\t *\r\n\t * @param  branch  branch\r\n\t */\r\n\tpublic showBranch(branch: IExportMenuItem): void {\r\n\t\tbranch.element.style.display = \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * The main element o fthe menu - usually `<ul>`.\r\n\t *\r\n\t * @since 4.10.6\r\n\t * @return Menu element\r\n\t */\r\n\tpublic get element(): $type.Optional<HTMLElement> {\r\n\t\treturn this._element;\r\n\t}\r\n\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IBaseObjectEvents } from \"../Base\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IPointer } from \"../interaction/Pointer\";\r\nimport { InteractionObject } from \"../interaction/InteractionObject\";\r\nimport { EventListener, TargetedEventDispatcher, AMEvent } from \"../utils/EventDispatcher\";\r\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"../utils/Disposer\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a type of event that has a single point of reference.\r\n */\r\nexport type PointerTypeEvent = {\r\n\r\n\t/**\r\n\t * Is event originated by touch pointer?\r\n\t */\r\n\ttouch: boolean;\r\n\r\n};\r\n\r\n/**\r\n * Defines a type of event that has a single point of reference.\r\n */\r\nexport type PointEvent = {\r\n\r\n\t/**\r\n\t * Event point in global (document) coordinates.\r\n\t */\r\n\tpoint: IPoint;\r\n\r\n};\r\n\r\n/**\r\n * Defines a type of event that has a related Pointer.\r\n */\r\nexport type PointerEvent = {\r\n\r\n\t/**\r\n\t * Coordinates of the primary cursor position.\r\n\t */\r\n\tpointer: IPointer;\r\n\r\n};\r\n\r\n/**\r\n * Defines a type of event that represents some kind of shift in coordinates,\r\n * like draging an element.\r\n */\r\nexport type ShiftEvent = {\r\n\r\n\t/**\r\n\t * Shift in coordinates after dragging.\r\n\t */\r\n\tshift: IPoint;\r\n\r\n};\r\n\r\n/**\r\n * Defines a type of event that represents change in angle, like rotation.\r\n */\r\nexport type AngleEvent = {\r\n\r\n\t/**\r\n\t * Angle to apply to the element.\r\n\t */\r\n\tangle: number;\r\n};\r\n\r\n\r\n/**\r\n * Defines a type of event that represents change in element's scale, like\r\n * resize.\r\n */\r\nexport type ScaleEvent = {\r\n\r\n\t/**\r\n\t * Scale to apply to the element.\r\n\t */\r\n\tscale: number;\r\n\r\n};\r\n\r\n/**\r\n * Defines an event that contains event center coordindates.\r\n */\r\nexport type CenterEvent = {\r\n\r\n\t/**\r\n\t * A center point for specific operation.\r\n\t */\r\n\tcenter?: IPoint;\r\n\r\n};\r\n\r\n/**\r\n * Defines an event that can be triggered either by touch device or mouse.\r\n */\r\nexport type MouseTouchEvent = {\r\n\r\n\t/**\r\n\t * An original mouse or touch event.\r\n\t */\r\n\tevent: MouseEvent | TouchEvent;\r\n\r\n};\r\n\r\n/**\r\n * Defines an event that was not generated by keyboard directly, but rather\r\n * was simulated to trigger require keyboard-related handlers.\r\n */\r\nexport type SimulatedKeyboardEvent = {\r\n\r\n\t/**\r\n\t * A keyboard event.\r\n\t */\r\n\tevent: KeyboardEvent;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[InteractionObject]].\r\n */\r\nexport interface IInteractionObjectEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when object is clicked or touched.\r\n\t */\r\n\thit: PointerTypeEvent & PointEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when object is clicked or touched twice in rapid succession.\r\n\t *\r\n\t * Check [[IHitOptions]] for settings about double hit.\r\n\t */\r\n\tdoublehit: PointerTypeEvent & PointEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when right mouse button is clicked on the object.\r\n\t */\r\n\trightclick: MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when mouse or touch pointer is held down over object for some time.\r\n\t * @ignore\r\n\t * @deprecated\r\n\t */\r\n\thold: PointerTypeEvent & PointerEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when the mouse button is pressed or touch starts.\r\n\t */\r\n\tdown: PointerTypeEvent & PointerEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when the mouse button is released or touch ends.\r\n\t */\r\n\tup: PointerTypeEvent & PointerEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when `draggable` object is being dragged. (using mouse, touch or\r\n\t * keyboard)\r\n\t */\r\n\tdrag: PointerTypeEvent & ShiftEvent & PointEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original coordinates of the pointer's position when the dragging started.\r\n\t\t */\r\n\t\tstartPoint: IPoint,\r\n\r\n\t\t/**\r\n\t\t * An original JavaScript event that triggered dragging.\r\n\t\t */\r\n\t\tevent?: MouseEvent | TouchEvent | KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `draggable` object dragging starts. This event is not\r\n\t * invoked immediatelly after `down`, but only if there's a movement of the\r\n\t * pointer.\r\n\t */\r\n\tdragstart: PointerTypeEvent & {\r\n\r\n\t\t/**\r\n\t\t * An original JavaScript event that triggered dragging.\r\n\t\t */\r\n\t\tevent?: MouseEvent | TouchEvent | KeyboardEvent\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when `draggable` object is released. This event will not fire if\r\n\t * position of the object did not change.\r\n\t */\r\n\tdragstop: PointerTypeEvent & {\r\n\r\n\t\t/**\r\n\t\t * An original JavaScript event that triggered dragging.\r\n\t\t */\r\n\t\tevent?: MouseTouchEvent | KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when pointer (mouse cursor or touch point) moves over `trackable`\r\n\t * object.\r\n\t */\r\n\ttrack: PointerTypeEvent & PointEvent & PointerEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when `resizable` object is being resized either by mouse or touch\r\n\t * pinch gesture.\r\n\t */\r\n\tresize: PointerTypeEvent & ScaleEvent & MouseTouchEvent & {\r\n\r\n\t\t/**\r\n\t\t * The starting coordinates of the first reference point.\r\n\t\t */\r\n\t\tstartPoint1: IPoint,\r\n\r\n\t\t/**\r\n\t\t * Current coordinates of the first reference point.\r\n\t\t */\r\n\t\tpoint1: IPoint,\r\n\r\n\t\t/**\r\n\t\t * The starting coordinates of the second reference point.\r\n\t\t */\r\n\t\tstartPoint2: IPoint,\r\n\r\n\t\t/**\r\n\t\t * Current coordinates of the second reference point.\r\n\t\t */\r\n\t\tpoint2: IPoint\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user performs \"swiping\" gesture (quick horizontal movement)\r\n\t * on the object, either using mouse or touch.\r\n\t */\r\n\tswipe: PointerTypeEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when user performs \"swiping\" gesture towards left.\r\n\t */\r\n\tswipeleft: PointerTypeEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when user performs \"swiping\" gesture towards right.\r\n\t */\r\n\tswiperight: PointerTypeEvent & MouseTouchEvent;\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel while over the object.\r\n\t */\r\n\twheel: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel upwards while over the object.\r\n\t */\r\n\twheelup: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel downwards while over the object.\r\n\t */\r\n\twheeldown: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel leftwards while over the object.\r\n\t */\r\n\twheelleft: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when user turns mouse wheel rightwards while over the object.\r\n\t */\r\n\twheelright: PointEvent & ShiftEvent & {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript event.\r\n\t\t */\r\n\t\tevent: WheelEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when mouse cursor moves over `hoverable` object or it is touched.\r\n\t *\r\n\t * NOTE: this event might not always contains `pointer` parameter as\r\n\t * event might be triggered by API?\r\n\t */\r\n\tover: PointerTypeEvent & MouseTouchEvent & PointerEvent;\r\n\r\n\t/**\r\n\t * Invoked when mouse cursor moves out of `hoverable` object or it is no\r\n\t * longer touched.\r\n\t *\r\n\t * NOTE: this event might not always contains `pointer` parameter as\r\n\t * event might be triggered by API?\r\n\t */\r\n\tout: PointerTypeEvent & MouseTouchEvent & PointerEvent;\r\n\r\n\t/**\r\n\t * Invoked when `focusable` object gains focus, e.g. by using TAB button.\r\n\t */\r\n\tfocus: {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript `FocusEvent`.\r\n\t\t */\r\n\t\tevent: FocusEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when `focusable` object loses focus, e.g. by clicking outside\r\n\t * it or pressing TAB button to focus on the next focusable object.\r\n\t */\r\n\tblur: {\r\n\r\n\t\t/**\r\n\t\t * Original JavaScript `FocusEvent`.\r\n\t\t */\r\n\t\tevent: FocusEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the key is pressed on the keyboard.\r\n\t */\r\n\tkeydown: {\r\n\r\n\t\t/**\r\n\t\t * Orginal JavaScript `KeyboardEvent`.\r\n\t\t */\r\n\t\tevent: KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the key is released on the keyboard.\r\n\t */\r\n\tkeyup: {\r\n\r\n\t\t/**\r\n\t\t * Orginal JavaScript `KeyboardEvent`.\r\n\t\t */\r\n\t\tevent: KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when the key generates a \"press\", e.g. pressing and holding a\r\n\t * letter key will generate repeated \"keypress\" events.\r\n\t */\r\n\tkeypress: {\r\n\r\n\t\t/**\r\n\t\t * Orginal JavaScript `KeyboardEvent`.\r\n\t\t */\r\n\t\tevent: KeyboardEvent\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked whenever information changes in the textual input elements, like\r\n\t * `<input>`, `<textarea>`, etc.\r\n\t */\r\n\tinput: {\r\n\r\n\t\t/**\r\n\t\t * Orginal JavaScript `KeyboardEvent`.\r\n\t\t */\r\n\t\tevent: KeyboardEvent\r\n\r\n\t};\r\n}\r\n\r\n/**\r\n * Represents an Event Dispatcher for [[InteractionObject]].\r\n *\r\n * Besides regular [[EventDispatcher]] functionality it adds new events with\r\n * direct application to DOM nodes. Primarily used to handle keyboard events,\r\n * but can turn into something else moving forward.\r\n */\r\nexport class InteractionObjectEventDispatcher<T extends AMEvent<InteractionObject, IInteractionObjectEvents>> extends TargetedEventDispatcher<InteractionObject, T> {\r\n\r\n\t/**\r\n\t * Holds a list of Disposers for DOM events added.\r\n\t */\r\n\tprivate _domEvents: { [key: string]: CounterDisposer } = {};\r\n\r\n\t/**\r\n\t * Adds a DOM event and returns Disposer.\r\n\t *\r\n\t * @return Disposer\r\n\t */\r\n\tprivate _addDOMEvent<E extends Event, Key extends keyof IInteractionObjectEvents, C>(\r\n\t\ttype: string,\r\n\t\tkey: Key,\r\n\t\tlistener: (this: C, key: Key, evt: E) => void,\r\n\t\tcontext: C\r\n\t): IDisposer {\r\n\t\tif (!this._domEvents[type]) {\r\n\t\t\tconst callback = function (e: Event): void {\r\n\t\t\t\tlistener.call(context, key, e as any);\r\n\t\t\t};\r\n\r\n\t\t\tthis.target.element.addEventListener(type, callback, false);\r\n\r\n\t\t\tthis._domEvents[type] = new CounterDisposer(() => {\r\n\t\t\t\tdelete this._domEvents[type];\r\n\r\n\t\t\t\tthis.target.element.removeEventListener(type, callback, false);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this._domEvents[type].increment();\r\n\t}\r\n\r\n\tprivate _dispatchKeyboardEvent<Key extends \"keydown\" | \"keyup\" | \"keypress\" | \"input\">(key: Key, ev: KeyboardEvent): void {\r\n\t\t// TODO use this.dispatchImmediately ?\r\n\t\tif (this.target.events.isEnabled(key)) {\r\n\t\t\tthis.target.events.dispatchImmediately(key, {\r\n\t\t\t\ttype: key as any,\r\n\t\t\t\ttarget: this.target,\r\n\t\t\t\tevent: ev\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _on<A, B, Key extends keyof T>(once: boolean, type: Key | null, callback: A, context: B, shouldClone: boolean, dispatch: (type: Key, event: T[Key]) => void): EventListener<T> {\r\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\r\n\r\n\t\tconst disposers = [info.disposer];\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"hit\":\r\n\t\t\tcase \"doublehit\":\r\n\t\t\tcase \"rightclick\":\r\n\t\t\tcase \"down\":\r\n\t\t\tcase \"up\":\r\n\t\t\t\tthis.target.clickable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"drag\":\r\n\t\t\tcase \"dragstart\":\r\n\t\t\tcase \"dragstop\":\r\n\t\t\t\tthis.target.draggable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"track\":\r\n\t\t\t\tthis.target.trackable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"resize\":\r\n\t\t\t\tthis.target.resizable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"swipe\":\r\n\t\t\tcase \"swipeleft\":\r\n\t\t\tcase \"swiperight\":\r\n\t\t\t\tthis.target.swipeable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"wheel\":\r\n\t\t\tcase \"wheelup\":\r\n\t\t\tcase \"wheeldown\":\r\n\t\t\tcase \"wheelleft\":\r\n\t\t\tcase \"wheelright\":\r\n\t\t\t\tthis.target.wheelable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"over\":\r\n\t\t\tcase \"out\":\r\n\t\t\t\tthis.target.hoverable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"focus\":\r\n\t\t\tcase \"blur\":\r\n\t\t\tcase \"focusin\":\r\n\t\t\tcase \"focusout\":\r\n\t\t\t\tthis.target.focusable = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"keydown\":\r\n\t\t\t\tdisposers.push(this._addDOMEvent<KeyboardEvent, \"keydown\", this>(<any>type, <any>type, this._dispatchKeyboardEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"keyup\":\r\n\t\t\t\tdisposers.push(this._addDOMEvent<KeyboardEvent, \"keyup\", this>(<any>type, <any>type, this._dispatchKeyboardEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"keypress\":\r\n\t\t\t\tdisposers.push(this._addDOMEvent<KeyboardEvent, \"keypress\", this>(<any>type, <any>type, this._dispatchKeyboardEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"input\":\r\n\t\t\t\tdisposers.push(this._addDOMEvent<KeyboardEvent, \"input\", this>(<any>type, <any>type, this._dispatchKeyboardEvent, this));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tinfo.disposer = new MultiDisposer(disposers);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n}\r\n","/**\r\n * Interaction manages all aspects of user interaction - mouse move,\r\n * click, hover, drag events, touch gestures.\r\n *\r\n * [[InteractionObject]] elements that want to use certain events, must attach event\r\n * listeners to Interaction instance.\r\n *\r\n * Interaction itself will not modify [[InteractionObject]] elements, it will be up to\r\n * those elements to handle interaction information received via event triggers.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { List } from \"../utils/List\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { IInertiaOptions, ISwipeOptions, IHitOptions, IHoverOptions, IKeyboardOptions, IMouseOptions } from \"./InteractionOptions\";\r\nimport { MultiDisposer, IDisposer } from \"../utils/Disposer\";\r\nimport { InteractionObject, IInteractionObjectEvents } from \"./InteractionObject\";\r\nimport { InteractionKeyboardObject } from \"./InteractionKeyboardObject\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { Inertia, InertiaTypes } from \"./Inertia\";\r\nimport { IPointer, IBreadcrumb } from \"./Pointer\";\r\nimport { addEventListener } from \"../utils/DOM\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { IStyleProperty } from \"../defs/IStyleProperty\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { system } from \"./../System\";\r\nimport { options } from \"./../Options\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $time from \"../utils/Time\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an Event object that comes from [[Interaction]]\r\n */\r\nexport interface IInteractionEvents extends IBaseObjectEvents {\r\n\r\n\ttrack: {\r\n\t\tpointer: IPointer;\r\n\t\ttouch: boolean;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\tdown: {\r\n\t\tpointer: IPointer;\r\n\t\ttouch: boolean;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\tup: {\r\n\t\tpointer: IPointer;\r\n\t\ttouch: boolean;\r\n\t\tevent: MouseEvent | TouchEvent;\r\n\t};\r\n\r\n\tfocus: {\r\n\t\tevent: FocusEvent;\r\n\t}\r\n}\r\n\r\n/**\r\n * Interface representing a delayed event\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IDelayedEvent {\r\n\ttype: keyof IInteractionObjectEvents;\r\n\tio: InteractionObject;\r\n\tpointer: IPointer;\r\n\tevent: MouseEvent | TouchEvent;\r\n\tkeepUntil?: number;\r\n\ttimeout?: IDisposer;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\n/**\r\n* Interaction manages all aspects of user interaction - mouse move,\r\n* click, hover, drag events, touch gestures.\r\n*\r\n* [[InteractionObject]] elements that want to use certain events, must attach event\r\n* listeners to Interaction instance.\r\n*\r\n* Interaction itself will not modify [[InteractionObject]] elements, it will be up to\r\n* those elements to handle interaction information received via event triggers.\r\n*\r\n* @see {@link IInteractionEvents} for a list of available events\r\n*/\r\nexport class Interaction extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t *\r\n\t * @deprecated Use inetraction.body.events instead\r\n\t */\r\n\tpublic _events!: IInteractionEvents;\r\n\r\n\t/**\r\n\t * A reference to an [[Interaction]] object for document's body.\r\n\t *\r\n\t * Users can use it to add global, non-chart related events, that will be\r\n\t * applicable to the whole document.\r\n\t */\r\n\tpublic body: InteractionObject;\r\n\r\n\t/**\r\n\t * An indicator of global events were already initialized.\r\n\t */\r\n\tprotected _globalEventsAdded: boolean = false;\r\n\r\n\t/**\r\n\t * Holds which mouse event listeners to use.\r\n\t */\r\n\tprotected _pointerEvents = {\r\n\t\t\"pointerdown\": \"mousedown\",\r\n\t\t\"pointerup\": \"mouseup\",\r\n\t\t\"pointermove\": \"mousemove\",\r\n\t\t\"pointercancel\": \"mouseup\",\r\n\t\t\"pointerover\": \"mouseover\",\r\n\t\t\"pointerout\": \"mouseout\",\r\n\t\t\"wheel\": \"wheel\"\r\n\t};\r\n\r\n\t/**\r\n\t * Indicates if Interaction should use only \"pointer\" type events, like\r\n\t * \"pointermove\", available in all modern browsers, ignoring \"legacy\"\r\n\t * events, like \"touchmove\".\r\n\t */\r\n\tprotected _usePointerEventsOnly: boolean = false;\r\n\r\n\t/**\r\n\t * Use only touch events (for touch only devices such as tablets and phones)\r\n\t */\r\n\tprotected _useTouchEventsOnly: boolean = false;\r\n\r\n\t/**\r\n\t * Add special hover events. Normally, touch device tap will also simulate\r\n\t * hover event. On some devices (ahem iOS) we want to prevent that so that\r\n\t * over/out events are not duplicated.\r\n\t */\r\n\tprotected _addHoverEvents: boolean = true;\r\n\r\n\t/**\r\n\t * Indicates if passive mode options is supported by this browser.\r\n\t */\r\n\tprotected _passiveSupported: boolean = false;\r\n\r\n\t/**\r\n\t * Holds list of delayed events\r\n\t */\r\n\tprotected _delayedEvents: { out: IDelayedEvent[] } = { out: [] };\r\n\r\n\t/**\r\n\t * List of objects that current have a pointer hovered over them.\r\n\t */\r\n\tpublic overObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * List of objects that currently has a pressed pointer.\r\n\t */\r\n\tpublic downObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * List of objects that need mouse position to be reported to them.\r\n\t */\r\n\tpublic trackedObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * List of objects that are currently being dragged.\r\n\t */\r\n\tpublic transformedObjects: List<InteractionObject> = new List<InteractionObject>();\r\n\r\n\t/**\r\n\t * An object that currently has focus. Usually set automatically via\r\n\t * [[InteractionObject]] `isFocus` method.\r\n\t */\r\n\tpublic focusedObject: $type.Optional<InteractionObject>;\r\n\r\n\t/**\r\n\t * Holds all known pointers.\r\n\t */\r\n\tpublic pointers = new Dictionary<string, IPointer>();\r\n\r\n\t/**\r\n\t * Last pointer that generate some kind of action.\r\n\t *\r\n\t * @since 4.9.5\r\n\t * @ignore\r\n\t */\r\n\tpublic lastPointer: $type.Optional<IPointer>;\r\n\r\n\t/**\r\n\t * Inertia options that need to be applied to after element drag, if it's\r\n\t * `inert = true`.\r\n\t *\r\n\t * This is just a default, which can and probably will be overridden by\r\n\t * actual elements.\r\n\t */\r\n\tpublic inertiaOptions = new Dictionary<InertiaTypes, IInertiaOptions>();\r\n\r\n\t/**\r\n\t * Default options for click events. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t */\r\n\tpublic hitOptions: IHitOptions = {\r\n\t\t\"doubleHitTime\": 300,\r\n\t\t//\"delayFirstHit\": false,\r\n\t\t\"hitTolerance\": 10,\r\n\t\t\"noFocus\": true\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for hover events. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t */\r\n\tpublic hoverOptions: IHoverOptions = {\r\n\t\t\"touchOutBehavior\": \"leave\",\r\n\t\t\"touchOutDelay\": 1000\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for detecting a swipe gesture. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t */\r\n\tpublic swipeOptions: ISwipeOptions = {\r\n\t\t\"time\": 500,\r\n\t\t\"verticalThreshold\": 75,\r\n\t\t\"horizontalThreshold\": 30\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for keyboard operations. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t */\r\n\tpublic keyboardOptions: IKeyboardOptions = {\r\n\t\t\"speed\": 0.1,\r\n\t\t\"accelleration\": 1.2,\r\n\t\t\"accellerationDelay\": 2000\r\n\t};\r\n\r\n\t/**\r\n\t * Default options for keyboard operations. These can be overridden in\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @since 4.5.14\r\n\t */\r\n\tpublic mouseOptions: IMouseOptions = {\r\n\t\t\"sensitivity\": 1\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Constructor. Sets up universal document-wide move events to handle stuff\r\n\t * outside particular chart container.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Call super\r\n\t\tsuper();\r\n\r\n\t\t// Set class name\r\n\t\tthis.className = \"Interaction\";\r\n\r\n\t\t// Create InteractionObject for <body>\r\n\t\tthis.body = this.getInteraction(document.body);\r\n\r\n\t\tthis._disposers.push(this.body);\r\n\r\n\t\t// Detect browser capabilities and determine what event listeners to use\r\n\t\tif (window.hasOwnProperty(\"PointerEvent\")) {\r\n\t\t\t// IE10+/Edge without touch controls enabled\r\n\t\t\tthis._pointerEvents.pointerdown = \"pointerdown\";\r\n\t\t\tthis._pointerEvents.pointerup = \"pointerup\";\r\n\t\t\tthis._pointerEvents.pointermove = \"pointermove\";\r\n\t\t\tthis._pointerEvents.pointercancel = \"pointercancel\";\r\n\t\t\tthis._pointerEvents.pointerover = \"pointerover\";\r\n\t\t\tthis._pointerEvents.pointerout = \"pointerout\";\r\n\t\t\t//this._usePointerEventsOnly = true;\r\n\t\t} else if (window.hasOwnProperty(\"MSPointerEvent\")) {\r\n\t\t\t// IE9\r\n\t\t\tthis._pointerEvents.pointerdown = \"MSPointerDown\";\r\n\t\t\tthis._pointerEvents.pointerup = \"MSPointerUp\";\r\n\t\t\tthis._pointerEvents.pointermove = \"MSPointerMove\";\r\n\t\t\tthis._pointerEvents.pointercancel = \"MSPointerUp\";\r\n\t\t\tthis._pointerEvents.pointerover = \"MSPointerOver\";\r\n\t\t\tthis._pointerEvents.pointerout = \"MSPointerOut\";\r\n\t\t\t//this._usePointerEventsOnly = true;\r\n\t\t}\r\n\t\telse if ((typeof matchMedia !== \"undefined\") && matchMedia('(pointer:fine)').matches) {\r\n\t\t\t// This is only for Safari as it does not support PointerEvent\r\n\t\t\t// Do nothing and let it use regular `mouse*` events\r\n\t\t\t// Hi Apple ;)\r\n\r\n\t\t\t// Additionally disable hover events for iOS devices\r\n\t\t\tif ('ontouchstart' in window) {\r\n\t\t\t\tthis._addHoverEvents = false;\r\n\t\t\t\tthis._useTouchEventsOnly = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (window.navigator.userAgent.match(/MSIE /)) {\r\n\t\t\t// Oh looky, an MSIE that does not support PointerEvent. Hi granpa IE9!\r\n\t\t\tthis._usePointerEventsOnly = true;\r\n\t\t}\r\n\t\telse if (this.fullFF()) {\r\n\t\t\t// Old FF, let's use regular events.\r\n\t\t\t// (Newer FFs would be detected by the PointerEvent availability check)\r\n\t\t\tthis._usePointerEventsOnly = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Uses defaults for normal browsers\r\n\t\t\t// We also assume that this must be a touch device that does not have\r\n\t\t\t// any pointer events\r\n\t\t\tthis._useTouchEventsOnly = true;\r\n\t\t}\r\n\r\n\t\t// Detect if device has a mouse\r\n\t\t// This is turning out to be not reliable\r\n\t\t// @todo remove\r\n\t\t/*if (!window.navigator.msPointerEnabled && (typeof matchMedia !== \"undefined\") && !matchMedia('(pointer:fine)').matches && !this.fullFF()) {\r\n\t\t\tthis._useTouchEventsOnly = true;\r\n\t\t}*/\r\n\r\n\t\t// Detect proper mouse wheel events\r\n\t\tif (\"onwheel\" in document.createElement(\"div\")) {\r\n\t\t\t// Modern browsers\r\n\t\t\tthis._pointerEvents.wheel = \"wheel\";\r\n\t\t}\r\n\t\telse if ($type.hasValue((<any>document).onmousewheel)) {\r\n\t\t\t// Webkit and IE support at least \"mousewheel\"\r\n\t\t\tthis._pointerEvents.wheel = \"mousewheel\";\r\n\t\t}\r\n\r\n\t\t// Set up default inertia options\r\n\t\tthis.inertiaOptions.setKey(\"move\", {\r\n\t\t\t\"time\": 100,\r\n\t\t\t\"duration\": 500,\r\n\t\t\t\"factor\": 1,\r\n\t\t\t\"easing\": $ease.polyOut3\r\n\t\t});\r\n\t\tthis.inertiaOptions.setKey(\"resize\", {\r\n\t\t\t\"time\": 100,\r\n\t\t\t\"duration\": 500,\r\n\t\t\t\"factor\": 1,\r\n\t\t\t\"easing\": $ease.polyOut3\r\n\t\t});\r\n\r\n\t\t// Set the passive mode support\r\n\t\tthis._passiveSupported = Interaction.passiveSupported;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * This is a nasty detection for Firefox. The reason why we have is that\r\n\t * Firefox ESR version does not support matchMedia correctly.\r\n\t *\r\n\t * On iOS, Firefox uses different userAgent, so we don't have to detect iOS.\r\n\t *\r\n\t * @return Full Firefox?\r\n\t */\r\n\tprotected fullFF(): boolean {\r\n\t\treturn (window.navigator.userAgent.match(/Firefox/)) && !(window.navigator.userAgent.match(/Android/));\r\n\t}\r\n\r\n\tprotected debug(): void { }\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Processing\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Sets up global events.\r\n\t *\r\n\t * We need this so that we can track drag movement beyond chart's container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic addGlobalEvents(): void {\r\n\t\tif (!this._globalEventsAdded) {\r\n\r\n\t\t\tif (!this._useTouchEventsOnly) {\r\n\t\t\t\tthis._disposers.push(addEventListener<MouseEvent | PointerEvent>(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerDown(ev) }\r\n\t\t\t\t));\r\n\r\n\t\t\t\tthis._disposers.push(addEventListener<MouseEvent | PointerEvent>(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\tthis._pointerEvents.pointermove,\r\n\t\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerMove(ev) }\r\n\t\t\t\t));\r\n\r\n\t\t\t\tthis._disposers.push(addEventListener<MouseEvent | PointerEvent>(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\tthis._pointerEvents.pointerup,\r\n\t\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerUp(ev) }\r\n\t\t\t\t));\r\n\r\n\t\t\t\tthis._disposers.push(addEventListener<MouseEvent | PointerEvent>(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\tthis._pointerEvents.pointercancel,\r\n\t\t\t\t\t(ev: MouseEvent) => { this.handleGlobalPointerUp(ev, true) }\r\n\t\t\t\t));\r\n\r\n\t\t\t\tthis._disposers.push(addEventListener<MouseEvent | PointerEvent>(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\t\"mouseenter\",\r\n\t\t\t\t\t(ev: MouseEvent) => {\r\n\t\t\t\t\t\tif (!$type.hasValue(ev.relatedTarget) && (ev.buttons == 0 || ev.which == 0)) {\r\n\t\t\t\t\t\t\tthis.handleDocumentLeave(ev);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t));\r\n\t\t\t}\r\n\r\n\t\t\t// No need to duplicate events for hubrid systems that support both\r\n\t\t\t// pointer events and touch events. Touch events are need only for\r\n\t\t\t// some touch-only systems, like Mobile Safari.\r\n\t\t\tif (!this._usePointerEventsOnly) {\r\n\t\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t(ev: TouchEvent) => { this.handleGlobalTouchStart(ev) }\r\n\t\t\t\t));\r\n\r\n\t\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\t\"touchmove\",\r\n\t\t\t\t\t(ev: TouchEvent) => { this.handleGlobalTouchMove(ev) }\r\n\t\t\t\t));\r\n\r\n\t\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\t\tdocument,\r\n\t\t\t\t\t\"touchend\",\r\n\t\t\t\t\t(ev: TouchEvent) => { this.handleGlobalTouchEnd(ev) }\r\n\t\t\t\t));\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\t\"keydown\",\r\n\t\t\t\t(ev: KeyboardEvent) => { this.handleGlobalKeyDown(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._disposers.push(addEventListener(\r\n\t\t\t\tdocument,\r\n\t\t\t\t\"keyup\",\r\n\t\t\t\t(ev: KeyboardEvent) => { this.handleGlobalKeyUp(ev) }\r\n\t\t\t));\r\n\r\n\t\t\tthis._globalEventsAdded = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if [[InteractionObject]] is clickable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io [[InteractionObject]] instance\r\n\t */\r\n\tpublic processClickable(io: InteractionObject): void {\r\n\t\t// Add or remove touch events\r\n\t\tthis.processTouchable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if [[InteractionObject]] will display context menu when right-clicked.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io [[InteractionObject]] instance\r\n\t */\r\n\tpublic processContextMenu(io: InteractionObject): void {\r\n\t\tif (io.contextMenuDisabled) {\r\n\t\t\tif (!io.eventDisposers.hasKey(\"contextMenuDisabled\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"contextMenuDisabled\",\r\n\t\t\t\t\taddEventListener<MouseEvent | PointerEvent>(io.element, \"contextmenu\", (e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (io.eventDisposers.hasKey(\"contextMenuDisabled\")) {\r\n\t\t\t\tio.eventDisposers.getKey(\"contextMenuDisabled\").dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if [[InteractionObject]] is hoverable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io [[InteractionObject]] instance\r\n\t */\r\n\tpublic processHoverable(io: InteractionObject): void {\r\n\t\tif (io.hoverable || io.trackable) {\r\n\r\n\t\t\t// Add global events\r\n\t\t\tthis.addGlobalEvents();\r\n\r\n\t\t\t// Add hover styles\r\n\t\t\tthis.applyCursorOverStyle(io);\r\n\r\n\t\t\t// Add local events\r\n\t\t\tif (!io.eventDisposers.hasKey(\"hoverable\") && this._addHoverEvents) {\r\n\t\t\t\tio.eventDisposers.setKey(\"hoverable\", new MultiDisposer([\r\n\t\t\t\t\taddEventListener<MouseEvent | PointerEvent>(io.element, this._pointerEvents.pointerout, (e) => this.handlePointerOut(io, e)),\r\n\t\t\t\t\taddEventListener<MouseEvent | PointerEvent>(io.element, this._pointerEvents.pointerover, (e) => this.handlePointerOver(io, e))\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\r\n\t\t\tif (io.trackable) {\r\n\t\t\t\t//sprite.addEventListener(\"touchmove\", this.handleTouchMove, false, this);\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"hoverable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"hoverable\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add or remove touch events\r\n\t\tthis.processTouchable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up [[InteractionObject]] as movable. Movable can be any\r\n\t * transformation, e.g. drag, swipe, resize, track.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t */\r\n\tpublic processMovable(io: InteractionObject) {\r\n\r\n\t\t// Add unified events\r\n\t\tif (io.draggable || io.swipeable || io.trackable || io.resizable) {\r\n\r\n\t\t\t// Prep the element\r\n\t\t\tif (!this.isGlobalElement(io) && !io.isTouchProtected) {\r\n\t\t\t\tthis.prepElement(io);\r\n\t\t\t}\r\n\r\n\t\t\t// Add hover styles\r\n\t\t\tthis.applyCursorOverStyle(io);\r\n\r\n\t\t}\r\n\r\n\t\t// Add or remove touch events\r\n\t\tthis.processTouchable(io);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is trackable and sets relative events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t */\r\n\tpublic processTrackable(io: InteractionObject): void {\r\n\t\tthis.processHoverable(io);\r\n\t\tthis.processMovable(io);\r\n\t\tif (io.trackable) {\r\n\t\t\tthis.trackedObjects.moveValue(io);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.trackedObjects.removeValue(io);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is draggable.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t */\r\n\tpublic processDraggable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is swipeable and sets relative events.\r\n\t *\r\n\t * A swipe event is triggered when a horizontal drag of 75px or more (and\r\n\t * less than 30px vertically) occurs within 700 milliseconds. This can be\r\n\t * overridden in sprites [[swipeOptions]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t */\r\n\tpublic processSwipeable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is resizable and attaches required events\r\n\t * to it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t */\r\n\tpublic processResizable(io: InteractionObject): void {\r\n\t\tthis.processMovable(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is supposed to capture mouse wheel events\r\n\t * and prepares it to catch those events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t */\r\n\tpublic processWheelable(io: InteractionObject): void {\r\n\t\tif (io.wheelable) {\r\n\t\t\t//io.hoverable = true;\r\n\t\t\tif (!io.eventDisposers.hasKey(\"wheelable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"wheelable\", new MultiDisposer([\r\n\t\t\t\t\taddEventListener<WheelEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\tthis._pointerEvents.wheel,\r\n\t\t\t\t\t\t(e) => this.handleMouseWheel(io, e),\r\n\t\t\t\t\t\tthis._passiveSupported ? { passive: false } : false\r\n\t\t\t\t\t),\r\n\t\t\t\t\tio.events.on(\"out\", (e) => {\r\n\t\t\t\t\t\tif (io.wheelable) {\r\n\t\t\t\t\t\t\tthis.unlockWheel();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tio.events.on(\"over\", (e) => {\r\n\t\t\t\t//console.log(\"whelab over\")\r\n\t\t\t\t\t\tif (io.wheelable) {\r\n\t\t\t\t\t\t\tthis.lockWheel();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"wheelable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"wheelable\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is focusable. A focusable element is an\r\n\t * element that will be highlighted when users presses TAB key. If the\r\n\t * element is focusable, this function will attach relative focus/blur\r\n\t * events to it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t */\r\n\tpublic processFocusable(io: InteractionObject): void {\r\n\t\tif (io.focusable === true && (io.tabindex > -1) && !this._useTouchEventsOnly) {\r\n\t\t\tif (!io.eventDisposers.hasKey(\"focusable\")) {\r\n\t\t\t\tio.eventDisposers.setKey(\"focusable\", new MultiDisposer([\r\n\t\t\t\t\taddEventListener<FocusEvent>(io.element, \"focus\", (e) => this.handleFocus(io, e)),\r\n\t\t\t\t\taddEventListener<FocusEvent>(io.element, \"blur\", (e) => this.handleBlur(io, e)),\r\n\t\t\t\t\taddEventListener<MouseEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t\t\t(e) => this.handleFocusBlur(io, e)\r\n\t\t\t\t\t),\r\n\r\n\t\t\t\t\taddEventListener<TouchEvent>(\r\n\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t\t(e) => this.handleFocusBlur(io, e),\r\n\t\t\t\t\t\tthis._passiveSupported ? { passive: false } : false\r\n\t\t\t\t\t)\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"focusable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"focusable\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if [[InteractionObject]] is \"touchable\". It means any interaction\r\n\t * whatsoever: mouse click, touch screen tap, swipe, drag, resize, etc.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t */\r\n\tpublic processTouchable(io: InteractionObject): void {\r\n\r\n\t\t// Add unified events\r\n\t\tif (io.clickable || io.hoverable || io.trackable || io.draggable || io.swipeable || io.resizable) {\r\n\r\n\t\t\t// Add global events\r\n\t\t\tthis.addGlobalEvents();\r\n\r\n\t\t\t// Add local events\r\n\t\t\tif (!io.eventDisposers.hasKey(\"touchable\")) {\r\n\t\t\t\tif (!this._useTouchEventsOnly && !this._usePointerEventsOnly) {\r\n\t\t\t\t\tio.eventDisposers.setKey(\"touchable\", new MultiDisposer([\r\n\r\n\t\t\t\t\t\taddEventListener<MouseEvent>(\r\n\t\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t\t\t\t(e) => this.handlePointerDown(io, e)\r\n\t\t\t\t\t\t),\r\n\r\n\t\t\t\t\t\taddEventListener<TouchEvent>(\r\n\t\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t\t\t(e) => this.handleTouchDown(io, e),\r\n\t\t\t\t\t\t\tthis._passiveSupported ? { passive: false } : false\r\n\t\t\t\t\t\t)\r\n\r\n\t\t\t\t\t]));\r\n\t\t\t\t}\r\n\t\t\t\telse if (!this._useTouchEventsOnly) {\r\n\t\t\t\t\tio.eventDisposers.setKey(\"touchable\",\r\n\t\t\t\t\t\taddEventListener<MouseEvent>(\r\n\t\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\t\tthis._pointerEvents.pointerdown,\r\n\t\t\t\t\t\t\t(e) => this.handlePointerDown(io, e)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse if (!this._usePointerEventsOnly) {\r\n\t\t\t\t\tio.eventDisposers.setKey(\"touchable\",\r\n\t\t\t\t\t\taddEventListener<TouchEvent>(\r\n\t\t\t\t\t\t\tio.element,\r\n\t\t\t\t\t\t\t\"touchstart\",\r\n\t\t\t\t\t\t\t(e) => this.handleTouchDown(io, e),\r\n\t\t\t\t\t\t\tthis._passiveSupported ? { passive: false } : false\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tconst disposer = io.eventDisposers.getKey(\"touchable\");\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tio.eventDisposers.removeKey(\"touchable\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Non-pointer events\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Dispatches \"focus\" event when element gains focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t * @param ev  Original event\r\n\t */\r\n\tpublic handleFocus(io: InteractionObject, ev: FocusEvent): void {\r\n\t\tif (!io.focusable) {\r\n\t\t\tev.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tio.isFocused = true;\r\n\t\tif (io.events.isEnabled(\"focus\") && !system.isPaused) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"focus\"] = {\r\n\t\t\t\ttype: \"focus\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"focus\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used by regular click events to prevent focus if \"noFocus\" is set.\r\n\t *\r\n\t * This should not be called by \"focus\" handlers.\r\n\t *\r\n\t * @param io  Element\r\n\t * @param ev  Original event\r\n\t */\r\n\tprivate handleFocusBlur(io: InteractionObject, ev: MouseEvent | TouchEvent): void {\r\n\t\tif (io.focusable !== false && this.getHitOption(io, \"noFocus\")) {\r\n\t\t\tio.events.once(\"focus\", () => {\r\n\t\t\t\tio.events.disableType(\"blur\");\r\n\t\t\t\t$dom.blur();\r\n\t\t\t\tif (io.sprite) {\r\n\t\t\t\t\tio.sprite.handleBlur();\r\n\t\t\t\t}\r\n\t\t\t\tio.events.enableType(\"blur\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches \"blur\" event when element loses focus.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t * @param ev  Original event\r\n\t */\r\n\tpublic handleBlur(io: InteractionObject, ev: FocusEvent): void {\r\n\t\tif (!io.focusable) {\r\n\t\t\tev.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tio.isFocused = false;\r\n\t\tif (io.events.isEnabled(\"blur\") && !system.isPaused) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"blur\"] = {\r\n\t\t\t\ttype: \"blur\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"blur\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Global keyboard-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Checks if there is an item that has currently focus and that they key is\r\n\t * one of the directional keys. If both of the conditions are true, it\r\n\t * creates an object to simulate movement of dragable element with keyboard.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev An original keyboard event\r\n\t */\r\n\tpublic handleGlobalKeyDown(ev: KeyboardEvent): void {\r\n\r\n\t\tif (this.focusedObject) {\r\n\t\t\tif (keyboard.isKey(ev, \"esc\")) {\r\n\t\t\t\t// ESC removes focus\r\n\t\t\t\t$dom.blur();\r\n\t\t\t}\r\n\t\t\telse if (this.focusedObject.draggable && keyboard.isKey(ev, [\"up\", \"down\", \"left\", \"right\"])) {\r\n\r\n\t\t\t\t// Prevent scrolling of the document\r\n\t\t\t\tev.preventDefault();\r\n\r\n\t\t\t\t// Get focused object\r\n\t\t\t\tlet io = this.focusedObject;\r\n\r\n\t\t\t\t// Get particular key\r\n\t\t\t\tlet disposerKey = \"interactionKeyboardObject\";\r\n\r\n\t\t\t\t// If such disposer already exists we know the event is going on so we\r\n\t\t\t\t// just move on\r\n\t\t\t\tif (io.eventDisposers.hasKey(disposerKey)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create a keyboard mover\r\n\t\t\t\tlet ko = new InteractionKeyboardObject(io, ev);\r\n\t\t\t\tio.eventDisposers.setKey(disposerKey, ko);\r\n\t\t\t\tswitch (keyboard.getEventKey(ev)) {\r\n\t\t\t\t\tcase \"up\":\r\n\t\t\t\t\t\tko.directionY = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"down\":\r\n\t\t\t\t\t\tko.directionY = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\tko.directionX = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tko.directionX = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches related events when the keyboard key is realeasd.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev An original keyboard event\r\n\t */\r\n\tpublic handleGlobalKeyUp(ev: KeyboardEvent): void {\r\n\t\tlet disposerKey = \"interactionKeyboardObject\";\r\n\t\tif (this.focusedObject) {\r\n\t\t\tconst disposer = this.focusedObject.eventDisposers.getKey(disposerKey);\r\n\r\n\t\t\tif (disposer != null) {\r\n\t\t\t\t// Prevent scrolling of the document\r\n\t\t\t\tev.preventDefault();\r\n\r\n\t\t\t\t// Dispose stuff\r\n\t\t\t\tdisposer.dispose();\r\n\t\t\t\tthis.focusedObject.eventDisposers.removeKey(disposerKey);\r\n\t\t\t}\r\n\r\n\t\t\t// Does focused object have \"hit\" event?\r\n\t\t\tconst sprite = this.focusedObject.sprite;\r\n\t\t\tif (keyboard.isKey(ev, \"enter\") && sprite) {\r\n\t\t\t\tif (sprite.events.isEnabled(\"hit\") || sprite.events.isEnabled(\"toggled\")) {\r\n\t\t\t\t\tthis.focusedObject.dispatchImmediately(\"hit\");\r\n\t\t\t\t}\r\n\t\t\t\telse if (sprite.showTooltipOn == \"hit\") {\r\n\t\t\t\t\tthis.focusedObject.dispatchImmediately(\"up\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Global pointer-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Handler for a global \"pointermove\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event object\r\n\t */\r\n\tpublic handleGlobalPointerMove(ev: MouseEvent): void {\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Update current point position\r\n\t\tpointer.point = this.getPointerPoint(ev);\r\n\r\n\t\t// Prepare and fire global event\r\n\t\tif (this.events.isEnabled(\"track\") && !system.isPaused) {\r\n\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"track\"] = {\r\n\t\t\t\ttype: \"track\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer,\r\n\t\t\t\ttouch: pointer.touch\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"track\", imev);\r\n\t\t}\r\n\r\n\t\t// Track\r\n\t\tthis.addBreadCrumb(pointer, pointer.point);\r\n\r\n\t\t// Process further\r\n\t\tthis.handleGlobalMove(pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"pointerdown\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event object\r\n\t */\r\n\tpublic handleGlobalPointerDown(ev: MouseEvent): void {\r\n\r\n\t\t// Remove delayed hovers\r\n\t\tthis.processDelayed();\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Prepare and fire global event\r\n\t\tif (this.events.isEnabled(\"down\") && !system.isPaused) {\r\n\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"down\"] = {\r\n\t\t\t\ttype: \"down\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer,\r\n\t\t\t\ttouch: pointer.touch\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"down\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents touch action from firing.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event\r\n\t */\r\n\tpublic preventTouchAction(ev: TouchEvent): void {\r\n\t\tif (!ev.defaultPrevented) {\r\n\t\t\tev.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"pointerup\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event object\r\n\t */\r\n\tpublic handleGlobalPointerUp(ev: MouseEvent, cancelled: boolean = false): void {\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer: IPointer = this.getPointer(ev);\r\n\r\n\t\t// Prepare and fire global event\r\n\t\tif (this.events.isEnabled(\"up\") && !system.isPaused) {\r\n\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"up\"] = {\r\n\t\t\t\ttype: \"up\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer,\r\n\t\t\t\ttouch: pointer.touch\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"up\", imev);\r\n\t\t}\r\n\r\n\t\t// Process further\r\n\t\tthis.handleGlobalUp(pointer, ev, cancelled);\r\n\r\n\t}\r\n\r\n\t/**\r\n * ==========================================================================\r\n * Global touch-related even handlers\r\n * ==========================================================================\r\n */\r\n\r\n\t/**\r\n\t * Handler for a global \"touchmove\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event object\r\n\t */\r\n\tpublic handleGlobalTouchMove(ev: TouchEvent): void {\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Update current point position\r\n\t\t\tpointer.point = this.getPointerPoint(ev.changedTouches[i]);\r\n\r\n\t\t\t// Prepare and fire global event\r\n\t\t\tif (this.events.isEnabled(\"track\") && !system.isPaused) {\r\n\t\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"track\"] = {\r\n\t\t\t\t\ttype: \"track\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"track\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Track\r\n\t\t\tthis.addBreadCrumb(pointer, pointer.point);\r\n\r\n\t\t\t// Process further\r\n\t\t\tthis.handleGlobalMove(pointer, ev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"touchstart\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event object\r\n\t */\r\n\tpublic handleGlobalTouchStart(ev: TouchEvent): void {\r\n\r\n\t\t// Remove delayed hovers\r\n\t\tthis.processDelayed();\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Prepare and fire global event\r\n\t\t\tif (!this._usePointerEventsOnly && this.events.isEnabled(\"down\") && !system.isPaused) {\r\n\t\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"down\"] = {\r\n\t\t\t\t\ttype: \"down\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"down\", imev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for a global \"touchend\" event.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev Event object\r\n\t */\r\n\tpublic handleGlobalTouchEnd(ev: TouchEvent): void {\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer: IPointer = this.getPointer(ev.changedTouches[i]);\r\n\r\n\t\t\t// Prepare and fire global event\r\n\t\t\tif (this.events.isEnabled(\"up\") && !system.isPaused) {\r\n\t\t\t\tlet imev: AMEvent<this, IInteractionEvents>[\"up\"] = {\r\n\t\t\t\t\ttype: \"up\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"up\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Handle element-related events\r\n\t\t\tthis.handleGlobalUp(pointer, ev);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Element-specific pointer-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Handles event when pointer is over [[InteractionObject]] and button is\r\n\t * pressed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t * @param ev  Original event\r\n\t */\r\n\tpublic handlePointerDown(io: InteractionObject, ev: MouseEvent | PointerEvent): void {\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t//ev.preventDefault();\r\n\t\t//ev.stopPropagation();\r\n\t\t//if (ev.defaultPrevented) {\r\n\t\t//}\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer = this.getPointer(ev);\r\n\r\n\t\t// Ignore if it's anything but mouse's primary button\r\n\t\tif (!pointer.touch && ev.which != 1 && ev.which != 3) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Set mouse button\r\n\t\tpointer.button = ev.which;\r\n\r\n\t\t// Reset pointer\r\n\t\tthis.resetPointer(pointer, ev);\r\n\r\n\t\t// Process down\r\n\t\tthis.handleDown(io, pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when [[InteractionObject]] is hovered by a mouse pointer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t * @param ev  Original event\r\n\t */\r\n\tpublic handlePointerOver(io: InteractionObject, ev: MouseEvent | PointerEvent): void {\r\n\t\t// Get pointer\r\n\t\tlet pointer = this.getPointer(ev);\r\n\r\n\t\t// Process down\r\n\t\tthis.handleOver(io, pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when [[InteractionObject]] loses hover from a mouse pointer.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t * @param ev  Original event\r\n\t */\r\n\tpublic handlePointerOut(io: InteractionObject, ev: MouseEvent | PointerEvent): void {\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer = this.getPointer(ev);\r\n\r\n\t\t// Process down\r\n\t\tthis.handleOut(io, pointer, ev);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when mouse wheel is crolled over the [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t * @param ev  Original event\r\n\t * @todo Investigate more-cross browser stuff https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n\t */\r\n\tpublic handleMouseWheel(io: InteractionObject, ev: WheelEvent): void {\r\n\r\n\t\t// Get pointer\r\n\t\tlet pointer = this.getPointer(ev);\r\n\r\n\t\t// Update current point position\r\n\t\tpointer.point = this.getPointerPoint(ev);\r\n\r\n\t\t// Init delta values\r\n\t\tlet deltaX: number = 0, deltaY: number = 0;\r\n\r\n\t\t// Set up modifier\r\n\t\t// This is needed because FireFox reports wheel deltas in \"lines\" instead\r\n\t\t// of pixels so we have to approximate pixel value\r\n\t\tlet mod = 1;\r\n\t\tif (ev.deltaMode == 1) {\r\n\t\t\tmod = 50;\r\n\t\t}\r\n\r\n\t\t// Adjust configurable sensitivity\r\n\t\tmod *= this.getMouseOption(io, \"sensitivity\");\r\n\r\n\t\t// Calculate deltas\r\n\t\tif (ev instanceof WheelEvent) {\r\n\t\t\tdeltaX = Math.round((-1 * (<any>ev).wheelDeltaX) || (ev.deltaX * mod));\r\n\t\t\tdeltaY = Math.round((-1 * (<any>ev).wheelDeltaY) || (ev.deltaY * mod));\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid event type\");\r\n\t\t}\r\n\r\n\t\t// Handle the event\r\n\t\tthis.handleWheel(io, pointer, deltaX, deltaY, ev);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Element-specific touch-related even handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t  * Handles an event when an [[InteractionObject]] is touched on a touch\r\n\t  * device.\r\n\t  *\r\n\t  * @ignore Exclude from docs\r\n\t  * @param io  Element\r\n\t  * @param ev  Original event\r\n\t  */\r\n\tpublic handleTouchDown(io: InteractionObject, ev: TouchEvent): void {\r\n\r\n\t\t// Stop further propagation so we don't get multiple triggers on hybrid\r\n\t\t// devices (both mouse and touch capabilities)\r\n\t\t//this.maybePreventDefault(io, ev);\r\n\t\t//return;\r\n\r\n\t\t// Process each changed touch point\r\n\t\tfor (let i = 0; i < ev.changedTouches.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet pointer = this.getPointer(ev.changedTouches[i]);\r\n\t\t\tthis.maybePreventDefault(io, ev, pointer);\r\n\r\n\t\t\t// Reset pointer\r\n\t\t\tthis.resetPointer(pointer, ev.changedTouches[i]);\r\n\r\n\t\t\t// Process down\r\n\t\t\tthis.handleDown(io, pointer, ev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Universal handlers\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Handles click/tap. Checks for doublehit.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Interaction object\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic handleHit(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Check if this is a double-hit\r\n\t\tlet now = $time.getTime();\r\n\t\tif (io.lastHit && (io.lastHit >= (now - this.getHitOption(io, \"doubleHitTime\")))) {\r\n\r\n\t\t\t// Yup - it's a double-hit\r\n\r\n\t\t\t// Cancel the hit\r\n\t\t\t//clearTimeout(io.lastHitPointer.hitTimeout);\r\n\r\n\t\t\t// If it happened too fast it probably means that hybrid device just\r\n\t\t\t// generated two events for the same tap\r\n\t\t\tif ((now - io.lastHit) < 100) {\r\n\t\t\t\t// Ignore\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Clear last hit\r\n\t\t\tio.lastHit = undefined;\r\n\t\t\tio.lastHitPointer = undefined;\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (io.events.isEnabled(\"doublehit\") && !system.isPaused) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"doublehit\"] = {\r\n\t\t\t\t\ttype: \"doublehit\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"doublehit\", imev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Log last hit\r\n\t\t\tio.lastHit = now;\r\n\t\t\tio.lastHitPointer = pointer;\r\n\r\n\t\t\tif (pointer.button === 3) {\r\n\t\t\t\t// Execute HIT now\r\n\t\t\t\tif (io.events.isEnabled(\"rightclick\") && !system.isPaused) {\r\n\t\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"rightclick\"] = {\r\n\t\t\t\t\t\ttype: \"rightclick\",\r\n\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\tevent: ev\r\n\t\t\t\t\t}\r\n\t\t\t\t\tio.events.dispatchImmediately(\"rightclick\", imev);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (io.events.isEnabled(\"hit\") && !system.isPaused) {\r\n\t\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"hit\"] = {\r\n\t\t\t\t\t\ttype: \"hit\",\r\n\t\t\t\t\t\ttarget: io,\r\n\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t\t};\r\n\t\t\t\t\tio.events.dispatchImmediately(\"hit\", imev);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer hovering over [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Interaction object\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t * @param soft     Invoked by helper function\r\n\t */\r\n\tpublic handleOver(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, soft: boolean = false): void {\r\n\r\n\t\tif (!io.hoverable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet hoversPaused = false;\r\n\t\tif (this.shouldCancelHovers(pointer) && this.areTransformed() && this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n\t\t\thoversPaused = true;\r\n\t\t\tthis.cancelAllHovers(ev);\r\n\t\t}\r\n\r\n\t\t// Remove any delayed outs\r\n\t\tthis.processDelayed();\r\n\r\n\t\t// Add pointer\r\n\t\tio.overPointers.moveValue(pointer);\r\n\r\n\t\t// Check if object is not yet hovered\r\n\t\tif (!io.isRealHover) {\r\n\r\n\t\t\t// Set element as hovered\r\n\t\t\tif (!hoversPaused) {\r\n\t\t\t\tio.isHover = true;\r\n\t\t\t\tio.isRealHover = true;\r\n\t\t\t\tthis.overObjects.moveValue(io);\r\n\t\t\t}\r\n\r\n\t\t\t// Generate body track event. This is needed so that if element loads\r\n\t\t\t// under unmoved mouse cursor, we still need all the actions that are\r\n\t\t\t// required to happen to kick in.\r\n\t\t\tthis.handleTrack(this.body, pointer, ev, true);\r\n\r\n\t\t\t// Event\r\n\t\t\tif (io.events.isEnabled(\"over\") && !system.isPaused && !hoversPaused) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"over\"] = {\r\n\t\t\t\t\ttype: \"over\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"over\", imev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles when [[InteractionObject]] is no longer hovered.\r\n\t *\r\n\t * If `soft = true`, this means that method is being invoked by some other\r\n\t * code, not hard \"out\" function, like `handleUp` which implies we need to\r\n\t * run additional checks before unhovering the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Interaction object\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t * @param soft     Invoked by helper function\r\n\t * @param force    Force imediate out\r\n\t */\r\n\tpublic handleOut(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, soft: boolean = false, force: boolean = false): void {\r\n\r\n\t\tif (!io.hoverable) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remove pointer\r\n\t\tio.overPointers.removeValue(pointer);\r\n\r\n\t\t// Check if element is still hovered\r\n\t\tif (io.isHover && (!io.hasDelayedOut || force)) {\r\n\r\n\r\n\t\t\t// Should we run additional checks?\r\n\t\t\tif (soft && io.overPointers.length) {\r\n\t\t\t\t// There are still pointers hovering - don't do anything else and\r\n\t\t\t\t// wait until either no over pointers are there or we get a hard out\r\n\t\t\t\t// event.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Should we delay \"out\" if this is happening on a touch device?\r\n\t\t\tif (pointer && pointer.touch && !force && !this.old(pointer)) {\r\n\r\n\t\t\t\t// This is a touch pointer, and it hasn't moved, let's pretend\r\n\t\t\t\t// the object is still hovered, and act as per \"behavior\" setting\r\n\t\t\t\tlet behavior = this.getHoverOption(io, \"touchOutBehavior\");\r\n\t\t\t\tif (behavior == \"leave\") {\r\n\t\t\t\t\t// Set to \"leave\", so we do not execute any \"out\" event.\r\n\t\t\t\t\t// It will be handled by any other interaction that happens\r\n\t\t\t\t\t// afterwards.\r\n\t\t\t\t\tthis._delayedEvents.out.push({\r\n\t\t\t\t\t\ttype: \"out\",\r\n\t\t\t\t\t\tio: io,\r\n\t\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\tkeepUntil: $time.getTime() + 500\r\n\t\t\t\t\t});\r\n\t\t\t\t\tio.hasDelayedOut = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse if (behavior == \"delay\" && this.getHoverOption(io, \"touchOutDelay\")) {\r\n\t\t\t\t\tthis._delayedEvents.out.push({\r\n\t\t\t\t\t\ttype: \"out\",\r\n\t\t\t\t\t\tio: io,\r\n\t\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\t\tevent: ev,\r\n\t\t\t\t\t\tkeepUntil: $time.getTime() + 500,\r\n\t\t\t\t\t\ttimeout: this.setTimeout(() => {\r\n\t\t\t\t\t\t\tthis.handleOut(io, pointer, ev, true);\r\n\t\t\t\t\t\t}, this.getHoverOption(io, \"touchOutDelay\"))\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Nothing for \"remove\" - that's how it works \"out-of-the-box\"\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Set element as not hovered\r\n\t\t\tio.isHover = false;\r\n\t\t\tthis.overObjects.removeValue(io);\r\n\r\n\t\t\t// Invoke event\r\n\t\t\tif (!io.isDisposed() && io.events.isEnabled(\"out\") && !system.isPaused) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"out\"] = {\r\n\t\t\t\t\ttype: \"out\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"out\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Reset object from lefover delayed outs, pointers\r\n\t\t\tio.overPointers.clear();\r\n\t\t\tio.hasDelayedOut = false;\r\n\t\t\t// @todo (clean delayed)\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Processes dalyed events, such as \"out\" event that was initiated for\r\n\t * elements by touch.\r\n\t */\r\n\tprivate processDelayed(): void {\r\n\t\tlet delayedEvent;\r\n\r\n\t\twhile (true) {\r\n\t\t\tdelayedEvent = this._delayedEvents.out.pop();\r\n\r\n\t\t\tif (!delayedEvent) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (delayedEvent.timeout) {\r\n\t\t\t\tdelayedEvent.timeout.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis.handleOut(delayedEvent.io, delayedEvent.pointer, delayedEvent.event, false, true);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Performs tasks on pointer down.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic handleDown(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent | undefined): void {\r\n\r\n\t\t// Need to prevent default event from happening on transformable objects\r\n\t\tthis.maybePreventDefault(io, ev, pointer);\r\n\r\n\t\t// Stop inertia animations if they're currently being played out\r\n\t\tif (io.inert) {\r\n\t\t\tthis.stopInertia(io);\r\n\t\t}\r\n\r\n\t\t// Trigger hover because some touch devices won't trigger over events\r\n\t\t// on their own\r\n\t\tthis.handleOver(io, pointer, ev, true);\r\n\r\n\t\t// Add pointer to list\r\n\t\tio.downPointers.moveValue(pointer);\r\n\r\n\t\t// Apply styles if necessary\r\n\t\tthis.applyCursorDownStyle(io, pointer);\r\n\r\n\t\t// Check if object is already down\r\n\t\tif (!io.isDown) {\r\n\r\n\t\t\t// Lose focus if needed\r\n\t\t\tif (io.focusable !== false && this.getHitOption(io, \"noFocus\") && this.focusedObject) {\r\n\t\t\t\t$dom.blur();\r\n\t\t\t}\r\n\r\n\t\t\t// Set object as hovered\r\n\t\t\tio.isDown = true;\r\n\t\t\tthis.downObjects.moveValue(io);\r\n\r\n\t\t\t// Prep object for dragging and/or resizing\r\n\t\t\tif (io.draggable) {\r\n\t\t\t\tthis.processDragStart(io, pointer, ev);\r\n\t\t\t}\r\n\t\t\tif (io.resizable) {\r\n\t\t\t\tthis.processResizeStart(io, pointer, ev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Dispatch \"down\" event\r\n\t\tif (io.events.isEnabled(\"down\") && !system.isPaused) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"down\"] = {\r\n\t\t\t\ttype: \"down\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpointer: pointer,\r\n\t\t\t\ttouch: pointer.touch\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"down\", imev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Performs tasks on pointer up.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic handleGlobalUp(pointer: IPointer, ev: MouseEvent | TouchEvent | undefined, cancelled: boolean = false): void {\r\n\t\tconst sorted = this.downObjects.values.slice();\r\n\r\n\t\tsorted.sort((x, y) => {\r\n\t\t\tif (x && y) {\r\n\t\t\t\tconst pos = x.element.compareDocumentPosition(y.element);\r\n\r\n\t\t\t\tif (pos & Node.DOCUMENT_POSITION_CONTAINED_BY) {\r\n\t\t\t\t\treturn 1;\r\n\r\n\t\t\t\t} else if (pos & Node.DOCUMENT_POSITION_CONTAINS) {\r\n\t\t\t\t\treturn -1;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Process all down objects\r\n\t\t$array.each(sorted, (io) => {\r\n\t\t\t// Check if this particular pointer is pressing down\r\n\t\t\t// on object\r\n\t\t\tif (io && io.downPointers.contains(pointer)) {\r\n\t\t\t\tthis.handleUp(io, pointer, ev, cancelled);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates all pointers being up once mouse leaves document area.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic handleDocumentLeave(ev: MouseEvent): void {\r\n\r\n\t\t// Process all down objects\r\n\t\t$iter.each(this.downObjects.backwards().iterator(), (io) => {\r\n\t\t\tio.downPointers.each((pointer) => {\r\n\t\t\t\tthis.handleUp(io, pointer, ev);\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles when [[InteractionObject]] is no longer hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Interaction object\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic handleUp(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, cancelled: boolean = false): void {\r\n\r\n\t\t// Restore cursor style\r\n\t\tthis.restoreCursorDownStyle(io, pointer);\r\n\r\n\t\t// Remove pointer from the list\r\n\t\tio.downPointers.removeValue(pointer);\r\n\r\n\t\t// Trigger out because some touch devices won't trigger out events\r\n\t\t// on their own\r\n\t\tif ((pointer && pointer.touch) || this._useTouchEventsOnly) {\r\n\t\t\tthis.handleOut(io, pointer, ev, true);\r\n\t\t}\r\n\r\n\t\t// Check if object still down\r\n\t\tif (io.isDown) {\r\n\r\n\t\t\t// Check if there are no other pointers hovering this element\r\n\t\t\tif (io.downPointers.length == 0) {\r\n\t\t\t\t// Set element as no longer down\r\n\t\t\t\tio.isDown = false;\r\n\t\t\t\tthis.downObjects.removeValue(io);\r\n\t\t\t}\r\n\r\n\t\t\t// Dispatch \"up\" event\r\n\t\t\tif (io.events.isEnabled(\"up\") && !system.isPaused && pointer) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"up\"] = {\r\n\t\t\t\t\ttype: \"up\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpointer: pointer,\r\n\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"up\", imev);\r\n\t\t\t}\r\n\r\n\t\t\t// Check if this was not a cancelled event.\r\n\t\t\t// If event was canelled (which might happen if gesture resulted in\r\n\t\t\t// navigation or page scroll) there's no point in triggering hit and\r\n\t\t\t// other actions.\r\n\t\t\tif (!cancelled) {\r\n\r\n\t\t\t\t// Handle swiping-related stuff\r\n\t\t\t\tif (io.swipeable && this.swiped(io, pointer)) {\r\n\t\t\t\t\t// Swiped - nothing else should happen\r\n\t\t\t\t\tthis.handleSwipe(io, pointer, ev);\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Check if it maybe a click\r\n\t\t\t\t\tif (io.clickable && !this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n\t\t\t\t\t\tthis.handleHit(io, pointer, ev);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Handle inertia\r\n\t\t\t\t\tif (io.inert && this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n\t\t\t\t\t\tthis.handleInertia(io, pointer);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (io.draggable) {\r\n\t\t\t\t\t\tthis.processDragStop(io, pointer, ev);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (io.resizable) {\r\n\t\t\t\t\t\tthis.processResizeStop(io, pointer, ev);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if event needs to be prevented on draggable and such items, so that\r\n\t * touch gestures like navigation and scroll do not kick in.\r\n\t *\r\n\t * @param io  Object\r\n\t * @param ev  Event\r\n\t */\r\n\tprivate maybePreventDefault(io: InteractionObject, ev: MouseEvent | TouchEvent | undefined, pointer?: IPointer): void {\r\n\t\tif (\r\n\t\t\t$type.hasValue(ev)\r\n\t\t\t&& (io.draggable || io.swipeable || io.trackable || io.resizable)\r\n\t\t\t&& !this.isGlobalElement(io)\r\n\t\t\t&& ev.cancelable !== false\r\n\t\t\t&& (!io.isTouchProtected || !pointer || !pointer.touch)\r\n\t\t) {\r\n\t\t\tev.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels all hovers on all currently hovered objects.\r\n\t *\r\n\t * @param  pointer  Pointer\r\n\t * @param  ev       Event\r\n\t */\r\n\tprivate cancelAllHovers(ev?: MouseEvent | TouchEvent): void {\r\n\t\t//this.overObjects.each((io) => {\r\n\t\t$iter.each(this.overObjects.backwards().iterator(), (io) => {\r\n\t\t\tif (io) {\r\n\t\t\t\tconst pointer = io.overPointers.getIndex(0);\r\n\t\t\t\tthis.handleOut(io, pointer, ev, true, true);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if hovers should be cancelled on transform as per global options.\r\n\t * @param   pointer  Pointer\r\n\t * @return           Cancel?\r\n\t */\r\n\tprivate shouldCancelHovers(pointer: IPointer): boolean {\r\n\t\treturn options.disableHoverOnTransform == \"always\" || (options.disableHoverOnTransform == \"touch\" && pointer.touch);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles pointer move.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic handleGlobalMove(pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Process hovered elements\r\n\t\t// We check if the element became unhovered without reporting the mouseout\r\n\t\t// event. (it happens in some cases)\r\n\t\tif (!pointer.touch) {\r\n\t\t\tconst target = <HTMLElement>$dom.eventTarget(<Event>pointer.lastEvent);\r\n\r\n\t\t\t$iter.each(this.overObjects.backwards().iterator(), (io) => {\r\n\t\t\t\t// Is this pointer relevant to element?\r\n\t\t\t\tif (io && io.overPointers.contains(pointer) && io.hoverable) {\r\n\t\t\t\t\t// Check if the element is still hovered\r\n\t\t\t\t\tlet reset = false;\r\n\t\t\t\t\tif (io.element && pointer.lastEvent) {\r\n\t\t\t\t\t\tif (!$dom.contains(io.element, target)) {\r\n\t\t\t\t\t\t\treset = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treset = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (reset) {\r\n\t\t\t\t\t\tthis.handleOut(io, pointer, ev, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\t// Process down elements\r\n\t\t$iter.each(this.transformedObjects.backwards().iterator(), (io) => {\r\n\t\t\t// Is this pointer relevant to element?\r\n\t\t\tif (io.downPointers.contains(pointer) &&\r\n\t\t\t\t// Swipe still happening?\r\n\t\t\t\t!(io.swipeable && this.swiping(io, pointer)) &&\r\n\t\t\t\t(io.draggable || io.resizable)) {\r\n\t\t\t\tthis.handleTransform(io, ev);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Process tracked elements\r\n\t\t$iter.each(this.trackedObjects.backwards().iterator(), (io) => {\r\n\t\t\t// Is this pointer relevant to element?\r\n\t\t\tif (!io.overPointers.contains(pointer)) {\r\n\t\t\t\tthis.handleTrack(io, pointer, ev);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Handles reporting of pointer movement.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io        Element\r\n\t * @param pointer    Pointer\r\n\t * @param ev         Original event\r\n\t * @param skipCheck  Sould we skip check if cursor actually moved\r\n\t */\r\n\tpublic handleTrack(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent, skipCheck = false): void {\r\n\r\n\t\t// Do nothing if the cursor did not actually move\r\n\t\tif (!skipCheck && !this.moved(pointer, 0)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Initiate TRACK event\r\n\t\tif (io.events.isEnabled(\"track\") && !system.isPaused) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"track\"] = {\r\n\t\t\t\ttype: \"track\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpoint: pointer.point,\r\n\t\t\t\tpointer: pointer,\r\n\t\t\t\ttouch: pointer.touch\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"track\", imev);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles swipe action.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic handleSwipe(io: InteractionObject, pointer: IPointer, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// We pass in InteractionEvent with shift in mouse coordinates\r\n\t\t// between when the drag started and ended\r\n\t\tif (io.events.isEnabled(\"swipe\") && !system.isPaused) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"swipe\"] = {\r\n\t\t\t\ttype: \"swipe\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\ttouch: pointer.touch\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"swipe\", imev);\r\n\t\t}\r\n\r\n\t\tif (pointer.startPoint.x < pointer.point.x) {\r\n\t\t\tif (io.events.isEnabled(\"swiperight\") && !system.isPaused) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"swiperight\"] = {\r\n\t\t\t\t\ttype: \"swiperight\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"swiperight\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (io.events.isEnabled(\"swipeleft\") && !system.isPaused) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"swipeleft\"] = {\r\n\t\t\t\t\ttype: \"swipeleft\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\ttouch: pointer.touch\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"swipeleft\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event triggering for wheel rotation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t * @param deltaX   Horizontal shift\r\n\t * @param deltaY   Vertical shift\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic handleWheel(io: InteractionObject, pointer: IPointer, deltaX: number, deltaY: number, ev: WheelEvent): void {\r\n\t\tconst shift: IPoint = {\r\n\t\t\tx: deltaX,\r\n\t\t\ty: deltaY\r\n\t\t};\r\n\r\n\t\t// Trigger generic WHEEL event\r\n\t\tif (io.events.isEnabled(\"wheel\") && !system.isPaused) {\r\n\t\t\tio.events.dispatchImmediately(\"wheel\", {\r\n\t\t\t\ttype: \"wheel\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tpoint: pointer.point,\r\n\t\t\t\tshift: shift\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Trigger direction-specific events\r\n\r\n\t\t// Horizontal\r\n\t\tif (deltaX < 0) {\r\n\t\t\tif (io.events.isEnabled(\"wheelleft\") && !system.isPaused) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheelleft\", {\r\n\t\t\t\t\ttype: \"wheelleft\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} else if (deltaX > 0) {\r\n\t\t\tif (io.events.isEnabled(\"swiperight\") && !system.isPaused) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheelright\", {\r\n\t\t\t\t\ttype: \"wheelright\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Vertical\r\n\t\t} else if (deltaY < 0) {\r\n\t\t\tif (io.events.isEnabled(\"wheelup\") && !system.isPaused) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheelup\", {\r\n\t\t\t\t\ttype: \"wheelup\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} else if (deltaY > 0) {\r\n\t\t\tif (io.events.isEnabled(\"wheeldown\") && !system.isPaused) {\r\n\t\t\t\tio.events.dispatchImmediately(\"wheeldown\", {\r\n\t\t\t\t\ttype: \"wheeldown\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tpoint: pointer.point,\r\n\t\t\t\t\tshift: shift\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates inertia checking sub-routines for different movement types:\r\n\t * drag, resize.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param sprite\r\n\t * @param pointer\r\n\t */\r\n\tpublic handleInertia(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\tif (io.draggable && io.downPointers.length === 0) {\r\n\t\t\tthis.handleMoveInertia(io, pointer);\r\n\t\t}\r\n\r\n\t\tif (io.resizable && io.downPointers.length > 1) {\r\n\t\t\tthis.handleResizeInertia(io, pointer);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Continues moving the element to simulate the effect of inertia. Happens\r\n\t * when `inert` and `draggable` object is dragged and then released.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t */\r\n\tpublic handleMoveInertia(io: InteractionObject, pointer: IPointer): void {\r\n\t\tlet interaction = io;\r\n\t\tlet type: \"move\" = \"move\";\r\n\t\tlet point = {\r\n\t\t\t\"x\": pointer.point.x,\r\n\t\t\t\"y\": pointer.point.y\r\n\t\t};\r\n\t\tlet startPoint = {\r\n\t\t\t\"x\": pointer.startPoint.x,\r\n\t\t\t\"y\": pointer.startPoint.y\r\n\t\t};\r\n\r\n\t\t// Init inertia object\r\n\t\tlet inertia = new Inertia(interaction, type, point, startPoint);\r\n\r\n\t\t// Get inertia data\r\n\t\tlet ref = this.getTrailPoint(pointer, $time.getTime() - this.getInertiaOption(io, \"move\", \"time\"));\r\n\t\tif (typeof ref === \"undefined\") {\r\n\t\t\tthis.processDragStop(io, pointer, pointer.lastUpEvent);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init animation options\r\n\t\tlet factor = this.getInertiaOption(io, \"move\", \"factor\");\r\n\t\tlet animationOptions = [{\r\n\t\t\t\"to\": pointer.point.x + (pointer.point.x - ref.point.x) * factor,\r\n\t\t\t\"property\": \"x\"\r\n\t\t}, {\r\n\t\t\t\"to\": pointer.point.y + (pointer.point.y - ref.point.y) * factor,\r\n\t\t\t\"property\": \"y\"\r\n\t\t}];\r\n\r\n\t\t// Start animation\r\n\t\tlet animation: Animation = new Animation(\r\n\t\t\tinertia,\r\n\t\t\tanimationOptions,\r\n\t\t\tthis.getInertiaOption(io, \"move\", \"duration\"),\r\n\t\t\tthis.getInertiaOption(io, \"move\", \"easing\")\r\n\t\t).start();\r\n\t\tthis._disposers.push(animation.events.on(\"animationended\", (ev) => {\r\n\t\t\tinertia.done();\r\n\t\t}));\r\n\r\n\t\t// Add inertia object\r\n\t\tio.inertias.setKey(\"move\", inertia);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Continues resizing of a `resizable` element after it is resized and\r\n\t * released.\r\n\t *\r\n\t * **NOTE:** this is is just a placeholder function. No actual fucntionality\r\n\t * is implemented, yet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t */\r\n\tpublic handleResizeInertia(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Some day, folks. Some day...\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Recalculates element's position and size based on position of\r\n\t * all its related pointers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io  Element\r\n\t * @param ev  Original event\r\n\t */\r\n\tpublic handleTransform(io: InteractionObject, ev: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Get primary pointer and its respective points\r\n\t\tlet pointer1: $type.Optional<IPointer> = io.downPointers.getIndex(0);\r\n\t\tlet point1: IPoint = null;\r\n\t\tlet startPoint1: IPoint = null;\r\n\r\n\t\tif (pointer1) {\r\n\t\t\tpoint1 = pointer1.point;\r\n\t\t\tstartPoint1 = pointer1.startPoint;\r\n\t\t}\r\n\r\n\t\t// Init secondary pointer\r\n\t\tlet pointer2: $type.Optional<IPointer>;\r\n\t\tlet point2: IPoint;\r\n\t\tlet startPoint2: IPoint;\r\n\r\n\t\t// Use center of the sprite to simulate \"second\" point of touch\r\n\t\tpoint2 = {\r\n\t\t\t\"x\": io.originalPosition.x,\r\n\t\t\t\"y\": io.originalPosition.y\r\n\t\t};\r\n\t\tstartPoint2 = point2;\r\n\r\n\t\t// Determine if it's a sinngle pointer or multi\r\n\t\tlet singlePoint: boolean = true;\r\n\t\tfor (let i = 1; i < io.downPointers.length; i++) {\r\n\r\n\t\t\t// Get pointer\r\n\t\t\tlet nextPointer = io.downPointers.getIndex(i);\r\n\r\n\t\t\t// Doublecheck if it's not the same pointer by comparing original position\r\n\t\t\tif (startPoint1.x != nextPointer.startPoint.x && startPoint1.y != nextPointer.startPoint.y) {\r\n\r\n\t\t\t\t// Several pointers down\r\n\t\t\t\tsinglePoint = false;\r\n\r\n\t\t\t\t// Get second pointer\r\n\t\t\t\tpointer2 = nextPointer;\r\n\t\t\t\tpoint2 = pointer2.point;\r\n\t\t\t\tstartPoint2 = pointer2.startPoint;\r\n\r\n\t\t\t\t// Stop looking\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Primary touch point moved?\r\n\t\tlet pointer1Moved = pointer1 && this.moved(pointer1, 0);\r\n\r\n\t\t// Report DRAG_START if necessary\r\n\t\tif (io.draggable && pointer1 && pointer1.dragStartEvents && pointer1.dragStartEvents.length && pointer1Moved) {\r\n\t\t\tif (io.events.isEnabled(\"dragstart\") && !system.isPaused) {\r\n\t\t\t\tio.events.dispatchImmediately(\"dragstart\", pointer1.dragStartEvents.shift());\r\n\t\t\t}\r\n\t\t\t//delete pointer1.dragStartEvents;\r\n\t\t}\r\n\r\n\t\t// Determine what we do in order of superiority\r\n\t\tif (singlePoint && io.draggable) {\r\n\r\n\t\t\t// We have only one pointer and the Sprite is draggable\r\n\t\t\t// There's nothing else to be done - just move it\r\n\t\t\tthis.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved, pointer1.touch);\r\n\r\n\t\t\tif (this.shouldCancelHovers(pointer1) && this.moved(pointer1, this.getHitOption(io, \"hitTolerance\"))) {\r\n\t\t\t\tthis.cancelAllHovers(ev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t// Check if second touch point moved\r\n\t\t\tlet pointer2Moved = pointer2 && this.moved(pointer2, 0);\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this.shouldCancelHovers(pointer1) && this.moved(pointer1, this.getHitOption(io, \"hitTolerance\")))\r\n\t\t\t\t||\r\n\t\t\t\t(this.shouldCancelHovers(pointer2) && this.moved(pointer2, this.getHitOption(io, \"hitTolerance\")))\r\n\t\t\t) {\r\n\t\t\t\tthis.cancelAllHovers(ev);\r\n\t\t\t}\r\n\r\n\t\t\tif (io.draggable && io.resizable) {\r\n\t\t\t\t//this.handleTransformAll(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n\t\t\t\tthis.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved && pointer2Moved, pointer1.touch);\r\n\t\t\t\tthis.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved, pointer1.touch);\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tif (io.draggable) {\r\n\t\t\t\t\tthis.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved, pointer1.touch);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (io.resizable && (!singlePoint || ev.ctrlKey)) {\r\n\t\t\t\t\tthis.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved, pointer1.touch);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles movement of the dragged element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io            Element\r\n\t * @param point         Current point of the pointer\r\n\t * @param startPoint    Starting point of the pointer\r\n\t * @param ev            Original event\r\n\t * @param pointerMoved  Did pointer move?\r\n\t */\r\n\tpublic handleTransformMove(io: InteractionObject, point: IPoint, startPoint: IPoint, ev: MouseEvent | TouchEvent | KeyboardEvent, pointerMoved: boolean, touch: boolean): void {\r\n\r\n\t\tif (pointerMoved) {\r\n\t\t\tif (io.events.isEnabled(\"drag\") && !system.isPaused && (!io.isTouchProtected || !touch)) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"drag\"] = {\r\n\t\t\t\t\ttype: \"drag\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\tevent: ev,\r\n\t\t\t\t\tshift: {\r\n\t\t\t\t\t\t\"x\": point.x - startPoint.x,\r\n\t\t\t\t\t\t\"y\": point.y - startPoint.y\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstartPoint: startPoint,\r\n\t\t\t\t\tpoint: point,\r\n\t\t\t\t\ttouch: touch\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"drag\", imev);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles resizing of the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io            Element\r\n\t * @param point1        Current position of reference point #1\r\n\t * @param startPoint1   Original position of reference point #1\r\n\t * @param point2        Current position of reference point #2\r\n\t * @param startPoint2   Original position of reference point #2\r\n\t * @param ev            Original event\r\n\t * @param pointerMoved  Did pointer move?\r\n\t */\r\n\tpublic handleTransformResize(io: InteractionObject, point1: IPoint, startPoint1: IPoint, point2: IPoint, startPoint2: IPoint, ev: MouseEvent | TouchEvent, pointerMoved: boolean, touch: boolean): void {\r\n\t\tif (io.events.isEnabled(\"resize\") && !system.isPaused && (!io.isTouchProtected || !touch)) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"resize\"] = {\r\n\t\t\t\ttype: \"resize\",\r\n\t\t\t\ttarget: io,\r\n\t\t\t\tevent: ev,\r\n\t\t\t\tscale: $math.getScale(point1, startPoint1, point2, startPoint2),\r\n\t\t\t\tstartPoint1: startPoint1,\r\n\t\t\t\tpoint1: point1,\r\n\t\t\t\tstartPoint2: startPoint2,\r\n\t\t\t\tpoint2: point2,\r\n\t\t\t\ttouch: touch\r\n\t\t\t};\r\n\t\t\tio.events.dispatchImmediately(\"resize\", imev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles all the preparations of the element when it starts to be dragged.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic processDragStart(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Add to draggedObjects\r\n\t\tthis.transformedObjects.moveValue(io);\r\n\r\n\t\tif (this.shouldCancelHovers(pointer)) {\r\n\t\t\tthis.cancelAllHovers(ev);\r\n\t\t}\r\n\r\n\t\t// Report \"dragstart\"\r\n\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"dragstart\"] = {\r\n\t\t\ttype: \"dragstart\",\r\n\t\t\ttarget: io,\r\n\t\t\tevent: ev,\r\n\t\t\ttouch: pointer ? pointer.touch : false\r\n\t\t};\r\n\r\n\t\t// Log object that we are starting to drag, so we can check against and\r\n\t\t// avoid hovers on other objects that might be in the path of movement.\r\n\t\tif (pointer) {\r\n\t\t\tpointer.dragTarget = io;\r\n\t\t\t//pointer.startPoint = pointer.point;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * If pointer is set we will not fire the event until the pointer has\r\n\t\t * actually moved. If it's not set we don't have to wait for anything, so we\r\n\t\t * just fire off the event right away.\r\n\t\t */\r\n\t\tif (pointer && pointer.dragStartEvents) {\r\n\t\t\tpointer.dragStartEvents.push(imev);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!system.isPaused) {\r\n\t\t\t\tio.dispatchImmediately(\"dragstart\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Finishes up element drag operation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic processDragStop(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Pointer set?\r\n\t\tif (!pointer) {\r\n\t\t\tpointer = this.getDragPointer(io);\r\n\t\t}\r\n\r\n\t\t// Unset drag object\r\n\t\tif (pointer) {\r\n\t\t\tpointer.dragTarget = undefined;\r\n\t\t}\r\n\r\n\t\t// Removed from transformedObjects\r\n\t\tthis.transformedObjects.removeValue(io);\r\n\r\n\t\t// Unlock document\r\n\t\t//this.unlockDocument();\r\n\r\n\t\t// Report dragstop\r\n\t\tif (!pointer || this.moved(pointer, 0)) {\r\n\t\t\tif (io.events.isEnabled(\"dragstop\") && !system.isPaused) {\r\n\t\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"dragstop\"] = {\r\n\t\t\t\t\ttype: \"dragstop\",\r\n\t\t\t\t\ttarget: io,\r\n\t\t\t\t\ttouch: pointer ? pointer.touch : false\r\n\t\t\t\t};\r\n\t\t\t\tio.events.dispatchImmediately(\"dragstop\", imev);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles all the preparations of the element when it starts to be resized.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic processResizeStart(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Add to draggedObjects\r\n\t\tthis.transformedObjects.moveValue(io);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finishes up element drag operation.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t * @param ev       Original event\r\n\t */\r\n\tpublic processResizeStop(io: InteractionObject, pointer?: IPointer, ev?: MouseEvent | TouchEvent): void {\r\n\r\n\t\t// Removed from transformedObjects\r\n\t\tthis.transformedObjects.removeValue(io);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Controls for InteractionObjects initiating directly\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Manually triggers drag start on the element. Could be useful in cases\r\n\t * where tracking or dragging one element can also influence dragging another\r\n\t * element.\r\n\t *\r\n\t * Passing in `pointer` reference is advisable. If not passed in it will try\r\n\t * to determine which pointer to attach to. However, it's better to specify\r\n\t * it explicitly.\r\n\t *\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t */\r\n\tpublic dragStart(io: InteractionObject, pointer?: IPointer): void {\r\n\t\tif (!pointer) {\r\n\t\t\tpointer = this.getDragPointer(io);\r\n\t\t}\r\n\r\n\t\tif (pointer) {\r\n\t\t\tthis.handleDown(io, pointer, pointer.lastDownEvent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Manually ends drag on the element.\r\n\t *\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t */\r\n\tpublic dragStop(io: InteractionObject, pointer?: IPointer, cancelled?: boolean): void {\r\n\t\tif (!pointer) {\r\n\t\t\tpointer = this.getDragPointer(io);\r\n\t\t}\r\n\r\n\t\tif (pointer && !cancelled) {\r\n\t\t\tthis.handleGlobalUp(pointer, pointer.lastUpEvent, cancelled);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * This method uses a fuzzy logic to find the pointer to be used for dragging.\r\n\t * Beware that this is not a rock-solid solution. If there are a few objects\r\n\t * being dragged at the same time, you may get unexepected results.\r\n\t *\r\n\t * @param io  InteractionObject to get pointers from\r\n\t * @return Pointer currently being used for dragging\r\n\t */\r\n\tpublic getDragPointer(io?: InteractionObject): $type.Optional<IPointer> {\r\n\t\tif (io) {\r\n\t\t\t// InteractionObject is supplied\r\n\t\t\t// Use it's first down pointer\r\n\t\t\treturn io.downPointers.getIndex(0);\r\n\t\t}\r\n\t\telse if (this.transformedObjects.length) {\r\n\t\t\t// Use first dragged object\r\n\t\t\treturn this.getDragPointer(this.transformedObjects.getIndex(0));\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * Utils\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Returns pointer id for the given event object.\r\n\t *\r\n\t * @param ev  Event\r\n\t * @return Pointer ID\r\n\t */\r\n\tprotected getPointerId(ev: any): string {\r\n\t\tlet id = \"\";\r\n\t\tif ($type.hasValue(ev.identifier)) {\r\n\t\t\tid = \"\" + <string>ev.identifier;\r\n\t\t} else if ($type.hasValue(ev.pointerId)) {\r\n\t\t\tid = \"\" + <string>ev.pointerId;\r\n\t\t} else {\r\n\t\t\tid = \"m\";\r\n\t\t}\r\n\t\treturn id.replace(\"-\", \"\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a cursor position of the event.\r\n\t *\r\n\t * @param ev  Original event\r\n\t * @return Event point\r\n\t */\r\n\tprotected getPointerPoint(ev: MouseEvent | Touch): IPoint {\r\n\t\treturn {\r\n\t\t\t\"x\": ev.clientX,\r\n\t\t\t\"y\": ev.clientY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns [[Pointer]] object that is associated with the Event.\r\n\t *\r\n\t * If no such [[Pointer]] object exists, it is created.\r\n\t *\r\n\t * @param ev  Event\r\n\t * @return Pointer\r\n\t */\r\n\tprotected getPointer(ev: MouseEvent | Touch): IPointer {\r\n\r\n\t\t// Get pointer id\r\n\t\tlet id = this.getPointerId(ev);\r\n\r\n\t\t// Get current coordinates\r\n\t\tlet point = this.getPointerPoint(ev);\r\n\r\n\t\t// Look for the pointer in the Dictionary if it maybe already exists\r\n\t\tlet pointer: IPointer;\r\n\t\tif (this.pointers.hasKey(id)) {\r\n\r\n\t\t\t// We already have such pointer\r\n\t\t\tpointer = this.pointers.getKey(id)!;\r\n\r\n\t\t\t// We need this, because Edge reuses pointer ids across touch and mouse\r\n\t\t\tpointer.touch = this.isPointerTouch(ev);\r\n\r\n\t\t\t// Reset pointer\r\n\t\t\t//pointer.point = point;\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Init pointer\r\n\t\t\tpointer = {\r\n\t\t\t\t\"id\": id,\r\n\t\t\t\t//\"touch\": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != \"pointer\"),\r\n\t\t\t\t//\"touch\": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != \"mouse\"),\r\n\t\t\t\t\"touch\": this.isPointerTouch(ev),\r\n\t\t\t\t\"startPoint\": point,\r\n\t\t\t\t\"startTime\": $time.getTime(),\r\n\t\t\t\t\"point\": point,\r\n\t\t\t\t\"track\": [],\r\n\t\t\t\t\"swipeCanceled\": false,\r\n\t\t\t\t\"dragStartEvents\": []\r\n\t\t\t};\r\n\r\n\t\t\t// Add first breadcrumb\r\n\t\t\tthis.addBreadCrumb(pointer, point);\r\n\r\n\t\t\t// Add for re-use later\r\n\t\t\tthis.pointers.setKey(id, pointer);\r\n\t\t}\r\n\r\n\t\t// Log last event\r\n\t\tpointer.lastEvent = ev;\r\n\r\n\t\tthis.lastPointer = pointer;\r\n\r\n\t\treturn pointer;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines if pointer event originated from a touch pointer or mouse.\r\n\t *\r\n\t * @param ev  Original event\r\n\t * @return Touch pointer?\r\n\t */\r\n\tprotected isPointerTouch(ev: MouseEvent | Touch): boolean {\r\n\t\tif (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && $type.hasValue((<any>ev).pointerType)) {\r\n\t\t\tswitch ((<any>ev).pointerType) {\r\n\t\t\t\tcase \"touch\":\r\n\t\t\t\tcase \"pen\":\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"mouse\":\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\treturn false;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn !(ev instanceof MouseEvent);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($type.hasValue((<any>ev).type)) {\r\n\t\t\tif ((<any>ev).type.match(/^mouse/)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the poiner to original state, i.e. cleans movement information,\r\n\t * starting point, etc.\r\n\t *\r\n\t * @param pointer Pointer\r\n\t */\r\n\tprotected resetPointer(pointer: IPointer, ev: MouseEvent | PointerEvent | Touch): void {\r\n\t\t// Get current coordinates\r\n\t\tlet point = this.getPointerPoint(ev);;\r\n\t\tpointer.startTime = $time.getTime();\r\n\t\tpointer.startPoint = { x: point.x, y: point.y };\r\n\t\tpointer.point = { x: point.x, y: point.y };\r\n\t\tpointer.track = [];\r\n\t\tpointer.swipeCanceled = false;\r\n\t\t//clearTimeout(pointer.swipeTimeout);\r\n\t\t//clearTimeout(pointer.holdTimeout);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a \"breadcrumb\" point to the [[Pointer]] to log its movement path.\r\n\t *\r\n\t * @param pointer  Pointer\r\n\t * @param point    Point coordinates\r\n\t */\r\n\tprotected addBreadCrumb(pointer: IPointer, point: IPoint): void {\r\n\t\tpointer.track.push({\r\n\t\t\t\"timestamp\": $time.getTime(),\r\n\t\t\t\"point\": point\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the document for various touch-related operations.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lockDocument(): void {\r\n\t\tthis.prepElement(this.body);\r\n\t}\r\n\r\n\t/**\r\n\t * Restores document functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic unlockDocument(): void {\r\n\t\tif (this.transformedObjects.length == 0) {\r\n\t\t\tthis.restoreAllStyles(this.body);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Lock element (disable all touch)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lockElement(io: InteractionObject): void {\r\n\t\tthis.prepElement(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Restores element's functionality.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic unlockElement(io: InteractionObject): void {\r\n\t\tthis.restoreAllStyles(io);\r\n\t}\r\n\r\n\t/**\r\n\t * Locks document's wheel scroll.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic lockWheel(): void {\r\n\t\twindow.addEventListener(\r\n\t\t\tthis._pointerEvents.wheel,\r\n\t\t\tthis.wheelLockEvent,\r\n\t\t\tthis._passiveSupported ? { passive: false } : false\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Unlocks document's wheel scroll.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic unlockWheel(): void {\r\n\t\twindow.removeEventListener(\r\n\t\t\tthis._pointerEvents.wheel,\r\n\t\t\tthis.wheelLockEvent\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if top element at pointer's position belongs to the SVG.\r\n\t *\r\n\t * @ignore Exlude from docs\r\n\t * @param pointer  Pointer\r\n\t * @param svg      The <svg> element\r\n\t * @param id       A unique identifier of the object that is checking for locality\r\n\t * @return Belongs to SVG\r\n\t */\r\n\tpublic isLocalElement(pointer: IPointer, svg: SVGSVGElement, id: string): boolean {\r\n\t\tconst cached = this.getCache(\"local_pointer_\" + pointer.id);\r\n\t\tif ($type.hasValue(cached)) {\r\n\t\t\treturn cached;\r\n\t\t}\r\n\t\tconst doc = ($dom.getRoot(svg) || document);\r\n\t\tif (doc.elementFromPoint) {\r\n\t\t\tconst target = doc.elementFromPoint(pointer.point.x, pointer.point.y);\r\n\t\t\tconst local = target && $dom.contains(svg, <HTMLElement>target);\r\n\t\t\tthis.setCache(\"local_pointer_\" + pointer.id + \"_\" + id, local, 100);\r\n\t\t\treturn local;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * A function that cancels mouse wheel scroll.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param ev  Event object\r\n\t * @return Returns `false` to cancel\r\n\t */\r\n\tprotected wheelLockEvent(ev: Event): boolean {\r\n\t\tev.preventDefault();\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a set of styles to an element. Stores the original styles so they\r\n\t * can be restored later.\r\n\t *\r\n\t * @ignore\r\n\t * @param io      Element\r\n\t */\r\n\tpublic prepElement(io: InteractionObject): void {\r\n\r\n\t\tlet el = io.element;\r\n\r\n\t\tif (el) {\r\n\r\n\t\t\t// Define possible props\r\n\t\t\tlet props = [\r\n\t\t\t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n\t\t\t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n\t\t\t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n\t\t\t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n\t\t\t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n\t\t\t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n\t\t\t];\r\n\t\t\tfor (let i = 0; i < props.length; i++) {\r\n\t\t\t\tif (props[i] in el.style) {\r\n\t\t\t\t\tthis.setTemporaryStyle(io, props[i], \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove iOS-specific selection;\r\n\t\t\tthis.setTemporaryStyle(io, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n\t\t\t//this.setTemporaryStyle(io, \"webkitOverflowScrolling\", \"none\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores replaced styles\r\n\t *\r\n\t * @ignore\r\n\t * @param  io  Element\r\n\t */\r\n\tpublic unprepElement(io: InteractionObject): void {\r\n\r\n\t\tlet el = io.element;\r\n\r\n\t\tif (el) {\r\n\r\n\t\t\t// Define possible props\r\n\t\t\tlet props = [\r\n\t\t\t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n\t\t\t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n\t\t\t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n\t\t\t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n\t\t\t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n\t\t\t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n\t\t\t];\r\n\t\t\tfor (let i = 0; i < props.length; i++) {\r\n\t\t\t\tif (props[i] in el.style) {\r\n\t\t\t\t\tthis.restoreStyle(io, props[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove iOS-specific selection;\r\n\t\t\tthis.restoreStyle(io, \"tapHighlightColor\");\r\n\t\t\t//this.restoreStyle(io, \"webkitOverflowScrolling\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with hit events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io      Element\r\n\t * @param option  Option key\r\n\t * @return Option value\r\n\t */\r\n\tpublic getHitOption(io: InteractionObject, option: keyof IHitOptions): any {\r\n\t\tlet res = io.hitOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.hitOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with hover events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io      Element\r\n\t * @param option  Option key\r\n\t * @return Option value\r\n\t */\r\n\tpublic getHoverOption(io: InteractionObject, option: keyof IHoverOptions): any {\r\n\t\tlet res = io.hoverOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.hoverOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with swipe events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io      Element\r\n\t * @param option  Option key\r\n\t * @return Option value\r\n\t */\r\n\tpublic getSwipeOption(io: InteractionObject, option: keyof ISwipeOptions): any {\r\n\t\tlet res = io.swipeOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.swipeOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option for keyboard.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io      Element\r\n\t * @param option  Option key\r\n\t * @return Option value\r\n\t */\r\n\tpublic getKeyboardOption(io: InteractionObject, option: keyof IKeyboardOptions): any {\r\n\t\tlet res = io.keyboardOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.keyboardOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option for mouse.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io      Element\r\n\t * @param option  Option key\r\n\t * @return Option value\r\n\t */\r\n\tpublic getMouseOption(io: InteractionObject, option: keyof IMouseOptions): any {\r\n\t\tlet res = io.mouseOptions[option];\r\n\t\tif (typeof res === \"undefined\") {\r\n\t\t\tres = this.mouseOptions[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an option associated with inertia.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io      Element\r\n\t * @param type    Inertia type\r\n\t * @param option  Option key\r\n\t * @return Option value\r\n\t */\r\n\tpublic getInertiaOption(io: InteractionObject, type: InertiaTypes, option: keyof IInertiaOptions): any {\r\n\t\tlet options: any = io.inertiaOptions.getKey(type);\r\n\t\tlet res: IInertiaOptions;\r\n\t\tif (options && $type.hasValue(options[option])) {\r\n\t\t\tres = options[option];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tres = (<any>this.inertiaOptions.getKey(type))[option];\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Stops currently going on inertia. Useful if inertia is currently being\r\n\t * animated and the object is being interacted with.\r\n\t *\r\n\t * @param io Element\r\n\t */\r\n\tprotected stopInertia(io: InteractionObject): void {\r\n\t\tlet x: InertiaTypes;\r\n\t\tlet inertias: Array<InertiaTypes> = [\"move\", \"resize\"];\r\n\t\tfor (let i = 0; i < inertias.length; i++) {\r\n\t\t\tx = inertias[i];\r\n\t\t\tif (io.inertias.hasKey(x)) {\r\n\t\t\t\tlet inertia: $type.Optional<Inertia> = io.inertias.getKey(x);\r\n\t\t\t\tif (inertia) {\r\n\t\t\t\t\tinertia.dispose();\r\n\t\t\t\t\t//io.inertiaAnimations.removeKey(x);\r\n\t\t\t\t\t//this.processDragStop(io);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Check if swiping is currently being performed on an object.\r\n\t *\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer to check\r\n\t * @return `true` if swiping\r\n\t */\r\n\tpublic swiping(io: InteractionObject, pointer: IPointer): boolean {\r\n\t\tlet now = $time.getTime();\r\n\r\n\t\tif (pointer.swipeCanceled || !io.swipeable) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if (\r\n\t\t\t(Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, \"verticalThreshold\")) &&\r\n\t\t\t(pointer.startTime > (now - this.getSwipeOption(io, \"time\")))\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if a successfull swipe action was performed on an element.\r\n\t *\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t * @return Swiped?\r\n\t */\r\n\tpublic swiped(io: InteractionObject, pointer: IPointer): boolean {\r\n\t\tlet now = $time.getTime();\r\n\t\tif (pointer.swipeCanceled) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse if (\r\n\t\t\t(Math.abs(pointer.startPoint.x - pointer.point.x) > this.getSwipeOption(io, \"horizontalThreshold\")) &&\r\n\t\t\t(Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, \"verticalThreshold\")) &&\r\n\t\t\t(pointer.startTime > (now - this.getSwipeOption(io, \"time\")))\r\n\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Applies style to mouse cursor based on its stage in relation to\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param Element\r\n\t */\r\n\tpublic applyCursorOverStyle(io: InteractionObject): void {\r\n\r\n\t\t// Get sprite's cursor ooptions\r\n\t\tlet options = io.cursorOptions;\r\n\r\n\t\tif (!$type.hasValue(options.overStyle)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Apply cursor down styles\r\n\t\tfor (let i = 0; i < options.overStyle.length; i++) {\r\n\t\t\t$dom.setStyle(io.element, options.overStyle[i].property, options.overStyle[i].value);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies style to mouse cursor based on its stage in relation to\r\n\t * [[InteractionObject]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t */\r\n\tpublic applyCursorDownStyle(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Not applicable for touch pointers since they don't display a cursor\r\n\t\tif (pointer && pointer.touch) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst downStyle = io.cursorOptions.downStyle;\r\n\t\t// Is down?\r\n\t\tif (io.downPointers.contains(pointer) && $type.hasValue(downStyle)) {\r\n\t\t\t// Apply cursor down styles\r\n\t\t\tfor (let i = 0; i < downStyle.length; i++) {\r\n\t\t\t\tthis.setTemporaryStyle(this.body, downStyle[i].property, downStyle[i].value);\r\n\t\t\t\tthis.setTemporaryStyle(io, downStyle[i].property, downStyle[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restores original cursor style for the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param io       Element\r\n\t * @param pointer  Pointer\r\n\t */\r\n\tpublic restoreCursorDownStyle(io: InteractionObject, pointer: IPointer): void {\r\n\r\n\t\t// Not applicable for touch pointers since they don't display a cursor\r\n\t\tif (pointer && pointer.touch) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst downStyle = io.cursorOptions.downStyle;\r\n\r\n\t\t// Is down?\r\n\t\tif (io.downPointers.contains(pointer) && $type.hasValue(downStyle)) {\r\n\t\t\t// Apply cursor down styles\r\n\t\t\tfor (let i = 0; i < downStyle.length; i++) {\r\n\t\t\t\tthis.restoreStyle(this.body, downStyle[i].property);\r\n\t\t\t\tthis.restoreStyle(io, downStyle[i].property);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets style on the body of the document.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param style  Style definitions\r\n\t */\r\n\tpublic setGlobalStyle(style: Array<IStyleProperty> | IStyleProperty): void {\r\n\t\tlet body = getInteraction().body;\r\n\t\tlet styles = <Array<IStyleProperty>>($type.isArray(style) ? style : [style]);\r\n\t\tfor (let i = 0; i < styles.length; i++) {\r\n\t\t\tthis.setTemporaryStyle(body, styles[i].property, styles[i].value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restores style on the body of the document.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param style  Style definitions\r\n\t */\r\n\tpublic restoreGlobalStyle(style: Array<IStyleProperty> | IStyleProperty): void {\r\n\t\tlet body = getInteraction().body;\r\n\t\tlet styles = <Array<IStyleProperty>>($type.isArray(style) ? style : [style]);\r\n\t\tfor (let i = 0; i < styles.length; i++) {\r\n\t\t\tthis.restoreStyle(body, styles[i].property);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element is a non-cahrt element.\r\n\t *\r\n\t * @param io  InteractionObject\r\n\t * @return Global element?\r\n\t */\r\n\tprotected isGlobalElement(io: InteractionObject): boolean {\r\n\t\treturn document.body === io.element;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if pointer has moved since it was created.\r\n\t *\r\n\t * @param pointer    Pointer\r\n\t * @param tolerance  Tolerance in pixels\r\n\t * @param minTime    Minimum time required for the pointer to be down to be considered moved\r\n\t * @return `true` if the pointer has moved\r\n\t */\r\n\tpublic moved(pointer: IPointer, tolerance: number, minTime: number = 300): boolean {\r\n\r\n\t\t/*// If there was more time, we don't care if cursor actually moved\r\n\t\tlet duration = $time.getTime() - pointer.startTime;\r\n\t\tif ($type.hasValue(minTime) && (minTime > duration)) {\r\n\t\t\treturn false;\r\n\t\t}*/\r\n\r\n\t\t// That was quick measure shift\r\n\t\tlet shift = this.getShift(pointer);\r\n\r\n\t\treturn (Math.abs(shift.x) > tolerance) || (Math.abs(shift.y) > tolerance);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if pointer is \"old\", meaning it has been pressing for more than\r\n\t * X milliseconds.\r\n\t *\r\n\t * @ignore\r\n\t * @param pointer  Pointer\r\n\t * @param minTime  Minimum time to consider pointer old\r\n\t * @return {boolean}\r\n\t */\r\n\tpublic old(pointer: IPointer, minTime: number = 300): boolean {\r\n\t\treturn $time.getTime() - pointer.startTime > minTime;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns total a shift in pointers coordinates between its original\r\n\t * position and now.\r\n\t *\r\n\t * @param pointer  Pointer\r\n\t * @return Shift in coordinates (x/y)\r\n\t */\r\n\tpublic getShift(pointer: IPointer): IPoint {\r\n\t\treturn {\r\n\t\t\t\"x\": pointer.startPoint.x - pointer.point.x,\r\n\t\t\t\"y\": pointer.startPoint.y - pointer.point.y\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a point from [[Pointer]]'s move history at a certain timetamp.\r\n\t *\r\n\t * @param pointer    Pointer\r\n\t * @param timestamp  Timestamp\r\n\t * @return Point\r\n\t */\r\n\tpublic getTrailPoint(pointer: IPointer, timestamp: number): $type.Optional<IBreadcrumb> {\r\n\t\tlet res: $type.Optional<IBreadcrumb>;\r\n\t\tfor (let i = 0; i < pointer.track.length; i++) {\r\n\t\t\tif (pointer.track[i].timestamp >= timestamp) {\r\n\t\t\t\tres = pointer.track[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if same pointer already exists in the list.\r\n\t *\r\n\t * @param list     List to check agains\r\n\t * @param pointer  Pointer\r\n\t * @return Exists?\r\n\t */\r\n\tprotected pointerExists(list: List<IPointer>, pointer: IPointer): boolean {\r\n\t\tlet exists = false;\r\n\t\tlist.each((item) => {\r\n\t\t\tif (item == pointer) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\texists = item.point.x == pointer.point.x && item.point.y == pointer.point.y;\r\n\t\t});\r\n\t\treturn exists;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an [[InteractionObject]] representation of a DOM element.\r\n\t *\r\n\t * You can use this on any HTML or SVG element, to add interactive features\r\n\t * to it.\r\n\t *\r\n\t * @param element  Element\r\n\t * @return InteractionObject\r\n\t */\r\n\tpublic getInteraction(element: HTMLElement | SVGSVGElement): InteractionObject {\r\n\t\treturn new InteractionObject(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a style property on an element. Stores original value to be restored\r\n\t * later with [[restoreStyle]].\r\n\t *\r\n\t * @see {@link restoreStyle}\r\n\t * @param io        Element\r\n\t * @param property  Property\r\n\t * @param value     Value\r\n\t */\r\n\tpublic setTemporaryStyle(io: InteractionObject, property: string, value: string): void {\r\n\r\n\t\t// Get element\r\n\t\t//let el = io.element.tagName == \"g\" ? <SVGSVGElement>io.element.parentNode : io.element;\r\n\t\tlet el = io.element;\r\n\r\n\t\t// Save original property if it is set and hasn't been saved before already\r\n\t\tif ($type.hasValue((<any>el.style)[property]) && !io.replacedStyles.hasKey(property)) {\r\n\t\t\tio.replacedStyles.setKey(property, (<any>el.style)[property]);\r\n\t\t}\r\n\r\n\t\t// Replace with the new one\r\n\t\t$dom.setStyle(el, property, value);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores specific style on an element.\r\n\t *\r\n\t * @param io        Element\r\n\t * @param property  Style property\r\n\t */\r\n\tpublic restoreStyle(io: InteractionObject, property: string): void {\r\n\r\n\t\t// Reset style\r\n\t\tif (io.replacedStyles.hasKey(property)) {\r\n\t\t\t(<any>io.element.style)[property] = io.replacedStyles.getKey(property);\r\n\t\t\tio.replacedStyles.removeKey(property);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete (<any>io.element.style)[property];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Restore temporarily reset styles on an element.\r\n\t *\r\n\t * @param io Element\r\n\t */\r\n\tpublic restoreAllStyles(io: InteractionObject): void {\r\n\t\t$iter.each(io.replacedStyles.iterator(), (a) => {\r\n\t\t\tconst key = a[0];\r\n\t\t\tconst value = a[1];\r\n\t\t\t(<any>io.element.style)[key] = value;\r\n\t\t\tio.replacedStyles.removeKey(key);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes this object and cleans up after itself.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (!this.isDisposed()) {\r\n\t\t\tsuper.dispose();\r\n\t\t\tthis.restoreAllStyles(this.body);\r\n\t\t\tthis.unlockWheel();\r\n\t\t}\r\n\t}\r\n\r\n\t// @ts-ignore Used for debugging\r\n\tprivate log(text: string, ev: MouseEvent | TouchEvent | PointerEvent, io?: InteractionObject): void {\r\n\t\tlet show = true;\r\n\t\tif (show) {\r\n\t\t\t// Touchlist?\r\n\t\t\tif ((<any>ev).changedTouches) {\r\n\t\t\t\tfor (let i = 0; i < (<any>ev).changedTouches.length; i++) {\r\n\t\t\t\t\tthis.logTouch(text, ev.type, (<any>ev).changedTouches[i])\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Get type\r\n\t\t\tlet type = \"\";\r\n\t\t\tif ((<any>ev).pointerType) {\r\n\t\t\t\tswitch ((<any>ev).pointerType) {\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\ttype = \"touch\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\ttype = \"mouse\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttype = (<any>ev).pointerType;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (typeof TouchEvent != \"undefined\" && ev instanceof TouchEvent) {\r\n\t\t\t\ttype = \"touch\";\r\n\t\t\t}\r\n\t\t\telse if (ev.type.match(/^mouse/)) {\r\n\t\t\t\ttype = \"mouse\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttype = \"???\";\r\n\t\t\t}\r\n\r\n\t\t\t// Get ID\r\n\t\t\tlet id = \"\";\r\n\t\t\tif ($type.hasValue((<any>ev).identifier)) {\r\n\t\t\t\tid = <string>(<any>ev).identifier;\r\n\t\t\t} else if ($type.hasValue((<any>ev).pointerId)) {\r\n\t\t\t\tid = <string>(<any>ev).pointerId;\r\n\t\t\t} else {\r\n\t\t\t\tid = \"???\";\r\n\t\t\t}\r\n\r\n\t\t\tif (io) {\r\n\t\t\t\tconsole.log(text + \" (\" + io.uid + \")  \" + ev.type + \"  \" + type + \"  \" + id);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(text + \"  \" + ev.type + \"  \" + type + \"  \" + id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether there are currently any objects being transformed (dragged\r\n\t * or resized).\r\n\t *\r\n\t * If `except` is set, that object will be ignored.\r\n\t *\r\n\t * @since 4.9.3\r\n\t * @param   except  Ignore this object(s)\r\n\t * @return          Objects are being transformed\r\n\t */\r\n\tpublic areTransformed(except?: InteractionObject | InteractionObject[]): boolean {\r\n\t\tlet count = this.transformedObjects.length;\r\n\t\tif (except) {\r\n\t\t\tconst ex = $type.isArray(except) ? except : [except];\r\n\t\t\tfor (let i = 0; i < ex.length; i++) {\r\n\t\t\t\tif (this.transformedObjects.contains(ex[i])) {\r\n\t\t\t\t\tcount--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn count > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Log.\r\n\t */\r\n\tprivate logTouch(text: string, type: string, ev: Touch): void {\r\n\t\tconsole.log(text + \"  \" + type + \"  \" + \"touch\" + \"  \" + ev.identifier);\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if passive mode options is supported by this browser.\r\n\t */\r\n\tprivate static _passiveSupported: boolean;\r\n\r\n\t/**\r\n\t * Indicates if passive mode options is supported by this browser.\r\n\t */\r\n\tstatic get passiveSupported() {\r\n\r\n\t\tif (this._passiveSupported == null) {\r\n\r\n\t\t\t// Check for passive mode support\r\n\t\t\ttry {\r\n\t\t\t\tlet options = Object.defineProperty({}, \"passive\", {\r\n\t\t\t\t\tget: () => {\r\n\t\t\t\t\t\tthis._passiveSupported = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\twindow.addEventListener(\"test\", options, options);\r\n\t\t\t\twindow.removeEventListener(\"test\", options, options);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthis._passiveSupported = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this._passiveSupported;\r\n\t}\r\n\r\n}\r\n\r\n\r\nlet interaction: Interaction | null = null;\r\n\r\n/**\r\n * Returns a single unified global instance of [[Interaction]].\r\n *\r\n * All code should use this function, rather than create their own instances\r\n * of [[Interaction]].\r\n */\r\nexport function getInteraction(): Interaction {\r\n\tif (interaction == null) {\r\n\t\tinteraction = new Interaction();\r\n\t}\r\n\r\n\treturn interaction;\r\n}\r\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ITheme } from \"../themes/ITheme\";\r\nimport { EventDispatcher, AMEvent } from \"./utils/EventDispatcher\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { Sprite } from \"./Sprite\";\r\nimport { Container } from \"./Container\";\r\nimport { Component } from \"./Component\";\r\nimport { cache } from \"./utils/Cache\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $string from \"./utils/String\";\r\nimport * as $array from \"./utils/Array\";\r\n\r\n\r\n/**\r\n * Define events available for [[Registry]]\r\n */\r\nexport interface IRegistryEvents {\r\n\r\n\t/**\r\n\t * Invoked when update cycle starts. Before invalid elements are re-validated.\r\n\t */\r\n\tenterframe: {};\r\n\r\n\t/**\r\n\t * Invoked when udpate cycle ends. After invalid elements have been\r\n\t * re-validated.\r\n\t */\r\n\texitframe: {};\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Registry is used to store miscellaneous system-wide information, like ids,\r\n * maps, themes, and registered classes.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Registry {\r\n\r\n\t/**\r\n\t * Unique ID of the object.\r\n\t */\r\n\tpublic uid: string;\r\n\r\n\t/**\r\n\t * Event dispacther.\r\n\t */\r\n\tpublic events: EventDispatcher<AMEvent<Registry, IRegistryEvents>> = new EventDispatcher();\r\n\r\n\t/**\r\n\t * Holds a universal mapping collection, so that elements and their children\r\n\t * can create and look up all kinds of relations between id and object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _map: $type.Optional<Dictionary<string, any>>;\r\n\r\n\t/**\r\n\t * All currently applied themes. All new chart instances created will\r\n\t * automatically inherit and retain System's themes.\r\n\t */\r\n\tpublic themes: ITheme[] = [];\r\n\r\n\t/**\r\n\t * List of all loaded available themes.\r\n\t *\r\n\t * Whenever a theme loads, it registers itself in System's `loadedThemes`\r\n\t * collection.\r\n\t */\r\n\tpublic loadedThemes: { [index: string]: ITheme } = {};\r\n\r\n\t/**\r\n\t * An indeternal counter used to generate unique IDs.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _uidCount: number = 0;\r\n\r\n\t/**\r\n\t * Keeps register of class references so that they can be instnatiated using\r\n\t * string key.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic registeredClasses: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * Holds all generated placeholders.\r\n\t */\r\n\tprotected _placeholders: { [index: string]: string } = {};\r\n\r\n\t/**\r\n\t * A list of invalid(ated) [[Sprite]] objects that need to be re-validated\r\n\t * during next cycle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidSprites: { [index: string]: Array<Sprite> } = {};\r\n\r\n\t/**\r\n\t * Components are added to this list when their data provider changes to\r\n\t * a new one or data is added/removed from their data provider.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidDatas: { [index: string]: Array<Component> } = {};\r\n\r\n\t/**\r\n\t * Components are added to this list when values of their raw data change.\r\n\t * Used when we want a smooth animation from one set of values to another.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidRawDatas: Array<Component> = [];\r\n\r\n\t/**\r\n\t * Components are added to this list when values of their data changes\r\n\t * (but not data provider itself).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidDataItems: Array<Component> = [];\r\n\r\n\t/**\r\n\t * Components are added to this list when their data range (selection) is\r\n\t * changed, e.g. zoomed.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidDataRange: Array<Component> = [];\r\n\r\n\t/**\r\n\t * A list of [[Sprite]] objects that have invalid(ated) positions, that need\r\n\t * to be recalculated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidPositions: { [index: string]: Array<Sprite> } = {};\r\n\r\n\t/**\r\n\t * A list of [[Container]] objects with invalid(ated) layouts.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidLayouts: { [index: string]: Array<Container> } = {};\r\n\r\n\t/**\r\n\t * An array holding all active (non-disposed) top level elemens.\r\n\t *\r\n\t * When, for example, a new chart is created, its instance will be added to\r\n\t * this array, and will be removed when the chart is disposed.\r\n\t */\r\n\tpublic baseSprites: Array<Sprite> = [];\r\n\r\n\t/**\r\n\t * An UID-based map of base sprites (top-level charts).\r\n\t */\r\n\tpublic baseSpritesByUid: { [index: string]: Sprite } = {};\r\n\r\n\t/**\r\n\t * Queued charts (waiting for their turn) to initialize.\r\n\t * \r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Daisy_chaining_multiple_charts} for more information\r\n\t */\r\n\tpublic queue: Array<Sprite> = [];\r\n\r\n\t/**\r\n\t * An array of deferred charts that haven't been created yet.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n\t * @since 4.10.0\r\n\t */\r\n\tpublic deferred: Array<{\r\n\t\tcallback: (...args: Array<any>) => Sprite,\r\n\t\tscope?: any,\r\n\t\targs?: Array<any>,\r\n\t\tresolve: any\r\n\t}> = [];\r\n\r\n\tconstructor() {\r\n\t\tthis.uid = this.getUniqueId();\r\n\r\n\t\tthis.invalidSprites.noBase = [];\r\n\t\tthis.invalidDatas.noBase = [];\r\n\t\tthis.invalidLayouts.noBase = [];\r\n\t\tthis.invalidPositions.noBase = [];\r\n\r\n\t\t// This is needed for Angular Universal SSR\r\n\t\tif (typeof addEventListener !== \"undefined\") {\r\n\t\t\t// This is needed to prevent charts from being cut off when printing\r\n\t\t\taddEventListener(\"beforeprint\", () => {\r\n\t\t\t\t$array.each(this.baseSprites, (sprite) => {\r\n\t\t\t\t\tconst svg = sprite.paper.svg;\r\n\t\t\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 \" + svg.clientWidth + \" \" + svg.clientHeight);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\taddEventListener(\"afterprint\", () => {\r\n\t\t\t\t$array.each(this.baseSprites, (sprite) => {\r\n\t\t\t\t\tconst svg = sprite.paper.svg;\r\n\t\t\t\t\tsvg.removeAttribute(\"viewBox\");\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a unique chart system-wide ID.\r\n\t *\r\n\t * @return Generated ID\r\n\t */\r\n\tpublic getUniqueId(): string {\r\n\t\tlet uid = this._uidCount;\r\n\t\tthis._uidCount += 1;\r\n\t\treturn \"id-\" + uid;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a universal collection for mapping ids with objects.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Map collection\r\n\t */\r\n\tpublic get map(): Dictionary<string, any> {\r\n\t\tif (!this._map) {\r\n\t\t\tthis._map = new Dictionary<string, any>();\r\n\t\t}\r\n\t\treturn this._map;\r\n\t}\r\n\r\n\t/**\r\n\t * Caches value in object's cache.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param key    Key\r\n\t * @param value  Value\r\n\t * @param ttl    TTL in seconds\r\n\t */\r\n\tpublic setCache(key: string, value: any, ttl?: number): void {\r\n\t\tcache.set(this.uid, key, value, ttl);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves cached value.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param key    Key\r\n\t * @param value  Value to return if cache is not available\r\n\t * @return Value\r\n\t */\r\n\tpublic getCache(key: string, value: any = undefined): any {\r\n\t\treturn cache.get(this.uid, key, value);\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event using own event dispatcher. Will automatically\r\n\t * populate event data object with event type and target (this element).\r\n\t * It also checks if there are any handlers registered for this sepecific\r\n\t * event.\r\n\t *\r\n\t * @param eventType Event type (name)\r\n\t * @param data      Data to pass into event handler(s)\r\n\t */\r\n\tpublic dispatch<Key extends keyof IRegistryEvents>(eventType: Key, data?: any): void {\r\n\t\t// @todo Implement proper type check\r\n\t\tif (this.events.isEnabled(eventType)) {\r\n\t\t\tif (data) {\r\n\t\t\t\tdata.type = eventType;\r\n\t\t\t\tdata.target = data.target || this;\r\n\t\t\t\t(<any>this.events).dispatch(eventType, {\r\n\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.events).dispatch(eventType, {\r\n\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Works like `dispatch`, except event is triggered immediately, without\r\n\t * waiting for the next frame cycle.\r\n\t *\r\n\t * @param eventType Event type (name)\r\n\t * @param data      Data to pass into event handler(s)\r\n\t */\r\n\tpublic dispatchImmediately<Key extends keyof IRegistryEvents>(eventType: Key, data?: any): void {\r\n\t\t// @todo Implement proper type check\r\n\t\tif (this.events.isEnabled(eventType)) {\r\n\t\t\tif (data) {\r\n\t\t\t\tdata.type = eventType;\r\n\t\t\t\tdata.target = data.target || this;\r\n\t\t\t\t(<any>this.events).dispatchImmediately(eventType, data);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(<any>this.events).dispatchImmediately(eventType, {\r\n\t\t\t\t\ttype: eventType,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a unique placeholder suitable for the key.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Random string to be used as placeholder\r\n\t */\r\n\tpublic getPlaceholder(key: string): string {\r\n\t\tif ($type.hasValue(this._placeholders[key])) {\r\n\t\t\treturn this._placeholders[key];\r\n\t\t}\r\n\t\tthis._placeholders[key] = \"__amcharts_\" + key + \"_\" + $string.random(8) + \"__\";\r\n\t\treturn this._placeholders[key];\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic addToInvalidComponents(component: Component) {\r\n\t\tif (component.baseId) {\r\n\t\t\t$array.move(this.invalidDatas[component.baseId], component);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.move(this.invalidDatas[\"noBase\"], component);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic removeFromInvalidComponents(component: Component) {\r\n\t\tif (component.baseId) {\r\n\t\t\t$array.remove(this.invalidDatas[component.baseId], component);\r\n\t\t}\r\n\r\n\t\t$array.remove(this.invalidDatas[\"noBase\"], component);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic addToInvalidSprites(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.add(this.invalidSprites[sprite.baseId], sprite);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.add(this.invalidSprites[\"noBase\"], sprite);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic removeFromInvalidSprites(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.remove(this.invalidSprites[sprite.baseId], sprite);\r\n\t\t}\r\n\r\n\t\t$array.remove(this.invalidSprites[\"noBase\"], sprite);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic addToInvalidPositions(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.add(this.invalidPositions[sprite.baseId], sprite);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.add(this.invalidPositions[\"noBase\"], sprite);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic removeFromInvalidPositions(sprite: Sprite) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.remove(this.invalidPositions[sprite.baseId], sprite);\r\n\t\t}\r\n\r\n\t\t$array.remove(this.invalidPositions[\"noBase\"], sprite);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic addToInvalidLayouts(sprite: Container) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.add(this.invalidLayouts[sprite.baseId], sprite);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.add(this.invalidLayouts[\"noBase\"], sprite);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic removeFromInvalidLayouts(sprite: Container) {\r\n\t\tif (sprite.baseId) {\r\n\t\t\t$array.remove(this.invalidLayouts[sprite.baseId], sprite);\r\n\t\t}\r\n\r\n\t\t$array.remove(this.invalidLayouts[\"noBase\"], sprite);\r\n\t}\r\n}\r\n\r\n/**\r\n * A singleton global instance of [[Registry]].\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let registry = new Registry();\r\n\r\n\r\n/**\r\n * Returns `true` if object is an instance of the class. It's the same as `instanceof` except it doesn't need to import the class.\r\n *\r\n * @param object Object\r\n * @param name Class name\r\n * @return Is instance of class\r\n */\r\nexport function is<A>(object: any, name: string): object is A {\r\n\tconst x = registry.registeredClasses[name];\r\n\treturn x != null && object instanceof x;\r\n}\r\n","/**\r\n * Container module\r\n * @todo Needs description\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents, AMEvent } from \"./Sprite\";\r\nimport { SpriteState } from \"./SpriteState\";\r\nimport { Animation } from \"./utils/Animation\";\r\nimport { List, IListEvents } from \"./utils/List\";\r\nimport { VerticalAlign } from \"./defs/VerticalAlign\";\r\nimport { IDisposer, MultiDisposer } from \"./utils/Disposer\";\r\nimport { Dictionary, DictionaryDisposer } from \"./utils/Dictionary\";\r\nimport { getInteraction } from \"./interaction/Interaction\";\r\nimport { Align } from \"./defs/Align\";\r\nimport { Group } from \"./rendering/Group\";\r\nimport { Rectangle } from \"./elements/Rectangle\";\r\nimport { IPoint } from \"./defs/IPoint\";\r\nimport { Percent } from \"./utils/Percent\";\r\nimport { registry } from \"./Registry\";\r\nimport { Preloader } from \"./elements/Preloader\";\r\nimport { DataItem } from \"./DataItem\";\r\nimport { Optional } from \"./utils/Type\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport { Paper } from \"./rendering/Paper\";\r\nimport * as $iter from \"./utils/Iterator\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $dom from \"./utils/DOM\";\r\nimport { system } from \"./System\";\r\nimport { options } from \"./Options\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available font weights.\r\n */\r\nexport type FontWeight = \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\";\r\n\r\n/**\r\n * Defines available text decorations.\r\n */\r\nexport type TextDecoration = \"none\" | \"underline\" | \"overline\" | \"line-through\" | \"blink\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n// Defined in DataItem.ts\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines available [[Container]] layout types\r\n */\r\nexport type ContainerLayout = \"absolute\" | \"vertical\" | \"horizontal\" | \"grid\" | \"none\";\r\n\r\n/**\r\n * Defines properties for [[Container]]\r\n */\r\nexport interface IContainerProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Container layout.\r\n\t *\r\n\t * Options: \"absolute\" (default), \"vertical\", \"horizontal\", or \"grid\".\r\n\t *\r\n\t * @default \"absolute\"\r\n\t */\r\n\tlayout?: ContainerLayout;\r\n\r\n\t/**\r\n\t * Default font weight.\r\n\t *\r\n\t * @default \"normal\"\r\n\t */\r\n\tfontWeight?: FontWeight;\r\n\r\n\t/**\r\n\t * Font size for the text.\r\n\t */\r\n\tfontSize?: number;\r\n\r\n\t/**\r\n\t * Font family for the text.\r\n\t */\r\n\tfontFamily?: string;\r\n\r\n\t/**\r\n\t * Default font decoration.\r\n\t *\r\n\t * @default \"none\"\r\n\t */\r\n\ttextDecoration?: TextDecoration;\r\n\r\n\t/**\r\n\t * Horizontal alignment of Container's items.\r\n\t */\r\n\tcontentAlign?: Align;\r\n\r\n\t/**\r\n\t * Vertical alignment of Container's items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tcontentValign?: VerticalAlign;\r\n\r\n\t/**\r\n\t * If set to `true`, all columns of the container with layout type \"grid\"\r\n\t * will be equally sized.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tfixedWidthGrid?: boolean;\r\n\r\n\t/**\r\n\t * Maximum number of columns (when using `\"grid\"` layout).\r\n\t */\r\n\tmaxColumns?: number;\r\n\r\n\t/**\r\n\t * If set to `true`, the children of the container will be drawn in reverse\r\n\t * order.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\treverseOrder?: boolean;\r\n\r\n\t/**\r\n\t * Specifies if, when state is applied on this container, the same state\r\n\t * should be applied to container's children as well as `background`.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tsetStateOnChildren?: boolean\r\n}\r\n\r\n/**\r\n * Defines events for the [[Container]]\r\n */\r\nexport interface IContainerEvents extends ISpriteEvents {\r\n\r\n\t/**\r\n\t * Invoked when a child Sprite is added to Container.\r\n\t */\r\n\tchildadded: {\r\n\t\tnewValue: Sprite;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when a child Sprite is removed from\r\n\t */\r\n\tchildremoved: {\r\n\t\toldValue: Sprite;\r\n\t};\r\n\r\n\t/**\r\n\t * invoked when layout of the container is validated\r\n\t */\r\n\tlayoutvalidated:{ }\r\n\r\n};\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface IContainerAdapters extends ISpriteAdapters, IContainerProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Container can contain multiple sprites and arrange them in various layouts.\r\n *\r\n * @see {@link IContainerEvents} for a list of available events\r\n * @see {@link IContainerAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class Container extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IContainerProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IContainerAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IContainerEvents;\r\n\r\n\t/**\r\n\t * Container children. (sorted by layout)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _childrenByLayout: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Available width (px).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _availableWidth: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Available height (px).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _availableHeight: $type.Optional<number>;\r\n\r\n\t/**\r\n\t * Container's child elements. (sorded by their `zIndex`)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _children: $type.Optional<List<Sprite>>;\r\n\r\n\t/**\r\n\t * Container's disposers for its child elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _childrenDisposers: Dictionary<string, IDisposer> = new Dictionary();\r\n\r\n\r\n\t/**\r\n\t * A [[Sprite]] instance to use as Container's background.\r\n\t *\r\n\t * @todo Make it protected\r\n\t */\r\n\tpublic _background: Sprite;\r\n\r\n\t/**\r\n\t * A reference to a [[Preloader]] element to show when Container is building\r\n\t * itself.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _preloader: $type.Optional<Preloader>;\r\n\r\n\t/**\r\n\t * Indicates if this container contains any focused elements, including\r\n\t * itself.\r\n\t */\r\n\tpublic hasFocused: boolean = false;\r\n\r\n\t/**\r\n\t * A reference to a currently focused item.\r\n\t *\r\n\t * @since 4.9.29\r\n\t */\r\n\tpublic focusedElement: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * An array of references to elements the state should be set, when it is set\r\n\t * on this element.\r\n\t */\r\n\tpublic setStateOnSprites: Sprite[] = [];\r\n\r\n\t/*\r\n\t * @ignore\r\n\t */\r\n\tpublic layoutInvalid: boolean = false;\r\n\r\n\tprotected _absoluteWidth: number = 0;\r\n\r\n\tprotected _absoluteHeight: number = 0;\r\n\r\n\t/**\r\n\t * Width (in pixels) of the actual content in the Container.\r\n\t *\r\n\t * Please note that it might be bigger than width of the Container.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic contentWidth: number;\r\n\r\n\t/**\r\n\t * Height (in pixels) of the actual content in the Container.\r\n\t *\r\n\t * Please note that it might be bigger than height of the Container.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic contentHeight: number;\r\n\r\n\r\n\t/**\r\n\t * An array of child Sprites that should be ready before this object can\r\n\t * fire a \"ready\" event.\r\n\t */\r\n\tprotected _shouldBeReady: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Enables touch tap protection.\r\n\t */\r\n\tprotected _tapToActivate: boolean = false;\r\n\r\n\t/**\r\n\t * Timeout reference for `tapToActivate` functionality.\r\n\t */\r\n\tprotected _tapToActivateTimeout: Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * If `tapToActivate` is used, this setting will determine how long the chart\r\n\t * will stay in \"active\" mode.\r\n\t *\r\n\t * @default 3000\r\n\t * @since 4.4.0\r\n\t */\r\n\tpublic tapTimeout: number = 3000;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Container\";\r\n\r\n\t\tthis._element = this.paper.addGroup(\"g\");\r\n\t\tthis.group.add(this.element);\r\n\r\n\t\tthis.setPropertyValue(\"pixelPerfect\", false);\r\n\t\tthis.setPropertyValue(\"layout\", \"absolute\");\r\n\t\tthis.setPropertyValue(\"fixedWidthGrid\", false);\r\n\r\n\t\tthis.setPropertyValue(\"verticalCenter\", \"none\");\r\n\t\tthis.setPropertyValue(\"horizontalCenter\", \"none\");\r\n\r\n\t\tthis._positionPrecision = 4;\r\n\r\n\t\tthis._disposers.push(new DictionaryDisposer(this._childrenDisposers));\r\n\r\n\t\tthis.children.events.on(\"inserted\", this.handleChildAdded, this);\r\n\t\tthis.children.events.on(\"removed\", this.handleChildRemoved, this);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles adding of a new child into `children`. Adding new children might\r\n\t * affect the whole layout so it needs to be revalidated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event object\r\n\t * @todo Throw an exception on adding a disposed object. Of course it's better NOT TO add disposed objects, so that what we should focus on.\r\n\t */\r\n\tpublic handleChildAdded(event: IListEvents<Sprite>[\"inserted\"]): void {\r\n\t\tthis.processChild(event.newValue);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic processChild(child: Sprite) {\r\n\t\t// try solves the problem when somedy adds child directly to children\r\n\t\ttry {\r\n\t\t\tthis._childrenDisposers.insertKey(child.uid, new MultiDisposer([\r\n\t\t\t\t// it's not enough to listen to POSITION_CHANGED only, as some extra redrawals will happen.\r\n\t\t\t\tchild.events.on(\"transformed\", this.handleChildTransform, this),\r\n\t\t\t\tchild.events.on(\"zIndexChanged\", this.sortAndAdd, this)\r\n\t\t\t]));\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\t// void\r\n\t\t}\r\n\r\n\t\tif (this.element) {\r\n\t\t\tlet group = <Group>this.element;\r\n\t\t\tgroup.add(child.group);\r\n\t\t}\r\n\r\n\t\tchild.parent = this;\r\n\t\tchild.paper = this.paper;\r\n\r\n\t\tthis.dispatchImmediately(\"childadded\", { type: \"childadded\", newValue: child });\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected sortAndAdd() {\r\n\t\tthis.sortChildren();\r\n\t\tthis.addChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * Handles child removal. Changing size of the child may change the\r\n\t * whole layout of the Container, hence layout needs to be invalidated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event object\r\n\t */\r\n\tpublic handleChildRemoved(event: IListEvents<Sprite>[\"removed\"]): void {\r\n\t\tlet child: Sprite = event.oldValue;\r\n\r\n\t\t// TODO figure out why the key sometimes doesn't exist\r\n\t\tthis._childrenDisposers.removeKey(child.uid);\r\n\r\n\t\tif (this.element) {\r\n\t\t\tlet group = <Group>this.element;\r\n\t\t\tgroup.removeElement(child.group);\r\n\t\t}\r\n\r\n\t\tif (child.isMeasured) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\r\n\t\tthis.dispatchImmediately(\"childremoved\", { type: \"childremoved\", oldValue: child });\r\n\t}\r\n\r\n\t/**\r\n\t * Handles child transformation. Changing size of the child may change the\r\n\t * whole layout of the Container, hence layout needs to be invalidated.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event Event object\r\n\t */\r\n\tpublic handleChildTransform(event: AMEvent<Sprite, ISpriteEvents>[\"transformed\"] | AMEvent<Sprite, ISpriteEvents>[\"sizechanged\"]): void {\r\n\t\tlet child: Sprite = event.target;\r\n\t\tif (child.isMeasured) {// && this.layout != \"none\" && this.layout != \"absolute\") {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates Container's layout, causing it to be re-evaluated again.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLayout(): void {\r\n\t\tif (this.layoutInvalid || this.disabled || this.isTemplate || this.layout == \"none\" || this.__disabled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.layoutInvalid = true;\r\n\t\tregistry.addToInvalidLayouts(this);\r\n\t\tsystem.requestFrame();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates element.\r\n\t *\r\n\t * Object will be redrawn during the next update cycle.\r\n\t *\r\n\t * Please note that in most cases elements will auto-invalidate when needed. If\r\n\t * everything works, DO NOT use this method. Use it only if some changes do\r\n\t * not take otherwise.\r\n\t */\r\n\tpublic invalidate(): void {\r\n\t\tsuper.invalidate();\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates the whole element, including layout AND all its child\r\n\t * elements.\r\n\t *\r\n\t * As this will essentially force all elements to redraw, use only if\r\n\t * absolutely necessary.\r\n\t */\r\n\tpublic deepInvalidate(): void {\r\n\t\tsuper.invalidate();\r\n\t\t//this.sortChildren();\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\tif (child instanceof Container) {\r\n\t\t\t\tchild.deepInvalidate();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchild.invalidate();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of the child [[Sprite]] elements contained in this\r\n\t * Container.\r\n\t *\r\n\t * @return List of child elements (Sprites)\r\n\t */\r\n\tpublic get children(): List<Sprite> {\r\n\t\t// @todo Review if we can add all children to disposers\r\n\t\tif (!this._children) {\r\n\t\t\tthis._children = new List<Sprite>();\r\n\t\t\t//this._disposers.push(new ListDisposer(this._children));\r\n\t\t}\r\n\t\treturn this._children;\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum width (px) for the Container. A container will not\r\n\t * auto-shrink beyond this value, even if child elements are smaller.\r\n\t *\r\n\t * @param value  Width (px)\r\n\t */\r\n\tpublic set minWidth(value: Optional<number>) {\r\n\t\tif (this.setPropertyValue(\"minWidth\", value)) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get minWidth(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minWidth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum height (px) for the Container. A container will not\r\n\t * auto-shrink beyond this value, even if child elements are smaller.\r\n\t *\r\n\t * @param value  Height (px)\r\n\t */\r\n\tpublic set minHeight(value: Optional<number>) {\r\n\t\tif (this.setPropertyValue(\"minHeight\", value)) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Height (px)\r\n\t */\r\n\tpublic get minHeight(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"minHeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * Overrides the original `removeElement` so that Container's actual element\r\n\t * is not removed. We do not need to remove element of a Container.\r\n\t *\r\n\t * We do this because remove element each time will fail the `getBBox`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts Container's children: the ones with variable width and height are\r\n\t * put at the end of the list (depending on layout type), so that fixed-width\r\n\t * ones can be drawn first.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sortChildren(): void {\r\n\r\n\t\tthis._childrenByLayout = [];\r\n\r\n\t\tif (this.layout == \"none\" || this.layout == \"absolute\" || !this.layout) {\r\n\t\t\t//$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t//\tthis._childrenByLayout.push(child);\r\n\t\t\t//});\r\n\t\t\tthis._childrenByLayout = this.children.values;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Assemble fixed-size and relative lists\r\n\t\t\tlet fixed: Sprite[] = [];\r\n\t\t\tlet relative: Sprite[] = [];\r\n\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tif (this.layout == \"horizontal\" || this.layout == \"grid\") {\r\n\t\t\t\t\tif (!$type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tfixed.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trelative.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.layout == \"vertical\") {\r\n\t\t\t\t\tif (!$type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tfixed.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trelative.push(child);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfixed.push(child);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Concat everything into list\r\n\t\t\tthis._childrenByLayout = fixed.concat(relative);\r\n\t\t}\r\n\r\n\t\tthis.calculateRelativeSize();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates relative sizes for all Container's children.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Make it protected?\r\n\t */\r\n\tpublic calculateRelativeSize(): void {\r\n\t\tlet totalRelativeWidth: number = 0;\r\n\t\tlet totalRelativeHeight: number = 0;\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\t// if child is not measured, we do not care about it at all.\r\n\t\t\tif (child.isMeasured) {\r\n\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\ttotalRelativeWidth += child.percentWidth;\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\ttotalRelativeHeight += child.percentHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\tif (child.isMeasured) {\r\n\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tchild.relativeWidth = child.percentWidth / totalRelativeWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tchild.relativeHeight = child.percentHeight / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tchild.relativeHeight = child.percentHeight / totalRelativeHeight;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tchild.relativeWidth = child.percentWidth / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.layout == \"grid\") {\r\n\t\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\tchild.relativeHeight = child.percentHeight / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\tchild.relativeWidth = child.percentWidth / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.layout == \"absolute\" || !child.isMeasured) {\r\n\t\t\t\tif ($type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\tchild.relativeWidth = child.percentWidth / 100;\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\tchild.relativeHeight = child.percentHeight / 100;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Adds all children to Container's SVG element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected addChildren(): void {\r\n\t\t/*\r\n\t\t  Need this check because a child might be assigned to parent even before element is created, for example a theme\r\n\t\t  access scrollbar.thumb\r\n\t\t*/\r\n\t\tif (this.element) {\r\n\t\t\tlet zindexed = $array.copy(this.children.values); // not children by layout!\r\n\r\n\t\t\tlet sortArray = zindexed.map(function(data, idx) {\r\n\t\t\t\treturn { idx: idx, data: data }\r\n\t\t\t});\r\n\r\n\t\t\tsortArray.sort(function(a: any, b: any) {\r\n\t\t\t\tconst ai = (a.data.zIndex || 0);\r\n\t\t\t\tconst bi = (b.data.zIndex || 0);\r\n\t\t\t\tif (ai < bi) { return -1; }\r\n\t\t\t\tif (ai > bi) { return 1; }\r\n\t\t\t\treturn a.idx - b.idx\r\n\t\t\t});\r\n\r\n\t\t\tzindexed = sortArray.map(function(val) {\r\n\t\t\t\treturn val.data;\r\n\t\t\t});\r\n\r\n\t\t\tlet group = <Group>this.element;\r\n\r\n\t\t\t// check, maybe the order is good already\r\n\t\t\tlet isCorrect = true;\r\n\r\n\t\t\tif (group.node && group.node.childNodes) {\r\n\t\t\t\tfor (let i = 0, len = group.node.childNodes.length; i < len; i++) {\r\n\t\t\t\t\tif (group.node.childNodes[i] != zindexed[i].group.node) {\r\n\t\t\t\t\t\tisCorrect = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!isCorrect) {\r\n\t\t\t\t$array.each(zindexed, (child) => {\r\n\t\t\t\t\tif (child.group) {\r\n\t\t\t\t\t\tgroup.add(child.group);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\tif (this._background) {\r\n\t\t\t\t\tthis.group.addToBack(this._background.group);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.invalidateLayout();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new element of specific type and assigns as a child to the\r\n\t * Container.\r\n\t *\r\n\t * @param Class type for the new element\r\n\t * @return New element\r\n\t */\r\n\tpublic createChild<T extends Sprite>(classType: { new(): T; }): T {\r\n\t\tlet sprite = new classType();\r\n\t\tsprite.parent = this;\r\n\t\treturn sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all Container's children without actually destroying them.\r\n\t *\r\n\t * To destroy children use `disposeChildren()` instead.\r\n\t */\r\n\tpublic removeChildren(): void {\r\n\t\t// remove all children\r\n\t\t// TODO use iteration instead\r\n\t\twhile (this.children.length > 0) {\r\n\t\t\tlet child = <Sprite>this.children.getIndex(0);\r\n\t\t\tchild.parent = undefined;\r\n\t\t\tthis.children.removeValue(child);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes and destroys all Container's children.\r\n\t *\r\n\t * To remove children from Container without destroying them, use\r\n\t * `removeChildren()`.\r\n\t */\r\n\tpublic disposeChildren(): void {\r\n\t\t// TODO use iteration instead\r\n\t\twhile (this.children.length > 0) {\r\n\t\t\tlet child = <Sprite>this.children.getIndex(0);\r\n\t\t\tchild.dispose();\r\n\t\t\tthis.children.removeValue(child);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An element to use as container background.\r\n\t *\r\n\t * @param background  Background element\r\n\t */\r\n\tpublic set background(background: this[\"_background\"]) {\r\n\t\tif (this._background && this.background != background) {\r\n\t\t\tthis.removeDispose(this._background);\r\n\t\t}\r\n\r\n\t\tif (background) {\r\n\t\t\tthis._background = background;\r\n\t\t\tthis._disposers.push(background);\r\n\t\t\tthis.processBackground();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the situation where parent element is resized.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleGlobalScale(): void {\r\n\t\tsuper.handleGlobalScale();\r\n\t\tthis.children.each((child) => {\r\n\t\t\tchild.handleGlobalScale();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a [[Rectangle]] to use as a background for Container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background Rectangle element\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn <any>new Rectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Background element\r\n\t */\r\n\tpublic get background(): this[\"_background\"] {\r\n\t\tif (!this._background) {\r\n\t\t\tthis._background = this.createBackground();\r\n\t\t\tthis.processBackground();\r\n\t\t}\r\n\r\n\t\treturn this._background;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates background element with required properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processBackground(): void {\r\n\t\tlet background = this._background;\r\n\t\tif (background) {\r\n\t\t\tbackground.isMeasured = false;\r\n\t\t\tthis._background.fill = new InterfaceColorSet().getFor(\"background\");\r\n\t\t\tbackground.parent = this;\r\n\t\t\tbackground.isMeasured = false;\r\n\t\t\tthis.children.removeValue(background);\r\n\t\t\tthis._disposers.push(background);\r\n\t\t\tthis.group.addToBack(this._background.group);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the size of container and informs its children of how much size\r\n\t * they can occupy, by setting their relative `maxWidth` and `maxHeight`\r\n\t * properties.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\r\n\t\tregistry.removeFromInvalidLayouts(this);\r\n\r\n\t\tthis.layoutInvalid = false;\r\n\r\n\t\t// prevents from drawing if topparent is 0x0\r\n\t\t/*\r\n\t\tlet topParent = this.topParent;\r\n\t\tif (topParent) {\r\n\t\t\tif (!topParent.maxWidth || !topParent.maxHeight) {\r\n\t\t\t\tthis._disposers.push(topParent.events.once(\"maxsizechanged\", this.invalidateLayout, this));\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\tthis._availableWidth = this.innerWidth;\r\n\t\tthis._availableHeight = this.innerHeight;\r\n\r\n\t\tlet measuredWidth = 0;\r\n\t\tlet measuredHeight = 0;\r\n\r\n\t\tlet allValid = true;\r\n\r\n\t\tif (this.children) {\r\n\r\n\t\t\tthis.sortChildren();\r\n\r\n\t\t\t// we itterate through list of children, sorted by layout priority. sprites which width non-relative width/height will go first, so we will reduce available width before proceeding to sprites with relative width/height\r\n\t\t\t$array.each(this._childrenByLayout, (child) => {\r\n\t\t\t\tlet maxWidth: number;\r\n\t\t\t\tlet maxHeight: number;\r\n\r\n\t\t\t\tif ($type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\tmaxWidth = $math.round(this._availableWidth * child.relativeWidth, 2);\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {// || this.layout == \"absolute\") {\r\n\t\t\t\t\t\tmaxWidth -= child.pixelMarginRight + child.pixelMarginLeft;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\tif (child.invalid) {\r\n\t\t\t\t\t\t\tchild.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\tmaxHeight = $math.round(this._availableHeight * child.relativeHeight, 2);\r\n\t\t\t\t\tif (this.layout == \"vertical\") {//  || this.layout == \"absolute\") {\r\n\t\t\t\t\t\tmaxHeight -= child.pixelMarginTop + child.pixelMarginBottom;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\tif (child.invalid) {\r\n\t\t\t\t\t\t\tchild.validate();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if child is valid\r\n\t\t\t\tif (child.invalid == false) {\r\n\r\n\t\t\t\t\tif ($type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\t\tchild.maxWidth = maxWidth;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\tchild.maxHeight = maxHeight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (child.isMeasured) {\r\n\t\t\t\t\t\t// reduce available width if this is horizontal layout\r\n\t\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\t\tif (!$type.isNumber(child.percentWidth)) {\r\n\t\t\t\t\t\t\t\tif (child.measuredWidth > 0) {\r\n\t\t\t\t\t\t\t\t\tthis._availableWidth -= child.measuredWidth + child.pixelMarginLeft + child.pixelMarginRight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// reduce available height if this is vertical layout\r\n\t\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\t\tif (!$type.isNumber(child.percentHeight)) {\r\n\t\t\t\t\t\t\t\tif (child.measuredHeight > 0) {\r\n\t\t\t\t\t\t\t\t\tthis._availableHeight -= child.measuredHeight + child.pixelMarginTop + child.pixelMarginBottom;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet childMeasuredWidth = child.measuredWidth;\r\n\t\t\t\t\t\tlet childMeasuredHeight = child.measuredHeight;\r\n\r\n\t\t\t\t\t\tif (child.align != \"none\") {\r\n\t\t\t\t\t\t\tchildMeasuredWidth += child.pixelMarginLeft + child.pixelMarginRight;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (child.valign != \"none\") {\r\n\t\t\t\t\t\t\tchildMeasuredHeight += child.pixelMarginTop + child.pixelMarginBottom;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmeasuredWidth = Math.max(measuredWidth, childMeasuredWidth);\r\n\t\t\t\t\t\tmeasuredHeight = Math.max(measuredHeight, childMeasuredHeight);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// if child is not valid\r\n\t\t\t\telse {\r\n\t\t\t\t\t// tell child what maximum width/ height it can occupy\r\n\t\t\t\t\tif (child.isMeasured) {\r\n\t\t\t\t\t\tif ($type.isNumber(child.relativeWidth)) {\r\n\t\t\t\t\t\t\tif (child.maxWidth != maxWidth) { // need to check this because of allValid\r\n\t\t\t\t\t\t\t\tchild.maxWidth = maxWidth;\r\n\t\t\t\t\t\t\t\tallValid = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t\tif (child.maxHeight != maxHeight) { // need to check this because of allValid\r\n\t\t\t\t\t\t\t\tchild.maxHeight = maxHeight;\r\n\r\n\t\t\t\t\t\t\t\tallValid = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._absoluteWidth = measuredWidth;\r\n\t\tthis._absoluteHeight = measuredHeight;\r\n\r\n\t\t// arrange after measuring, only if all children are valid already\r\n\t\tif (allValid) {\r\n\t\t\tthis.arrange();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Arranges children according to layout specs and available space / child\r\n\t * sizes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic arrange(): void {\r\n\t\tlet children = this.children;\r\n\t\t/*\r\n\t\t   in this method we not only arrange children but also find out the size of the container\r\n\t\t   it might seem it would be easier to get container size using sprite's measure method,\r\n\t\t   however it would return only actual size of the bbox. However as each child meight have\r\n\t\t   margins set, we need to check each child - we do it here.\r\n\r\n\t\t   This method doesn't do anything with DOM, so it's not expensive\r\n\t\t*/\r\n\t\tlet measuredWidth: number = 0;\r\n\t\tlet measuredHeight: number = 0;\r\n\r\n\t\t//let innerWidth: number = this.innerWidth; //$math.max(this.innerWidth, this._measuredWidth - paddingLeft - paddingRight);\r\n\t\t//let innerHeight: number = this.innerHeight; //$math.max(this.innerHeight, this._measuredHeight - paddingTop - paddingBottom);\r\n\t\t// above is wrong, as if a w/h is not specified, it is 0 and alignment doesn't work at all.\r\n\t\tlet innerWidth: number = $math.max(this.innerWidth, this._absoluteWidth);\r\n\t\tlet innerHeight: number = $math.max(this.innerHeight, this._absoluteHeight);\r\n\r\n\t\tlet left: $type.Optional<number>;// = 0;\r\n\t\tlet right: $type.Optional<number>;// = innerWidth;\r\n\t\tlet top: $type.Optional<number>;// = 0;\r\n\t\tlet bottom: $type.Optional<number>;// = innerHeight;\r\n\r\n\t\tlet paddingLeft: number = this.pixelPaddingLeft;\r\n\t\tlet paddingRight: number = this.pixelPaddingRight;\r\n\t\tlet paddingTop: number = this.pixelPaddingTop;\r\n\t\tlet paddingBottom: number = this.pixelPaddingBottom;\r\n\r\n\t\tlet nextX: number = 0;\r\n\t\tlet nextY: number = 0;\r\n\t\tlet row: number = 0;\r\n\t\tlet column: number = 0;\r\n\r\n\t\tlet columnWidth: number[] = [];\r\n\t\tlet rowHeight: number[] = [];\r\n\r\n\t\tlet maxCellWidth: $type.Optional<number>;\r\n\t\tlet minCellWidth: $type.Optional<number>;\r\n\t\tlet columnCount: $type.Optional<number>;\r\n\r\n\t\tlet maxWidth = this.maxWidth;\r\n\t\tlet maxHeight = this.maxHeight;\r\n\t\tlet minWidth = this.minWidth;\r\n\t\tlet minHeight = this.minHeight;\r\n\r\n\t\tlet childrenCopy = $array.copy(children.values);\r\n\t\tif (this.reverseOrder) {\r\n\t\t\tchildrenCopy.reverse();\r\n\t\t}\r\n\r\n\t\t// GRID PRECALCULATIONS\r\n\t\tif (this.layout == \"grid\") {\r\n\r\n\t\t\tminCellWidth = maxWidth;\r\n\t\t\tmaxCellWidth = 1;\r\n\r\n\t\t\tfor (let i = 0, len = childrenCopy.length; i < len; i++) {\r\n\t\t\t\tlet child = childrenCopy[i];\r\n\t\t\t\tif (child.isMeasured && !child.disabled && !child.__disabled) {\r\n\t\t\t\t\tlet childMeasuredWidth = child.measuredWidth;\r\n\t\t\t\t\tif (childMeasuredWidth < minCellWidth) {\r\n\t\t\t\t\t\tminCellWidth = childMeasuredWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (childMeasuredWidth > maxCellWidth) {\r\n\t\t\t\t\t\tmaxCellWidth = childMeasuredWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tminCellWidth = $math.fitToRange(minCellWidth, 1, maxWidth);\r\n\t\t\tmaxCellWidth = $math.fitToRange(maxCellWidth, 1, maxWidth);\r\n\r\n\r\n\t\t\tif (this.fixedWidthGrid) {\r\n\t\t\t\tcolumnCount = maxWidth / maxCellWidth;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcolumnCount = maxWidth / minCellWidth; // predicted number of columns, yes it is usually much more than real number, but we fix that later\r\n\t\t\t}\r\n\r\n\t\t\tcolumnCount = $math.max(1, Math.floor(columnCount));\r\n\t\t\tcolumnCount = $math.min(this.maxColumns, columnCount);\r\n\t\t\tcolumnWidth = this.getColumnWidth(childrenCopy, columnCount, maxCellWidth);\r\n\t\t}\r\n\r\n\t\tlet contentLeft: $type.Optional<number>;\r\n\t\tlet contentRight: $type.Optional<number>;\r\n\t\tlet contentTop: $type.Optional<number>;\r\n\t\tlet contentBottom: $type.Optional<number>;\r\n\r\n\t\t// we itterate through array of children\r\n\t\t// TODO use iterator instead\r\n\r\n\r\n\r\n\t\tfor (let i = 0, len = childrenCopy.length; i < len; i++) {\r\n\t\t\tlet child = childrenCopy[i];\r\n\r\n\t\t\tif (child.isMeasured && !child.disabled && !child.__disabled) {\r\n\r\n\t\t\t\tlet x: $type.Optional<number> = undefined;//child.pixelX; // must reset\r\n\t\t\t\tlet y: $type.Optional<number> = undefined;//child.pixelY; // must reset\r\n\r\n\t\t\t\tlet childMarginLeft: number = child.pixelMarginLeft;\r\n\t\t\t\tlet childMarginRight: number = child.pixelMarginRight;\r\n\t\t\t\tlet childMarginTop: number = child.pixelMarginTop;\r\n\t\t\t\tlet childMarginBottom: number = child.pixelMarginBottom;\r\n\r\n\t\t\t\tlet childWidth: number = child.measuredWidth;\r\n\t\t\t\tlet childHeight: number = child.measuredHeight;\r\n\r\n\t\t\t\tlet childLeft: $type.Optional<number>;\r\n\t\t\t\tlet childRight: $type.Optional<number>;\r\n\t\t\t\tlet childTop: $type.Optional<number>;\r\n\t\t\t\tlet childBottom: $type.Optional<number>;\r\n\r\n\t\t\t\tswitch (this.layout) {\r\n\t\t\t\t\tcase \"none\":\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// absolute layout\r\n\t\t\t\t\tcase \"absolute\":\r\n\t\t\t\t\t\t// horizontal alignment\r\n\t\t\t\t\t\tswitch (child.align) {\r\n\t\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\t\tx = childMarginLeft - child.maxLeft;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\t\t\tx = (innerWidth - childWidth) / 2 - child.maxLeft;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\t\tx = innerWidth - childMarginRight - child.maxRight;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tif (!(child.x instanceof Percent)) {\r\n\t\t\t\t\t\t\t\t\tx = child.pixelX;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// vertical alignment\r\n\t\t\t\t\t\tswitch (child.valign) {\r\n\t\t\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t\t\ty = childMarginTop - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\t\ty = (innerHeight - childHeight) / 2 - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\t\t\ty = innerHeight - childMarginBottom - child.maxBottom;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tif (!(child.y instanceof Percent)) {\r\n\t\t\t\t\t\t\t\t\ty = child.pixelY;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// vertical layout\r\n\t\t\t\t\tcase \"vertical\":\r\n\t\t\t\t\t\t//if ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t//\tchildHeight = child.maxHeight;\r\n\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t\tswitch (child.align) {\r\n\t\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\t\tx = childMarginLeft - child.maxLeft;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\t\t\tx = (innerWidth - childWidth) / 2 - child.maxLeft;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\t\tx = innerWidth - childMarginRight - child.maxRight;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tx = child.pixelX;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ty = nextY + childMarginTop - child.maxTop;\r\n\t\t\t\t\t\tnextY = y + child.maxBottom + childMarginBottom;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t// horizontal layout\r\n\t\t\t\t\tcase \"horizontal\":\r\n\r\n\t\t\t\t\t\t//if ($type.isNumber(child.relativeHeight)) {\r\n\t\t\t\t\t\t//\tchildHeight = child.maxHeight;\r\n\t\t\t\t\t\t//}\r\n\r\n\t\t\t\t\t\tswitch (child.valign) {\r\n\t\t\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t\t\ty = childMarginTop - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\t\ty = (innerHeight - childHeight) / 2 - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\t\t\ty = innerHeight - childMarginBottom - child.maxBottom;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\ty = child.pixelY;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tx = nextX + childMarginLeft - child.maxLeft;\r\n\t\t\t\t\t\tnextX = x + child.maxRight + childMarginRight;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"grid\":\r\n\t\t\t\t\t\tx = nextX + childMarginLeft - child.maxLeft;\r\n\t\t\t\t\t\tswitch (child.valign) {\r\n\t\t\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t\t\ty = nextY + childMarginTop - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\t\t\ty = nextY + (innerHeight - childHeight) / 2 - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\t\t\ty = nextY + innerHeight - childMarginBottom - child.maxBottom;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\ty = nextY - child.maxTop;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextX += columnWidth[column];\r\n\r\n\t\t\t\t\t\trowHeight[row] = $math.max(rowHeight[row], childHeight);\r\n\t\t\t\t\t\tcolumn++;\r\n\r\n\t\t\t\t\t\tlet nextColumnWidth = columnWidth[column];\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(nextColumnWidth)) {\r\n\t\t\t\t\t\t\tnextColumnWidth = maxCellWidth;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (nextX > $math.min(this.innerWidth, maxWidth) - nextColumnWidth + 1 && column < columnCount) {\r\n\t\t\t\t\t\t\tcolumnCount = column;\r\n\r\n\t\t\t\t\t\t\tnextX = 0;\r\n\t\t\t\t\t\t\tnextY = 0;\r\n\r\n\t\t\t\t\t\t\trow = 0;\r\n\t\t\t\t\t\t\tcolumn = 0;\r\n\r\n\t\t\t\t\t\t\tcolumnWidth = this.getColumnWidth(childrenCopy, columnCount, maxCellWidth);\r\n\t\t\t\t\t\t\trowHeight = [];\r\n\r\n\t\t\t\t\t\t\ti = -1;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (column >= columnCount) {\r\n\t\t\t\t\t\t\tcolumn = 0;\r\n\t\t\t\t\t\t\tnextY += rowHeight[row];\r\n\t\t\t\t\t\t\trow++;\r\n\t\t\t\t\t\t\tnextX = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.layout !== \"none\") {\r\n\t\t\t\t\tchild.moveTo({ x: x, y: y }); // must use moveTo, otherwise x/y set in percent won't work\r\n\r\n\t\t\t\t\tchildLeft = x + child.maxLeft - childMarginLeft;\r\n\t\t\t\t\tchildRight = x + child.maxRight + childMarginRight;\r\n\t\t\t\t\tchildTop = y + child.maxTop - childMarginTop;\r\n\t\t\t\t\tchildBottom = y + child.maxBottom + childMarginBottom;\r\n\r\n\t\t\t\t\tif (childRight > right || !$type.isNumber(right)) {\r\n\t\t\t\t\t\tright = childRight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childLeft < left || !$type.isNumber(left)) {\r\n\t\t\t\t\t\tleft = childLeft;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childTop < top || !$type.isNumber(top)) {\r\n\t\t\t\t\t\ttop = childTop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childBottom > bottom || !$type.isNumber(bottom)) {\r\n\t\t\t\t\t\tbottom = childBottom;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childRight > contentRight || !$type.isNumber(contentRight)) {\r\n\t\t\t\t\t\tcontentRight = childRight;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childLeft < contentLeft || !$type.isNumber(contentLeft)) {\r\n\t\t\t\t\t\tcontentLeft = childLeft;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childTop < contentTop || !$type.isNumber(contentTop)) {\r\n\t\t\t\t\t\tcontentTop = childTop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (childBottom > contentBottom || !$type.isNumber(contentBottom)) {\r\n\t\t\t\t\t\tcontentBottom = contentBottom;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchild.validatePosition();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.layout == \"none\") {\r\n\t\t\tlet noneBBox = this.bbox;\r\n\t\t\tleft = noneBBox.x;\r\n\t\t\tright = noneBBox.x + noneBBox.width;\r\n\t\t\ttop = noneBBox.y;\r\n\t\t\tbottom = noneBBox.y + noneBBox.height;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(left)) {\r\n\t\t\tleft = 0;\r\n\t\t\tcontentLeft = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(right)) {\r\n\t\t\tright = this._availableWidth;\r\n\t\t\tcontentRight = right;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(top)) {\r\n\t\t\ttop = 0;\r\n\t\t\tcontentTop = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(bottom)) {\r\n\t\t\tbottom = this._availableHeight;\r\n\t\t\tcontentBottom = bottom;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(contentTop)) {\r\n\t\t\tcontentTop = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(contentBottom)) {\r\n\t\t\tcontentBottom = contentTop;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(contentLeft)) {\r\n\t\t\tcontentLeft = 0;\r\n\t\t}\r\n\r\n\t\tif (!$type.isNumber(contentRight)) {\r\n\t\t\tcontentRight = contentLeft;\r\n\t\t}\r\n\r\n\t\tmeasuredWidth = right - left;\r\n\t\tmeasuredHeight = bottom - top;\r\n\r\n\t\tif ($type.isNumber(this.relativeWidth)) {\r\n\t\t\tmeasuredWidth = maxWidth - paddingLeft - paddingRight;\r\n\t\t\tleft = 0;\r\n\t\t\tright = measuredWidth;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this.relativeHeight)) {\r\n\t\t\tmeasuredHeight = maxHeight - paddingTop - paddingBottom;\r\n\t\t\ttop = 0;\r\n\t\t\tbottom = measuredHeight;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._pixelWidth)) {\r\n\t\t\tleft = 0;\r\n\t\t\tmeasuredWidth = this._pixelWidth - paddingLeft - paddingRight;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(minWidth) && measuredWidth < minWidth) {\r\n\t\t\tleft = 0;\r\n\t\t\tmeasuredWidth = this.minWidth - paddingLeft - paddingRight;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(this._pixelHeight)) {\r\n\t\t\ttop = 0;\r\n\t\t\tmeasuredHeight = this._pixelHeight - paddingTop - paddingBottom;\r\n\t\t}\r\n\r\n\t\tif ($type.isNumber(minHeight) && measuredHeight < minHeight) {\r\n\t\t\ttop = 0;\r\n\t\t\tmeasuredHeight = minHeight - paddingTop - paddingBottom;\r\n\t\t}\r\n\r\n\t\tlet measuredContentWidth = contentRight - contentLeft;\r\n\t\tlet measuredContentHeight = contentBottom - contentTop;\r\n\r\n\t\t/// handle content alignment\r\n\t\tif (this.layout != \"none\" && (this.contentAlign || this.contentValign) && children.length > 0) {\r\n\t\t\tlet dx: $type.Optional<number>;\r\n\t\t\tlet dy: $type.Optional<number>;\r\n\r\n\t\t\tlet mwa = measuredWidth;\r\n\t\t\tlet mha = measuredHeight;\r\n\t\t\tif (mwa < measuredContentWidth) {\r\n\t\t\t\tmwa = measuredContentWidth;\r\n\t\t\t}\r\n\r\n\t\t\tif (mha < measuredContentHeight) {\r\n\t\t\t\tmha = measuredContentHeight;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.contentAlign == \"center\") {\r\n\t\t\t\tdx = (mwa - measuredContentWidth) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.contentAlign == \"right\") {\r\n\t\t\t\tdx = mwa - measuredContentWidth;\r\n\t\t\t}\r\n\t\t\tif (this.contentValign == \"middle\") {\r\n\t\t\t\tdy = (mha - measuredContentHeight) / 2;\r\n\t\t\t}\r\n\t\t\tif (this.contentValign == \"bottom\") {\r\n\t\t\t\tdy = mha - measuredContentHeight;\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(dx)) {\r\n\t\t\t\t$iter.each(children.iterator(), (child) => {\r\n\t\t\t\t\tlet childLeft: number = child.maxLeft;\r\n\r\n\t\t\t\t\tlet ddx: number = dx;\r\n\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\tchild.x = child.pixelX + ddx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// individual grid elements can not be aligned vertically, that's why it's different from horizontal\r\n\t\t\t\t\tif (this.layout == \"grid\") {\r\n\t\t\t\t\t\tchild.x = child.pixelX + ddx;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\tddx += child.pixelMarginLeft;\r\n\t\t\t\t\t\tif (child.align == \"none\") {\r\n\t\t\t\t\t\t\tchild.x = ddx - childLeft;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.layout == \"absolute\") {\r\n\t\t\t\t\t\tddx += child.pixelMarginLeft;\r\n\t\t\t\t\t\tif (child.align == \"none\") {\r\n\t\t\t\t\t\t\tchild.x = ddx - childLeft;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(dy)) {\r\n\t\t\t\t$iter.each(children.iterator(), (child) => {\r\n\t\t\t\t\tlet childTop: number = child.maxTop;\r\n\r\n\t\t\t\t\tlet ddy: number = dy;\r\n\r\n\t\t\t\t\tif (this.layout == \"horizontal\") {\r\n\t\t\t\t\t\tddy += child.pixelMarginTop;\r\n\t\t\t\t\t\tif (child.valign == \"none\") {\r\n\t\t\t\t\t\t\tchild.y = ddy - childTop;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// individual grid elements can not be aligned vertically, that's why it's different from horizontal\r\n\t\t\t\t\tif (this.layout == \"grid\") {\r\n\t\t\t\t\t\tddy += child.pixelMarginTop;\r\n\t\t\t\t\t\tchild.y = ddy - childTop;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\t\t\tchild.y = child.pixelY + ddy;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.layout == \"absolute\") {\r\n\t\t\t\t\t\tddy += child.pixelMarginTop;\r\n\r\n\t\t\t\t\t\tif (child.valign == \"none\") {\r\n\t\t\t\t\t\t\tchild.y = ddy - childTop;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet oldBBox = this.bbox;\r\n\r\n\r\n\t\t// this will mess up maxw/maxh set by container layout, we need a separate min/maxwidth for users\r\n\t\t// this prevents invalidating layout in such cases as scrolling category axis, when labels go outside bounds and results transformed event\r\n\t\t// todo: need to check if this doesn't cause other problems.\r\n\t\t//if (this.maxWidth > 0) {\r\n\t\t//measuredWidth = $math.min(measuredWidth, this.maxWidth);\r\n\t\t//measuredWidth = $math.max(measuredWidth, this.minWidth);\r\n\t\t//}\r\n\r\n\t\t//if (this.maxHeight > 0) {\r\n\t\t//measuredHeight = $math.min(measuredHeight, this.maxHeight);\r\n\t\t//measuredHeight = $math.max(measuredHeight, this.minHeight);\r\n\t\t//}\r\n\r\n\t\tmeasuredWidth = $math.max(measuredWidth, minWidth);\r\n\t\tmeasuredHeight = $math.max(measuredHeight, minHeight);\r\n\r\n\t\tthis.contentWidth = measuredWidth;\r\n\t\tthis.contentHeight = measuredHeight;\r\n\t\t// new\r\n\t\tmeasuredWidth = $math.min(measuredWidth, maxWidth);\r\n\t\tmeasuredHeight = $math.min(measuredHeight, maxHeight);\r\n\r\n\t\tthis._bbox = { x: left, y: top, width: measuredWidth, height: measuredHeight };\r\n\r\n\t\tlet prevLeft = this.maxLeft;\r\n\t\tlet prevTop = this.maxTop;\r\n\t\tlet prevBotttom = this.maxBottom;\r\n\t\tlet prevRight = this.maxRight;\r\n\r\n\t\tthis.measure();\r\n\r\n\t\tif (prevLeft != this.maxLeft || prevRight != this.maxRight || prevTop != this.maxTop || prevBotttom != this.maxBottom) {\r\n\t\t\tif (this.events.isEnabled(\"transformed\")) {\r\n\t\t\t\tlet event: AMEvent<this, IContainerEvents>[\"transformed\"] = {\r\n\t\t\t\t\ttype: \"transformed\",\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t};\r\n\t\t\t\tif (oldBBox) {\r\n\t\t\t\t\tevent.dummyData = oldBBox.width + \" \" + measuredWidth + \"  \" + oldBBox.height + \" \" + measuredHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.events.dispatchImmediately(\"transformed\", event);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.dispatchImmediately(\"layoutvalidated\");\r\n\t}\r\n\r\n\t/**\r\n\t * Positions element according its center settings.\r\n\t *\r\n\t * @todo Description (review)\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateCenter() {\r\n\t\tsuper.updateCenter();\r\n\t\tthis.updateBackground();\r\n\t}\r\n\r\n\t/**\r\n\t * Update the background to fit into specific dimensions.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Make it protected?\r\n\t */\r\n\tpublic updateBackground(): void {\r\n\t\tlet background: Sprite = this._background; // accessing protected, as getter creates instance if it doesn't exist\r\n\r\n\t\tif (background) {\r\n\t\t\tbackground.x = this.maxLeft;\r\n\t\t\tbackground.y = this.maxTop;\r\n\t\t\tbackground.width = this.maxRight - this.maxLeft;\r\n\t\t\tbackground.height = this.maxBottom - this.maxTop;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns widths of all columns in a horizontal Container layout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param columnCount   Number of columns\r\n\t * @param maxCellWidth  Maximum width of one grid cell\r\n\t * @return An array of column widths\r\n\t */\r\n\tpublic getColumnWidth(children: Sprite[], columnCount: number, maxCellWidth: number): number[] {\r\n\t\tlet columnWidth: number[] = [];\r\n\t\tlet column: number = 0;\r\n\r\n\t\t$array.each(children, (child) => {\r\n\t\t\tif (child.isMeasured && !child.disabled && !child.__disabled) {\r\n\t\t\t\tif (this.fixedWidthGrid) {\r\n\t\t\t\t\tcolumnWidth[column] = maxCellWidth;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumnWidth[column] = $math.max(columnWidth[column], child.measuredWidth + child.pixelMarginRight + child.pixelMarginLeft);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolumn++;\r\n\r\n\t\t\t\tif (column == columnCount) {\r\n\t\t\t\t\tcolumn = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn columnWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Container layout.\r\n\t *\r\n\t * Options: \"absolute\" (default), \"vertical\", \"horizontal\", \"grid\", \"none\". \"none\" is quite the same as \"absolute\" - the objects will\r\n\t * be positioned at their x, y coordinates, the difference is that with \"absolute\" you can still use align/valign for children and with \"none\" you can not.\r\n\t * Use \"none\" as much as you can as it's most cpu-saving layout.\r\n\t *\r\n\t * @default \"absolute\"\r\n\t * @param value Layout\r\n\t */\r\n\tpublic set layout(value: ContainerLayout) {\r\n\t\tif (this.setPropertyValue(\"layout\", value)) {\r\n\t\t\tthis.invalidateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Layout\r\n\t */\r\n\tpublic get layout(): ContainerLayout {\r\n\t\treturn this.getPropertyValue(\"layout\");\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical alignment of the elements for the vertical Container.\r\n\t *\r\n\t * This is used when Container is larger than the height of all its children.\r\n\t *\r\n\t * @param value vertical alignment\r\n\t */\r\n\tpublic set contentValign(value: VerticalAlign) {\r\n\t\tthis.setPropertyValue(\"contentValign\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical alignment\r\n\t */\r\n\tpublic get contentValign(): VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"contentValign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal alignment of the elements for the horizontal Container.\r\n\t *\r\n\t * This is used when Container is larger than the height of all its children.\r\n\t *\r\n\t * @param value  Horizontal alignment\r\n\t */\r\n\tpublic set contentAlign(value: Align) {\r\n\t\tthis.setPropertyValue(\"contentAlign\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal alignment\r\n\t */\r\n\tpublic get contentAlign(): Align {\r\n\t\treturn this.getPropertyValue(\"contentAlign\");\r\n\t}\r\n\r\n\t/**\r\n\t * Controls if the grid of the Container should use fixed width. Fixed width\r\n\t * grid will divide available space to all its columns/rows equally, without\r\n\t * adapting to actual child sizes or size requirements.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Should use fixed width grid?\r\n\t */\r\n\tpublic set fixedWidthGrid(value: boolean) {\r\n\t\tthis.setPropertyValue(\"fixedWidthGrid\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Should use fixed width grid?\r\n\t */\r\n\tpublic get fixedWidthGrid(): boolean {\r\n\t\treturn this.getPropertyValue(\"fixedWidthGrid\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of columns (when using `\"grid\"` layout).\r\n\t *\r\n\t * @param value  Should use fixed width grid?\r\n\t */\r\n\tpublic set maxColumns(value: Optional<number>) {\r\n\t\tthis.setPropertyValue(\"maxColumns\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Should use fixed width grid?\r\n\t */\r\n\tpublic get maxColumns(): Optional<number> {\r\n\t\treturn this.getPropertyValue(\"maxColumns\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, the children of the container will be drawn in reverse\r\n\t * order.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Reverse children?\r\n\t */\r\n\tpublic set reverseOrder(value: Optional<boolean>) {\r\n\t\tthis.setPropertyValue(\"reverseOrder\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Reverse children?\r\n\t */\r\n\tpublic get reverseOrder(): Optional<boolean> {\r\n\t\treturn this.getPropertyValue(\"reverseOrder\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if, when state is applied on this container, the same state\r\n\t * should be applied to container's children as well as `background`.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Set state on children\r\n\t */\r\n\tpublic set setStateOnChildren(value: boolean) {\r\n\t\tthis.setPropertyValue(\"setStateOnChildren\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Set state on children\r\n\t */\r\n\tpublic get setStateOnChildren(): boolean {\r\n\t\treturn this.getPropertyValue(\"setStateOnChildren\");\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if point is within bounds of a container.\r\n\t *\r\n\t * @param point  A coordinate to check\r\n\t * @return `true` if it fits within container\r\n\t */\r\n\tpublic fitsToBounds(point: IPoint): boolean {\r\n\t\tlet x = point.x;\r\n\t\tlet y = point.y;\r\n\t\tlet deviation = 0.5; // sometimes coordinates are rounded to numbers like .999 so we add deviation here\r\n\t\tif (x >= -deviation && x <= this.pixelWidth + deviation && y >= -deviation && y <= this.pixelHeight + deviation) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from different Container, including background\r\n\t * clone.\r\n\t *\r\n\t * @param source  Source Container to copy from\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.layout = source.layout;\r\n\t\tthis.setStateOnChildren = source.setStateOnChildren;\r\n\r\n\t\tif (source._background) {\r\n\t\t\tthis.background = source._background.clone();\r\n\t\t\tthis.background.copyFrom(source._background); // won't work without this\r\n\t\t}\r\n\r\n\t\t$iter.each(source.children.iterator(), (child) => {\r\n\t\t\tif (child.shouldClone) {\r\n\t\t\t\tlet clonedChild: Sprite = child.clone();\r\n\t\t\t\tclonedChild.parent = this;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Preloader]] instance to be used when Container is busy.\r\n\t *\r\n\t * @param preloader  Preloader instance\r\n\t */\r\n\tpublic set preloader(preloader: $type.Optional<Preloader>) {\r\n\t\tif (this._preloader) {\r\n\t\t\tthis.removeDispose(this._preloader);\r\n\t\t}\r\n\t\tthis._preloader = preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.parent = this.tooltipContainer;\r\n\t\t\tthis._disposers.push(preloader);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Preloader instance\r\n\t */\r\n\tpublic get preloader(): $type.Optional<Preloader> {\r\n\t\tconst preloader = this._preloader;\r\n\r\n\t\tif (preloader) {\r\n\t\t\treturn preloader;\r\n\t\t}\r\n\t\telse if (this.parent) {\r\n\t\t\treturn this.parent.preloader;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t * @ignore\r\n\t * @param paper Paper\r\n\t * @return true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\t\tlet changed = super.setPaper(paper);\r\n\r\n\t\tif (changed) {\r\n\t\t\tif (this._background) {\r\n\t\t\t\tthis._background.paper = paper;\r\n\t\t\t\tthis._background.topParent = this.topParent;\r\n\t\t\t}\r\n\t\t\tthis.children.each((child) => {\r\n\t\t\t\tchild.setPaper(paper);\r\n\t\t\t\tchild.topParent = this.topParent;\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes Container from the system-wide list of invalid Containers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected removeFromInvalids() {\r\n\t\tsuper.removeFromInvalids();\r\n\t\tregistry.removeFromInvalidLayouts(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataItem]] to be used as data for the Container.\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem DataItem\r\n\t */\r\n\tprotected setDataItem(dataItem: DataItem) {\r\n\t\t// this place is potentially dangerous, as if we set datItem for some dummy container, all children dataItems will be overriden\r\n\t\t// the main reason for doing this is that we need a setDataItem code to be called for each sprite, otherwise property fields won't be\r\n\t\t// applied. Also, getting dataItem from parent all the time is more expensive than saving value.\r\n\t\tif (this._dataItem != dataItem) {\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tchild.dataItem = dataItem;\r\n\t\t\t});\r\n\r\n\t\t\tif (this._background) {\r\n\t\t\t\tthis._background.dataItem = dataItem;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.setDataItem(dataItem);\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\tif (this.disabled || this.isTemplate || this.layout == \"none\" || this.__disabled) {\r\n\t\t\t// void\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.validateLayout();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Font family to be used for the text.\r\n\t *\r\n\t * Parts of the text may override this setting using in-line formatting.\r\n\t *\r\n\t * @param value Font family value\r\n\t */\r\n\tpublic set fontFamily(value: string) {\r\n\t\tif (this.setPropertyValue(\"fontFamily\", value, true)) {\r\n\t\t\tthis.setSVGAttribute({ \"font-family\": value });\r\n\t\t\tthis.invalidateLabels();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Font family\r\n\t */\r\n\tpublic get fontFamily(): string {\r\n\t\treturn this.getPropertyValue(\"fontFamily\");\r\n\t}\r\n\r\n\t/**\r\n\t * Font size to be used for the text. The size can either be numeric, in\r\n\t * pixels, or other measurements.\r\n\t *\r\n\t * Parts of the text may override this setting using in-line formatting.\r\n\t *\r\n\t * @param value Font size value\r\n\t */\r\n\tpublic set fontSize(value: any) {\r\n\t\tif (this.setPropertyValue(\"fontSize\", value, true)) {\r\n\t\t\tthis.setSVGAttribute({ \"font-size\": value });\r\n\t\t\tthis.invalidateLabels();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Font size\r\n\t */\r\n\tpublic get fontSize(): any {\r\n\t\treturn this.getPropertyValue(\"fontSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * When fontSize of fontFamily changes we need to hard-invalidate all Labels of this container to position them properly.\r\n\t */\r\n\tpublic invalidateLabels() {\r\n\t\tthis.children.each((child) => {\r\n\t\t\t// can't import Label because of Circular dependencies\r\n\t\t\tif ((<any>child)[\"hardInvalidate\"]) {\r\n\t\t\t\t(<any>child)[\"hardInvalidate\"]();\r\n\t\t\t\t// this fixes firefox and viewport issue\r\n\t\t\t\tchild.events.once(\"validated\", (<any>child).handleValidate, child, false);\r\n\t\t\t}\r\n\t\t\telse if (child instanceof Container) {\r\n\t\t\t\tchild.invalidateLabels();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Font weight to use for text.\r\n\t *\r\n\t * Parts of the text may override this setting using in-line formatting.\r\n\t *\r\n\t * @param value Font weight\r\n\t */\r\n\tpublic set fontWeight(value: FontWeight) {\r\n\t\tthis.setPropertyValue(\"fontWeight\", value);\r\n\t\tthis.setSVGAttribute({ \"font-weight\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Font weight\r\n\t */\r\n\tpublic get fontWeight(): FontWeight {\r\n\t\treturn this.getPropertyValue(\"fontWeight\");\r\n\t}\r\n\r\n\t/**\r\n\t * A text decoration to use for text.\r\n\t *\r\n\t * Parts of the text may override this setting using in-line formatting.\r\n\t *\r\n\t * @param value  Decoration\r\n\t */\r\n\tpublic set textDecoration(value: TextDecoration) {\r\n\t\tthis.setPropertyValue(\"textDecoration\", value);\r\n\t\tthis.setSVGAttribute({ \"text-decoration\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Decoration\r\n\t */\r\n\tpublic get textDecoration(): TextDecoration {\r\n\t\treturn this.getPropertyValue(\"textDecoration\");\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes (destroys) the element and all its children.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tif (this._background) {\r\n\t\t\tthis._background.dispose();\r\n\t\t}\r\n\t\tthis._shouldBeReady = [];\r\n\t\tthis.disposeChildren();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Applies a [[SpriteState]] on this element.\r\n\t *\r\n\t * The first parameter can either be a name of the state or a [[SpriteState]]\r\n\t * instance.\r\n\t *\r\n\t * When run, this method will apply SVG properties defined in a\r\n\t * [[SpriteState]], but only those that are relevant to this particular\r\n\t * element, that is are listed in its respective `properties` array.\r\n\t *\r\n\t * @see {@link SpriteState}\r\n\t * @param value               A state - name key or instance\r\n\t * @param transitionDuration  Duration of the transition between current and new state\r\n\t * @param easing              An easing function\r\n\t */\r\n\tpublic setState(value: string | SpriteState<this[\"_properties\"], this[\"_adapter\"]>, transitionDuration?: number, easing?: (value: number) => number): $type.Optional<Animation> {\r\n\r\n\t\tlet stateName = value;\r\n\t\tif (value instanceof SpriteState) {\r\n\t\t\tstateName = value.name;\r\n\t\t}\r\n\r\n\t\tif (this.setStateOnChildren) {\r\n\t\t\t$iter.each(this.children.iterator(), (child) => {\r\n\t\t\t\tchild.setState(stateName, transitionDuration, easing);\r\n\r\n\t\t\t\t// not good to set it in child setState\r\n\t\t\t\tif (stateName != \"active\") {\r\n\t\t\t\t\tchild.isActive = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (this._background) {\r\n\t\t\tthis._background.setState(stateName);\r\n\t\t}\r\n\r\n\t\tif (this.setStateOnSprites.length) {\r\n\t\t\t$array.each(this.setStateOnSprites, (item) => {\r\n\t\t\t\titem.setState(stateName, transitionDuration, easing);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn super.setState(value, transitionDuration, easing);\r\n\t}\r\n\r\n\t// otherwise isActive won't work properly with background\r\n\tprotected setActive(value: boolean) {\r\n\t\tsuper.setActive(value);\r\n\t\tif (this._background) {\r\n\t\t\tthis._background.isActive = value;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Dispatches ready event. Dispatches when all children are ready.\r\n\t */\r\n\tpublic dispatchReady() {\r\n\t\tif (!this.isReady() && !this.isDisposed()) {\r\n\t\t\tlet allReady = true;\r\n\r\n\t\t\t$iter.eachContinue(this.children.iterator(), (sprite) => {\r\n\t\t\t\tif (!sprite.__disabled && !sprite.disabled && !sprite.isReady()) {\r\n\t\t\t\t\tallReady = false;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$array.eachContinue(this._shouldBeReady, (sprite) => {\r\n\t\t\t\tif (!sprite.__disabled && !sprite.disabled && !sprite.isReady()) {\r\n\t\t\t\t\tallReady = false;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (allReady) {\r\n\t\t\t\tsuper.dispatchReady();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tregistry.events.once(\"exitframe\", () => {\r\n\t\t\t\t\tthis.dispatchReady();\r\n\t\t\t\t\tsystem.requestFrame();\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Called during the System.update method\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _systemUpdate(skippedSprites: Array<Sprite>): void {\r\n\t\tthis.children.each((child) => {\r\n\t\t\tif (child.invalid) {\r\n\t\t\t\tif (!child._systemCheckIfValidate()) {\r\n\t\t\t\t\tskippedSprites.push(child);\r\n\t\t\t\t}\r\n\t\t\t\telse if (child.dataItem && child.dataItem.component && child.dataItem.component.dataInvalid) {\r\n\t\t\t\t\tskippedSprites.push(child);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tchild.validate();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsuper._systemUpdate(skippedSprites);\r\n\t}\r\n\r\n\t/**\r\n\t * Called during the System.validatePositions method\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _systemValidatePositions() {\r\n\t\tthis.children.each((sprite) => {\r\n\t\t\tif (sprite.positionInvalid) {\r\n\t\t\t\tsprite.validatePosition();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsuper._systemValidatePositions();\r\n\t}\r\n\r\n\t/**\r\n\t * Called during the System.validateLayouts method\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _systemValidateLayouts() {\r\n\t\tif (this.layoutInvalid && !this.isDisposed()) {\r\n\t\t\tthis.validateLayout();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` the chart's regular touch functionality will be suspended\r\n\t * so that the whole page it is located in remains scrollable, even when\r\n\t * swiping over the chart's body.\r\n\t *\r\n\t * User will need to tap the chart in order to activate its regular touch\r\n\t * functionality.\r\n\t *\r\n\t * The chart will remain \"active\" as long as user keeps interacting with the\r\n\t * chart. After `tapTimeout` milliseconds the chart will return to its\r\n\t * \"protected\" mode.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.4.0\r\n\t * @param  value  Enable touch protection?\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n\t */\r\n\tpublic set tapToActivate(value: boolean) {\r\n\t\tif (this._tapToActivate != value) {\r\n\t\t\tthis.setTapToActivate(value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Enable touch protection?\r\n\t */\r\n\tpublic get tapToActivate(): boolean {\r\n\t\treturn this._tapToActivate;\r\n\t}\r\n\r\n\tprotected setTapToActivate(value: boolean): void {\r\n\t\tthis._tapToActivate = value;\r\n\t\tthis.interactions.isTouchProtected = value;\r\n\t\t// setEventDisposer will also remove listeners if value == false\r\n\t\tif (value) {\r\n\t\t\tthis.interactions.setEventDisposer(\"container-tapToActivate\", value, () => new MultiDisposer([\r\n\t\t\t\tthis.events.on(\"hit\", this.handleTapToActivate, this, false),\r\n\t\t\t\tthis.events.on(\"down\", this.initTapTimeout, this, false),\r\n\t\t\t\tthis.events.on(\"track\", this.initTapTimeout, this, false),\r\n\t\t\t\t//this.events.on(\"drag\", this.initTapTimeout, this, false),\r\n\t\t\t\tgetInteraction().body.events.on(\"down\", (ev) => {\r\n\t\t\t\t\tif (!getInteraction().isLocalElement(ev.pointer, this.paper.svg, this.uid)) {\r\n\t\t\t\t\t\tthis.handleTapToActivateDeactivation();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this, false)\r\n\t\t\t]));\r\n\t\t}\r\n\r\n\t\tgetInteraction()\r\n\t}\r\n\r\n\t/**\r\n\t * @todo Ignore on non-touch events\r\n\t */\r\n\tprotected handleTapToActivate(): void {\r\n\t\tthis.interactions.isTouchProtected = false;\r\n\t\tthis.initTapTimeout();\r\n\t}\r\n\r\n\tprotected handleTapToActivateDeactivation(): void {\r\n\t\tthis.interactions.isTouchProtected = true;\r\n\t}\r\n\r\n\tprotected initTapTimeout(): void {\r\n\t\tif (this._tapToActivateTimeout) {\r\n\t\t\tthis._tapToActivateTimeout.dispose();\r\n\t\t}\r\n\t\tif (this.tapToActivate && !this.interactions.isTouchProtected && this.tapTimeout) {\r\n\t\t\tthis._tapToActivateTimeout = this.setTimeout(() => {\r\n\t\t\t\tthis.handleTapToActivateDeactivation()\r\n\t\t\t}, this.tapTimeout);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the whole chart to other HTML container.\r\n\t *\r\n\t * `htmlElement` can either be a reference to a DOM element, or an id of\r\n\t * such element.\r\n\t *\r\n\t * @since 4.9.24\r\n\t * @param  htmlElement  Target element\r\n\t */\r\n\tpublic moveHtmlContainer(htmlElement: string | HTMLElement): void {\r\n\t\tlet newContainer = $dom.getElement(htmlElement);\r\n\t\tif (newContainer) {\r\n\t\t\tthis.htmlContainer = newContainer;\r\n\t\t\tconst svgDiv = this.svgContainer;\r\n\t\t\tsvgDiv.htmlElement = newContainer;\r\n\t\t\tsvgDiv.htmlElement.appendChild(svgDiv.SVGContainer);\r\n\t\t\tsvgDiv.initSensor();\r\n\t\t\tsvgDiv.measure();\r\n\t\t}\r\n\t\telse if($type.isString(htmlElement) && htmlElement != \"\") {\r\n\t\t\tsystem.log(\"html container '\" + htmlElement + \"' not found\");\r\n\t\t\t//throw new Error(\"html container not found\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Has license?\r\n\t */\r\n\tpublic hasLicense(): boolean {\r\n\t\tif (options.commercialLicense) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tfor (let i = 0; i < options.licenses.length; i++) {\r\n\t\t\tif (options.licenses[i].match(/^CH.{5,}/i)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Container\"] = Container;\r\n","/**\r\n * This module contains a base class for an SVG filter.\r\n *\r\n * Filters can be used to decorate, change and transform just about any DOM\r\n * element.\r\n *\r\n * A Filter works by applying one or more effects (primitives) to SVG element.\r\n *\r\n * For more information on how SVG filters work, refer to\r\n * [this MDN tutorial](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Filters_Tutorial).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { Paper, getGhostPaper } from \"../Paper\";\r\nimport { Group } from \"../Group\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Animation, IAnimatable, IAnimationOptions, AnimationDisposer } from \"../../utils/Animation\";\r\nimport { List } from \"../../utils/List\";\r\nimport { Sprite } from \"../../Sprite\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for a base filter\r\n */\r\nexport interface FilterProperties {\r\n\r\n\t/**\r\n\t * Width of the filter in percent.\r\n\t *\r\n\t * @default 120\r\n\t */\r\n\twidth: number;\r\n\r\n\t/**\r\n\t * Height of the filter in percent.\r\n\t *\r\n\t * @default 120\r\n\t */\r\n\theight: number;\r\n\r\n  /**\r\n   * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/filterUnits\r\n   */\r\n\tfilterUnits: \"userSpaceOnUse\" | \"objectBoundingBox\";\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base filter class.\r\n *\r\n * This class while can be instantiated will not do anything. It is just a base\r\n * functionality for any other \"real\" filters to extend.\r\n *\r\n * Filters can be used to decorate, change and transform just about any DOM\r\n * element.\r\n *\r\n * A Filter works by applying one or more effects (primitives) to SVG element.\r\n *\r\n * For more information on how SVG filters work, refer to\r\n * [this MDN tutorial](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Filters_Tutorial).\r\n *\r\n * @todo Example\r\n */\r\nexport class Filter extends BaseObject implements IAnimatable {\r\n\r\n\t/**\r\n\t * List of animations currently running for the filter.\r\n\t */\r\n\tprotected _animations: $type.Optional<Array<Animation>>;\r\n\r\n\t/**\r\n\t * Contains a list of filter primitives (effects) applied by the filter.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic filterPrimitives: List<AMElement>;\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: FilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @see {@link FilterProperties}\r\n\t */\r\n\tpublic properties: this[\"_properties\"] = <any>{};\r\n\t//public propertyValues = new Dictionary<FilterProperties, any>();\r\n\r\n\t/**\r\n\t * An SVG `<group>` element hold primitive (effect) definitions.\r\n\t */\r\n\tpublic filterElement: $type.Optional<Group>;\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * A Paper instance to add element to.\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * [_scale description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _scale: number = 1;\r\n\r\n\t/**\r\n\t * [_nonScaling description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _nonScaling: boolean = true;\r\n\r\n\t/**\r\n\t * A target element this filter is currently attached to.\r\n\t *\r\n\t * We need to keep track of it because one filter can be used for just one\r\n\t * element, so we have to remove it from the old \"parent\" when attaching to\r\n\t * the new one.\r\n\t */\r\n\tprotected _sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Filter\";\r\n\r\n\t\t// Create a list to hold primitives (effect elements)\r\n\t\tthis.filterPrimitives = new List<any>();\r\n\t\tthis.properties.filterUnits = \"objectBoundingBox\";\r\n\r\n\t\t// Automatically add added primitives to `_disposers` so they are discarded\r\n\t\t// when Filter object is destroyed (disposed)\r\n\t\tthis.filterPrimitives.events.on(\"inserted\", (ev) => {\r\n\t\t\tthis._disposers.push(ev.newValue);\r\n\t\t});\r\n\r\n\t\t// Set default dimensions\r\n\t\tthis.width = 120;\r\n\t\tthis.height = 120;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Appends actual filter elements to the filter group.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param filterElement An SVG `<group>` element to add filter element to\r\n\t */\r\n\tpublic appendPrimitives(filterElement: Group): void {\r\n\t\t$iter.each(this.filterPrimitives.iterator(), (filterPrimitive) => {\r\n\t\t\tfilterElement.add(filterPrimitive);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Uses Transitions filter's values from current to target. This is used to\r\n\t * smoothly appear filter, rather than it pop into effect.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param animationOptions  Animation options\r\n\t * @param duration          Duration in milliseconds\r\n\t * @param easing            Easing function\r\n\t * @return Animation instance\r\n\t */\r\n\tpublic animate(animationOptions: IAnimationOptions[] | IAnimationOptions, duration: number, easing?: (value: number) => number): Animation {\r\n\t\tlet animation: Animation = new Animation(this, animationOptions, duration, easing).start();\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Width of the filter element in percent.\r\n\t *\r\n\t * If the filter is designed to \"bleed out\" of the original target element,\r\n\t * like for example a shadow, you need this bigger than 100, or the\r\n\t * non-fitting parts will be clipped.\r\n\t *\r\n\t * @default 120\r\n\t * @param value Width (px)\r\n\t */\r\n\tpublic set width(value: number) {\r\n\t\tthis.properties[\"width\"] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (%)\r\n\t */\r\n\tpublic get width(): number {\r\n\t\treturn this.properties[\"width\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Height of the filter element in percent.\r\n\t *\r\n\t * If the filter is designed to \"bleed out\" of the original target element,\r\n\t * like for example a shadow, you need this bigger than 100, or the\r\n\t * non-fitting parts will be clipped.\r\n\t *\r\n\t * @default 120\r\n\t * @param value Height (%)\r\n\t */\r\n\tpublic set height(value: number) {\r\n\t\tthis.properties[\"height\"] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Height\r\n\t */\r\n\tpublic get height(): number {\r\n\t\treturn this.properties[\"height\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties from another [[Filter]] object.\r\n\t *\r\n\t * @param filter Source [[Filter]] object\r\n\t */\r\n\tpublic copyFrom(filter: this): void {\r\n\t\tsuper.copyFrom(filter);\r\n\t\t$object.each(filter.properties, (key, value) => {\r\n\t\t\t(<any>this)[key] = value;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to create filter's elements in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tif (this._paper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * All animations currently in play.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return List of animations\r\n\t */\r\n\tpublic get animations(): Array<Animation> {\r\n\t\tif (!this._animations) {\r\n\t\t\tthis._animations = [];\r\n\t\t\tthis._disposers.push(new AnimationDisposer(this._animations));\r\n\t\t}\r\n\t\treturn this._animations;\r\n\t}\r\n\r\n\t/**\r\n\t * [[Sprite]] uses this method to inform filter about it's scale.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic set scale(value: number) {\r\n\t\tthis._scale = value;\r\n\t\tthis.updateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this._scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates filter properties which depend on scale.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateScale() {\r\n\t\t// Dummy method for extending classes to override.\r\n\t}\r\n\r\n\t/**\r\n\t * Which units are used when drawing filter.\r\n\t *\r\n\t * Use `\"userSpaceOnUse\"` when applying filters on a perfectly straight line.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default objectBoundingBox\r\n\t * @param value Filter units\r\n\t */\r\n\tpublic set filterUnits(value: \"objectBoundingBox\" | \"userSpaceOnUse\") {\r\n\t\tthis.properties.filterUnits = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Filter units\r\n\t */\r\n\tpublic get filterUnits(): \"objectBoundingBox\" | \"userSpaceOnUse\" {\r\n\t\treturn this.properties.filterUnits;\r\n\t}\r\n\r\n\t/**\r\n\t * If a filter is non scaling, it will look the same even if the sprite is\r\n\t * scaled, otherwise filter will scale together with a [[Sprite]].\r\n\t *\r\n\t * @default false\r\n\t * @param value  Non scaling?\r\n\t */\r\n\tpublic set nonScaling(value: boolean) {\r\n\t\tthis._nonScaling = value;\r\n\t\tif (!value) {\r\n\t\t\tthis._scale = 1;\r\n\t\t}\r\n\t\tthis.updateScale();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Non scaling?\r\n\t */\r\n\tpublic get nonScaling(): boolean {\r\n\t\treturn this._nonScaling;\r\n\t}\r\n\r\n\t/**\r\n\t * A target element this filter is currently attached to.\r\n\t *\r\n\t * We need to keep track of it because one filter can be used for just one\r\n\t * element, so we have to remove it from the old \"parent\" when attaching to\r\n\t * the new one.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Target element\r\n\t */\r\n\tpublic set sprite(value: Sprite) {\r\n\t\tthis.setSprite(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets filter's target element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Element filter is being attached to\r\n\t */\r\n\tprotected setSprite(value: Sprite): void {\r\n\t\tif (this._sprite && this._sprite != value) {\r\n\t\t\tthis._sprite.filters.removeValue(this);\r\n\t\t}\r\n\t\tthis._sprite = value;\r\n\t}\r\n}\r\n","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Ordering } from \"./Order\";\n\n\n/**\n * ============================================================================\n * COMPARING FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Comparing function used for ordering.\n *\n * @ignore Exclude from docs\n * @param a  Number 1\n * @param b  Number 2\n * @return Result\n */\nexport function order(a: number, b: number): Ordering {\n\tif (a === b) {\n\t\treturn 0;\n\n\t} else if (a < b) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n","/**\n * A collection of functions for ordering.\n */\n\n/**\n * ============================================================================\n * UTILITY FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Defines values that ordering functions can return.\n */\nexport type Ordering = -1 | 0 | 1;\n\n/**\n * [reverse description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param a  [description]\n * @return [description]\n */\nexport function reverse(a: Ordering): Ordering {\n\tswitch (a) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase -1:\n\t\t\treturn 1;\n\t\tcase 1:\n\t\t\treturn -1;\n\t}\n}\n\n/**\n * [or description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param a  Item 1\n * @param b  Item 2\n * @return [description]\n */\nexport function or(a: Ordering, b: Ordering): Ordering {\n\tif (a === 0) {\n\t\treturn b;\n\n\t} else {\n\t\treturn a;\n\t}\n}\n","/**\r\n * An Adapter can be used to apply chained synchronous transformations to any\r\n * value at runtime.\r\n *\r\n * Each type class using Adapters must have `adapters` property and adapter\r\n * interface defined.\r\n *\r\n * Adapters can be used to allow external code to apply transformations to any\r\n * value at any time.\r\n *\r\n * For example we have a Weather class which has a method `now()` which returns\r\n * current temperature.\r\n *\r\n * ```\r\n * function now() {\r\n *   // ... calculate temperature\r\n *   let temp = \"Temperature now is \" + degrees + \"F\";\r\n *   return temp;\r\n * }\r\n * ```\r\n *\r\n * Now, supposed we want to let other classes to modify the output of the\r\n * `now()`? We just apply an adapter to the `temp` before it is returned:\r\n *\r\n * ```\r\n * temp = this.adapters.apply(\"now\", {\r\n *   temp: temp,\r\n *   degrees: degrees\r\n * }).temp;\r\n * ```\r\n *\r\n * Some other class might tap onto it by defining an Adapter that calculates\r\n * the temperature in Celsius:\r\n *\r\n * weather.adapters.add(\"now\", (arg) => {\r\n *   arg.temp += \"(\" + farenheitToCelsius(arg.degrees) + \"C)\";\r\n *   return arh;\r\n * });\r\n *\r\n * Furthermore some time-related class could add time:\r\n *\r\n * weather.adapters.add(\"now\", (arg) => {\r\n *   arg.temp += \"; the time now is \" + (new Date().toLocaleString());\r\n *   return arh;\r\n * });\r\n *\r\n * So without adapters we would get output like this:\r\n *\r\n * ```\r\n * Temperature now is 90F\r\n * ```\r\n *\r\n * With adapters applied we now have:\r\n *\r\n * ```\r\n * Temperature now is 90F (32C); the time now is 12/11/2012, 7:00:00 PM\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SortedList } from \"./SortedList\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $number from \"./Number\";\r\nimport * as $order from \"./Order\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Adapter interface.\r\n */\r\ninterface IAdapterCallback<Target, T> {\r\n\tid: number;\r\n\tkey: any;\r\n\tcallback: any;\r\n\tscope: any;\r\n\tpriority: number;\r\n}\r\n\r\n/**\r\n * Defines an interface for a global adapter.\r\n */\r\ninterface IGlobalAdapterCallback {\r\n\tid: number;\r\n\tkey: string;\r\n\tcallback: <T, Target, Key extends keyof T, C>(this: C, value: T[Key], target: Target, key?: keyof T) => T[Key];\r\n\tscope: any;\r\n\tpriority: number;\r\n\ttype: { new(): any };\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * GLOBAL ADAPTER\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A global adapter is an adpater that is attached to a class type rather than\r\n * specific object instance.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class GlobalAdapter {\r\n\r\n\t/**\r\n\t * Callback id iterator.\r\n\t */\r\n\tprivate _callbackId: number = 0;\r\n\r\n\t/**\r\n\t * A list of if callbacks (adapters).\r\n\t */\r\n\tprivate _callbacks = new SortedList<IGlobalAdapterCallback>((left, right) => {\r\n\t\treturn $order.or($number.order(left.priority, right.priority),\r\n\t\t\t$number.order(left.id, right.id));\r\n\t});\r\n\r\n\tpublic addAll<T, Target, Key extends keyof T>(\r\n\t\ttype: { new(): Target },\r\n\t\tkey: Key,\r\n\t\tcallback: (value: T[Key], target: Target, key: keyof T) => T[Key],\r\n\t\tpriority?: number\r\n\t): void;\r\n\r\n\tpublic addAll<T, Target, Key extends keyof T, C>(\r\n\t\ttype: { new(): Target },\r\n\t\tkey: Key,\r\n\t\tcallback: (this: C, value: T[Key], target: Target, key: keyof T) => T[Key],\r\n\t\tpriority?: number,\r\n\t\tscope?: C\r\n\t): void;\r\n\r\n\t/**\r\n\t * Adds a global callback which is not specific to any particular object.\r\n\t * Whenever an adapter in any object of the specific class type is invoked\r\n\t * global adapters will kick in.\r\n\t *\r\n\t * @param type      Class type\r\n\t * @param key       Adapter key\r\n\t * @param callback  Callback function\r\n\t * @param priority  Priority (higher priority meaning adapter will be applied later)\r\n\t * @param scope     Callback function scaope\r\n\t */\r\n\tpublic addAll(type: any, key: any, callback: any, priority: number = 0, scope?: any): void {\r\n\t\tthis._callbacks.insert({\r\n\t\t\tid: ++this._callbackId,\r\n\t\t\tkey: key,\r\n\t\t\tcallback: callback,\r\n\t\t\tpriority: priority,\r\n\t\t\tscope: scope,\r\n\t\t\ttype: type\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if there are adapters for specific type available.\r\n\t *\r\n\t * @param type  Adapter type\r\n\t * @param key   Adapter key\r\n\t * @return {boolean}\r\n\t */\r\n\tpublic isEnabled<T, Target, Key extends keyof T>(type: Target, key: Key): boolean {\r\n\t\treturn $array.any(this._callbacks.values, (x) => x.key === key && type instanceof x.type);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies global adapters for the object of the specific type.\r\n\t *\r\n\t * @param type   Class type\r\n\t * @param key    Adapter key\r\n\t * @param value  Value\r\n\t */\r\n\tpublic applyAll<T, Target, Key extends keyof T = keyof T>(type: Target, key: Key, value: T[Key]): T[Key] {\r\n\t\t// This is needed to improve the performance and reduce garbage collection\r\n\t\tconst callbacks = this._callbacks.values;\r\n\t\tconst length = callbacks.length;\r\n\r\n\t\tif (length == 0) {\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\t// Cycle through all callbacks and find the ones we need to use\r\n\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\tconst item = callbacks[i];\r\n\r\n\t\t\tif (item.key === key && type instanceof item.type) {\r\n\t\t\t\tvalue = (<any>item).callback.call(item.scope, value, type, key);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A global Adapter for plugins that want to add specific\r\n * functionality for any chart, not just specific instance.\r\n *\r\n * If you want to add an adapter which applies to all instances of the same\r\n * object type, like, for instance all slices in PieSeries, you can use\r\n * global adapter.\r\n *\r\n * Global adapter is a system-wide instance, accessible via `globalAdapter`.\r\n *\r\n * ```TypeScript\r\n * am4core.globalAdapter.addAll<am4charts.IPieSeriesAdapters, am4charts.PieSeries, \"fill\">(am4charts.PieSeries, \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n * ```JavaScript\r\n * am4core.globalAdapter.addAll(am4charts.PieSeries, \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n *\r\n * @ignore\r\n */\r\nexport let globalAdapter: GlobalAdapter = new GlobalAdapter();\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REGULAR ADAPTER\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Adapter allows adding ordered callback functions and associating them with a\r\n * string-based key. An Adapter user can then easily invoke those callbacks to\r\n * apply custom functions on its input, output or intermediate values.\r\n *\r\n * Custom code and plugins can add their own callbacks to modify and enhance\r\n * core functionality.\r\n *\r\n * See the description of `add()` for an example.\r\n *\r\n * Almost any object in amCharts4 has own adapter, accessible with `adapter`\r\n * property.\r\n *\r\n * Any adapters added to it will be applied to that object only.\r\n *\r\n * ### Global Adapters\r\n *\r\n * If you want to add an adapter which applies to all instances of the same\r\n * object type, like, for instance all slices in PieSeries, you can use\r\n * global adapter.\r\n *\r\n * Global adapter is a system-wide instance, accessible via `globalAdapter`.\r\n *\r\n * ```TypeScript\r\n * am4core.globalAdapter.addAll<am4charts.IPieSeriesAdapters, am4charts.PieSeries, \"fill\">(am4charts.PieSeries. \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n * ```JavaScript\r\n * am4core.globalAdapter.addAll(am4charts.PieSeries. \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n *\r\n * {@link https://www.amcharts.com/docs/v4/reference/adapter_module/#globalAdapter_property More info}.\r\n *\r\n * @important\r\n */\r\nexport class Adapter<Target, T> {\r\n\r\n\t/**\r\n\t * Internal counter for callback ids.\r\n\t */\r\n\tprivate _callbackId: number = 0;\r\n\r\n\t/**\r\n\t * A list of adapter callbacks.\r\n\t *\r\n\t * @param $number.order(left.priority, right.priority) [description]\r\n\t * @param $number.order(left.id,       right.id));\t}  [description]\r\n\t */\r\n\tprivate _callbacks = new SortedList<IAdapterCallback<Target, T>>((left, right) => {\r\n\t\treturn $order.or($number.order(left.priority, right.priority),\r\n\t\t\t$number.order(left.id, right.id));\r\n\t});\r\n\r\n\tprotected _disabled: { [key in keyof T]?: number } = {};\r\n\r\n\t/**\r\n\t * Holds an object reference this Adapter is for.\r\n\t */\r\n\tpublic object: Target;\r\n\r\n\t/**\r\n\t * Event dispatcher.\r\n\t */\r\n\tpublic events: EventDispatcher<{\r\n\t\tinserted: {};\r\n\t\tremoved: {};\r\n\t}>;\r\n\r\n\t/**\r\n\t * Constructor, sets the object referece this Adapter should be used for.\r\n\t *\r\n\t * @param c Object\r\n\t */\r\n\tconstructor(c: Target) {\r\n\t\tthis.object = c;\r\n\r\n\t\t// TODO this exposes the internal events\r\n\t\tthis.events = this._callbacks.events;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a callback for a specific key.\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Override fill color value and make all slices green\r\n\t * chart.series.template.adapter.add(\"fill\", (value, target, key) => {\r\n\t *   return am4core.color(\"#005500\");\r\n\t * });\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Override fill color value and make all slices green\r\n\t * chart.series.template.adapter.add(\"fill\", function(value, target, key) {\r\n\t *   return am4core.color(\"#005500\");\r\n\t * });\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"adapter\": {\r\n\t *     \t// Override fill color value and make all slices green\r\n\t *     \t\"fill\": function(value, target, key) {\r\n\t *     \t  return am4core.color(\"#005500\");\r\n\t *     \t}\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will call user-defined function (adapter) whenever `fill` value\r\n\t * is requested from the Pie series, allowing it to override the default\r\n\t * using custom code and any fuzzy logic.\r\n\t *\r\n\t * There can be any number of adapters set on one property key.\r\n\t *\r\n\t * In this case adapters will be applied in daisy-chain fashion. The first\r\n\t * adapter in queue will make its transformation. The next one will have\r\n\t * the output of the first adapter as a starting value, etc.\r\n\t *\r\n\t * The order of the adapters are determined either by the order they were\r\n\t * added in, or their `priority` value.\r\n\t *\r\n\t * The heigher the `priority`, the later in the game adapter will be applied.\r\n\t *\r\n\t * @param key       Key\r\n\t * @param callback  A callback function\r\n\t * @param priority  The higher priority, the more chance the adapter will be applied last\r\n\t * @param scope     Scope for the callback function\r\n\t */\r\n\tpublic add<Key extends keyof T, C>(key: Key, callback: (this: C, value: T[Key], target: Target, key: Key) => T[Key], priority: number = 0, scope?: C): void {\r\n\t\tthis._callbacks.insert({\r\n\t\t\tid: ++this._callbackId,\r\n\t\t\tkey: key,\r\n\t\t\tcallback: callback,\r\n\t\t\tpriority: priority,\r\n\t\t\tscope: scope\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether specific adapter is already set.\r\n\t *\r\n\t * @param key       Key\r\n\t * @param callback  A callback function\r\n\t * @param priority  The higher priority, the more chance the adapter will be applied last\r\n\t * @param scope     Scope for the callback function\r\n\t * @returns                            Adapter set?\r\n\t */\r\n\tpublic has<Key extends keyof T, C>(key: Key, callback: (this: C, value: T[Key], target: Target, key: Key) => T[Key], priority: number = 0, scope?: C): boolean {\r\n\t\treturn $iter.contains(this._callbacks.iterator(), (item) => {\r\n\t\t\treturn item.key === key && item.callback === callback && item.priority === priority && item.scope === scope;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Removes adapter callbacks for the specific `key`.\r\n\t *\r\n\t * If `priority` is specified, only callbacks for that priority are removed.\r\n\t *\r\n\t * @param key      Key\r\n\t * @param priority Priority\r\n\t * @todo Implement\r\n\t */\r\n\tpublic remove(key: string, priority?: number): void {\r\n\t\t// It has to make a copy because it removes the elements while iterating\r\n\t\t// TODO inefficient\r\n\t\t// TODO should this re-enable the key ?\r\n\t\t$array.each($iter.toArray(this._callbacks.iterator()), (item) => {\r\n\t\t\t// TODO test this\r\n\t\t\tif (item.key === key && (!$type.isNumber(priority) || priority === item.priority)) {\r\n\t\t\t\tthis._callbacks.remove(item);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Enable applying adapters for a certain key, if it was disabled before by\r\n\t * `disableKey()`.\r\n\t *\r\n\t * @param key Key\r\n\t */\r\n\tpublic enableKey<Key extends keyof T>(key: Key): void {\r\n\t\tdelete this._disabled[key];\r\n\t}\r\n\r\n\t/**\r\n\t * Disable applying adapters for a certain key.\r\n\t *\r\n\t * Optionally, can set how many applies to skip before automatically\r\n\t * re-enabling the applying.\r\n\t *\r\n\t * @param key     Key\r\n\t * @param amount  Number of applies to skip\r\n\t */\r\n\tpublic disableKey<Key extends keyof T>(key: Key, amount: number = Infinity): void {\r\n\t\tthis._disabled[key] = amount;\r\n\t}\r\n\r\n\tprotected _hasListenersByType<Key extends keyof T>(key: Key): boolean {\r\n\t\treturn $array.any(this._callbacks.values, (x) => x.key === key);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if there are any enabled adapters set for the specific `key`.\r\n\t *\r\n\t * @returns Are there any adapters for the key?\r\n\t */\r\n\tpublic isEnabled<Key extends keyof T>(key: Key): boolean {\r\n\t\treturn this._disabled[key] == null && (this._hasListenersByType(key) || globalAdapter.isEnabled<T, Target, Key>(this.object, key));\r\n\t}\r\n\r\n\tprotected _shouldDispatch<Key extends keyof T>(key: Key): boolean {\r\n\t\tconst count = this._disabled[key];\r\n\r\n\t\tif (!$type.isNumber(count)) {\r\n\t\t\treturn true;\r\n\r\n\t\t} else {\r\n\t\t\tif (count <= 1) {\r\n\t\t\t\tdelete this._disabled[key];\r\n\r\n\t\t\t} else {\r\n\t\t\t\t--this._disabled[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Passes the input value through all the callbacks for the defined `key`.\r\n\t *\r\n\t * @param key      Key\r\n\t * @param value    Input value\r\n\t * @param ...rest  Rest of the parameters to be passed into callback\r\n\t * @return Output value\r\n\t */\r\n\tpublic apply<Key extends keyof T>(key: Key, value: T[Key]): T[Key] {\r\n\t\tif (this._shouldDispatch(key)) {\r\n\t\t\t// This is needed to improve the performance and reduce garbage collection\r\n\t\t\tconst callbacks = this._callbacks.values;\r\n\t\t\tconst length = callbacks.length;\r\n\r\n\t\t\tif (length > 0) {\r\n\t\t\t\tfor (let i = 0; i < length; ++i) {\r\n\t\t\t\t\tconst item = callbacks[i];\r\n\r\n\t\t\t\t\tif (item.key === key) {\r\n\t\t\t\t\t\tvalue = item.callback.call(item.scope, value, this.object, key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Apply global adapters\r\n\t\t\tvalue = globalAdapter.applyAll<T, Target, Key>(this.object, key, value);\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t} else {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all adapter keys which are in this adapter.\r\n\t *\r\n\t * @return Adapter keys\r\n\t */\r\n\tpublic keys(): Array<string> {\r\n\t\t// TODO inefficient\r\n\t\treturn $iter.toArray($iter.map(this._callbacks.iterator(), (x) => x.key));\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all the adapter callbacks from `source`.\r\n\t *\r\n\t * @param source  An Adapter to copy items from\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\t$iter.each(source._callbacks.iterator(), (x) => {\r\n\t\t\tthis.add(x.key, x.callback, x.priority, x.scope);\r\n\t\t});\r\n\t\t$object.each(source._disabled, (key, val) => {\r\n\t\t\tthis._disabled[key] = val;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all callbacks from this Adapter.\r\n\t */\r\n\tpublic clear(): void {\r\n\t\t// TODO should this also re-enable all the keys ?\r\n\t\tthis._callbacks.clear();\r\n\t}\r\n\r\n}\r\n","/**\r\n * Provides functionality used to build scrollbars.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { IRange } from \"../defs/IRange\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../Sprite\";\r\nimport { Orientation } from \"../defs/Orientation\";\r\nimport { ResizeButton } from \"../elements/ResizeButton\";\r\nimport { Button } from \"../elements/Button\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { MouseCursorStyle } from \"../interaction/Mouse\";\r\nimport { RoundedRectangle } from \"../elements/RoundedRectangle\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent, Percent } from \"../utils/Percent\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Scrollbar]].\r\n */\r\nexport interface IScrollbarProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Duration in milliseconds of Scrollbar animation.\r\n\t *\r\n\t * This affects how fast Scrollbar elements move/resize. For example when\r\n\t * chart zooms or pans, Scrollbar elements' positions need to be adjusted\r\n\t * as well. This setting will affect whether they will be relocated\r\n\t * instantenously (0), or will animte gradually.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * An easing function to use when animating (moving/sizing) Scrollbar\r\n\t * elements.\r\n\t */\r\n\tanimationEasing?: (value: number) => number;\r\n\r\n\t/**\r\n\t * Orientation of a scrollbar\r\n\t */\r\n\torientation?: Orientation;\r\n}\r\n\r\n/**\r\n * Defines events for [[Scrollbar]].\r\n */\r\nexport interface IScrollbarEvents extends IContainerEvents {\r\n\r\n\t/**\r\n\t * Invoked when range of scrollbar selection changes.\r\n\t */\r\n\trangechanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Scrollbar]].\r\n */\r\nexport interface IScrollbarAdapters extends IContainerAdapters, IScrollbarProperties {\r\n\r\n\t/**\r\n\t * Applied to a position value when it is retrieved.\r\n\t */\r\n\tpositionValue: {\r\n\t\tvalue: any,\r\n\t\tposition: number\r\n\t}\r\n\r\n\t/**\r\n\t * Applied to a position value when it is retrieved.\r\n\t */\r\n\tpositionValueDirection: {\r\n\t\tflipped: boolean\r\n\t}\r\n\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Scrollbar is a generic control allowing to select a range of values or pan\r\n * the selection.\r\n *\r\n * @see {@link IScrollbarEvents} for a list of available events\r\n * @see {@link IScrollbarAdapters} for a list of available Adapters\r\n */\r\nexport class Scrollbar extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IScrollbarProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IScrollbarAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IScrollbarEvents;\r\n\r\n\t/**\r\n\t * Holds a reference to a draggable rectangle that fills the space between\r\n\t * two selection grips. It can be used to pan the selection maintaining the\r\n\t * distance between start and end grips.\r\n\t */\r\n\tprotected _thumb: $type.Optional<Button>;\r\n\r\n\t/**\r\n\t * Orientation of the scrollbar.\r\n\t */\r\n\tprotected _orientation: Orientation;\r\n\r\n\t/**\r\n\t * A button (grip) instance to be used to select lower range value.\r\n\t */\r\n\tprotected _startGrip!: ResizeButton;\r\n\r\n\t/**\r\n\t * A button (grip) instance to be used to select upper range value.\r\n\t */\r\n\tprotected _endGrip!: ResizeButton;\r\n\r\n\t/**\r\n\t * Currently selected lower (start) value.\r\n\t */\r\n\tprotected _start!: number;\r\n\r\n\t/**\r\n\t * Currently selected upper (end) value.\r\n\t */\r\n\tprotected _end!: number;\r\n\r\n\t/**\r\n\t * Previously selected lower (start) value.\r\n\t */\r\n\tprotected _previousStart: $type.Optional<number> = 0;\r\n\r\n\t/**\r\n\t * Previously selected upper (end) value.\r\n\t */\r\n\tprotected _previousEnd: $type.Optional<number> = 1;\r\n\r\n\t/**\r\n\t * An [[Animation]] instance that moves \"thumb\".\r\n\t */\r\n\tprotected _thumbAnimation: $type.Optional<Animation>;\r\n\r\n\t/**\r\n\t * An [[Animation]] instance that moves zoom grip buttons.\r\n\t */\r\n\tprotected _zoomAnimation: $type.Optional<Animation>;\r\n\r\n\t/**\r\n\t * A value of previously selected lower value, used for doubleclick function.\r\n\t */\r\n\tprotected _prevStart: number = 0;\r\n\r\n\t/**\r\n\t * A value of previously selected upper value, used for doubleclick function.\r\n\t */\r\n\tprotected _prevEnd: number = 1;\r\n\r\n\t/**\r\n\t * Indicates if the Scrollbar is currently \"busy\" (animating and or\r\n\t * performing zoom by user interaction).\r\n\t */\r\n\tprotected _isBusy: boolean = false;\r\n\r\n\t/**\r\n\t * [_skipRangeEvents description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _skipRangeEvents: boolean = false;\r\n\r\n\t/**\r\n\t * Holds timeout reference that resets \"busy\" status.\r\n\t */\r\n\tprotected _unbusyTimeout: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * [undefined description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _usingGrip: \"start\" | \"end\" | undefined;\r\n\r\n\t/**\r\n\t * Sets the type of the element to use as background.\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\t/**\r\n\t * Hide grips when not hovered over scrollbar?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tprotected _hideGrips!: boolean;\r\n\r\n\t/**\r\n\t * A disposer for the hover event.\r\n\t */\r\n\tprotected _overDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * A disposer for the out event.\r\n\t */\r\n\tprotected _outDisposer: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Update the selection when dragging the grips.\r\n\t *\r\n\t * If set to `false` selection will be updated only when the grip is\r\n\t * released.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic updateWhileMoving: boolean = true;\r\n\r\n\t/**\r\n\t * Construtor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"Scrollbar\";\r\n\r\n\t\tthis.minHeight = 12;\r\n\t\tthis.minWidth = 12;\r\n\r\n\t\tthis.animationDuration = 0;\r\n\t\tthis.animationEasing = $ease.cubicOut;\r\n\r\n\t\tthis.margin(10, 10, 10, 10);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// background is also container as it might contain graphs, grid, etc\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(10, 10, 10, 10);\r\n\t\tbackground.fill = interfaceColors.getFor(\"fill\");\r\n\t\tbackground.fillOpacity = 0.5;\r\n\r\n\t\t// Make system tooltips appear by default\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tthis.startGrip = new ResizeButton();\r\n\t\tthis.endGrip = new ResizeButton();\r\n\r\n\t\t// Default orientation...\r\n\t\t// ... is set in `applyInternalDefaults()` because it accesses `language`\r\n\t\t// and should only be started to access when parent is set\r\n\r\n\t\t// Set events\r\n\t\tthis.events.on(\"transformed\", () => {\r\n\t\t\tthis.updateThumb()\r\n\t\t}, this, false);\r\n\r\n\t\t// Initial positions\r\n\t\tthis.start = 0;\r\n\t\tthis.end = 1;\r\n\r\n\t\t// Set roles\r\n\t\tthis.role = \"scrollbar\";\r\n\t\tthis.thumb.role = \"slider\";\r\n\t\tthis.thumb.readerLive = \"polite\";\r\n\t\tthis.startGrip.role = \"slider\";\r\n\t\tthis.endGrip.role = \"slider\";\r\n\r\n\t\t// otherwise range changed won't be registered\r\n\t\tthis.events.once(\"inited\", () => {\r\n\t\t\tthis._previousStart = undefined;\r\n\t\t\tthis.dispatchRangeChange();\r\n\t\t}, undefined, false)\r\n\r\n\r\n\t\tthis.hideGrips = false;\r\n\r\n\t\tthis.orientation = \"horizontal\";\r\n\r\n\t\t// Min/max values for accessibility\r\n\t\tthis.setSVGAttribute({ \"aria-valuemin\": \"0\" });\r\n\t\tthis.setSVGAttribute({ \"aria-valuemax\": \"100\" });\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Set screen reader tetxt accordingly\r\n\t\tif (this.orientation === \"horizontal\") {\r\n\t\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\t\tthis.readerTitle = this.language.translate(\"Use TAB to select grip buttons or left and right arrows to change selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.thumb.readerDescription)) {\r\n\t\t\t\tthis.thumb.readerDescription = this.language.translate(\"Use left and right arrows to move selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.startGrip.readerDescription)) {\r\n\t\t\t\tthis.startGrip.readerDescription = this.language.translate(\"Use left and right arrows to move left selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.endGrip.readerDescription)) {\r\n\t\t\t\tthis.endGrip.readerDescription = this.language.translate(\"Use left and right arrows to move right selection\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.readerOrientation = \"horizontal\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\t\tthis.readerTitle = this.language.translate(\"Use TAB select grip buttons or up and down arrows to change selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.thumb.readerDescription)) {\r\n\t\t\t\tthis.thumb.readerDescription = this.language.translate(\"Use up and down arrows to move selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.startGrip.readerDescription)) {\r\n\t\t\t\tthis.startGrip.readerDescription = this.language.translate(\"Use up and down arrows to move upper selection\");\r\n\t\t\t}\r\n\t\t\tif (!$type.hasValue(this.endGrip.readerDescription)) {\r\n\t\t\t\tthis.endGrip.readerDescription = this.language.translate(\"Use up and down arrows to move lower selection\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.readerOrientation = \"vertical\";\r\n\t\t}\r\n\r\n\t\tthis.readerControls = this.baseSprite.uidAttr();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates the layout of the scrollbar's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateLayout(): void {\r\n\t\tthis.updateSize();\r\n\t\tsuper.validateLayout();\r\n\r\n\t\t// when size changes, need to update extremes\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * Update background for the scrollbar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic processBackground(): void {\r\n\t\tsuper.processBackground();\r\n\t\tlet background = this.background;\r\n\r\n\t\tbackground.clickable = true;\r\n\t\tbackground.events.on(\"hit\", this.handleBgHit, this, undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to the particular place when clicked/tapped on the scrollbar\r\n\t * background.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleBgHit(event: ISpriteEvents[\"hit\"]): void {\r\n\t\tthis.makeBusy();\r\n\t\tlet point: IPoint = event.spritePoint;\r\n\t\tpoint = $utils.spritePointToSprite(point, this.background, this);\r\n\t\tlet thumb: Sprite = this.thumb;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tlet thumbX: number = point.x - thumb.pixelWidth / 2;\r\n\t\t\tthumbX = $math.fitToRange(thumbX, 0, this.innerWidth - thumb.pixelWidth);\r\n\t\t\tthis._thumbAnimation = thumb.animate({ property: \"x\", to: thumbX }, this.animationDuration, this.animationEasing);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet thumbY: number = point.y - thumb.pixelHeight / 2;\r\n\t\t\tthumbY = $math.fitToRange(thumbY, 0, this.innerHeight - thumb.pixelHeight);\r\n\t\t\tthis._thumbAnimation = thumb.animate({ property: \"y\", to: thumbY }, this.animationDuration, this.animationEasing);\r\n\t\t}\r\n\t\tif (this.animationDuration > 0) {\r\n\t\t\tthis._thumbAnimation.events.on(\"animationended\", this.makeUnbusy, this, false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._thumb.validate();\r\n\t\t\tthis.makeUnbusy();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set scrollbar as busy. (currently zooming)\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makeBusy(): void {\r\n\t\tthis._isBusy = true;\r\n\t\tthis._skipRangeEvents = false;\r\n\t\tif (this._unbusyTimeout) {\r\n\t\t\tthis.removeDispose(this._unbusyTimeout);\r\n\t\t}\r\n\t\tthis._unbusyTimeout = undefined;\r\n\t\tthis.stopAnimations();\r\n\t}\r\n\r\n\t/**\r\n\t * Stops all animations, currently playing for the scrollbar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic stopAnimations(): void {\r\n\t\tif (this._thumbAnimation) {\r\n\t\t\tthis._thumbAnimation.stop(true);\r\n\t\t}\r\n\t\tif (this._zoomAnimation) {\r\n\t\t\tthis._zoomAnimation.stop(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels \"busy\" status of the Scrollbar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makeUnbusy(): void {\r\n\t\t/**\r\n\t\t * We cannot make Scrollbar not busy right after release, because then axes\r\n\t\t * will take over controll and Scrollbar will start to animate.\r\n\t\t * Theorethically, it's not right to set timeout by `animationDuration`,\r\n\t\t * however we can not know all the durations of elements we scroll, so we\r\n\t\t * assume that animation duration will be the same as\r\n\t\t * `interpolationDuration` or `rangeChange` duration.\r\n\t\t */\r\n\t\tthis._unbusyTimeout = this.setTimeout(this.makeUnbusyReal.bind(this), this.animationDuration * 1.1);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * [makeUnbusyReal description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic makeUnbusyReal(): void {\r\n\t\tthis._usingGrip = undefined;\r\n\t\tthis._isBusy = false;\r\n\t\tif (!this.updateWhileMoving) {\r\n\t\t\tthis.dispatchRangeChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disptatches rangechanged event if it really changed\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected dispatchRangeChange() {\r\n\t\tif (this._previousEnd != this.end || this._previousStart != this.start) {\r\n\t\t\tthis._previousStart = this.start;\r\n\t\t\tthis._previousEnd = this.end;\r\n\t\t\tthis.dispatch(\"rangechanged\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the \"thumb\" element. A draggable element between the grips.\r\n\t * @ignore\r\n\t */\r\n\tpublic updateThumb(dispatchEvents: boolean = true): void {\r\n\r\n\t\tif (!this.parent) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet thumb: Sprite = this.thumb;\r\n\r\n\t\tlet start: number = this.start;\r\n\t\tlet end: number = this.end;\r\n\r\n\t\tlet startGrip: ResizeButton = this.startGrip;\r\n\t\tlet endGrip: ResizeButton = this.endGrip;\r\n\r\n\t\tconst directionFlipped = this.adapter.apply(\"positionValueDirection\", {\r\n\t\t\tflipped: false\r\n\t\t}).flipped;\r\n\r\n\t\tconst fromName = directionFlipped ? \"To %1\" : \"From %1\";\r\n\t\tconst toName = directionFlipped ? \"From %1\" : \"To %1\";\r\n\r\n\t\tlet fromValue: any;\r\n\t\tlet toValue: any;\r\n\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\r\n\t\t\tlet innerWidth: number = this.innerWidth;\r\n\r\n\t\t\tthumb.width = innerWidth * (end - start);\r\n\t\t\tthumb.maxX = innerWidth - thumb.pixelWidth;\r\n\t\t\tthumb.x = start * innerWidth;\r\n\r\n\t\t\tstartGrip.moveTo({ x: thumb.pixelX, y: 0 }, undefined, undefined, true); // overrides dragging\r\n\t\t\tendGrip.moveTo({ x: thumb.pixelX + thumb.pixelWidth, y: 0 }, undefined, undefined, true);\r\n\r\n\t\t\tfromValue = this.adapter.apply(\"positionValue\", {\r\n\t\t\t\tvalue: Math.round(start * 100) + \"%\",\r\n\t\t\t\tposition: start\r\n\t\t\t}).value;\r\n\r\n\t\t\ttoValue = this.adapter.apply(\"positionValue\", {\r\n\t\t\t\tvalue: Math.round(end * 100) + \"%\",\r\n\t\t\t\tposition: end\r\n\t\t\t}).value;\r\n\r\n\t\t\tstartGrip.readerTitle = this.language.translate(\r\n\t\t\t\tfromName,\r\n\t\t\t\tundefined,\r\n\t\t\t\tfromValue\r\n\t\t\t);\r\n\t\t\tstartGrip.readerValueNow = \"\" + Math.round(start * 100);\r\n\t\t\tstartGrip.readerValueText = startGrip.readerTitle;\r\n\r\n\t\t\tendGrip.readerTitle = this.language.translate(\r\n\t\t\t\ttoName,\r\n\t\t\t\tundefined,\r\n\t\t\t\ttoValue\r\n\t\t\t);\r\n\t\t\tendGrip.readerValueNow = \"\" + Math.round(end * 100);\r\n\t\t\tendGrip.readerValueText = endGrip.readerTitle;\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet innerHeight: number = this.innerHeight;\r\n\r\n\t\t\tthumb.height = innerHeight * (end - start);\r\n\t\t\tthumb.maxY = innerHeight - thumb.pixelHeight;\r\n\t\t\tthumb.y = (1 - end) * innerHeight;\r\n\r\n\t\t\tstartGrip.moveTo({ x: 0, y: thumb.pixelY + thumb.pixelHeight }, undefined, undefined, true);\r\n\t\t\tendGrip.moveTo({ x: 0, y: thumb.pixelY }, undefined, undefined, true);\r\n\r\n\t\t\tfromValue = this.adapter.apply(\"positionValue\", {\r\n\t\t\t\tvalue: Math.round((1 - start) * 100) + \"%\",\r\n\t\t\t\tposition: (1 - start)\r\n\t\t\t}).value;\r\n\r\n\t\t\ttoValue = this.adapter.apply(\"positionValue\", {\r\n\t\t\t\tvalue: Math.round((1 - end) * 100) + \"%\",\r\n\t\t\t\tposition: (1 - end)\r\n\t\t\t}).value;\r\n\r\n\t\t\tstartGrip.readerTitle = this.language.translate(\r\n\t\t\t\ttoName,\r\n\t\t\t\tundefined,\r\n\t\t\t\tfromValue\r\n\t\t\t);\r\n\t\t\tstartGrip.readerValueNow = \"\" + Math.round(start * 100);\r\n\t\t\tstartGrip.readerValueText = startGrip.readerTitle;\r\n\r\n\t\t\tendGrip.readerTitle = this.language.translate(\r\n\t\t\t\tfromName,\r\n\t\t\t\tundefined,\r\n\t\t\t\ttoValue\r\n\t\t\t);\r\n\t\t\tendGrip.readerValueNow = \"\" + Math.round(end * 100);\r\n\t\t\tendGrip.readerValueText = endGrip.readerTitle;\r\n\t\t}\r\n\r\n\t\t// Add accessibility\r\n\t\tthumb.readerTitle = this.language.translate(\r\n\t\t\t\"From %1 to %2\",\r\n\t\t\tundefined,\r\n\t\t\tfromValue,\r\n\t\t\ttoValue\r\n\t\t);\r\n\r\n\t\tthumb.readerValueNow = \"\" + Math.round(start * 100);\r\n\t\tthumb.readerValueText = thumb.readerTitle;\r\n\r\n\t\tthis.readerValueNow = \"\" + Math.round(start * 100);\r\n\t\tthis.readerValueText = thumb.readerTitle;\r\n\r\n\t\tif (!this._skipRangeEvents && this.updateWhileMoving && dispatchEvents) {\r\n\t\t\tthis.dispatchRangeChange();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates extremes of the scrollbar.\r\n\t */\r\n\tprotected updateExtremes(): void {\r\n\t\tlet orientation = this.orientation;\r\n\t\tlet minX: number = 0;\r\n\t\tlet minY: number = 0;\r\n\t\tlet maxX: number = 0;\r\n\t\tlet maxY: number = 0;\r\n\r\n\t\tif (orientation == \"horizontal\") {\r\n\t\t\tmaxX = this.innerWidth;\r\n\t\t\tminY = maxY = this.innerHeight / 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmaxY = this.innerHeight;\r\n\t\t\tminX = maxX = this.innerWidth / 2;\r\n\t\t}\r\n\r\n\t\tlet startGrip: ResizeButton = this.startGrip;\r\n\t\tstartGrip.minX = minX;\r\n\t\tstartGrip.maxX = maxX;\r\n\t\tstartGrip.minY = minY;\r\n\t\tstartGrip.maxY = maxY;\r\n\r\n\t\tlet endGrip: ResizeButton = this.endGrip;\r\n\t\tendGrip.minX = minX;\r\n\t\tendGrip.maxX = maxX;\r\n\t\tendGrip.minY = minY;\r\n\t\tendGrip.maxY = maxY;\r\n\r\n\t\tlet thumb = this.thumb;\r\n\t\tthumb.minX = minX;\r\n\t\tthumb.maxX = maxX;\r\n\t\tthumb.minY = minY;\r\n\t\tthumb.maxY = maxY;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates size of the scrollbar.\r\n\t */\r\n\tprotected updateSize(): void {\r\n\t\tlet orientation = this.orientation;\r\n\r\n\t\tlet startGrip = this.startGrip;\r\n\t\tif (startGrip) {\r\n\t\t\tstartGrip.orientation = orientation;\r\n\t\t}\r\n\t\tif (this.endGrip) {\r\n\t\t\tthis.endGrip.orientation = orientation;\r\n\t\t}\r\n\r\n\t\tlet thumb: Sprite = this.thumb;\r\n\t\tif (thumb) {\r\n\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\tif (!$type.isNumber(this._pixelWidth)) {\r\n\t\t\t\t\tif (!(this.width instanceof Percent)) {\r\n\t\t\t\t\t\tthis.width = percent(100);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// this teorethically might be wrong, if user indeed sets height of a horizontal scrollbar in percent\r\n\t\t\t\t// however without this height might be equal to 100% if previous orientation was set to horizontal\r\n\t\t\t\t// so this is ok solution, in case user really wants to have scrollbar height set in percent,\r\n\t\t\t\t// he should do this after orientation.\r\n\t\t\t\tif ($type.hasValue(this.percentHeight)) {\r\n\t\t\t\t\tthis.height = this.minHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthumb.height = this.innerHeight;\r\n\r\n\t\t\t\tthumb.verticalCenter = \"middle\";\r\n\t\t\t\tthumb.horizontalCenter = \"left\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!$type.isNumber(this._pixelHeight)) {\r\n\t\t\t\t\tif (!(this.height instanceof Percent)) {\r\n\t\t\t\t\t\tthis.height = percent(100);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// same as above with percentHeight\r\n\t\t\t\tif ($type.hasValue(this.percentWidth)) {\r\n\t\t\t\t\tthis.width = this.minWidth;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthumb.width = this.innerWidth;\r\n\t\t\t\tthumb.verticalCenter = \"top\";\r\n\t\t\t\tthumb.horizontalCenter = \"middle\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the Scrollbar is currently \"busy\" (animating and or\r\n\t * performing zoom by user interaction).\r\n\t * @return boolean\r\n\t */\r\n\tpublic get isBusy(): boolean {\r\n\t\treturn this._isBusy;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * POSITIONS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the start grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set start(position: number) {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis.__start = position;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic get start(): number {\r\n\t\treturn Math.min(this.getPosition(this._start), this.getPosition(this._end));\r\n\t}\r\n\r\n\t/**\r\n\t * [__start description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t */\r\n\tprotected set __start(position: number) {\r\n\t\tthis._start = this.getPosition(position);\r\n\t\tthis.updateThumb();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tprotected get __start(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the end grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set end(position: number) {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis.__end = position;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic get end(): number {\r\n\t\treturn Math.max(this.getPosition(this._start), this.getPosition(this._end));\r\n\t}\r\n\r\n\t/**\r\n\t * [__end description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param position [description]\r\n\t */\r\n\tprotected set __end(position: number) {\r\n\t\tthis._end = this.getPosition(position);\r\n\t\tthis.updateThumb();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tprotected get __end(): number {\r\n\t\treturn this._end;\r\n\t}\r\n\r\n\t/**\r\n\t * Current selection range.\r\n\t *\r\n\t * @readonly\r\n\t * @return Range\r\n\t */\r\n\tpublic get range(): IRange {\r\n\t\treturn { start: this.start, end: this.end, priority: this._usingGrip };\r\n\t}\r\n\r\n\t/**\r\n\t * Disables range change events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic skipRangeEvents(): void {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis._skipRangeEvents = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [fixRange description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t * @param range  Range\r\n\t */\r\n\tpublic fixRange(range: IRange): void {\r\n\t\tif (range.start != $math.round(this._start, 2) || range.end != $math.round(this._end, 2)) {\r\n\t\t\tthis._start = range.start;\r\n\t\t\tthis._end = range.end;\r\n\r\n\t\t\tthis._skipRangeEvents = true;\r\n\t\t\tthis.updateThumb();\r\n\t\t\tthis._skipRangeEvents = false;\r\n\t\t\tthis.thumb.validate();\r\n\t\t\tthis.thumb.background.validate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getPosition description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param position  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getPosition(position: number): number {\r\n\t\treturn $math.fitToRange($math.round(position, 4), 0, 1);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * MISC\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Orientation of the scrollbar.\r\n\t *\r\n\t * Available options: \"horizontal\" (default) and \"vertical\".\r\n\t *\r\n\t * @default \"horizontal\"\r\n\t * @param value  Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\r\n\t\tif (this.setPropertyValue(\"orientation\", value)) {\r\n\r\n\t\t\t// Set mouse cursors and screen reader tetxt accordingly\r\n\t\t\tif (value === \"horizontal\") {\r\n\r\n\t\t\t\t// Mouse styles\r\n\t\t\t\tthis.startGrip.cursorOverStyle = MouseCursorStyle.horizontalResize;\r\n\t\t\t\tthis.endGrip.cursorOverStyle = MouseCursorStyle.horizontalResize;\r\n\r\n\t\t\t\t// Reader text\r\n\t\t\t\t/*this.readerTitle = this.language.translate(\"Use TAB to select grip buttons or left and right arrows to change selection\");\r\n\t\t\t\tthis.thumb.readerDescription = this.language.translate(\"Use left and right arrows to move selection\");\r\n\t\t\t\tthis.startGrip.readerDescription = this.language.translate(\"Use left and right arrows to move left selection\");\r\n\t\t\t\tthis.endGrip.readerDescription = this.language.translate(\"Use left and right arrows to move right selection\");*/\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t// Mouse styles\r\n\t\t\t\tthis.startGrip.cursorOverStyle = MouseCursorStyle.verticalResize;\r\n\t\t\t\tthis.endGrip.cursorOverStyle = MouseCursorStyle.verticalResize;\r\n\r\n\t\t\t\t// Reader text\r\n\t\t\t\t/*this.readerTitle = this.language.translate(\"Use TAB select grip buttons or up and down arrows to change selection\");\r\n\t\t\t\tthis.thumb.readerDescription = this.language.translate(\"Use up and down arrows to move selection\");\r\n\t\t\t\tthis.startGrip.readerDescription = this.language.translate(\"Use up and down arrows to move upper selection\");\r\n\t\t\t\tthis.endGrip.readerDescription = this.language.translate(\"Use up and down arrows to move lower selection\");*/\r\n\r\n\t\t\t}\r\n\t\t\tthis.updateByOrientation();\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateByOrientation() {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ==========================================================================\r\n\t * GRIPS\r\n\t * ==========================================================================\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Start grip element. (button)\r\n\t *\r\n\t * @param button  Grip element\r\n\t */\r\n\tpublic set startGrip(button: ResizeButton) {\r\n\t\tif (this._startGrip) {\r\n\t\t\tthis.removeDispose(this._startGrip);\r\n\t\t}\r\n\t\tthis._startGrip = button;\r\n\t\tthis.processGrip(button);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grip element\r\n\t */\r\n\tpublic get startGrip(): ResizeButton {\r\n\t\treturn this._startGrip;\r\n\t}\r\n\r\n\t/**\r\n\t * End grip element. (button)\r\n\t *\r\n\t * @param button  Grip element\r\n\t */\r\n\tpublic set endGrip(button: ResizeButton) {\r\n\t\tif (this._endGrip) {\r\n\t\t\tthis.removeDispose(this._endGrip);\r\n\t\t}\r\n\t\tthis._endGrip = button;\r\n\t\tthis.processGrip(button);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grip element\r\n\t */\r\n\tpublic get endGrip(): ResizeButton {\r\n\t\treturn this._endGrip;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates the grip button with properties and events.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param button Grip button\r\n\t */\r\n\tpublic processGrip(button: ResizeButton) {\r\n\t\tbutton.parent = this;\r\n\t\tbutton.isMeasured = false;\r\n\t\tbutton.focusable = true;\r\n\t\tbutton.shouldClone = false;\r\n\r\n\t\t// Set button defaults\r\n\t\t//button.showSystemTooltip = true; // setting this here is not right because we break inheritance\r\n\t\tbutton.zIndex = 100;\r\n\r\n\t\tbutton.events.on(\"drag\", this.handleGripDrag, this, false);\r\n\t\tbutton.events.on(\"dragstop\", this.makeUnbusy, this, false);\r\n\t\tbutton.events.on(\"down\", this.makeBusy, this, false);\r\n\t\tbutton.events.on(\"up\", this.makeUnbusy, this, false);\r\n\r\n\t\tthis._disposers.push(button);\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positions of related elements after grip element is dragged.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleGripDrag(event: AMEvent<ResizeButton, ISpriteEvents>[\"drag\"]): void {\r\n\t\tthis.makeBusy();\r\n\r\n\t\tif (event.target === this._startGrip) {\r\n\t\t\tthis._usingGrip = \"start\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._usingGrip = \"end\";\r\n\t\t}\r\n\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tthis._start = this.startGrip.pixelX / this.innerWidth;\r\n\t\t\tthis._end = this.endGrip.pixelX / this.innerWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._start = 1 - this.startGrip.pixelY / this.innerHeight;\r\n\t\t\tthis._end = 1 - this.endGrip.pixelY / this.innerHeight;\r\n\t\t}\r\n\r\n\t\tthis.updateThumb();\r\n\t}\r\n\r\n\t/**\r\n\t * A \"thumb\" element.\r\n\t *\r\n\t * It's a draggable square space between the grips, that can be used to\r\n\t * pan the selection.\r\n\t *\r\n\t * @param thumb  Thumb element\r\n\t */\r\n\tpublic set thumb(thumb: Button) {\r\n\t\tif (thumb) {\r\n\r\n\t\t\tif (this._thumb) {\r\n\t\t\t\tthis.removeDispose(this._thumb);\r\n\t\t\t}\r\n\r\n\t\t\tthis._thumb = thumb;\r\n\t\t\tthumb.parent = this;\r\n\t\t\tthumb.isMeasured = false;\r\n\t\t\tthumb.inert = true;\r\n\t\t\tthumb.draggable = true;\r\n\t\t\tthumb.clickable = true;\r\n\t\t\tthumb.hoverable = true;\r\n\t\t\tthumb.focusable = true;\r\n\t\t\tthumb.shouldClone = false;\r\n\t\t\tthumb.zIndex = 0;\r\n\r\n\t\t\t// TODO remove closures ?\r\n\t\t\t// Add events\r\n\r\n\t\t\t// Add cursor styles to thumb\r\n\t\t\tthumb.cursorOverStyle = MouseCursorStyle.grab;\r\n\t\t\tthumb.cursorDownStyle = MouseCursorStyle.grabbing;\r\n\r\n\t\t\tthumb.events.on(\"dragstart\", this.makeBusy, this, false);\r\n\t\t\tthumb.events.on(\"dragstop\", this.makeUnbusy, this, false);\r\n\t\t\tthumb.events.on(\"positionchanged\", this.handleThumbPosition, this, false);\r\n\t\t\tthumb.events.on(\"sizechanged\", this.handleThumbPosition, this, false);\r\n\t\t\tthumb.events.on(\"doublehit\", this.handleDoubleClick, this, false);\r\n\r\n\t\t\t// Add event for space and ENTER to toggle full zoom out and back\r\n\t\t\t// (same as doubleclick)\r\n\t\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (keyboard.isKey(ev.event, [\"space\", \"enter\"]) && this.thumb.isFocused) {\r\n\t\t\t\t\tev.event.preventDefault();\r\n\t\t\t\t\tthis.handleDoubleClick();\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis._disposers.push(this._thumb);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Thumb element\r\n\t */\r\n\tpublic get thumb(): Button {\r\n\t\tif (!this._thumb) {\r\n\t\t\t// Create scrollbar controls (setters will handle adding disposers)\r\n\t\t\tlet thumb = new Button();\r\n\t\t\tthumb.background.cornerRadius(10, 10, 10, 10);\r\n\t\t\tthumb.padding(0, 0, 0, 0);\r\n\t\t\tthis.thumb = thumb;\r\n\t\t}\r\n\t\treturn this._thumb;\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms-in and out the selection on double-click of the thumb.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDoubleClick(): void {\r\n\r\n\t\tthis.makeBusy();\r\n\r\n\t\tlet newStart: number = 0;\r\n\t\tlet newEnd: number = 1;\r\n\r\n\t\tif (this.start != 0 || this.end != 1) {\r\n\t\t\tthis._prevStart = this.start;\r\n\t\t\tthis._prevEnd = this.end;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnewStart = this._prevStart;\r\n\t\t\tnewEnd = this._prevEnd;\r\n\t\t}\r\n\r\n\t\tlet zoomAnimation = this.animate([{ property: \"__start\", to: newStart }, { property: \"__end\", to: newEnd }], this.animationDuration, this.animationEasing);\r\n\r\n\t\tif (zoomAnimation && !zoomAnimation.isFinished()) {\r\n\t\t\tzoomAnimation.events.on(\"animationended\", this.makeUnbusy, this, false);\r\n\t\t\tthis._zoomAnimation = zoomAnimation;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.makeUnbusy();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates positions of other elements when thumb is moved.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleThumbPosition(): void {\r\n\t\tlet thumb = this.thumb;\r\n\t\tif (this.orientation == \"horizontal\") {\r\n\t\t\tlet innerWidth = this.innerWidth;\r\n\t\t\tlet w = thumb.innerWidth;\r\n\t\t\tlet x = thumb.pixelX;\r\n\r\n\t\t\tthis._start = x / innerWidth;\r\n\t\t\tthis._end = (x + w) / innerWidth;\r\n\t\t\tthis.updateThumb();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet innerHeight = this.innerHeight;\r\n\t\t\tlet h = thumb.innerHeight;\r\n\t\t\tlet y = thumb.pixelY;\r\n\r\n\t\t\tif (y + h > innerHeight) {\r\n\t\t\t\ty = innerHeight - h;\r\n\t\t\t\tthumb.y = y;\r\n\t\t\t}\r\n\r\n\t\t\tthis._start = 1 - (y + h) / innerHeight;\r\n\t\t\tthis._end = 1 - y / innerHeight;\r\n\r\n\r\n\t\t\tthis.updateThumb();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background element for the scrollbar.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new RoundedRectangle();\r\n\t}\r\n\r\n\t/**\r\n\t * Use this property to set whether grips should be always visible (`false`),\r\n\t * or they should just appear on scrollbar hover (`true`).\r\n\t *\r\n\t * @param value  Show only on hover?\r\n\t */\r\n\tpublic set hideGrips(value: boolean) {\r\n\r\n\t\tthis._hideGrips = value;\r\n\r\n\t\tif (this._overDisposer) {\r\n\t\t\tthis.removeDispose(this._overDisposer);\r\n\t\t}\r\n\t\tif (this._outDisposer) {\r\n\t\t\tthis.removeDispose(this._outDisposer);\r\n\t\t}\r\n\r\n\t\tif (value) {\r\n\t\t\tthis._overDisposer = this.events.on(\"over\", () => {\r\n\t\t\t\tthis.startGrip.show();\r\n\t\t\t\tthis.endGrip.show();\r\n\t\t\t}, undefined, false)\r\n\t\t\tthis._outDisposer = this.events.on(\"out\", () => {\r\n\t\t\t\tthis.startGrip.hide();\r\n\t\t\t\tthis.endGrip.hide();\r\n\t\t\t}, undefined, false)\r\n\t\t\tthis.startGrip.hide();\r\n\t\t\tthis.endGrip.hide();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.startGrip.show();\r\n\t\t\tthis.endGrip.show();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Show only on hover?\r\n\t */\r\n\tpublic get hideGrips(): boolean {\r\n\t\treturn this._hideGrips;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Duration in milliseconds of scrollbar animation (happens when user clicks on a background of a scrollbar)\r\n\t * @default 0\r\n\t * @param value number\r\n\t */\r\n\tpublic set animationDuration(value: number) {\r\n\t\tthis.setPropertyValue(\"animationDuration\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get animationDuration(): number {\r\n\t\treturn this.getPropertyValue(\"animationDuration\");\r\n\t}\r\n\r\n\t/**\r\n\t * Animation easing function.\r\n\t * @todo: review description and default\r\n\t * @default $ease.cubicOut\r\n\t * @param value (value: number) => number\r\n\t */\r\n\tpublic set animationEasing(value: (value: number) => number) {\r\n\t\tthis.setPropertyValue(\"animationEasing\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {Function}\r\n\t */\r\n\tpublic get animationEasing(): (value: number) => number {\r\n\t\treturn this.getPropertyValue(\"animationEasing\");\r\n\t}\r\n\r\n\t/**\r\n\t * Adds easing functions to \"function\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn field == \"animationEasing\" || super.asIs(field);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Scrollbar\"] = Scrollbar;\r\n","/**\r\n * Grip module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grip]].\r\n */\r\nexport interface IGripProperties extends IButtonProperties {\r\n\tposition: Align | VerticalAlign;\r\n\tautoHideDelay: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grip]] for [[Grip]].\r\n */\r\nexport interface IGripEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Grip]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGripAdapters extends IButtonAdapters, IGripProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\r\nexport class Grip extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGripProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGripAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGripEvents;\r\n\r\n\t\t/**\r\n\t * Disposer for grip autohide timeout.\r\n\t */\r\n\tprotected _autoHideTimeout: Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Grip\";\r\n\r\n\t\tconst cs = new InterfaceColorSet();\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.margin(3, 3, 3, 3);\r\n\t\tthis.background.fillOpacity = 0.3;\r\n\t\tthis.background.cornerRadius(10, 10, 10, 10);\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: -6, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 6, y: 0 });\r\n\t\tpath += $path.moveTo({ x: -8, y: -6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: -12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: -6 });\r\n\t\tpath += $path.moveTo({ x: -8, y: 6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: 12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: 6 });\r\n\t\ticon.path = path;\r\n\t\ticon.strokeWidth = 2;\r\n\t\ticon.fillOpacity = 0;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(0, 4, 0, 4);\r\n\t\ticon.stroke = cs.getFor(\"text\");\r\n\t\ticon.strokeOpacity = 0.7;\r\n\t\ticon.align = \"center\";\r\n\t\ticon.valign = \"middle\";\r\n\t\tthis.icon = icon;\r\n\r\n\t\tthis.label.dispose();\r\n\t\tthis.label = undefined;\r\n\r\n\t\t// Set default position\r\n\t\tthis.position = \"right\";\r\n\r\n\t\t// Set up autohide\r\n\t\tthis.autoHideDelay = 3000;\r\n\t\tthis.events.on(\"shown\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"out\", (ev) => {\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets position of the grip.\r\n\t *\r\n\t * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n\t *\r\n\t * @param  value  Position\r\n\t */\r\n\tpublic set position(value: Align | VerticalAlign) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tswitch(value) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tthis.align = \"left\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"left\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tthis.align = \"right\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"right\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"top\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"top\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"bottom\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"bottom\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): Align | VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of milliseconds to show grip until it is hidden automatically.\r\n\t *\r\n\t * @default 3000\r\n\t * @param  value  Delay\r\n\t */\r\n\tpublic set autoHideDelay(value: number) {\r\n\t\tthis.setPropertyValue(\"autoHideDelay\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Delay\r\n\t */\r\n\tpublic get autoHideDelay(): number {\r\n\t\treturn this.getPropertyValue(\"autoHideDelay\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grip\"] = Grip;\r\n","/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentEvents, IComponentAdapters } from \"../core/Component\";\r\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { Legend } from \"../charts/Legend\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class ChartDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Chart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Chart]].\r\n */\r\nexport interface IChartDataFields extends IComponentDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Chart]].\r\n */\r\nexport interface IChartProperties extends IComponentProperties { }\r\n\r\n/**\r\n * Defines events for [[Chart]].\r\n */\r\nexport interface IChartEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Chart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IChartAdapters extends IComponentAdapters, IChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nexport class Chart extends Component {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IChartEvents;\r\n\r\n\t/**\r\n\t * A List of chart titles.\r\n\t */\r\n\tpublic titles: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Container that holds the chart itself.\r\n\t */\r\n\tpublic chartContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to a container that holds both the chart and the legend.\r\n\t */\r\n\tpublic chartAndLegendContainer: Container;\r\n\r\n\t/**\r\n\t * A reference to chart's [[Legend]].\r\n\t * @ignore\r\n\t */\r\n\tprotected _legend = new MutableValueDisposer<Legend>();\r\n\r\n\t/**\r\n\t * Instance of the grip element.\r\n\t */\r\n\tprotected _dragGrip: $type.Optional<Grip>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Chart) {\r\n\t\t\tthrow new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n\t\t}\r\n\t\tthis.className = \"Chart\";\r\n\r\n\t\t// Create a list of titles\r\n\t\tconst template = new Label();\r\n\t\tthis.titles = new ListTemplate<Label>(template);\r\n\t\tthis._disposers.push(new ListDisposer(this.titles));\r\n\t\tthis._disposers.push(template);\r\n\r\n\t\t// Chart component is also a container. it holds _chartAndLegendCont and titles\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\t\tthis.layout = \"vertical\";\r\n\r\n\t\t// Chart and legend\r\n\t\tlet chartAndLegendContainer: Container = this.createChild(Container);\r\n\t\tchartAndLegendContainer.shouldClone = false;\r\n\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\tchartAndLegendContainer.width = percent(100);\r\n\t\tchartAndLegendContainer.height = percent(100);\r\n\t\tthis.chartAndLegendContainer = chartAndLegendContainer;\r\n\r\n\t\t// Chart container holds all the elements of a chart, extept titles and legend\r\n\t\tlet chartContainer = chartAndLegendContainer.createChild(Container);\r\n\t\tchartContainer.shouldClone = false;\r\n\t\tchartContainer.width = percent(100);\r\n\t\tchartContainer.height = percent(100);\r\n\t\tthis.chartContainer = chartContainer;\r\n\r\n\t\tthis.showOnInit = true;\r\n\r\n\t\tthis._disposers.push(this._legend);\r\n\r\n\t\t// Add title list events to apply certain formatting options and to make\r\n\t\t// the chart reference them as accessible screen reader labels\r\n\t\tthis.titles.events.on(\"inserted\", (label) => {\r\n\t\t\tthis.processTitle(label);\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\t\tthis.titles.events.on(\"removed\", (label) => {\r\n\t\t\tthis.updateReaderTitleReferences();\r\n\t\t}, this, false);\r\n\r\n\t\t// Accessibility\r\n\t\t// It seems we can't set focusable on the whole chart because it seems to\r\n\t\t// mess up the whole focus event system - getting a focus on an inside\r\n\t\t// object also trigger focus on parent\r\n\t\t//this.focusable = true;\r\n\t\tthis.role = \"region\";\r\n\r\n\t\tthis.defaultState.transitionDuration = 1;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Chart\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates drawing of the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.fixLayout();\r\n\t\tsuper.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates legend's hierarchy based on the position.\r\n\t */\r\n\tprotected fixLayout(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet chartAndLegendContainer = this.chartAndLegendContainer;\r\n\t\t\tlet chartContainer = this.chartContainer;\r\n\t\t\tchartContainer.x = undefined;\r\n\t\t\tchartContainer.y = undefined;\r\n\t\t\tif (legend.position != \"absolute\") {\r\n\t\t\t\tlegend.x = undefined;\r\n\t\t\t\tlegend.y = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (legend.position) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"horizontal\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toBack();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tchartAndLegendContainer.layout = \"vertical\";\r\n\t\t\t\t\tlegend.toFront();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"absolute\":\r\n\t\t\t\t\tlegend.isMeasured = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t */\r\n\tprotected feedLegend(): void {\r\n\r\n\t\t// Nothing here. This method is provided only as a \"placeholder\" for\r\n\t\t// extending classes to override\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a new title to the chart when it is inserted into chart's titles\r\n\t * list.\r\n\t * @param event  An event object which is triggered when inserting into titles list\r\n\t * @return Label object\r\n\t */\r\n\tprotected processTitle(event: IListEvents<Label>[\"inserted\"]): Label {\r\n\t\tlet title: Label = event.newValue;\r\n\t\ttitle.parent = this;\r\n\t\ttitle.toBack();\r\n\t\ttitle.shouldClone = false;\r\n\t\ttitle.align = \"center\";\r\n\r\n\t\t// Need to explicitly apply the `id` attribute so it can be referenced by\r\n\t\t// `aria-labelledby`\r\n\t\ttitle.uidAttr();\r\n\t\treturn title;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if chart has any title elements. If it does, we will use them in an\r\n\t * `aria-labelledby` attribute so that screen readers can use them to properly\r\n\t * describe the chart when it is focused or hovered.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateReaderTitleReferences(): void {\r\n\t\tif (this.titles.length) {\r\n\t\t\tlet titleIds: Array<string> = [];\r\n\t\t\t$iter.each(this.titles.iterator(), (title) => {\r\n\t\t\t\ttitleIds.push(title.uid);\r\n\t\t\t});\r\n\t\t\tthis.setSVGAttribute({ \"aria-labelledby\": titleIds.join(\" \") });\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeSVGAttribute(\"aria-labelledby\");\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Holds the instance of chart's [[Leged]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n\t * @param Legend\r\n\t */\r\n\tpublic set legend(legend: Legend) {\r\n\t\tthis.setLegend(legend);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend\r\n\t */\r\n\tpublic get legend(): Legend {\r\n\t\treturn this._legend.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tif (this._legend.get() !== legend) {\r\n\t\t\tif (legend) {\r\n\t\t\t\t// Set legend options\r\n\t\t\t\tlegend.parent = this.chartAndLegendContainer;\r\n\r\n\t\t\t\tthis._legend.set(legend, legend.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\tif (event.property == \"position\") {\r\n\t\t\t\t\t\tthis.fixLayout();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, undefined, false));\r\n\r\n\t\t\t\tlegend.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tthis.legend = undefined;\r\n\t\t\t\t}))\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._legend.reset();\r\n\t\t\t}\r\n\r\n\t\t\tthis.feedLegend();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\t// otherwise there might be some errors when disposing chart which was just inited\r\n\t\tif (this.legend) {\r\n\t\t\tthis.legend.dispose();\r\n\t\t}\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up legend\r\n\t\t\tif ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n\t\t\t\tconfig.legend.type = \"Legend\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.titles.copyFrom(source.titles);\r\n\t\tthis.chartContainer.copyFrom(source.chartContainer);\r\n\t\tif (source.legend) {\r\n\t\t\tthis.legend = source.legend.clone();\r\n\t\t\tthis.legend.removeChildren();\r\n\t\t}\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[Grip]] which serves as a grip point which appears on\r\n\t * touch and allows scrolling whole page even if chart is occupying the\r\n\t * whole of the screen and would otherwise prevent scrolling.\r\n\t *\r\n\t * @since 4.4.0\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n\t * @param  value  Grip\r\n\t */\r\n\tpublic set dragGrip(value: Grip) {\r\n\t\tthis._dragGrip = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Grip\r\n\t */\r\n\tpublic get dragGrip(): Grip {\r\n\t\tif (!this._dragGrip) {\r\n\t\t\tlet grip = this.tooltipContainer.createChild(Grip);\r\n\t\t\tgrip.align = \"right\";\r\n\t\t\tgrip.valign = \"middle\";\r\n\t\t\tgrip.hide(0);\r\n\r\n\t\t\tgrip.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tthis.interactionsEnabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgrip.events.on(\"up\", (ev) => {\r\n\t\t\t\tthis.interactionsEnabled = true;\r\n\t\t\t});\r\n\r\n\t\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\t\tif (ev.touch) {\r\n\t\t\t\t\tgrip.show();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis._dragGrip = grip;\r\n\t\t}\r\n\t\treturn this._dragGrip;\r\n\t}\r\n\r\n\tpublic set focusable(value: boolean) {\r\n\t\tthis.parent.focusable = value;\r\n\t}\r\n\r\n\tpublic get focusable(): boolean {\r\n\t\treturn this.parent.focusable;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingLeft > 10) {\r\n\t\t\t\tstate.properties.paddingLeft = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingRight > 10) {\r\n\t\t\t\tstate.properties.paddingRight = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tif (target.pixelPaddingTop > 10) {\r\n\t\t\t\tstate.properties.paddingTop = 10;\r\n\t\t\t}\r\n\t\t\tif (target.pixelPaddingBottom > 10) {\r\n\t\t\t\tstate.properties.paddingBottom = 10;\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingLeft = 0;\r\n\t\t\tstate.properties.paddingRight = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Chart) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.paddingTop = 0;\r\n\t\t\tstate.properties.paddingBottom = 0;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Module that defines everything related to building bullets.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]].\r\n */\r\nexport interface IBulletProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t */\r\n\tlocationX?: number;\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t */\r\n\tlocationY?: number;\r\n\r\n\t/**\r\n\t * Specifies if bullet needs to be redrawn if the underlying data changes.\r\n\t */\r\n\tisDynamic?: boolean;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\txField?: string;\r\n\r\n\t/**\r\n\t * [string description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tyField?: string;\r\n\r\n\t/**\r\n\t * Defines if this bullet should be copied to legend marker\r\n\t */\r\n\tcopyToLegendMarker?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Bullet]].\r\n */\r\nexport interface IBulletEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Bullet]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IBulletAdapters extends IContainerAdapters, IBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Bullet extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IBulletEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Bullet\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.tooltipX = 0;\r\n\t\tthis.tooltipY = 0;\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tthis.applyOnClones = true;\r\n\r\n\t\tthis.copyToLegendMarker = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative horizontal location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationX(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationX\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationX(): number {\r\n\t\treturn this.getPropertyValue(\"locationX\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative vertical location within cell. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set locationY(value: number) {\r\n\t\tif(this.setPropertyValue(\"locationY\", value)){\r\n\t\t\tlet dataItem = this.dataItem\r\n\t\t\tif(dataItem && dataItem.component){\r\n\t\t\t\tdataItem.component.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get locationY(): number {\r\n\t\treturn this.getPropertyValue(\"locationY\");\r\n\t}\r\n\r\n\t/**\r\n\t * [xField description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set xField(value: string) {\r\n\t\tthis.setPropertyValue(\"xField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get xField(): string {\r\n\t\treturn this.getPropertyValue(\"xField\");\r\n\t}\r\n\r\n\t/**\r\n\t * [yField description]\r\n\t *\r\n\t * Description\r\n\t * @param value  [description]\r\n\t */\r\n\tpublic set yField(value: string) {\r\n\t\tthis.setPropertyValue(\"yField\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get yField(): string {\r\n\t\treturn this.getPropertyValue(\"yField\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates if the bullet is \"dynamic\".\r\n\t *\r\n\t * In most cases the bullets remain the same, even if the underlying data\r\n\t * changes.\r\n\t *\r\n\t * However, in cases where bullet also displays a label, or its size depends\r\n\t * on data, it also needs to be redrawn when the underlying data changes.\r\n\t *\r\n\t * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n\t * time data changes. Regular bullets will be reused as they are.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set isDynamic(value: boolean) {\r\n\t\tthis.setPropertyValue(\"isDynamic\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get isDynamic(): boolean {\r\n\t\treturn this.getPropertyValue(\"isDynamic\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Indicates if the bullet should be copied to legend marker\r\n\t *\r\n\t * @default false\r\n\t * @param value  Redraw on data change?\r\n\t */\r\n\tpublic set copyToLegendMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"copyToLegendMarker\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Redraw on data change?\r\n\t */\r\n\tpublic get copyToLegendMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"copyToLegendMarker\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Hide bullets\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Bullet) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Legend-related functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../core/Component\";\r\nimport { DataItem, IDataItemEvents } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Optional } from \"../core/utils/Type\";\r\nimport { Preloader } from \"../core/elements/Preloader\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent, Percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport { Color } from \"../core/utils/Color\";\r\nimport { RadialGradient } from \"../core/rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../core/rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../core/rendering/fills/Pattern\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport * as $math from \"../core/utils/Math\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../core/Sprite\";\r\nimport { Disposer, IDisposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class LegendDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * A container data item's elements will be placed in.\r\n\t */\r\n\tprotected _itemContainer: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the item label.\r\n\t */\r\n\tprotected _label: Label;\r\n\r\n\t/**\r\n\t * A [[Container]] for legend item marker.\r\n\t */\r\n\tprotected _marker: Container;\r\n\r\n\t/**\r\n\t * A [[Label]] element for the value label.\r\n\t */\r\n\tprotected _valueLabel: Label;\r\n\r\n\t/**\r\n\t * A data context for legend item.\r\n\t */\r\n\tpublic dataContext: any;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Legend;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic childrenCreated: boolean = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic colorOrig: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"LegendDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element.\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * Main color of legend data item.\r\n\t *\r\n\t * This is set by the target element this legend item represents, like\r\n\t * a Series or a Slice.\r\n\t *\r\n\t * It can be used to derive a color in legend's sub-items, like label:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"legend\": {\r\n\t *     // ...\r\n\t *     \"labels\": {\r\n\t *       \"text\": \"[{color}]{name}[/]\"\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n\t * @param value  Main color\r\n\t */\r\n\tpublic set color(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Main color\r\n\t */\r\n\tpublic get color(): $type.Optional<Color | Pattern | LinearGradient | RadialGradient> {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * A legend item's [[Label]] element for \"value label\".\r\n\t *\r\n\t * @return Label\r\n\t */\r\n\tpublic get valueLabel(): Label {\r\n\t\tif (!this._valueLabel) {\r\n\t\t\tlet valueLabel = this.component.valueLabels.create();\r\n\t\t\tthis._valueLabel = valueLabel;\r\n\r\n\t\t\tthis.addSprite(valueLabel);\r\n\t\t\tthis._disposers.push(valueLabel);\r\n\t\t\tvalueLabel.parent = this.itemContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.valueLabels.removeValue(valueLabel);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._valueLabel;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to the main [[Container]] that holds legend item's elements:\r\n\t * marker and labels.\r\n\t *\r\n\t * @return Item container\r\n\t */\r\n\tpublic get itemContainer(): Container {\r\n\t\tif (!this._itemContainer) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet itemContainer = component.itemContainers.create();\r\n\t\t\titemContainer.parent = component;\r\n\r\n\t\t\tthis._itemContainer = itemContainer;\r\n\t\t\tthis.addSprite(itemContainer);\r\n\t\t\tthis._disposers.push(itemContainer);\r\n\r\n\t\t\t// Add click/tap event to toggle item\r\n\t\t\tif (itemContainer.togglable) {\r\n\t\t\t\titemContainer.events.on(\"toggled\", (ev) => {\r\n\t\t\t\t\tcomponent.toggleDataItem(<this>ev.target.dataItem);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\t// Add focus event so that we can track which object is currently in focus\r\n\t\t\t// for keyboard toggling\r\n\t\t\tif (itemContainer.focusable) {\r\n\t\t\t\titemContainer.events.on(\"toggled\", (ev) => {\r\n\t\t\t\t\t// We do this to abvoid double-toggle\r\n\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\tthis.setTimeout(() => {\r\n\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t}, 50);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\t// We need this here in order to reset focused item when it is clicked\r\n\t\t\t\t\t// normally so that it is not toggled by ENTER afterwards\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = <this>ev.target.dataItem;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\titemContainer.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\tcomponent.focusedItem = undefined;\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.itemContainers.removeValue(itemContainer);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tif (this.dataContext.uidAttr) {\r\n\t\t\t\titemContainer.readerControls = this.dataContext.uidAttr();\r\n\t\t\t\titemContainer.readerLabelledBy = this.dataContext.uidAttr();\r\n\t\t\t}\r\n\r\n\t\t\tlet sprite = <any>this.dataContext;\r\n\t\t\tif ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n\t\t\t\tconst visibilitychanged = function(ev: AMEvent<Sprite | DataItem, ISpriteEvents & IDataItemEvents>[\"visibilitychanged\"]) {\r\n\t\t\t\t\titemContainer.readerChecked = ev.visible;\r\n\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\titemContainer.isActive = !ev.visible;\r\n\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\t\t\tif (this.component) {\r\n\t\t\t\t\t\tthis.component.dataItems.remove(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tif (sprite instanceof Sprite) {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"hidden\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = false;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = true;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"shown\", (ev) => {\r\n\t\t\t\t\t\t\titemContainer.readerChecked = true;\r\n\t\t\t\t\t\t\titemContainer.events.disableType(\"toggled\");\r\n\t\t\t\t\t\t\titemContainer.isActive = false;\r\n\t\t\t\t\t\t\titemContainer.events.enableType(\"toggled\");\r\n\t\t\t\t\t\t}, undefined, false)\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\titemContainer.addDisposer(\r\n\t\t\t\t\t\tsprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._itemContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Container]] that holds legend item's marker element.\r\n\t *\r\n\t * @return Marker\r\n\t */\r\n\tpublic get marker(): Container {\r\n\t\tif (!this._marker) {\r\n\t\t\tlet marker = this.component.markers.create();\r\n\t\t\tthis._marker = marker;\r\n\t\t\tmarker.parent = this.itemContainer;\r\n\t\t\tthis.addSprite(marker);\r\n\t\t\tthis._disposers.push(marker);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif ($type.hasValue(this.component)) {\r\n\t\t\t\t\tthis.component.markers.removeValue(marker);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\treturn this._marker;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nexport class LegendSettings {\r\n\r\n\t/**\r\n\t * [valueText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic valueText: string;\r\n\r\n\t/**\r\n\t * [labelText description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tpublic labelText: string;\r\n\r\n\t/**\r\n\t * A text template for the value part of the legend item.\r\n\t */\r\n\tpublic itemValueText: string;\r\n\r\n\t/**\r\n\t * A text template for the label part of the legend item.\r\n\t */\r\n\tpublic itemLabelText: string;\r\n\r\n\t/**\r\n\t * Should marker be created for each legend item.\r\n\t */\r\n\tpublic createMarker: boolean = true;\r\n}\r\n\r\n/**\r\n * Represents types available for Legend position. Not all charts will pay attention to this, like MapChart. You'll need to use legend.align and legend.valign properties to position legend on MapChart.\r\n */\r\nexport type LegendPosition = \"left\" | \"right\" | \"top\" | \"bottom\" | \"absolute\";\r\n\r\n/**\r\n * Defines data fields for [[Legend]].\r\n */\r\nexport interface ILegendDataFields extends IComponentDataFields {\r\n\r\n\t/**\r\n\t * A field name in the data item which holds name of the legend item.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A field name in data item which holds boolean value whether item should\r\n\t * be displayed in legend or not.\r\n\t */\r\n\tvisible?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Legend]].\r\n */\r\nexport interface ILegendProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Should legend use default marker?\r\n\t *\r\n\t * If set to `false`, the legend will try to mirror the look of the actual\r\n\t * item, like series.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseDefaultMarker?: boolean;\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * @default \"bottom\"\r\n\t */\r\n\tposition?: LegendPosition;\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t */\r\n\tscrollable?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Legend]].\r\n */\r\nexport interface ILegendEvents extends IComponentEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Legend]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ILegendAdapters extends IComponentAdapters, ILegendProperties { }\r\n\r\nexport interface ILegendItemEvents {\r\n\tpropertychanged: {\r\n\t\t/**\r\n\t\t * Property key.\r\n\t\t */\r\n\t\tproperty: string;\r\n\t};\r\n}\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nexport class Legend extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of the data fields.\r\n\t */\r\n\tpublic _dataFields: ILegendDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ILegendProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ILegendAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ILegendEvents;\r\n\r\n\t/**\r\n\t * Defines data item type.\r\n\t */\r\n\tpublic _dataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * List of legend Item containers. Legend item containers contain marker, title label and value label.\r\n\t */\r\n\tpublic itemContainers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item labels.\r\n\t */\r\n\tpublic labels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * List of legend item markers.\r\n\t */\r\n\tpublic markers: ListTemplate<Container>;\r\n\r\n\t/**\r\n\t * List of legend item value labels.\r\n\t */\r\n\tpublic valueLabels: ListTemplate<Label>;\r\n\r\n\t/**\r\n\t * Currently focused legend item (for toggling via keyboard)\r\n\t */\r\n\tpublic focusedItem: Optional<this[\"_dataItem\"]>;\r\n\r\n\r\n\tpublic scrollbar: Scrollbar;\r\n\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Legend\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"grid\";\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", false);\r\n\t\tthis.setPropertyValue(\"scrollable\", false);\r\n\t\tthis.setPropertyValue(\"contentAlign\", \"center\");\r\n\r\n\t\t// Create a template container and list for legend items\r\n\t\tlet itemContainer: Container = new Container();\r\n\t\titemContainer.applyOnClones = true;\r\n\t\titemContainer.padding(8, 0, 8, 0);\r\n\t\titemContainer.margin(0, 10, 0, 10);\r\n\t\titemContainer.layout = \"horizontal\";\r\n\t\titemContainer.clickable = true;\r\n\t\titemContainer.focusable = true;\r\n\t\titemContainer.role = \"switch\";\r\n\t\titemContainer.togglable = true;\r\n\t\titemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\titemContainer.background.fillOpacity = 0; // creates hit area\r\n\r\n\t\t// Create container list using item template we just created\r\n\t\tthis.itemContainers = new ListTemplate<Container>(itemContainer);\r\n\t\tthis._disposers.push(new ListDisposer(this.itemContainers));\r\n\t\tthis._disposers.push(this.itemContainers.template);\r\n\r\n\t\t// Set up global keyboard events for toggling elements\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (keyboard.isKey(ev.event, \"enter\") && this.focusedItem) {\r\n\t\t\t\tconst focusedItem = this.focusedItem;\r\n\t\t\t\tconst target = focusedItem.itemContainer;\r\n\t\t\t\tif (target.togglable) {\r\n\t\t\t\t\tthis.toggleDataItem(focusedItem);\r\n\t\t\t\t}\r\n\t\t\t\telse if (target.clickable && target.events.isEnabled(\"hit\")) {\r\n\t\t\t\t\ttarget.dispatchImmediately(\"hit\", { event: ev });\r\n\r\n\t\t\t\t\t// We need this here because \"hit\" event resets `this.focusedItem`\r\n\t\t\t\t\t// And we need it here\r\n\t\t\t\t\tthis.focusedItem = focusedItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Create a template container and list for the a marker\r\n\t\tlet marker: Container = new Container();\r\n\t\tmarker.width = 23;\r\n\t\tmarker.height = 23;\r\n\t\tmarker.interactionsEnabled = false;\r\n\t\tmarker.applyOnClones = true;\r\n\t\tmarker.setStateOnChildren = true;\r\n\t\tmarker.background.fillOpacity = 0;\r\n\t\tmarker.background.strokeOpacity = 0;\r\n\t\tmarker.propertyFields.fill = \"fill\";\r\n\t\tmarker.valign = \"middle\";\r\n\r\n\t\tlet disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n\r\n\t\tmarker.events.on(\"childadded\", (event) => {\r\n\t\t\tlet child = event.newValue;\r\n\t\t\tlet activeState = child.states.create(\"active\");\r\n\t\t\tactiveState.properties.stroke = disabledColor;\r\n\t\t\tactiveState.properties.fill = disabledColor;\r\n\t\t});\r\n\r\n\t\tthis.markers = new ListTemplate<Container>(marker);\r\n\t\tthis._disposers.push(new ListDisposer(this.markers));\r\n\t\tthis._disposers.push(this.markers.template);\r\n\r\n\t\t// Create a legend background element\r\n\t\tlet rectangle: RoundedRectangle = marker.createChild(RoundedRectangle);\r\n\t\trectangle.width = percent(100);\r\n\t\trectangle.height = percent(100);\r\n\t\trectangle.applyOnClones = true;\r\n\t\trectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\r\n\t\trectangle.strokeOpacity = 0;\r\n\r\n\t\t// Create a template container and list for item labels\r\n\t\tlet label: Label = new Label();\r\n\t\tlabel.text = \"{name}\";\r\n\t\tlabel.margin(0, 5, 0, 5);\r\n\t\tlabel.valign = \"middle\";\r\n\t\tlabel.applyOnClones = true;\r\n\t\tlabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tthis.labels = new ListTemplate<Label>(label);\r\n\t\tthis._disposers.push(new ListDisposer(this.labels));\r\n\t\tthis._disposers.push(this.labels.template);\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.truncate = true;\r\n\t\tlabel.fullWords = false;\r\n\r\n\t\t// Create a template container and list for item value labels\r\n\t\tlet valueLabel: Label = new Label();\r\n\t\tvalueLabel.margin(0, 5, 0, 0);\r\n\t\tvalueLabel.valign = \"middle\";\r\n\t\tvalueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n\t\tvalueLabel.align = \"right\";\r\n\t\tvalueLabel.textAlign = \"end\";\r\n\t\tvalueLabel.applyOnClones = true;\r\n\t\tvalueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n\t\tvalueLabel.interactionsEnabled = false;\r\n\r\n\t\tthis.valueLabels = new ListTemplate<Label>(valueLabel);\r\n\t\tthis._disposers.push(new ListDisposer(this.valueLabels));\r\n\t\tthis._disposers.push(this.valueLabels.template);\r\n\r\n\t\tthis.position = \"bottom\"; // don't use setPropertyValue here!\r\n\r\n\t\t// Create a state for disabled legend items\r\n\t\titemContainer.states.create(\"active\");\r\n\t\titemContainer.setStateOnChildren = true;\r\n\r\n\t\t// Apply accessibility settings\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.events.on(\"layoutvalidated\", this.handleScrollbar, this, false);\r\n\t\tthis.events.on(\"parentset\", () => {\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif (parent) {\r\n\t\t\t\tthis._disposers.push(parent.events.on(\"maxsizechanged\", () => {\r\n\t\t\t\t\tif (this.scrollable) {\r\n\t\t\t\t\t\tthis.setTimeout(() => {\r\n\t\t\t\t\t\t\tthis.updateMasks();\r\n\t\t\t\t\t\t\tthis.handleScrollbar();\r\n\t\t\t\t\t\t\tthis._handleWheelReal(1);\r\n\t\t\t\t\t\t}, 100)\r\n\t\t\t\t\t}\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Legend\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new LegendDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tprotected validateDataElements() {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.scrollbar.start = 0;\r\n\t\t\tthis.scrollbar.end = 1;\r\n\t\t}\r\n\t\tsuper.validateDataElements();\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElement description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem Data item\r\n\t * @todo Description\r\n\t * @todo Figure out how to update appearance of legend item without losing focus\r\n\t * @todo Update legend marker appearance as apperance of related series changes\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t\t// Get data item (legend item's) container\r\n\t\tlet container = dataItem.itemContainer;\r\n\r\n\t\tlet marker = dataItem.marker;\r\n\r\n\t\t$utils.used(dataItem.label);\r\n\t\tlet valueLabel = dataItem.valueLabel;\r\n\r\n\t\t// Set parent and update current state\r\n\t\tcontainer.readerChecked = dataItem.dataContext.visible;\r\n\r\n\t\t// Tell series its legend data item\r\n\t\tdataItem.dataContext.legendDataItem = dataItem;\r\n\r\n\t\tlet tempMaxWidth = dataItem.label.maxWidth;\r\n\t\tif (!(dataItem.label.width instanceof Percent)) {\r\n\t\t\tdataItem.label.width = undefined;\r\n\t\t}\r\n\r\n\t\tif (tempMaxWidth > 0) {\r\n\t\t\tdataItem.label.maxWidth = tempMaxWidth;\r\n\t\t}\r\n\t\tif (valueLabel.align == \"right\") {\r\n\t\t\tvalueLabel.width = undefined;\r\n\t\t}\r\n\r\n\t\tlet legendSettings = dataItem.dataContext.legendSettings;\r\n\r\n\t\t// If we are not using default markers, create a unique legend marker based\r\n\t\t// on the data item type\r\n\t\tlet dataContext = dataItem.dataContext;\r\n\r\n\t\tif (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n\t\t\tif (!dataItem.childrenCreated) {\r\n\t\t\t\tdataContext.createLegendMarker(marker);\r\n\t\t\t\tdataItem.childrenCreated = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.markers.template.propertyFields.fill = undefined;\r\n\t\t}\r\n\r\n\t\tif (dataContext.updateLegendValue) {\r\n\t\t\tdataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n\t\t}\r\n\r\n\t\tif (dataContext.component && dataContext.component.updateLegendValue) {\r\n\t\t\tdataContext.component.updateLegendValue(dataContext);\r\n\t\t}\r\n\r\n\t\tif (valueLabel.invalid) {\r\n\t\t\tvalueLabel.validate();\r\n\t\t}\r\n\r\n\t\tif (valueLabel.text == \"\" || valueLabel.text == undefined) {\r\n\t\t\tvalueLabel.__disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n\t\t\tvalueLabel.__disabled = false;\r\n\t\t}\r\n\r\n\t\tlet visible = dataItem.dataContext.visible;\r\n\r\n\t\tif (visible === undefined) {\r\n\t\t\tvisible = true;\r\n\t\t}\r\n\t\tvisible = $type.toBoolean(visible);\r\n\t\tdataItem.dataContext.visible = visible;\r\n\r\n\t\tcontainer.events.disableType(\"toggled\");\r\n\r\n\t\tcontainer.isActive = !visible;\r\n\t\tif (container.isActive) {\r\n\t\t\tcontainer.setState(\"active\", 0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcontainer.setState(\"default\", 0);\r\n\t\t}\r\n\t\tcontainer.events.enableType(\"toggled\");\r\n\t}\r\n\r\n\r\n\tpublic afterDraw() {\r\n\t\tlet maxWidth = this.getPropertyValue(\"maxWidth\");\r\n\t\tlet maxLabelWidth = 0;\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (label.invalid) {\r\n\t\t\t\tlabel.maxWidth = undefined;\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\r\n\t\t\t\tmaxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\tlet maxValueLabelWidth = 0;\r\n\t\tthis.valueLabels.each((label) => {\r\n\t\t\tif (label.invalid) {\r\n\t\t\t\tlabel.validate();\r\n\t\t\t}\r\n\t\t\tif (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\r\n\t\t\t\tmaxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet maxMarkerWidth = 0;\r\n\t\tthis.markers.each((marker) => {\r\n\t\t\tif (marker.invalid) {\r\n\t\t\t\tmarker.validate();\r\n\t\t\t}\r\n\t\t\tif (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\r\n\t\t\t\tmaxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet itemContainer = this.itemContainers.template;\r\n\t\tlet margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\r\n\t\tlet maxAdjustedLabelWidth: number;\r\n\t\tlet trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\r\n\t\tif (!$type.isNumber(maxWidth)) {\r\n\t\t\tmaxAdjustedLabelWidth = maxLabelWidth;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmaxWidth = maxWidth - margin;\r\n\t\t\tif (maxWidth > trueMaxWidth) {\r\n\t\t\t\tmaxWidth = trueMaxWidth;\r\n\t\t\t}\r\n\t\t\tmaxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\r\n\t\t}\r\n\r\n\t\tthis.labels.each((label) => {\r\n\t\t\tif (this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\r\n\t\t\t\tif (!(label.width instanceof Percent)) {\r\n\t\t\t\t\tlabel.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\r\n\t\t\t\t\tlabel.maxWidth = label.width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (this.valueLabels.template.align == \"right\") {\r\n\t\t\tthis.valueLabels.each((valueLabel) => {\r\n\t\t\t\tvalueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tsuper.afterDraw();\r\n\t}\r\n\r\n\r\n\tprotected handleScrollbar() {\r\n\t\tlet scrollbar = this.scrollbar;\r\n\t\tif (this.scrollable && scrollbar) {\r\n\t\t\tconst measuredHeight = this.maxHeight;\r\n\t\t\tscrollbar.height = measuredHeight;\r\n\t\t\tscrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\r\n\r\n\t\t\tif (this.contentHeight > measuredHeight) {\r\n\t\t\t\tscrollbar.visible = true;\r\n\t\t\t\tscrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\r\n\t\t\t\tthis.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\r\n\t\t\t\tthis.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t\tscrollbar.start = 0;\r\n\t\t\t\tscrollbar.end = 1;\r\n\t\t\t}\r\n\r\n\t\t\tscrollbar.handleThumbPosition();\r\n\r\n\t\t\tthis.updateMasks();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Position of the legend.\r\n\t *\r\n\t * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n\t *\r\n\t * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n\t * layout structure than other charts.\r\n\t *\r\n\t * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n\t * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n\t *\r\n\t * @default \"bottom\"\r\n\t * @param value  Position\r\n\t */\r\n\tpublic set position(value: LegendPosition) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tif (value == \"left\" || value == \"right\") {\r\n\t\t\t\tthis.margin(10, 5, 10, 10);\r\n\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\tthis.contentAlign = \"none\";\r\n\t\t\t\tthis.valueLabels.template.align = \"right\";\r\n\r\n\t\t\t\tif (!$type.isNumber(this.maxColumns)) {\r\n\t\t\t\t\tthis.maxColumns = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.width = undefined;\r\n\t\t\t\tthis.maxWidth = 220;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.maxColumns = undefined;\r\n\t\t\t\tthis.width = percent(100);\r\n\t\t\t\tthis.valueLabels.template.align = \"left\";\r\n\t\t\t}\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): LegendPosition {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should legend try to mirror the look of the related item when building\r\n\t * the marker for legend item?\r\n\t *\r\n\t * If set to `false` it will try to make the marker look like its related\r\n\t * item.\r\n\t *\r\n\t * E.g. if an item is for a Line Series, it will display a line of the\r\n\t * same thickness, color, and will use the same bullets if series have them.\r\n\t *\r\n\t * If set to `true`, all markers will be shown as squares, regardless of te\r\n\t * series type.\r\n\t *\r\n\t * @default false\r\n\t * @param value Use default marker?\r\n\t */\r\n\tpublic set useDefaultMarker(value: boolean) {\r\n\t\tthis.setPropertyValue(\"useDefaultMarker\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default marker?\r\n\t */\r\n\tpublic get useDefaultMarker(): boolean {\r\n\t\treturn this.getPropertyValue(\"useDefaultMarker\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true` the Legend will display a scrollbar if its contents do\r\n\t * not fit into its `maxHeight`.\r\n\t *\r\n\t * Please note that `maxHeight` is automatically set for Legend when its\r\n\t * `position` is set to `\"left\"` or `\"right\"`.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.8.0\r\n\t * @param  value  Legend Scrollable?\r\n\t */\r\n\tpublic set scrollable(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"scrollable\", value, true)) {\r\n\t\t\tif (value) {\r\n\t\t\t\tlet scrollbar = this.createChild(Scrollbar);\r\n\t\t\t\tthis.scrollbar = scrollbar;\r\n\t\t\t\tscrollbar.isMeasured = false;\r\n\t\t\t\tscrollbar.orientation = \"vertical\";\r\n\t\t\t\tscrollbar.endGrip.__disabled = true;\r\n\t\t\t\tscrollbar.startGrip.__disabled = true;\r\n\t\t\t\tscrollbar.visible = false;\r\n\t\t\t\tscrollbar.marginLeft = 5;\r\n\r\n\t\t\t\tthis._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\r\n\t\t\t\tthis._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t\tif (this.scrollbar) {\r\n\t\t\t\t\t\tthis.scrollbar.dispose();\r\n\t\t\t\t\t\tthis.scrollbar = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling of legend.\r\n\t *\r\n\t * @param  event  Event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]): void {\r\n\t\tthis._handleWheelReal(event.shift.y)\r\n\t}\r\n\r\n\tprotected _handleWheelReal(shift: number) {\r\n\t\tlet scrollbar = this.scrollbar\r\n\t\tif (scrollbar) {\r\n\t\t\tlet ds = (shift / 1000 * this.measuredHeight / this.contentHeight);\r\n\t\t\tlet delta = scrollbar.end - scrollbar.start;\r\n\t\t\tif (shift > 0) {\r\n\t\t\t\tscrollbar.start = $math.max(0, scrollbar.start - ds);\r\n\t\t\t\tscrollbar.end = scrollbar.start + delta;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollbar.end = $math.min(1, scrollbar.end - ds);\r\n\t\t\t\tscrollbar.start = scrollbar.end - delta;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateMasks(): void {\r\n\t\tif (this.scrollbar) {\r\n\t\t\tthis.itemContainers.each((itemContainer) => {\r\n\t\t\t\titemContainer.dy = -this.scrollbar.thumb.pixelY * this.contentHeight / this.maxHeight;\r\n\t\t\t\titemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: this.measuredWidth, height: this.maxHeight }\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.invalidatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend Scrollable?\r\n\t */\r\n\tpublic get scrollable(): boolean {\r\n\t\treturn this.getPropertyValue(\"scrollable\");\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a legend item.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param item Legend item\r\n\t * @todo Maybe do it with togglable instead\r\n\t */\r\n\tpublic toggleDataItem(item: this[\"_dataItem\"]): void {\r\n\t\tlet dataContext = item.dataContext;\r\n\r\n\t\tif (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n\t\t\titem.color = item.colorOrig;\r\n\r\n\t\t\tdataContext.appeared = true;\r\n\t\t\titem.itemContainer.isActive = false;\r\n\r\n\t\t\tif (dataContext.hidden === true) {\r\n\t\t\t\tdataContext.hidden = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataContext.show) {\r\n\t\t\t\tdataContext.show();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\titem.itemContainer.isActive = true;\r\n\t\t\tdataContext.appeared = true;\r\n\r\n\t\t\tif (dataContext.hide) {\r\n\t\t\t\tdataContext.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdataContext.visible = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\r\n\t\t\titem.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Override preloader method so that legend does not accidentally show its\r\n\t * own preloader.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Always `undefined`\r\n\t */\r\n\tpublic get preloader(): Optional<Preloader> {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemPropertyChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemPropertyChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tdataItem.valueLabel.invalidate();\r\n\t\tdataItem.label.invalidate();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n\r\n\r\n/**\r\n * Add default responsive rules\r\n */\r\n\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.widthXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"bottom\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.heightXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.position = \"right\";\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n\trelevant: ResponsiveBreakpoints.isXS,\r\n\tstate: function(target, stateId) {\r\n\t\tif (target instanceof Legend) {\r\n\t\t\tlet state = target.states.create(stateId);\r\n\t\t\tstate.properties.disabled = true;\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n});\r\n","/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component, IComponentProperties, IComponentDataFields, IComponentAdapters, IComponentEvents } from \"../../core/Component\";\r\nimport { AxisDataItem } from \"../axes/Axis\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { SerialChart } from \"../types/SerialChart\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Axis } from \"../axes/Axis\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendDataItem, LegendSettings } from \"../Legend\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n\r\nexport interface IHeatRule {\r\n\ttarget: Sprite;\r\n\tproperty: string;\r\n\tmin: any;\r\n\tmax: any;\r\n\tdataField?: string;\r\n\tminValue?: number;\r\n\tmaxValue?: number;\r\n\tlogarithmic?: boolean;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SeriesDataItem extends DataItem {\r\n\r\n\t/**\r\n\t * Related item's width in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemWidth: number;\r\n\r\n\t/**\r\n\t * Related item's height in pixels.\r\n\t *\r\n\t * This is passed to bullets so that we'd know if the bullet (LabelBullet)\r\n\t * fits to max width/height.\r\n\t *\r\n\t * At the moment this is only used by column series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic itemHeight: number;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _bullets: Dictionary<string, Sprite>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Series;\r\n\r\n\t/**\r\n\t * A dictionary of data items bullets, where key is uid of a bullet template.\r\n\t */\r\n\tpublic get bullets(): Dictionary<string, Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new Dictionary<string, Sprite>();\r\n\t\t\tthis._disposers.push(new DictionaryDisposer(this._bullets));\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SeriesDataItem\";\r\n\t\t//@todo Should we make `bullets` list disposable?\r\n\t\t//this._disposers.push(new DictionaryDisposer(this.bullets));\r\n\r\n\t\tthis.values.value = {};\r\n\t\tthis.values.value = {};\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys this object and all related data.\r\n\t */\r\n\tpublic dispose() {\r\n\t\tthis.bullets.clear();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * data items's numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Series]].\r\n */\r\nexport interface ISeriesDataFields extends IComponentDataFields {\r\n\t/**\r\n\t * Name of the field in data that holds numeric value.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be hidden.\r\n\t */\r\n\thidden?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[Series]].\r\n */\r\nexport interface ISeriesProperties extends IComponentProperties {\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tminBulletDistance?: number;\r\n\r\n\t/**\r\n\t * Should series be hidden in chart's legend?\r\n\t */\r\n\thiddenInLegend?: boolean;\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t */\r\n\tname?: string;\r\n}\r\n\r\n/**\r\n * Defines events for [[Series]].\r\n */\r\nexport interface ISeriesEvents extends IComponentEvents {\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tselectionextremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\textremeschanged: {};\r\n\r\n\t/**\r\n\t * @todo Description\r\n\t */\r\n\tdataitemchanged: {\r\n\t\tdataItem: DataItem\r\n\t};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Series]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISeriesAdapters extends IComponentAdapters, ISeriesProperties {\r\n\t/**\r\n\t * Applied to the name used by screen readers.\r\n\t */\r\n\titemReaderText: string\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nexport class Series extends Component {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ISeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISeriesEvents;\r\n\r\n\t/**\r\n\t * Defines a type of data item used for the series.\r\n\t */\r\n\tpublic _dataItem: SeriesDataItem;\r\n\r\n\t/**\r\n\t * A reference to the legend data item related to this series.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tprotected _ignoreMinMax: boolean = false;\r\n\r\n\t/**\r\n\t * Container series' elements are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic mainContainer: Container;\r\n\r\n\t/**\r\n\t * Should series' bullets?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tprotected _showBullets: boolean = true;\r\n\r\n\t/**\r\n\t * List of series' bullets.\r\n\t */\r\n\tprotected _bullets: ListTemplate<Sprite>;\r\n\r\n\t/**\r\n\t * Container bullets are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic bulletsContainer: Container;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: SerialChart;\r\n\r\n\t/**\r\n\t * A container axis ranges are placed in.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic rangesContainer: Container;\r\n\r\n\t/**\r\n\t * A list of axis ranges for this series.\r\n\t */\r\n\tpublic axisRanges: List<AxisDataItem>;\r\n\r\n\t/**\r\n\t * Settings for the appearance of the related legend items.\r\n\t */\r\n\tpublic legendSettings: LegendSettings = new LegendSettings();\r\n\r\n\t/**\r\n\t * Lowest overal values by type.\r\n\t */\r\n\tprotected _tmin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest overal values by type.\r\n\t */\r\n\tprotected _tmax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Lowest values in current selection by type.\r\n\t */\r\n\tprotected _smin = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * Highest values in current selection by type.\r\n\t */\r\n\tprotected _smax = new Dictionary<string, number>();\r\n\r\n\t/**\r\n\t * [dataItemsByAxis description]\r\n\t *\r\n\t * Both by category and date.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic dataItemsByAxis = new Dictionary<string, Dictionary<string, this[\"_dataItem\"]>>();\r\n\r\n\t/**\r\n\t * Normally series items are focusable using keyboard, so that people can\r\n\t * select them with a TAB key. However, if there are a lot of data points on\r\n\t * screen it might be long and useless to tab through all o fthem.\r\n\t *\r\n\t * This is where `skipFocusThreshold` comes in. If there are more items than\r\n\t * the value set here, we will not make those focusable and rather let screen\r\n\t * reader software rely on the series summary, or authors provide alternative\r\n\t * detailed information display, such as HTML table.\r\n\t *\r\n\t * Different series might have different threshold defaults.\r\n\t */\r\n\tpublic skipFocusThreshold: number = 20;\r\n\r\n\t/**\r\n\t * Holds a default screen reader text for series data items. It will be used\r\n\t * to generate information for screen readers. If not set, the series will\r\n\t * try to deduce reader text from `tooltipText` or `tooltipHTML`. If those\r\n\t * are not set either, a default reader text will be used which is relevant\r\n\t * for each Series type.\r\n\t */\r\n\tprotected _itemReaderText: string;\r\n\r\n\r\n\t/**\r\n\t * Used to indicate if `itemReaderText` was changed \"from the outside\".\r\n\t */\r\n\tprotected _itemReaderTextChanged: boolean = false;\r\n\r\n\t/*\r\n\t\tpublic heatMapfillRule: (fill:Color, column: Sprite) => any = function(fill:Color, sprite: Sprite) {\r\n\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>sprite.dataItem;\r\n\r\n\t\t\tif (dataItem && dataItem.value) {\r\n\t\t\t\tlet series = dataItem.component;\r\n\t\t\t\tif($type.hasValue(series.minColor) &&  $type.hasValue(series.maxColor) && $type.isNumber(series.minValue) && $type.isNumber(series.maxValue)){\r\n\t\t\t\t\tlet percent = (dataItem.values.value.workingValue - series.minValue) / (series.maxValue - series.minValue);\r\n\t\t\t\t\treturn new Color($colors.interpolate(series.minColor.rgb, series.maxColor.rgb, percent));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t*/\r\n\r\n\tprotected _heatRules: List<IHeatRule>;\r\n\r\n\t/**\r\n\t * Most of the series use absolute values. However sometimes various\r\n\t * calculated percent values are need, e.g. item's percent representation\r\n\t * across all values in series, etc.\r\n\t *\r\n\t * It's a resource-intensive operation, so it is disabled by default.\r\n\t *\r\n\t * If you need percents to be calculated, e.g. for showing them in tooltips,\r\n\t * or creating 100% stacks, this setting needs to be set to `true`.\r\n\t *\r\n\t * NOTE: `PieChart`, which relies on slice percentages, has this\r\n\t * automatically set to `true`.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic calculatePercent: boolean = false;\r\n\r\n\t/**\r\n\t * When `calculatePercent` is enabled and data item's percent value is\r\n\t * calculated, last item's real value is used instead of its working value.\r\n\t *\r\n\t * This is done for the animations when last item in series (e.g. slice in\r\n\t * a `PieSeries`) is hidden or shown. (if we would use real value, the\r\n\t * calculated percent would always be 100%).\r\n\t *\r\n\t * Sometimes there is a need (e.g. for drill-down Sunburst) to disable this\r\n\t * hack by setting `usePercentHack` to `false`.\r\n\t *\r\n\t * @since 4.9.13\r\n\t * @default true\r\n\t */\r\n\tpublic usePercentHack: boolean = true;\r\n\r\n\t/**\r\n\t * Specifies if series should be automatically disposed when removing from\r\n\t * chart's `series` list.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic autoDispose: boolean = true;\r\n\r\n\t/**\r\n\t * When chart/series' data is processed, all kinds of derivative values are\r\n\t * calculated. E.g. sum, min, max, change, etc. This is a potentially\r\n\t * time-consuming operation, especially prominent in data-heavy charts.\r\n\t *\r\n\t * If your chart does not need those values, and you have a lot of data,\r\n\t * setting this to `true` might give a dramatic increase in initial chart\r\n\t * load speed.\r\n\t *\r\n\t * Please note, regular column and line series usage scenarios do not\r\n\t * require derivative values. Those come into play only when you do advanced\r\n\t * functionality like coloring segments of charts in different colors\r\n\t * depending on change between open and close values, have stacked series, or\r\n\t * display any of the derived values, like percent, in tooltips or bullets.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpublic simplifiedProcessing: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tif (this.constructor === Series) {\r\n\t\t\tthrow new Error(\"'Series' cannot be instantiated directly. Please use a specific series type.\");\r\n\t\t}\r\n\r\n\t\tthis.className = \"Series\";\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.shouldClone = false;\r\n\t\tthis.setPropertyValue(\"hidden\", false);\r\n\r\n\t\tthis.axisRanges = new List<AxisDataItem>();\r\n\t\tthis.axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n\r\n\t\tthis.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n\t\tthis.mainContainer = this.createChild(Container);\r\n\t\tthis.mainContainer.shouldClone = false;\r\n\t\tthis.mainContainer.mask = this.createChild(Sprite);\r\n\r\n\t\tthis._disposers.push(this.mainContainer);\r\n\r\n\t\t// all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n\t\tlet bulletsContainer = this.mainContainer.createChild(Container);\r\n\t\tthis._shouldBeReady.push(bulletsContainer);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tbulletsContainer.virtualParent = this;\r\n\t\tthis._disposers.push(bulletsContainer);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tthis.tooltip = new Tooltip();\r\n\t\tthis.tooltip.virtualParent = this;\r\n\t\tthis._disposers.push(this.tooltip);\r\n\r\n\t\tthis.hiddenState.transitionEasing = $ease.cubicIn;\r\n\r\n\t\t// this data item holds sums, averages, etc\r\n\t\tthis.dataItem = this.createDataItem();\r\n\t\tthis._disposers.push(this.dataItem);\r\n\t\tthis.dataItem.component = this;\r\n\r\n\t\t// Apply accessibility\r\n\t\tthis.role = \"group\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * We need this here so that class names can be applied to bullets container.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic applyTheme(): void {\r\n\t\tsuper.applyTheme();\r\n\t\tif (options.autoSetClassName && this.bulletsContainer) {\r\n\t\t\tthis.bulletsContainer.className = this.className + \"-bullets\";\r\n\t\t\tthis.bulletsContainer.setClassName();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart series is used on.\r\n\t *\r\n\t * @param value  Chart\r\n\t */\r\n\tpublic set chart(value: this[\"_chart\"]) {\r\n\t\tthis._chart = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart\r\n\t */\r\n\tpublic get chart(): this[\"_chart\"] {\r\n\t\treturn this._chart;\r\n\t}\r\n\r\n\t/**\r\n\t * Positions bullet.\r\n\t *\r\n\t * @param bullet  Sprite\r\n\t */\r\n\tpublic positionBullet(bullet: Sprite): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates newly created bullet after it has been instert into the list.\r\n\t *\r\n\t * @param event  List event\r\n\t * @todo investigate why itemReaderText is undefined\r\n\t */\r\n\tprotected processBullet(event: IListEvents<Sprite>[\"inserted\"]) {\r\n\t\tlet bullet: Sprite = event.newValue;\r\n\t\tbullet.isTemplate = true;\r\n\t\t// Add accessibility options to bullet\r\n\t\t// If there are relatively few bullets, make them focusable\r\n\t\tthis.events.once(\"datavalidated\", (ev) => {\r\n\t\t\tif (this.itemsFocusable()) {\r\n\t\t\t\tbullet.focusable = true;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * removes bullets\r\n\t *\r\n\t * @param event  List event\r\n\t */\r\n\tprotected removeBullet(event: IListEvents<Sprite>[\"removed\"]) {\r\n\t\tlet bullet: Sprite = event.oldValue;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n\t\t\tif (eachBullet) {\r\n\t\t\t\teachBullet.dispose();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.processValues(false);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getFirstValue(key: string, startIndex: number): number {\r\n\t\t// find first\r\n\t\t/*\r\n\t\treturn $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tfor (let key in dataItem.values) {\r\n\t\t\t\tif ($object.hasKey(dataItem.values, key)) {\r\n\t\t\t\t\tlet value: number = dataItem.values[key].workingValue;\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\t\t});*/\r\n\r\n\t\t//if (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n\t\t//startIndex++;\r\n\t\t//}\r\n\t\tfor (let i = startIndex; i >= 0; i--) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns first value for the specific key in the series.\r\n\t *\r\n\t * @param key  Key\r\n\t * @return Value\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t */\r\n\tprotected getAbsoluteFirstValue(key: string): number {\r\n\t\tfor (let i = 0; i < this.dataItems.length; i++) {\r\n\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\tlet value: number = dataItem.values[key].value;\r\n\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\treturn value;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * [rangeChangeUpdate description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected rangeChangeUpdate() {\r\n\t\tsuper.rangeChangeUpdate();\r\n\t\tthis.processValues(true);\r\n\t}\r\n\r\n\t/**\r\n\t * [processValues description]\r\n\t *\r\n\t * @todo Description\r\n\t * @todo Convert to propert object property iterator\r\n\t * @param dataItems [description]\r\n\t */\r\n\tprotected processValues(working: boolean) {\r\n\t\tif (!this.simplifiedProcessing) {\r\n\t\t\tlet dataItems = this.dataItems;\r\n\r\n\t\t\tlet count: { [index: string]: number } = {};\r\n\t\t\tlet sum: { [index: string]: number } = {};\r\n\t\t\tlet absoluteSum: { [index: string]: number } = {};\r\n\t\t\tlet low: { [index: string]: number } = {};\r\n\t\t\tlet high: { [index: string]: number } = {};\r\n\t\t\tlet open: { [index: string]: number } = {};\r\n\t\t\tlet close: { [index: string]: number } = {};\r\n\t\t\tlet previous: { [index: string]: number } = {};\r\n\t\t\tlet first: { [index: string]: number } = {};\r\n\t\t\tlet absoluteFirst: { [index: string]: number } = {};\r\n\r\n\t\t\t//let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n\r\n\t\t\tlet startIndex: number = $math.max(0, this.startIndex);\r\n\t\t\tstartIndex = $math.min(startIndex, this.dataItems.length);\r\n\r\n\t\t\tlet endIndex: number = $math.min(this.endIndex, this.dataItems.length);\r\n\r\n\t\t\tif (!$type.isNumber(startIndex)) {\r\n\t\t\t\tstartIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(endIndex)) {\r\n\t\t\t\tendIndex = this.dataItems.length;\r\n\t\t\t}\r\n\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t$object.each(dataItem.values, (key, values) => {\r\n\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t//if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\r\n\t\t\t\t\t\t// count values\r\n\t\t\t\t\t\tif (!$type.isNumber(count[key])) {\r\n\t\t\t\t\t\t\tcount[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcount[key]++;\r\n\r\n\t\t\t\t\t\t// sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(sum[key])) {\r\n\t\t\t\t\t\t\tsum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsum[key] += value;\r\n\r\n\t\t\t\t\t\t// absolute sum values\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteSum[key])) {\r\n\t\t\t\t\t\t\tabsoluteSum[key] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tabsoluteSum[key] += Math.abs(value);\r\n\r\n\t\t\t\t\t\t// open\r\n\t\t\t\t\t\tif (!$type.isNumber(open[key])) {\r\n\t\t\t\t\t\t\topen[key] = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// close\r\n\t\t\t\t\t\tclose[key] = value;\r\n\r\n\t\t\t\t\t\t// low\r\n\t\t\t\t\t\tif (!$type.isNumber(low[key])) {\r\n\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (low[key] > value) {\r\n\t\t\t\t\t\t\t\tlow[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// high\r\n\t\t\t\t\t\tif (!$type.isNumber(high[key])) {\r\n\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif (high[key] < value) {\r\n\t\t\t\t\t\t\t\thigh[key] = value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(first[key])) {\r\n\t\t\t\t\t\t\tfirst[key] = this.getFirstValue(key, startIndex);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(absoluteFirst[key])) {\r\n\t\t\t\t\t\t\tabsoluteFirst[key] = this.getAbsoluteFirstValue(key);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// change\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - first[key], \"change\");\r\n\t\t\t\t\t\t// change from start percent\r\n\t\t\t\t\t\t// will fail if first value is 0\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - first[key]) / first[key] * 100, \"changePercent\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]), \"startChange\");\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - absoluteFirst[key]) / absoluteFirst[key] * 100, \"startChangePercent\");\r\n\r\n\t\t\t\t\t\t// previous change\r\n\t\t\t\t\t\tlet prevValue: number = previous[key];\r\n\t\t\t\t\t\tif (!$type.isNumber(prevValue)) {\r\n\t\t\t\t\t\t\tprevValue = value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n\t\t\t\t\t\t// previous change percent\r\n\t\t\t\t\t\tdataItem.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n\r\n\t\t\t\t\t\t// save previous\r\n\t\t\t\t\t\tprevious[key] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.calculatePercent) {\r\n\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\t\t\tlet ksum: number = absoluteSum[key];\r\n\r\n\t\t\t\t\t\tlet value: number = dataItem.getActualWorkingValue(key);\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\tif (ksum > 0) {\r\n\t\t\t\t\t\t\t\tif (this.usePercentHack) {\r\n\t\t\t\t\t\t\t\t\t// this hack is made in order to make it possible to animate single slice to 0\r\n\t\t\t\t\t\t\t\t\t// if there is only one slice left, percent value is always 100%, so it won't animate\r\n\t\t\t\t\t\t\t\t\t// so we use real value of a slice instead of current value\r\n\t\t\t\t\t\t\t\t\tif (value == ksum) {\r\n\t\t\t\t\t\t\t\t\t\tksum = dataItem.values[key].value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet percent = value / ksum * 100;\r\n\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, percent, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdataItem.setCalculatedValue(key, 0, \"percent\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// calculate one before first (cant do that in cycle, as we don't know open yet\r\n\t\t\t// when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n\t\t\t// so we do startIndex - 1\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tlet zeroItem: this[\"_dataItem\"] = dataItems.getIndex(startIndex - 1);\r\n\r\n\t\t\t\t$object.each(zeroItem.values, (key) => {\r\n\t\t\t\t\tlet value = zeroItem.values[key].value;\r\n\t\t\t\t\t// change\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, value - open[key], \"change\");\r\n\t\t\t\t\t// change percent\r\n\t\t\t\t\tzeroItem.setCalculatedValue(key, (value - open[key]) / open[key] * 100, \"changePercent\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// we save various data like sum, average to dataPoint of the series\r\n\t\t\tlet dataItem: DataItem = this.dataItem;\r\n\t\t\t$object.each(dataItem.values, (key) => {\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key], \"sum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, absoluteSum[key], \"absoluteSum\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, sum[key] / count[key], \"average\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, open[key], \"open\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, close[key], \"close\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, low[key], \"low\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, high[key], \"high\");\r\n\t\t\t\tdataItem.setCalculatedValue(key, count[key], \"count\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tif ($utils.isIE()) {\r\n\t\t\tthis.filters.clear();\r\n\t\t}\r\n\r\n\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t//axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n\t\t\t//\t\t\taxisRange.appendChildren();\r\n\t\t\taxisRange.validate();\r\n\t\t});\r\n\r\n\t\tsuper.validate();\r\n\t\tlet bulletsContainer = this.bulletsContainer;\r\n\t\tbulletsContainer.fill = this.fill;\r\n\t\tbulletsContainer.stroke = this.stroke;\r\n\t\tbulletsContainer.x = this.pixelX;\r\n\t\tbulletsContainer.y = this.pixelY;\r\n\r\n\t\tif (this.bulletsContainer.children.length > 0) {\r\n\t\t\tif (this._showBullets) {\r\n\r\n\t\t\t\tfor (let i = 0; i < this.startIndex; i++) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n\t\t\t\t\tlet dataItem = this.dataItems.getIndex(i);\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tdataItem.bullets.each((key, bullet) => {\r\n\t\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bulletsContainer.children.each((bullet) => {\r\n\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.updateTooltipBounds();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.topParent) {\r\n\t\t\tlet x = 0;\r\n\t\t\tlet y = 0;\r\n\t\t\tlet w = this.topParent.maxWidth;\r\n\t\t\tlet h = this.topParent.maxHeight;\r\n\t\t\tlet rect = { x: x, y: y, width: w, height: h };\r\n\r\n\t\t\tthis.tooltip.setBounds(rect);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected shouldCreateBullet(dataItem: this[\"_dataItem\"], bulletTemplate: Sprite): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tif (this._showBullets) {\r\n\t\t\tif (!this.isHidden) {\r\n\t\t\t\tthis.bulletsContainer.visible = true;\r\n\t\t\t}\r\n\t\t\tthis.bullets.each((bulletTemplate) => {\r\n\t\t\t\t// always better to use the same, this helps to avoid redrawing\r\n\t\t\t\tlet bullet: Sprite = <Sprite>dataItem.bullets.getKey(bulletTemplate.uid);\r\n\r\n\t\t\t\tif (this.shouldCreateBullet(dataItem, bulletTemplate)) {\r\n\t\t\t\t\tif (!bullet) {\r\n\r\n\t\t\t\t\t\tlet disabledField = bulletTemplate.propertyFields.disabled;\r\n\t\t\t\t\t\tlet dataContext = <any>dataItem.dataContext;\r\n\t\t\t\t\t\tif (disabledField && dataContext && dataContext[disabledField] === false) {\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = false;\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = false;\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t\tbulletTemplate.disabled = true;\r\n\t\t\t\t\t\t\tbulletTemplate.applyOnClones = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tbullet = bulletTemplate.clone();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbullet.shouldClone = false;\r\n\t\t\t\t\t\tdataItem.addSprite(bullet);\r\n\r\n\t\t\t\t\t\tif (!this.visible || this.isHiding) {\r\n\t\t\t\t\t\t\tbullet.hide(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet currentDataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\t\t\t\tif (currentDataItem != dataItem) {\r\n\t\t\t\t\t\t// set to undefined in order not to reuse\r\n\t\t\t\t\t\tif (currentDataItem) {\r\n\t\t\t\t\t\t\tcurrentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet readerText = this.itemReaderText;\r\n\r\n\t\t\t\t\t\tif (bullet instanceof Bullet) {\r\n\t\t\t\t\t\t\tif (!readerText) {\r\n\t\t\t\t\t\t\t\treaderText = (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (bullet.isDynamic) {\r\n\t\t\t\t\t\t\t\tdataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\t//dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t\tthis.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbullet.deepInvalidate();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Add accessibility to bullet\r\n\t\t\t\t\t\tif (bullet.focusable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"focus\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"blur\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bullet.hoverable) {\r\n\t\t\t\t\t\t\tbullet.events.on(\"over\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = this.populateString(readerText, bullet.dataItem);\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t\tbullet.events.on(\"out\", (ev) => {\r\n\t\t\t\t\t\t\t\tbullet.readerTitle = \"\";\r\n\t\t\t\t\t\t\t}, undefined, false);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbullet.parent = this.bulletsContainer;\r\n\t\t\t\t\tdataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n\r\n\t\t\t\t\t// pass max w/h so we'd know if we should show/hide somethings\r\n\t\t\t\t\tbullet.maxWidth = dataItem.itemWidth;\r\n\t\t\t\t\tbullet.maxHeight = dataItem.itemHeight;\r\n\t\t\t\t\tbullet.__disabled = false;\r\n\r\n\t\t\t\t\tthis.positionBullet(bullet);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\tbullet.__disabled = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bulletsContainer.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tif (!this.dataRangeInvalid) {\r\n\t\t\tthis.invalidateProcessedData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series excluded from the axis scale calculations?\r\n\t *\r\n\t * @default false\r\n\t * @param value  Exclude from calculations?\r\n\t */\r\n\tpublic set ignoreMinMax(value: boolean) {\r\n\t\tthis._ignoreMinMax = value;\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Exclude from calculations?\r\n\t */\r\n\tpublic get ignoreMinMax(): boolean {\r\n\t\treturn this._ignoreMinMax;\r\n\t}\r\n\r\n\t/**\r\n\t * Create a mask for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic createMask(): void {\r\n\r\n\t\t// A placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Process axis range after it has been added to the list.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected processAxisRange(event: IListEvents<AxisDataItem>[\"inserted\"]): void {\r\n\t\t// create container if not existing\r\n\t\tif (!this.rangesContainer) {\r\n\t\t\tthis.rangesContainer = this.createChild(Container);\r\n\t\t\tthis.rangesContainer.shouldClone = false;\r\n\t\t\tthis.rangesContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet axisRange: AxisDataItem = event.newValue;\r\n\t\tif (axisRange) {\r\n\t\t\taxisRange.contents.parent = this.rangesContainer;\r\n\t\t\taxisRange.isRange = true;\r\n\t\t\taxisRange.events.on(\"valuechanged\", this.invalidateDataItems, this, false);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [getAxisField description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t * @param axis  [description]\r\n\t * @return [description]\r\n\t */\r\n\tpublic getAxisField(axis: Axis): string {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the tooltip at specific position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param xPosition  X\r\n\t * @param yPosition  Y\r\n\t */\r\n\tpublic showTooltipAtPosition(xPosition: number, yPosition: number): void {\r\n\r\n\t\t// Placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Minimal distance between data points in pixels.\r\n\t *\r\n\t * If distance gets smaller than this, bullets are turned off to avoid\r\n\t * overlapping.\r\n\t *\r\n\t * `0` (zero) disables this behavior.\r\n\t *\r\n\t * IMPORTANT: This setting will work only when Series' base axis\r\n\t * is [[CategoryAxis]] or [[DateAxis]]. If base axis is [[ValueAxis]] the\r\n\t * setting will be ignored, because it would be a huge overhead to measure\r\n\t * distance between each and every bullet.\r\n\t *\r\n\t * @default 0\r\n\t * @param value  Distance (px)\r\n\t */\r\n\tpublic set minBulletDistance(value: number) {\r\n\t\tthis.setPropertyValue(\"minBulletDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance (px)\r\n\t */\r\n\tpublic get minBulletDistance(): number {\r\n\t\treturn this.getPropertyValue(\"minBulletDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of bullets that will be added to each and every items in the\r\n\t * series.\r\n\t *\r\n\t * You can push any object that is a descendant of a [[Sprite]] here. All\r\n\t * items added to this list will be copied and used as a bullet on all data\r\n\t * items, including their properties, events, etc.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n\t * @return List of bullets.\r\n\t */\r\n\tpublic get bullets(): ListTemplate<Sprite> {\r\n\t\tif (!this._bullets) {\r\n\t\t\tthis._bullets = new ListTemplate<Sprite>(new Bullet());\r\n\t\t\tthis._bullets.template.virtualParent = this;\r\n\t\t\tthis._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n\t\t\tthis._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n\r\n\t\t\tthis._disposers.push(new ListDisposer(this._bullets));\r\n\t\t\tthis._disposers.push(this._bullets.template);\r\n\t\t}\r\n\t\treturn this._bullets;\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\t// This is a placeholder method for extending classes to override.\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the series be hidden in legend?\r\n\t *\r\n\t * @param value Hidden in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"hiddenInLegend\", value)) {\r\n\t\t\tif (this.chart) {\r\n\t\t\t\tthis.chart.feedLegend();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.getPropertyValue(\"hiddenInLegend\");\r\n\t}\r\n\r\n\t/**\r\n\t * Series' name.\r\n\t *\r\n\t * @param value  Name\r\n\t */\r\n\tpublic set name(value: string) {\r\n\t\tthis.setPropertyValue(\"name\", value);\r\n\r\n\t\tlet legendDataItem = this.legendDataItem;\r\n\t\tif (legendDataItem) {\r\n\t\t\tlegendDataItem.component.invalidate();\r\n\t\t\tlegendDataItem.component.invalidateRawData();\r\n\t\t}\r\n\r\n\t\tthis.readerTitle = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Name\r\n\t */\r\n\tpublic get name(): string {\r\n\t\treturn this.getPropertyValue(\"name\");\r\n\t}\r\n\r\n\t/**\r\n\t * Screen reader text to be applied to each individual data item, such\r\n\t * as bullets, columns or slices.\r\n\t *\r\n\t * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n\t * `{valueY}`, etc.\r\n\t *\r\n\t * Any text formatting options, e.g. `[bold]` will be ignored.\r\n\t *\r\n\t * @param value Screen reader text template\r\n\t */\r\n\tpublic set itemReaderText(value: string) {\r\n\t\tthis._itemReaderText = value;\r\n\t\tthis._itemReaderTextChanged = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Screen reader text template\r\n\t */\r\n\tpublic get itemReaderText(): string {\r\n\r\n\t\t// Get explicitly set reader text\r\n\t\tlet readerText = this._itemReaderText;\r\n\r\n\t\t// Not set? Let's try something else\r\n\t\tif (!readerText) {\r\n\r\n\t\t\t// Tooltip text?\r\n\t\t\tif (this.tooltipText) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipText);\r\n\t\t\t}\r\n\t\t\telse if (this.tooltipHTML) {\r\n\t\t\t\treaderText = $utils.plainText(this.tooltipHTML);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn readerText;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\"itemReaderText\", readerText);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if number of data items in the series are beyond non-focusable\r\n\t * count and should not be available for TAB-through.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Items focusable?\r\n\t */\r\n\tpublic itemsFocusable(): boolean {\r\n\t\treturn this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n\t}\r\n\r\n\t/**\r\n\t * Legend data item that corresponds to this series.\r\n\t *\r\n\t * @param value  Data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tthis._legendDataItem.itemContainer.deepInvalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates corresponding legend data item with current values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic updateLegendValue(dataItem?: this[\"_dataItem\"], notRange?: boolean) {\r\n\t\t// if this series has legend item\r\n\t\tif (this.legendDataItem) {\r\n\r\n\t\t\tlet legendSettings: LegendSettings = this.legendSettings;\r\n\t\t\tlet legendDataItem = this.legendDataItem;\r\n\t\t\tlet label: Label = legendDataItem.label;\r\n\t\t\tlet valueLabel: Label = legendDataItem.valueLabel;\r\n\r\n\t\t\t// update legend\r\n\t\t\tif ((dataItem && !dataItem.isDisposed())|| notRange) {\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.itemValueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (label) {\r\n\t\t\t\t\t// if itemLabelText is set, means we have to reset label even if labelText is not set\r\n\t\t\t\t\tif (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n\t\t\t\t\t\tlabel.text = legendSettings.labelText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t\tif (valueLabel) {\r\n\t\t\t\t\tif (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n\t\t\t\t\t\tvalueLabel.text = legendSettings.valueText;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueLabel.dataItem = this.dataItem;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.bullets.copyFrom(source.bullets);\r\n\t\tthis.bulletsContainer.copyFrom(source.bulletsContainer);\r\n\t\tthis.calculatePercent = source.calculatePercent;\r\n\t\tthis.usePercentHack = source.usePercentHack;\r\n\t\tthis.simplifiedProcessing = source.simplifiedProcessing;\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal or console message with error, and halts any further\r\n\t * processing of this element.\r\n\t *\r\n\t * @param e Error\r\n\t */\r\n\tpublic raiseCriticalError(e: Error) {\r\n\t\tif (this._chart && this._chart.modal) {\r\n\t\t\tthis._chart.modal.content = this._chart.adapter.apply(\"criticalError\", e).message;\r\n\t\t\tthis._chart.modal.closable = false;\r\n\t\t\tif (!options.suppressErrors) {\r\n\t\t\t\tthis._chart.modal.open();\r\n\t\t\t}\r\n\t\t\tthis._chart.disabled = true;\r\n\t\t}\r\n\r\n\t\tif (options.verbose) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Applies filters to the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected applyFilters() {\r\n\t\tsuper.applyFilters();\r\n\t\tthis.bulletsContainer.filters.clear();\r\n\r\n\t\t// copyFrom of a list copies, does not clone\r\n\t\t$iter.each(this.filters.iterator(), (filter) => {\r\n\t\t\tthis.bulletsContainer.filters.push(filter.clone());\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of heat rules to apply to series' elements based on the value\r\n\t * of the data item.\r\n\t *\r\n\t * Heat rules can be any \"numeric\" (including `Color`) property, and can also\r\n\t * be applied to child objects of series, like columns, bullets, etc.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t * ```Javacript\r\n\t * series.heatRules.push({\r\n\t *  \"target\": series.columns.template,\r\n\t *  \"property\": \"fill\",\r\n\t *  \"min\": am4core.color(\"#F5DBCB\"),\r\n\t *  \"max\": am4core.color(\"#ED7B84\"),\r\n\t *  \"dataField\": \"valueY\"\r\n\t *});\r\n\t *```\r\n\t *```JSON\r\n\t *{\r\n\t *  // ...\r\n\t *  \"series\": [{\r\n\t *    \"type\": \"ColumnSeries\",\r\n\t *    \"heatRules\": [{\r\n\t *      \"target\": \"columns.template\",\r\n\t *      \"property\": \"fill\",\r\n\t *      \"min\": \"#F5DBCB\",\r\n\t *      \"max\": \"#ED7B84\",\r\n\t *      \"dataField\": \"valueY\"\r\n\t *    }]\r\n\t *  }]\r\n\t *}\r\n\t *```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Heat_maps} for more about heat rules\r\n\t * @return  Heat rules\r\n\t */\r\n\r\n\tpublic get heatRules(): List<IHeatRule> {\r\n\t\tif (!this._heatRules) {\r\n\t\t\tthis._heatRules = new List<IHeatRule>();\r\n\t\t\tthis._heatRules.events.on(\"inserted\", (event) => {\r\n\t\t\t\tlet heatRule = event.newValue;\r\n\t\t\t\tlet target = heatRule.target;\r\n\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\tlet dataField = heatRule.dataField;\r\n\r\n\t\t\t\t\tif (!$type.hasValue(dataField)) {\r\n\t\t\t\t\t\tdataField = \"value\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet seriesDataItem = this.dataItem;\r\n\t\t\t\t\tlet property = heatRule.property;\r\n\r\n\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\tif (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\tthis.dataItem.events.on(\"calculatedvaluechanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// giveup here\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dataItems.template.events.on(\"workingvaluechanged\", (event) => {\r\n\t\t\t\t\t\tif (event.property == dataField) {\r\n\t\t\t\t\t\t\tlet dataItem = event.target;\r\n\t\t\t\t\t\t\tlet foundSprite = false;\r\n\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\tif (sprite.clonedFrom == target) {\r\n\t\t\t\t\t\t\t\t\tlet anySprite = <any>sprite;\r\n\t\t\t\t\t\t\t\t\tanySprite[property] = anySprite[property];\r\n\t\t\t\t\t\t\t\t\tfoundSprite = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (!foundSprite) {\r\n\t\t\t\t\t\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t$iter.each(sprite.children.iterator(), (child) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child.className == target.className) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet anyChild = <any>child;\r\n\t\t\t\t\t\t\t\t\t\t\t\tanyChild[property] = anyChild[property];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t// givup here\r\n\t\t\t\t\t\t\t\t\t\t\telse if (child instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.deepInvalidate();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\ttarget.adapter.add(<any>property, (value, ruleTarget, property) => {\r\n\r\n\t\t\t\t\t\tlet minValue = $type.toNumber(heatRule.minValue);\r\n\t\t\t\t\t\tlet maxValue = $type.toNumber(heatRule.maxValue);\r\n\r\n\t\t\t\t\t\tlet min = heatRule.min;\r\n\t\t\t\t\t\tlet max = heatRule.max;\r\n\r\n\t\t\t\t\t\tif (ruleTarget instanceof Sprite) {\r\n\t\t\t\t\t\t\tlet anySprite = <any>ruleTarget;\r\n\t\t\t\t\t\t\tlet propertyField = anySprite.propertyFields[property];\r\n\t\t\t\t\t\t\tif (propertyField && ruleTarget.dataItem) {\r\n\t\t\t\t\t\t\t\tlet dataContext = <any>ruleTarget.dataItem.dataContext;\r\n\t\t\t\t\t\t\t\tif (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n\t\t\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet dataItem: SeriesDataItem = <SeriesDataItem>ruleTarget.dataItem;\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(minValue)) {\r\n\t\t\t\t\t\t\tminValue = seriesDataItem.values[dataField].low;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!$type.isNumber(maxValue)) {\r\n\t\t\t\t\t\t\tmaxValue = seriesDataItem.values[dataField].high;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\tlet fieldValues = dataItem.values[dataField];\r\n\t\t\t\t\t\t\tif (fieldValues) {\r\n\t\t\t\t\t\t\t\tlet workingValue = dataItem.getActualWorkingValue(dataField);\r\n\t\t\t\t\t\t\t\tif ($type.hasValue(min) && $type.hasValue(max) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n\r\n\t\t\t\t\t\t\t\t\tlet percent: number;\r\n\t\t\t\t\t\t\t\t\tif (heatRule.logarithmic) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (Math.log(workingValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tpercent = (workingValue - minValue) / (maxValue - minValue);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(workingValue) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\r\n\t\t\t\t\t\t\t\t\t\tpercent = 0.5;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// fixes problems if all values are the same\r\n\t\t\t\t\t\t\t\t\tif ($type.isNumber(min)) {\r\n\t\t\t\t\t\t\t\t\t\treturn min + (max - min) * percent;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (min instanceof Color) {\r\n\t\t\t\t\t\t\t\t\t\treturn new Color($colors.interpolate(min.rgb, max.rgb, percent));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._heatRules;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tlet heatRules;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up bullets\r\n\t\t\tif ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n\t\t\t\tfor (let i = 0, len = config.bullets.length; i < len; i++) {\r\n\t\t\t\t\tlet bullets = config.bullets[i];\r\n\t\t\t\t\tif (!$type.hasValue(bullets.type)) {\r\n\t\t\t\t\t\tbullets.type = \"Bullet\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Let's take heatRules out of the config, so that we can process\r\n\t\t\t// them later, when bullets are already there\r\n\t\t\tif ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n\t\t\t\theatRules = config.heatRules;\r\n\t\t\t\tdelete config.heatRules;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t\t// Process heat rules again, when all other elements are ready\r\n\t\tif (heatRules) {\r\n\t\t\tfor (let i = 0, len = heatRules.length; i < len; i++) {\r\n\t\t\t\tlet rule = heatRules[i];\r\n\r\n\t\t\t\t// Resolve target\r\n\t\t\t\tlet target: any = this;\r\n\t\t\t\tif ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n\r\n\r\n\t\t\t\t\t// Check if we can find this element by id\r\n\t\t\t\t\tif (this.map.hasKey(rule.target)) {\r\n\t\t\t\t\t\ttarget = this.map.getKey(rule.target);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet parts = rule.target.split(\".\");\r\n\t\t\t\t\t\tfor (let x = 0; x < parts.length; x++) {\r\n\t\t\t\t\t\t\tif (target instanceof List) {\r\n\t\t\t\t\t\t\t\tlet listitem = target.getIndex($type.toNumber(parts[x]));\r\n\t\t\t\t\t\t\t\tif (!listitem) {\r\n\t\t\t\t\t\t\t\t\ttarget = (<any>target)[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = listitem;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tconst maybeIndex = parts[x].match(/^(.*)\\[([0-9]+)\\]/);\r\n\t\t\t\t\t\t\t\tif (maybeIndex) {\r\n\t\t\t\t\t\t\t\t\tif (target[maybeIndex[1]] instanceof List) {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]].getIndex($type.toNumber(maybeIndex[2]));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\ttarget = target[maybeIndex[1]][$type.toNumber(maybeIndex[2])];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ttarget = target[parts[x]];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trule.target = target;\r\n\r\n\t\t\t\t// Resolve colors and percents\r\n\t\t\t\tif ($type.hasValue(rule.min)) {\r\n\t\t\t\t\trule.min = this.maybeColorOrPercent(rule.min);\r\n\t\t\t\t}\r\n\t\t\t\tif ($type.hasValue(rule.max)) {\r\n\t\t\t\t\trule.max = this.maybeColorOrPercent(rule.max);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuper.processConfig({\r\n\t\t\t\theatRules: heatRules\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns visibility value\r\n\t * @ignore\r\n\t */\r\n\t/*\r\n\t\tprotected getVisibility(): boolean {\r\n\t\t\tlet hidden = this.getPropertyValue(\"hidden\");\r\n\t\t\tif (hidden) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn super.getVisibility();\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t/**\r\n\t * This function is used to sort element's JSON config properties, so that\r\n\t * some properties that absolutely need to be processed last, can be put at\r\n\t * the end.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param a  Element 1\r\n\t * @param b  Element 2\r\n\t * @return Sorting number\r\n\t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"heatRules\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"heatRules\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets `visibility` property:\r\n\t *\r\n\t * * `true` - visible\r\n\t * * `false` - hidden\r\n\t *\r\n\t * @param value  true - visible, false - hidden\r\n\t * @return Current visibility\r\n\t */\r\n\tpublic setVisibility(value: boolean) {\r\n\t\tsuper.setVisibility(value);\r\n\t\tthis.bulletsContainer.visible = value;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n","/**\r\n * Serial chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, IChartProperties, IChartDataFields, IChartAdapters, IChartEvents, ChartDataItem } from \"../Chart\";\r\nimport { IListEvents, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { PatternSet } from \"../../core/utils/PatternSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Disposer, IDisposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SerialChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SerialChartDataItem extends ChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SerialChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SerialChart]].\r\n */\r\nexport interface ISerialChartDataFields extends IChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[SerialChart]]\r\n */\r\nexport interface ISerialChartProperties extends IChartProperties {\r\n\r\n\t/**\r\n\t * A set of colors to be used for chart elements, like Series, Slices, etc.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * A set of patterns to use for fills, like Series, Slices, etc.\r\n\t *\r\n\t * @since 4.7.5\r\n\t */\r\n\tpatterns?: PatternSet;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[SerialChart]].\r\n */\r\nexport interface ISerialChartEvents extends IChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SerialChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISerialChartAdapters extends IChartAdapters, ISerialChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all series-based charts, like XY, Pie, etc.\r\n *\r\n * Is not useful on its own.\r\n *\r\n * @see {@link ISerialChartEvents} for a list of available Events\r\n * @see {@link ISerialChartAdapters} for a list of available Adapters\r\n */\r\nexport class SerialChart extends Chart {\r\n\r\n\t/**\r\n\t * Defines data fields.\r\n\t */\r\n\tpublic _dataFields: ISerialChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISerialChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISerialChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISerialChartEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: Series;\r\n\r\n\t/**\r\n\t * Holds a list of [[Series]] displayed on the chart.\r\n\t */\r\n\tprotected _series: ListTemplate<this[\"_seriesType\"]>\r\n\r\n\t/**\r\n\t * Holds the reference to the container actual series are drawn in.\r\n\t */\r\n\tpublic readonly seriesContainer: Container;\r\n\r\n\t/**\r\n\t * Holds a reference to the container series' bullets are drawn in.\r\n\t */\r\n\tpublic readonly bulletsContainer: Container;\r\n\r\n\tprotected _exitDP: { [index: string]: IDisposer } = {};\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SerialChart\";\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\r\n\t\tthis._usesData = false;\r\n\r\n\t\t// Create a container for series\r\n\t\tlet seriesContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tseriesContainer.shouldClone = false;\r\n\t\tseriesContainer.width = percent(100);\r\n\t\tseriesContainer.height = percent(100);\r\n\t\tseriesContainer.isMeasured = false;\r\n\t\tseriesContainer.layout = \"none\";\r\n\t\tseriesContainer.zIndex = 2;\r\n\t\tthis.seriesContainer = seriesContainer;\r\n\r\n\t\t// Create a container for bullets\r\n\t\tlet bulletsContainer: Container = this.chartContainer.createChild(Container);\r\n\t\tbulletsContainer.shouldClone = false;\r\n\t\tbulletsContainer.width = percent(100);\r\n\t\tbulletsContainer.height = percent(100);\r\n\t\tbulletsContainer.isMeasured = false;\r\n\t\tbulletsContainer.zIndex = 3;\r\n\t\tbulletsContainer.layout = \"none\";\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tsuper.dispose();\r\n\r\n\t\tif (this.colors) {\r\n\t\t\tthis.colors.dispose();\r\n\t\t}\r\n\r\n\t\tif (this.patterns) {\r\n\t\t\tthis.patterns.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Serial chart\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A list of chart's series.\r\n\t *\r\n\t * @return Chart's series\r\n\t */\r\n\tpublic get series(): ListTemplate<this[\"_seriesType\"]> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new ListTemplate<this[\"_seriesType\"]>(this.createSeries());\r\n\t\t\tthis._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n\t\t\tthis._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._series, false));\r\n\t\t\tthis._disposers.push(this._series.template);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\tprotected handleSeriesRemoved(event: IListEvents<Series>[\"removed\"]) {\r\n\t\tlet series = event.oldValue;\r\n\t\tthis.dataUsers.removeValue(series);\r\n\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\tdataUser.invalidateDataItems();\r\n\t\t})\r\n\r\n\t\tif (this._exitDP[series.uid]) {\r\n\t\t\tthis._exitDP[series.uid].dispose();\r\n\t\t\tdelete this._exitDP[series.uid];\r\n\t\t}\r\n\r\n\t\tif (series.autoDispose) {\r\n\t\t\tseries.dispose();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tseries.parent = undefined;\r\n\t\t\tseries.bulletsContainer.parent = undefined;\r\n\t\t}\r\n\t\t//this.feedLegend();\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet dataItems = this.legend.dataItems;\r\n\t\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\t\t\t\tif (dataItem && dataItem.dataContext == series) {\r\n\t\t\t\t\tlegend.dataItems.remove(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = legend.data.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet di = legend.data[i];\r\n\t\t\t\tif (di && di == series) {\r\n\t\t\t\t\t$array.remove(legend.data, di);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<Series>[\"inserted\"]): void {\r\n\t\tlet series: Series = event.newValue;\r\n\t\tif (series.isDisposed()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tseries.chart = this;\r\n\t\tseries.parent = this.seriesContainer;\r\n\r\n\t\tseries.bulletsContainer.parent = this.bulletsContainer;\r\n\r\n\t\tthis._dataUsers.moveValue(series);\r\n\t\tseries.addDisposer(new Disposer(() => {\r\n\t\t\tthis.dataUsers.removeValue(series);\r\n\t\t}))\r\n\r\n\t\tthis.handleSeriesAdded2(series);\r\n\t\tthis.handleLegendSeriesAdded(series);\r\n\t}\r\n\r\n\tprotected handleLegendSeriesAdded(series: Series) {\r\n\t\tif (!series.hiddenInLegend) {\r\n\t\t\tif (this.legend) {\r\n\t\t\t\tthis.legend.addData(series);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleSeriesAdded2(series: Series) {\r\n\t\tif (!this.dataInvalid) {\r\n\t\t\tthis._exitDP[series.uid] = registry.events.once(\"exitframe\", () => {\r\n\t\t\t\tif (!series.data || series.data.length == 0) {\r\n\t\t\t\t\tseries.data = this.data;\r\n\t\t\t\t\tif (series.showOnInit) {\r\n\t\t\t\t\t\tseries.reinit()\r\n\t\t\t\t\t\tseries.setPropertyValue(\"showOnInit\", false);\r\n\t\t\t\t\t\tseries.showOnInit = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!series.isDisposed()) {\r\n\t\t\t\t\t\tseries.events.once(\"datavalidated\", () => {\r\n\t\t\t\t\t\t\tif (series.data == this.data) {\r\n\t\t\t\t\t\t\t\t(<any>series)._data = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis._disposers.push(this._exitDP[series.uid]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\t\t\tlet legendData: Array<this[\"_seriesType\"]> = [];\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\t\t\t\t\tlegendData.push(series);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new Series, suitable for this chart type.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new Series();\r\n\t}\r\n\r\n\t/**\r\n\t * Chart's color list.\r\n\t *\r\n\t * This list can be used by a number of serial items, like applying a new\r\n\t * color for each Series added. Or, applying a new color for each slice\r\n\t * of a Pie chart.\r\n\t *\r\n\t * Please see [[ColorSet]] for information on how you can set up to generate\r\n\t * unique colors.\r\n\t *\r\n\t * A theme you are using may override default pre-defined colors.\r\n\t *\r\n\t * @param value Color list\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color list\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * A [[PatternSet]] to use when creating patterned fills for slices.\r\n\t *\r\n\t * @since 4.7.5\r\n\t * @param value  Pattern set\r\n\t */\r\n\tpublic set patterns(value: PatternSet) {\r\n\t\tthis.setPropertyValue(\"patterns\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Pattern set\r\n\t */\r\n\tpublic get patterns(): PatternSet {\r\n\t\treturn this.getPropertyValue(\"patterns\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[SerialChart]].\r\n\t *\r\n\t * @param source Source SerialChart\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.series.copyFrom(source.series);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n\t */\r\n\tpublic appear() {\r\n\t\tsuper.appear();\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series.showOnInit && series.inited) {\r\n\t\t\t\tseries.appear();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SerialChart\"] = SerialChart;\r\n","/**\r\n * Defines WordCloud series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"../../charts/series/Series\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { WordCloud } from \"./WordCloud\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $dom from \"../../core/utils/DOM\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { IDisposer, Disposer } from \"../../core/utils/Disposer\";\r\nimport { AMEvent } from \"../../core/utils/EventDispatcher\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[WordCloudSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class WordCloudSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * A reference to a word label element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: WordCloudSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"WordCloudSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Hide the data item (and corresponding visual elements).\r\n\t *\r\n\t * @param  duration  Duration (ms)\r\n\t * @param  delay     Delay hiding (ms)\r\n\t * @param  toValue   Target value for animation\r\n\t * @param  fields    Fields to animate while hiding\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\t\treturn super.hide(duration, delay, 0, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Sets visibility of the Data Item.\r\n\t *\r\n\t * @param value Data Item\r\n\t */\r\n\tpublic setVisibility(value: boolean, noChangeValues?: boolean): void {\r\n\t\tif (!noChangeValues) {\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setWorkingValue(\"value\", 0, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.setVisibility(value, noChangeValues);\r\n\t}\r\n\r\n\t/**\r\n\t * Show hidden data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tif (!fields) {\r\n\t\t\tfields = [\"value\"];\r\n\t\t}\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * The word.\r\n\t *\r\n\t * @param  value  Word\r\n\t */\r\n\tpublic set word(value: string) {\r\n\t\tthis.setProperty(\"word\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Word\r\n\t */\r\n\tpublic get word(): string {\r\n\t\treturn this.properties.word;\r\n\t}\r\n\r\n\t/**\r\n\t * A [Label] element, related to this data item (word).\r\n\t *\r\n\t * @readonly\r\n\t * @return Label element\r\n\t */\r\n\tpublic get label(): this[\"_label\"] {\r\n\t\tif (!this._label) {\r\n\t\t\tlet label = this.component.labels.create();\r\n\t\t\tthis._label = label;\r\n\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.parent = this.component.labelsContainer;\r\n\t\t\tlabel.isMeasured = false;\r\n\t\t\tlabel.x = percent(50);\r\n\t\t\tlabel.y = percent(50);\r\n\t\t\tlabel.fontSize = 0;\r\n\r\n\t\t\tif (this.component.colors) {\r\n\t\t\t\tlabel.fill = this.component.colors.next();\r\n\t\t\t}\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.labels.removeValue(label);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(label);\r\n\t\t\tlabel.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._label;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[WordCloudSeries]].\r\n */\r\nexport interface IWordCloudSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds word.\r\n\t */\r\n\tword?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[WordCloudSeries]].\r\n */\r\nexport interface IWordCloudSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * A color set to be used for words.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * Source text from which words are extracted.\r\n\t */\r\n\ttext?: string;\r\n\r\n\t/**\r\n\t * Absolute or relative font size for the smallest words.\r\n\t */\r\n\tminFontSize?: number | Percent;\r\n\r\n\t/**\r\n\t * Absolute or relative font size for the biggest words.\r\n\t */\r\n\tmaxFontSize?: number | Percent;\r\n\r\n\t/**\r\n\t * Minimum occurances for a word to be included into cloud.\r\n\t */\r\n\tminValue?: number;\r\n\r\n\t/**\r\n\t * Maximum number of words to show.\r\n\t */\r\n\tmaxCount?: number;\r\n\r\n\t/**\r\n\t * Array of words  exclude from cloud.\r\n\t */\r\n\texcludeWords?: string[];\r\n\r\n\t/**\r\n\t * Randomness of word placement (0-1).\r\n\t */\r\n\trandomness?: number;\r\n\r\n\t/**\r\n\t * Minimum number of characters for a word to be included in the cloud.\r\n\t */\r\n\tminWordLength?: number;\r\n\r\n\t/**\r\n\t * An array of possible rotation angles for words.\r\n\t */\r\n\tangles?: number[];\r\n\r\n\t/**\r\n\t * If word's relative height is bigger than this, it won't be rotated.\r\n\t */\r\n\trotationThreshold?: number;\r\n\r\n\t/**\r\n\t * Step for next word placement.\r\n\t */\r\n\tstep?: number;\r\n\r\n\t/**\r\n\t * Accuracy of overlapping check.\r\n\t */\r\n\taccuracy?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[WordCloudSeries]].\r\n */\r\nexport interface IWordCloudSeriesEvents extends ISeriesEvents {\r\n\r\n\t/**\r\n\t * Invokes when word arranging starts.\r\n\t */\r\n\tarrangestarted: {}\r\n\r\n\t/**\r\n\t * Invoked when progress has been made in arranging the words.\r\n\t */\r\n\tarrangeprogress: {\r\n\r\n\t\t/**\r\n\t\t * Progress\r\n\t\t */\r\n\t\tprogress: number\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when word arranging is finished.\r\n\t */\r\n\tarrangeended: {}\r\n}\r\n\r\n/**\r\n * Defines adapters for [[WordCloudSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWordCloudSeriesAdapters extends ISeriesAdapters, IWordCloudSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[WordCloudSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IWordCloudSeriesEvents} for a list of available Events\r\n * @see {@link IWordCloudSeriesAdapters} for a list of available Adapters\r\n */\r\nexport class WordCloudSeries extends Series {\r\n\t/**\r\n\t * Defines type of the label elements for the series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _chart: WordCloud;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IWordCloudSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IWordCloudSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IWordCloudSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IWordCloudSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: WordCloudSeriesDataItem;\r\n\r\n\t/**\r\n\t * List of label elements.\r\n\t */\r\n\tprotected _labels: ListTemplate<this[\"_label\"]>;\r\n\r\n\tprotected _ctx: CanvasRenderingContext2D;\r\n\r\n\tprotected _canvas: HTMLCanvasElement;\r\n\r\n\tprotected _spiral: Sprite;\r\n\r\n\tprotected _points: IPoint[];\r\n\r\n\tprotected _adjustedFont: number = 1;\r\n\r\n\tprotected _processTimeout: IDisposer;\r\n\r\n\tprotected _currentIndex: number;\r\n\r\n\t/**\r\n\t * Holds a Sprite that acts as an intelligent mask for the serries.\r\n\t */\r\n\tprotected _maskSprite: Sprite;\r\n\r\n\t/**\r\n\t * Container label elements are put in.\r\n\t */\r\n\tpublic labelsContainer: Container;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"WordCloudSeries\";\r\n\r\n\t\t// Disabled\r\n\t\t// this.colors = new ColorSet();\r\n\t\t// this.colors.step = 1;\r\n\t\t// this.colors.passOptions = {}; // makes it loop\r\n\r\n\t\tthis.accuracy = 5;\r\n\r\n\t\tthis.isMeasured = true;\r\n\r\n\t\tthis.minFontSize = percent(2);\r\n\t\tthis.maxFontSize = percent(20);\r\n\r\n\t\tthis.excludeWords = [];\r\n\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\t\tthis.angles = [0, 0, 90];\r\n\r\n\t\t//this.maxCount = 100;\r\n\t\tthis.rotationThreshold = 0.7;\r\n\t\tthis.minWordLength = 1;\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.step = 15;\r\n\r\n\t\tthis.randomness = 0.2;\r\n\r\n\t\tthis.labels.template.horizontalCenter = \"middle\";\r\n\t\tthis.labels.template.verticalCenter = \"middle\";\r\n\r\n\t\t// Accessibility\r\n\t\tthis.itemReaderText = \"{word}: {value}\";\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\tcanvas.style.position = \"absolute\";\r\n\t\tcanvas.style.top = \"0px\";\r\n\t\tcanvas.style.left = \"0px\";\r\n\t\tcanvas.style.opacity = \"0.5\";\r\n\t\t//document.body.appendChild(canvas);\r\n\t\tthis._canvas = canvas;\r\n\r\n\t\tthis._ctx = canvas.getContext(\"2d\");\r\n\r\n\t\tthis._maskSprite = this.createChild(Sprite);\r\n\r\n\t\tlet labelsContainer = this.createChild(Container);\r\n\t\tlabelsContainer.shouldClone = false;\r\n\t\tlabelsContainer.isMeasured = false;\r\n\t\tlabelsContainer.layout = \"none\";\r\n\t\tthis.labelsContainer = labelsContainer;\r\n\r\n\t\tthis._spiral = labelsContainer.createChild(Sprite);\r\n\t\tthis._spiral.fillOpacity = 0.1;\r\n\t\tthis._spiral.strokeOpacity = 1;\r\n\t\tthis._spiral.stroke = color(\"#000\");\r\n\r\n\r\n\t\t//this._maskSprite.visible = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data range.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataRange(): void {\r\n\t\tsuper.validateDataRange();\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.label);\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tsuper.validate();\r\n\r\n\t\tthis._currentIndex = 0;\r\n\r\n\t\tthis.dataItems.values.sort(function(a, b) {\r\n\t\t\tif (a.value == b.value) {\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse if (a.value > b.value) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this._processTimeout) {\r\n\t\t\tthis._processTimeout.dispose();\r\n\t\t}\r\n\r\n\t\tlet w = this.innerWidth;\r\n\t\tlet h = this.innerHeight;\r\n\t\tif (w > 0 && h > 0) {\r\n\r\n\t\t\tlet context = this._ctx;\r\n\r\n\t\t\tthis._canvas.width = w;\r\n\t\t\tthis._canvas.height = h;\r\n\r\n\t\t\tcontext.fillStyle = \"white\";\r\n\t\t\tcontext.fillRect(0, 0, w, h);\r\n\r\n\t\t\tthis._points = $path.spiralPoints(0, 0, w, h, 0, this.step, this.step);\r\n\r\n\t\t\tlet angle = this.labelsContainer.rotation;\r\n\r\n\t\t\tfor (let i = this._points.length - 1; i >= 0; i--) {\r\n\t\t\t\tlet point = this._points[i];\r\n\r\n\t\t\t\tif (point.x < -w / 2 || point.x > w / 2 || point.y < -h / 2 || point.y > h / 2) {\r\n\t\t\t\t\tthis._points.splice(i, 1);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (angle != 0) {\r\n\t\t\t\t\tlet point2 = $utils.spritePointToSprite({ x: point.x + w / 2, y: point.y + h / 2 }, this, this.labelsContainer);\r\n\t\t\t\t\tpoint.x = point2.x;\r\n\t\t\t\t\tpoint.y = point2.y;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//this._spiral.path = $path.pointsToPath(this._points);\r\n\r\n\r\n\t\t\tlet maskSprite = this._maskSprite;\r\n\r\n\t\t\tif (maskSprite.path) {\r\n\t\t\t\tlet maxWidth = this.maxWidth;\r\n\t\t\t\tlet maxHeight = this.maxHeight;\r\n\r\n\t\t\t\tmaskSprite.isMeasured = true;\r\n\t\t\t\tmaskSprite.validate();\r\n\r\n\t\t\t\tlet pictureWidth = maskSprite.measuredWidth / maskSprite.scale;\r\n\t\t\t\tlet pictureHeight = maskSprite.measuredHeight / maskSprite.scale;\r\n\r\n\t\t\t\tlet scale = $math.min(maxHeight / pictureHeight, maxWidth / pictureWidth);\r\n\r\n\t\t\t\tif (scale == Infinity) {\r\n\t\t\t\t\tscale = 1; // can't return here, won't draw legend properly\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaskSprite.horizontalCenter = \"none\";\r\n\t\t\t\tmaskSprite.verticalCenter = \"none\";\r\n\t\t\t\tmaskSprite.x = 0;\r\n\t\t\t\tmaskSprite.y = 0;\r\n\t\t\t\tmaskSprite.scale = 1;\r\n\r\n\t\t\t\tscale = $math.max(0.001, scale);\r\n\r\n\t\t\t\tmaskSprite.horizontalCenter = \"middle\";\r\n\t\t\t\tmaskSprite.verticalCenter = \"middle\";\r\n\t\t\t\tmaskSprite.x = w / 2;\r\n\t\t\t\tmaskSprite.y = h / 2;\r\n\t\t\t\tmaskSprite.validatePosition();\r\n\r\n\t\t\t\tthis.mask = maskSprite;\r\n\t\t\t\t/*\r\n\t\t\t\tcontext.fillStyle = \"blue\";\r\n\t\t\t\tcontext.fillRect(0, 0, w, h);\r\n\t\t\t\tcontext.fillStyle = \"white\";\r\n\t\t\t\tcontext.scale(scale, scale);\r\n\r\n\t\t\t\tcontext.translate(maskSprite.maxLeft - maxLeft + w / 2 / scale, maskSprite.maxTop - maxTop + h / 2 / scale);\r\n\t\t\t\t//let commandList = this.svgPathToCommands(maskSprite.path);\r\n\t\t\t\t//this.drawSvgPath(context, commandList);\r\n\t\t\t\tlet p = new Path2D(maskSprite.path);\r\n\t\t\t\tcontext.stroke(p);\r\n\t\t\t\tcontext.fill(p);\r\n\t\t\t\tcontext.translate(-maskSprite.maxLeft + maxLeft - w / 2 / scale, -maskSprite.maxTop + maxTop - h / 2 / scale);\r\n\t\t\t\tcontext.scale(1 / scale, 1 / scale);\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tmaskSprite.scale = scale;\r\n\t\t\t}\r\n\t\t\tif (this.events.isEnabled(\"arrangestarted\")) {\r\n\t\t\t\tthis.dispatchImmediately(\"arrangestarted\");\r\n\t\t\t}\r\n\t\t\tthis.processItem(this.dataItems.getIndex(this._currentIndex));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [processItem description]\r\n\t *\r\n\t * @param   dataItem  Data item\r\n\t */\r\n\tprotected processItem(dataItem: this[\"_dataItem\"]) {\r\n\r\n\t\tif(!dataItem){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet context = this._ctx;\r\n\r\n\t\tlet w = this.innerWidth;\r\n\t\tlet h = this.innerHeight;\r\n\r\n\t\tif ($dom.isHidden(this.htmlContainer)) {\r\n\t\t\tthis._processTimeout = this.setTimeout(() => {\r\n\t\t\t\tthis._currentIndex++;\r\n\t\t\t\tthis.processItem(this.dataItems.getIndex(this._currentIndex));\r\n\t\t\t}, 500);\r\n\t\t\tthis._disposers.push(this._processTimeout);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.labelsContainer.x = w / 2;\r\n\t\tthis.labelsContainer.y = h / 2;\r\n\r\n\t\tlet label = dataItem.label;\r\n\t\tlet fontFace = $dom.findFont(label.element.node);\r\n\r\n\t\tlet smallerSize = $math.min(this.innerHeight, this.innerWidth);\r\n\t\tlet minFontSize = $utils.relativeToValue(this.minFontSize, smallerSize);\r\n\t\tlet maxFontSize = $utils.relativeToValue(this.maxFontSize, smallerSize);\r\n\r\n\t\tlet low = this.dataItem.values.value.low;\r\n\t\tlet high = this.dataItem.values.value.high;\r\n\r\n\t\tlet percent = (dataItem.value - low) / (high - low);\r\n\r\n\t\tif (low == high) {\r\n\t\t\tlet count = this.dataItems.length;\r\n\t\t\tif (count > 1) {\r\n\t\t\t\tpercent = 1 / this.dataItems.length * 1.5;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpercent = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet fontSize = minFontSize + (maxFontSize - minFontSize) * percent * this._adjustedFont;\r\n\r\n\t\tlet initialFontSize = label.fontSize;\r\n\t\tlabel.fontSize = fontSize;\r\n\r\n\t\tlet angle = 0;\r\n\t\tif ((fontSize - minFontSize) / (maxFontSize - minFontSize) < this.rotationThreshold) {\r\n\t\t\tangle = this.angles[Math.round(Math.random() * (this.angles.length - 1))];\r\n\t\t}\r\n\r\n\t\tlabel.fontSize = fontSize;\r\n\t\tlabel.rotation = angle;\r\n\t\tlabel.show(0);\r\n\t\tlabel.hardInvalidate();\r\n\t\tlabel.validate();\r\n\r\n\t\tif (label.measuredWidth > w * 0.95 || label.measuredHeight > h * 0.95) {\r\n\t\t\tthis._adjustedFont -= 0.1;\r\n\t\t\tthis.invalidateDataItems()\r\n\t\t\tthis.invalidate();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet maxL = label.maxLeft;\r\n\t\tlet maxR = label.maxRight;\r\n\t\tlet maxT = label.maxTop;\r\n\t\tlet maxB = label.maxBottom;\r\n\r\n\t\tlet intersects = true;\r\n\r\n\t\tlet p = Math.round(Math.random() * this._points.length * this.randomness);\r\n\r\n\t\tlet initialX = label.pixelX;\r\n\t\tlet initialY = label.pixelY;\r\n\r\n\t\tlet x = 0;\r\n\t\tlet y = 0;\r\n\r\n\t\t// TODO is this needed ?\r\n\t\t$utils.used(this.labelsContainer.rotation);\r\n\t\tif (this._currentIndex > 0) {\r\n\t\t\twhile (intersects) {\r\n\t\t\t\tif (p > this._points.length - 1) {\r\n\t\t\t\t\tintersects = false;\r\n\t\t\t\t\tthis._adjustedFont -= 0.1;\r\n\t\t\t\t\tthis.invalidateDataItems();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects = false;\r\n\r\n\t\t\t\tx = this._points[p].x;\r\n\t\t\t\ty = this._points[p].y;\r\n\r\n\t\t\t\tlet marginLeft = label.pixelMarginLeft;\r\n\t\t\t\tlet marginRight = label.pixelMarginRight;\r\n\t\t\t\tlet marginTop = label.pixelMarginTop;\r\n\t\t\t\tlet marginBottom = label.pixelMarginBottom;\r\n\r\n\t\t\t\tlet rect1 = { x: x + maxL - marginLeft, y: y + maxT - marginTop, width: maxR - maxL + marginLeft + marginRight, height: maxB - maxT + marginTop + marginBottom };\r\n\r\n\t\t\t\tlet pixel = this._ctx.getImageData(rect1.x + w / 2, rect1.y + h / 2, rect1.width, rect1.height).data;\r\n\t\t\t\tfor (let i = 0; i < pixel.length; i += Math.pow(2, this.accuracy)) {\r\n\t\t\t\t\tif (pixel[i] != 255) {\r\n\t\t\t\t\t\tintersects = true;\r\n\t\t\t\t\t\tif (label.currentText.length > 3) {\r\n\t\t\t\t\t\t\tif (angle == 0) {\r\n\t\t\t\t\t\t\t\tif (maxR - maxL < 60) {\r\n\t\t\t\t\t\t\t\t\tthis._points.splice(p, 1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (Math.abs(angle) == 90) {\r\n\t\t\t\t\t\t\t\tif (maxB - maxT < 50) {\r\n\t\t\t\t\t\t\t\t\tthis._points.splice(p, 1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tp += 5;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (initialFontSize == 0) {\r\n\t\t\tlabel.animate([{ property: \"fontSize\", to: fontSize, from: initialFontSize }], this.interpolationDuration, this.interpolationEasing);\r\n\t\t\tlabel.x = x;\r\n\t\t\tlabel.y = y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabel.animate([{ property: \"fontSize\", to: fontSize, from: initialFontSize }, { property: \"x\", to: x, from: initialX }, { property: \"y\", to: y, from: initialY }], this.interpolationDuration, this.interpolationEasing);\r\n\t\t}\r\n\r\n\t\tlet cx = x + w / 2;\r\n\t\tlet cy = y + h / 2;\r\n\r\n\t\tcontext.translate(cx, cy);\r\n\t\tlet radAngle = label.rotation * Math.PI / 180;\r\n\t\tcontext.rotate(radAngle);\r\n\t\tcontext.textAlign = \"center\";\r\n\t\tcontext.textBaseline = \"middle\";\r\n\t\tcontext.fillStyle = \"blue\";\r\n\r\n\t\tlet fontWeight = label.fontWeight || this.fontWeight || this.chart.fontWeight || \"normal\";\r\n\t\tlet font = fontWeight + \" \" + fontSize + \"px \" + fontFace;\r\n\r\n\t\tcontext.font = font\r\n\t\tcontext.fillText(label.currentText, 0, 0);\r\n\t\tcontext.rotate(-radAngle);\r\n\t\tcontext.translate(-cx, -cy);\r\n\r\n\t\tif (label.showOnInit) {\r\n\t\t\tlabel.hide(0);\r\n\t\t\tlabel.show();\r\n\t\t}\r\n\r\n\t\tif (this.events.isEnabled(\"arrangeprogress\")) {\r\n\t\t\tconst event: AMEvent<this, IWordCloudSeriesEvents>[\"arrangeprogress\"] = {\r\n\t\t\t\ttype: \"arrangeprogress\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tprogress: (this._currentIndex + 1) / this.dataItems.length\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"arrangeprogress\", event);\r\n\t\t}\r\n\r\n\t\tif (this._currentIndex < this.dataItems.length - 1) {\r\n\t\t\tthis._processTimeout = this.setTimeout(() => {\r\n\t\t\t\tthis._currentIndex++;\r\n\t\t\t\tthis.processItem(this.dataItems.getIndex(this._currentIndex));\r\n\t\t\t}, 1);\r\n\t\t\tthis._disposers.push(this._processTimeout);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.events.isEnabled(\"arrangeended\")) {\r\n\t\t\t\tthis.dispatchImmediately(\"arrangeended\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sreates label element.\r\n\t *\r\n\t * @return label\r\n\t */\r\n\tprotected createLabel(): this[\"_label\"] {\r\n\t\treturn new Label();\r\n\t}\r\n\r\n\t/**\r\n\t * [[Label]] elements representing each word.\r\n\t *\r\n\t * @return  Label elements\r\n\t */\r\n\tpublic get labels(): ListTemplate<this[\"_label\"]> {\r\n\t\tif (!this._labels) {\r\n\t\t\tlet label = this.createLabel();\r\n\t\t\tlabel.applyOnClones = true;\r\n\t\t\tthis._disposers.push(label);\r\n\r\n\t\t\tlabel.text = \"{word}\";\r\n\t\t\tlabel.margin(2, 3, 2, 3);\r\n\t\t\tlabel.padding(0, 0, 0, 0);\r\n\r\n\t\t\tthis._labels = new ListTemplate(label);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._labels));\r\n\t\t}\r\n\t\treturn this._labels;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new WordCloudSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * A color set to be used for each new word.\r\n\t *\r\n\t * By default it's empty, so all words will be colored the same.\r\n\t *\r\n\t * If you want to automatically color each word differently, set this\r\n\t * to a new instance of a [[ColorSet]].\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.colors = new am4core.ColorSet();\r\n\t * series.colors.step = 1;\r\n\t * series.colors.passOptions = {}; // makes it loop\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.colors = new am4core.ColorSet();\r\n\t * series.colors.step = 1;\r\n\t * series.colors.passOptions = {}; // makes it loop\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"colors\": {\r\n\t *       \"type\": \"ColorSet\",\r\n\t *       \"step\": 1,\r\n\t *       \"passOptions\": {}\r\n\t *     }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param  value  Color set\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color set\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * [updateData description]\r\n\t */\r\n\tprotected updateData(): void {\r\n\t\tthis.data = this.getWords(this.text);\r\n\t}\r\n\r\n\t/**\r\n\t * A source text to build word cloud from.\r\n\t *\r\n\t * @param  value  Source text\r\n\t */\r\n\tpublic set text(value: string) {\r\n\t\tif (this.setPropertyValue(\"text\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Source text\r\n\t */\r\n\tpublic get text(): string {\r\n\t\treturn this.getPropertyValue(\"text\");\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum number of words to show.\r\n\t *\r\n\t * If ther are more words in the cloud than `maxCount`, smallest words will\r\n\t * be discarded.\r\n\t *\r\n\t * NOTE: this setting is used only when you set whole text using `text`. If\r\n\t * you set `chart.data` or `series.data` directly, it won't have any effect.\r\n\t *\r\n\t * @param  value  Maximum words to show\r\n\t */\r\n\tpublic set maxCount(value: number) {\r\n\t\tif (this.setPropertyValue(\"maxCount\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum words to show\r\n\t */\r\n\tpublic get maxCount(): number {\r\n\t\treturn this.getPropertyValue(\"maxCount\");\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum occurances for a word to be included in the cloud.\r\n\t *\r\n\t * NOTE: this setting is used only when you set whole text using `text`. If\r\n\t * you set `chart.data` or `series.data` directly, it won't have any effect.\r\n\t *\r\n\t * @default 1\r\n\t * @param  value  Minimum occurences\r\n\t */\r\n\tpublic set minValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"minValue\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Minimum occurences\r\n\t */\r\n\tpublic get minValue(): number {\r\n\t\treturn this.getPropertyValue(\"minValue\");\r\n\t}\r\n\r\n\t/**\r\n\t * An array of words to exclude from the cloud.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.excludeWords = [\"the\", \"a\", \"an\"];\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.excludeWords = [\"the\", \"a\", \"an\"];\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"excludeWords\": [\"the\", \"a\", \"an\"]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * NOTE: this setting is used only when you set whole text using `text`. If\r\n\t * you set `chart.data` or `series.data` directly, it won't have any effect.\r\n\t *\r\n\t * @param  value  Words to exclude from the cloud\r\n\t */\r\n\tpublic set excludeWords(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"excludeWords\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Words to exclude from the cloud\r\n\t */\r\n\tpublic get excludeWords(): string[] {\r\n\t\treturn this.getPropertyValue(\"excludeWords\");\r\n\t}\r\n\r\n\t/**\r\n\t * Font size for the biggest words.\r\n\t *\r\n\t * This can be set either as a numeric pixel size, or as a relative\r\n\t * as `Percent`.\r\n\t *\r\n\t * When setting as percent it will use series' height or width (the one which is smaller) as a basis for\r\n\t * calculating the font size.\r\n\t *\r\n\t * NOTE: this setting might be automatically adjusted if all words do not fit\r\n\t * in the available space.\r\n\t *\r\n\t * @default 20%\r\n\t * @param  value  Font size\r\n\t */\r\n\tpublic set maxFontSize(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"maxFontSize\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number} Font size\r\n\t */\r\n\tpublic get maxFontSize(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"maxFontSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * Font size for the smallest words.\r\n\t *\r\n\t * This can be set either as a numeric pixel size, or as a relative\r\n\t * as `Percent`.\r\n\t *\r\n\t * When setting as percent it will use series' height or width (the one which is smaller) as a basis for\r\n\t * calculating the font size.\r\n\t *\r\n\t * @default 2%\r\n\t * @param  value  Font size\r\n\t */\r\n\tpublic set minFontSize(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"minFontSize\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Font size\r\n\t */\r\n\tpublic get minFontSize(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"minFontSize\");\r\n\t}\r\n\r\n\t/**\r\n\t * Randomness of word placement.\r\n\t *\r\n\t * Available values are from 0 (no randomization) to 1 (completely random).\r\n\t *\r\n\t * The smaller the value the bigger the chance that biggest words will end up\r\n\t * closer to the center.\r\n\t *\r\n\t * @default 0.2\r\n\t * @param value Randomness\r\n\t */\r\n\tpublic set randomness(value: number) {\r\n\t\tthis.setPropertyValue(\"randomness\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Randomness\r\n\t */\r\n\tpublic get randomness(): number {\r\n\t\treturn this.getPropertyValue(\"randomness\");\r\n\t}\r\n\r\n\t/**\r\n\t * Step by which label is moved if its space is already occupied.\r\n\t *\r\n\t * The smaller the number, the more packed labels will be.\r\n\t *\r\n\t * NOTE: smaller numbers make for more packed clouds, but will consume\r\n\t * considerably more CPU power. Use with caution with bigger clouds.\r\n\t *\r\n\t * @default 15\r\n\t * @param  value Step\r\n\t */\r\n\tpublic set step(value: number) {\r\n\t\tthis.setPropertyValue(\"step\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get step(): number {\r\n\t\treturn this.getPropertyValue(\"step\");\r\n\t}\r\n\r\n\t/**\r\n\t * Accuracy setting when checking for overlapping of words.\r\n\t *\r\n\t * The bigger the number, the bigger chance of overlapping, but it's also\r\n\t * better for performance.\r\n\t *\r\n\t * Use smaller numbers if you are using a thin font.\r\n\t *\r\n\t * @default 5\r\n\t * @param  value  Accuracy\r\n\t */\r\n\tpublic set accuracy(value: number) {\r\n\t\tthis.setPropertyValue(\"accuracy\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Accuracy\r\n\t */\r\n\tpublic get accuracy(): number {\r\n\t\treturn this.getPropertyValue(\"accuracy\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Minimum number of characters for a word to be included in the cloud.\r\n\t *\r\n\t * NOTE: this setting is used only when you set whole text using `text`. If\r\n\t * you set `chart.data` or `series.data` directly, it won't have any effect.\r\n\t *\r\n\t * @default 1\r\n\t * @param {number} value Minimum word length\r\n\t */\r\n\tpublic set minWordLength(value: number) {\r\n\t\tif (this.setPropertyValue(\"minWordLength\", value)) {\r\n\t\t\tthis.updateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Minimum word length\r\n\t */\r\n\tpublic get minWordLength(): number {\r\n\t\treturn this.getPropertyValue(\"minWordLength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation threshold.\r\n\t *\r\n\t * Big words don't look good good when rotated, hence this setting.\r\n\t *\r\n\t * It works like this: if word's relative height is bigger\r\n\t * than `rotationThreshold`, the word will never be rotated.\r\n\t *\r\n\t * Available values are from 0 (none of the words will be rotated) to 1 (all\r\n\t * words can be rotated).\r\n\t *\r\n\t * @default 0.7\r\n\t * @param  value  Threshold\r\n\t */\r\n\tpublic set rotationThreshold(value: number) {\r\n\t\tthis.setPropertyValue(\"rotationThreshold\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Threshold\r\n\t */\r\n\tpublic get rotationThreshold(): number {\r\n\t\treturn this.getPropertyValue(\"rotationThreshold\");\r\n\t}\r\n\r\n\t/**\r\n\t * An array of available word rotation angles.\r\n\t *\r\n\t * The only supported values are: 0 (horizontal), and 90 (vertical).\r\n\t *\r\n\t * @default [0, 0, 90]\r\n\t * @param  value  Angles\r\n\t */\r\n\tpublic set angles(value: number[]) {\r\n\t\tthis.setPropertyValue(\"angles\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angles\r\n\t */\r\n\tpublic get angles(): number[] {\r\n\t\treturn this.getPropertyValue(\"angles\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * Not finished yet\r\n\t */\r\n\tpublic get maskSprite(): Sprite {\r\n\t\treturn this._maskSprite;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[WordCloudSeries]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.labels.template.copyFrom(source.labels.template);\r\n\t}\r\n\r\n\t/**\r\n\t * Extracts words and number of their appearances from a text.\r\n\t *\r\n\t * @ignore\r\n\t * @param  input  Source text\r\n\t */\r\n\tpublic getWords(input: string): { word: string, value: number }[] {\r\n\t\tif (input) {\r\n\t\t\tthis.dataFields.word = \"word\";\r\n\t\t\tthis.dataFields.value = \"value\";\r\n\r\n\t\t\tconst chars = \"\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376-\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0523\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u064A\\u066E-\\u066F\\u0671-\\u06D3\\u06D5\\u06E5-\\u06E6\\u06EE-\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4-\\u07F5\\u07FA\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0972\\u097B-\\u097F\\u0985-\\u098C\\u098F-\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC-\\u09DD\\u09DF-\\u09E1\\u09F0-\\u09F1\\u0A05-\\u0A0A\\u0A0F-\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32-\\u0A33\\u0A35-\\u0A36\\u0A38-\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2-\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0-\\u0AE1\\u0B05-\\u0B0C\\u0B0F-\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32-\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C-\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99-\\u0B9A\\u0B9C\\u0B9E-\\u0B9F\\u0BA3-\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58-\\u0C59\\u0C60-\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0-\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3D\\u0D60-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32-\\u0E33\\u0E40-\\u0E46\\u0E81-\\u0E82\\u0E84\\u0E87-\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA-\\u0EAB\\u0EAD-\\u0EB0\\u0EB2-\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8B\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065-\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10D0-\\u10FA\\u10FC\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19A9\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE-\\u1BAF\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u2094\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C6F\\u2C71-\\u2C7D\\u2C80-\\u2CE4\\u2D00-\\u2D25\\u2D30-\\u2D65\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31B7\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000-\\uA48C\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A-\\uA62B\\uA640-\\uA65F\\uA662-\\uA66E\\uA67F-\\uA697\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78C\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA90A-\\uA925\\uA930-\\uA946\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40-\\uFB41\\uFB43-\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC0-9@+\";\r\n\t\t\tconst reg = new RegExp(\"([\" + chars + \"]+[\\-\" + chars + \"]*[\" + chars + \"]+)|([\" + chars + \"]+)\", \"ig\");\r\n\t\t\tlet res = input.match(reg);\r\n\t\t\tif (!res) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\r\n\t\t\tlet words: { word: string, value: number }[] = [];\r\n\t\t\tlet word;\r\n\t\t\twhile (true) {\r\n\t\t\t\tword = res.pop();\r\n\r\n\t\t\t\tif (!word) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet item;\r\n\t\t\t\tfor (let i = 0; i < words.length; i++) {\r\n\t\t\t\t\tif (words[i].word.toLowerCase() == word.toLowerCase()) {\r\n\t\t\t\t\t\titem = words[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (item) {\r\n\t\t\t\t\titem.value++;\r\n\t\t\t\t\tif (!this.isCapitalized(word)) {\r\n\t\t\t\t\t\titem.word = word;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\twords.push({\r\n\t\t\t\t\t\tword: word,\r\n\t\t\t\t\t\tvalue: 1\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet excludeWords = this.excludeWords;\r\n\t\t\tif (this.minValue > 1 || this.minWordLength > 1 || (excludeWords && excludeWords.length > 0)) {\r\n\t\t\t\tfor (let i = words.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet w = words[i];\r\n\t\t\t\t\tif (w.value < this.minValue) {\r\n\t\t\t\t\t\twords.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w.word.length < this.minWordLength) {\r\n\t\t\t\t\t\twords.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (excludeWords.indexOf(w.word) !== -1) {\r\n\t\t\t\t\t\twords.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twords.sort(function(a, b) {\r\n\t\t\t\tif (a.value == b.value) {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t\telse if (a.value > b.value) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\t\tif (words.length > this.maxCount) {\r\n\t\t\t\twords = words.slice(0, this.maxCount);\r\n\t\t\t}\r\n\r\n\t\t\treturn words;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if word is capitalized (starts with an uppercase) or not.\r\n\t *\r\n\t * @param   word  Word\r\n\t * @return        Capitalized?\r\n\t */\r\n\tpublic isCapitalized(word: string): boolean {\r\n\t\tlet lword = word.toLowerCase();\r\n\t\treturn word[0] != lword[0]\r\n\t\t\t&& word.substr(1) == lword.substr(1)\r\n\t\t\t&& word != lword;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"WordCloudSeries\"] = WordCloudSeries;\r\nregistry.registeredClasses[\"WordCloudSeriesDataItem\"] = WordCloudSeriesDataItem;\r\n","/**\r\n * WordCloud chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"../../charts/types/SerialChart\";\r\nimport { WordCloudSeries } from \"./WordCloudSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[WordCloud]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class WordCloudDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: WordCloud;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"WordCloudDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[WordCloud]].\r\n */\r\nexport interface IWordCloudDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[WordCloud]]\r\n */\r\nexport interface IWordCloudProperties extends ISerialChartProperties { }\r\n\r\n/**\r\n * Defines events for [[WordCloud]].\r\n */\r\nexport interface IWordCloudEvents extends ISerialChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[WordCloud]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IWordCloudAdapters extends ISerialChartAdapters, IWordCloudProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This is a base class for \"percent-based\" chart types like Pie and Funnel.\r\n *\r\n * @see {@link IWordCloudEvents} for a list of available Events\r\n * @see {@link IWordCloudAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/wordcloud/} for documentation\r\n */\r\nexport class WordCloud extends SerialChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IWordCloudDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IWordCloudProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IWordCloudAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IWordCloudEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: WordCloudSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"WordCloud\";\r\n\r\n\t\tthis.seriesContainer.isMeasured = true;\r\n\t\tthis.seriesContainer.layout = \"absolute\";\r\n\r\n\t\tthis._usesData = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new [[PercentSeries]].\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new WordCloudSeries();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @hidden\r\n */\r\nregistry.registeredClasses[\"WordCloud\"] = WordCloud;\r\nregistry.registeredClasses[\"WordCloudDataItem\"] = WordCloudDataItem;\r\n","/**\r\n * Functionality for drawing rectangles.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\nimport { IRectangle } from \"../defs/IRectangle\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Rectangle]].\r\n */\r\nexport interface IRectangleProperties extends ISpriteProperties { }\r\n\r\n/**\r\n * Defines events for [[Rectangle]].\r\n */\r\nexport interface IRectangleEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Rectangle]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IRectangleAdapters extends ISpriteAdapters, IRectangleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a rectangle.\r\n *\r\n * @see {@link IRectangleEvents} for a list of available events\r\n * @see {@link IRectangleAdapters} for a list of available Adapters\r\n */\r\nexport class Rectangle extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IRectangleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IRectangleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IRectangleEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t * * Creates a `<rect>` element\r\n\t * * Creates default state\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Rectangle\";\r\n\t\tthis.element = this.paper.add(\"rect\");\r\n\t\t//this.pixelPerfect = false;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet precision: number = this._positionPrecision;\r\n\t\tif (this.pixelPerfect) {\r\n\t\t\tprecision = 0;\r\n\t\t}\r\n\r\n\t\tlet w: number = $math.round(this.innerWidth, precision);\r\n\t\tlet h: number = $math.round(this.innerHeight, precision);\r\n\r\n\t\tthis.element.attr({\r\n\t\t\t\"width\": w,\r\n\t\t\t\"height\": h\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Measures the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns bounding box (square) for this element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic get bbox(): IRectangle {\r\n\t\tif (this.definedBBox) {\r\n\t\t\treturn this.definedBBox;\r\n\t\t}\r\n\r\n\t\tif (this.isMeasured) {\r\n\t\t\treturn {\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: this.innerWidth,\r\n\t\t\t\theight: this.innerHeight\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { x: 0, y: 0, width: 0, height: 0 };\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Rectangle\"] = Rectangle;\r\n","/**\r\n * Contains code and logic for generating linear gradients.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { List } from \"../../utils/List\";\r\nimport { Group } from \"../Group\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Paper, getGhostPaper } from \"../Paper\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an object describing color switching point in a gradiend.\r\n */\r\nexport interface IGradientStop {\r\n\r\n\t/**\r\n\t * Color.\r\n\t */\r\n\tcolor: Color;\r\n\r\n\t/**\r\n\t * Offset defines where in the gradient the color should kick in. Values\r\n\t * from 0 to 1 are possible with 0 meaning start, 0.5 half-way through the\r\n\t * gradient, etc.\r\n\t */\r\n\toffset?: number;\r\n\r\n\t/**\r\n\t * Transparency of the color. 0 - completely transparent, 1 - fully opaque.\r\n\t */\r\n\topacity?: number;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Linear gradient class.\r\n */\r\nexport class LinearGradient extends BaseObject {\r\n\r\n\t/**\r\n\t * List of colors switch definitions in a gradient.\r\n\t */\r\n\tprotected _stops: List<IGradientStop> = new List<IGradientStop>();\r\n\r\n\t/**\r\n\t * An SVG `<group>` element used to draw gradient.\r\n\t */\r\n\tpublic element: Group;\r\n\r\n\t/**\r\n\t * Reference to Paper to add element to.\r\n\t */\r\n\tprotected _paper: $type.Optional<Paper>;\r\n\r\n\t/**\r\n\t * Gradient direction.\r\n\t */\r\n\tprotected _rotation: number = 0;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"LinearGradient\";\r\n\r\n\t\tthis._stops.events.on(\"setIndex\", this.validate, this);\r\n\t\tthis._stops.events.on(\"inserted\", this.validate, this);\r\n\t\t// Create element\r\n\t\tthis.element = this.paper.addGroup(\"linearGradient\");\r\n\t\tthis.id = \"gradient-\" + registry.getUniqueId();\r\n\t\tthis.element.attr({ \"id\": this.id });\r\n\t\tthis._disposers.push(this.element);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Draws gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\r\n\t\tlet rotation = (this._rotation + 90) * $math.RADIANS;\r\n\r\n\t\tlet x1: string = Math.round(50 + Math.sin(rotation + Math.PI) * 50) + '%';\r\n\t\tlet y1: string = Math.round(50 + Math.cos(rotation) * 50) + '%';\r\n\r\n\t\tlet x2: string = Math.round(50 + Math.sin(rotation) * 50) + '%';\r\n\t\tlet y2: string = Math.round(50 + Math.cos(rotation + Math.PI) * 50) + '%';\r\n\r\n\r\n\t\tlet gradientElement: Group = this.element;\r\n\t\tgradientElement.removeChildNodes();\r\n\t\tgradientElement.attr({\"x1\": x1, \"x2\":x2, \"y1\": y1, \"y2\":y2});\r\n\r\n\t\t$iter.each($iter.indexed(this._stops.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet stop = a[1];\r\n\t\t\tlet offset: $type.Optional<number> = stop.offset;\r\n\r\n\t\t\tif (!$type.isNumber(offset)) {\r\n\t\t\t\toffset = i / (this._stops.length - 1)\r\n\t\t\t}\r\n\r\n\t\t\tlet gradientStop: AMElement = this.paper.add(\"stop\");\r\n\t\t\tif ($type.hasValue(stop.color)) {\r\n\t\t\t\tgradientStop.attr({ \"stop-color\": stop.color.toString() });\r\n\t\t\t}\r\n\t\t\tif ($type.isNumber(stop.opacity)) {\r\n\t\t\t\tgradientStop.attr({ \"stop-opacity\": stop.opacity });\r\n\t\t\t}\r\n\r\n\t\t\tif ($type.isNumber(offset)) {\r\n\t\t\t\tgradientStop.attr({ \"offset\": offset });\r\n\t\t\t}\r\n\r\n\t\t\tgradientElement.add(gradientStop);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Clears the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic clear(): void {\r\n\t\tthis._stops.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a color step to the gradient.\r\n\t *\r\n\t * @param color    Color (hex code or named color)\r\n\t * @param opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n\t * @param offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n\t */\r\n\tpublic addColor(color: Color, opacity?: number, offset?: number): void {\r\n\t\tthis._stops.push({ color: color, opacity: opacity, offset: offset });\r\n\t}\r\n\r\n\t/**\r\n\t * A list of color stops in the gradient.\r\n\t *\r\n\t * @return Stops\r\n\t */\r\n\tpublic get stops(): List<IGradientStop> {\r\n\t\treturn this._stops;\r\n\t}\r\n\r\n\t/**\r\n\t * [[Paper]] instace to use for the gradient.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param paper  Paper\r\n\t */\r\n\tpublic set paper(paper: Paper) {\r\n\t\tif (this._paper != paper) {\r\n\t\t\tthis._paper = paper;\r\n\t\t\tthis.validate();\r\n\t\t\tpaper.appendDef(this.element);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t * @return Paper\r\n\t */\r\n\tpublic get paper(): Paper {\r\n\t\tif (this._paper) {\r\n\t\t\treturn this._paper;\r\n\t\t}\r\n\t\treturn getGhostPaper();\r\n\t}\r\n\r\n\t/**\r\n\t * Rotation (direction) of the gradient in degrees.\r\n\t *\r\n\t * @param value  Rotation\r\n\t */\r\n\tpublic set rotation(value: number) {\r\n\t\t//this.element.attr({ \"gradientTransform\": \"rotate(\" + value + \" 10 100)\" });\r\n\t\tthis._rotation = value;\r\n\t\tthis.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get rotation(): number {\r\n\t\treturn this._rotation;\r\n\t}\r\n\r\n\r\n\tpublic copyFrom(source:this){\r\n\t\tsuper.copyFrom(source);\r\n\r\n\t\tthis.stops.copyFrom(source.stops);\r\n\r\n\t\tthis._rotation = source.rotation;\r\n\t}\r\n\r\n\t/**\r\n\t * Which units are used when drawing gradient filter.\r\n\t *\r\n\t * Use `\"userSpaceOnUse\"` when applying gradient on a perfectly straight line.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default objectBoundingBox\r\n\t * @param value Filter units\r\n\t */\r\n\tpublic set gradientUnits(value: \"objectBoundingBox\" | \"userSpaceOnUse\") {\r\n\t\tthis.element.attr({gradientUnits:value});\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinearGradient\"] = LinearGradient;\r\n","/**\r\n * A collection of keyboard-related utilities accessible via `keyboard`\r\n * instance.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Represents named (usually frequently used) keyboard keys for easy referece.\r\n */\r\nexport type KeyboardKeys =\r\n\t\"up\"\r\n\t| \"down\"\r\n\t| \"left\"\r\n\t| \"right\"\r\n\t| \"enter\"\r\n\t| \"esc\"\r\n\t| \"home\"\r\n\t| \"tab\"\r\n\t| \"end\"\r\n\t| \"ctrl\"\r\n\t| \"alt\"\r\n\t| \"shift\"\r\n\t| \"space\"\r\n\t| \"home\"\r\n\t| \"end\"\r\n\t| \"pgup\"\r\n\t| \"pgdn\"\r\n\t| \"ins\"\r\n\t| \"del\"\r\n\t| \"plus\"\r\n\t| \"minus\"\r\n\t| \"other\";\r\n\r\n/**\r\n * A class that represents collection of keyboard-related utilities.\r\n *\r\n * Do not instantiate this class directly, but rather use `keyboard` variable.\r\n */\r\nexport class Keyboard {\r\n\r\n\t/**\r\n\t * Returns a named key based on information contained in the event or\r\n\t * \"other\".\r\n\t *\r\n\t * @param ev  A keyboard event\r\n\t * @return Keyboard named key\r\n\t */\r\n\tpublic getEventKey(ev: KeyboardEvent): KeyboardKeys {\r\n\r\n\t\t// Get the key code\r\n\t\tlet code: number = ev.keyCode || ev.which,\r\n\t\t\tkey: KeyboardKeys;\r\n\r\n\t\t// Map to internal key\r\n\t\tswitch (code) {\r\n\t\t\tcase 38:  key = \"up\";    break;\r\n\t\t\tcase 40:  key = \"down\";  break;\r\n\t\t\tcase 37:  key = \"left\";  break;\r\n\t\t\tcase 39:  key = \"right\"; break;\r\n\t\t\tcase 13:  key = \"enter\"; break;\r\n\t\t\tcase 27:  key = \"esc\";   break;\r\n\t\t\tcase 36:  key = \"home\";  break;\r\n\t\t\tcase 35:  key = \"end\";   break;\r\n\t\t\tcase 9:   key = \"tab\";   break;\r\n\t\t\tcase 17:  key = \"ctrl\";  break;\r\n\t\t\tcase 18:  key = \"alt\";   break;\r\n\t\t\tcase 16:  key = \"shift\"; break;\r\n\t\t\tcase 32:  key = \"space\"; break;\r\n\t\t\tcase 36:  key = \"home\";  break;\r\n\t\t\tcase 35:  key = \"end\";   break;\r\n\t\t\tcase 33:  key = \"pgup\";  break;\r\n\t\t\tcase 34:  key = \"pgdn\";  break;\r\n\t\t\tcase 45:  key = \"ins\";   break;\r\n\t\t\tcase 46:  key = \"del\";   break;\r\n\t\t\tcase 107: key = \"plus\";  break;\r\n\t\t\tcase 109: key = \"minus\"; break;\r\n\t\t\tdefault:  key = \"other\"; break;\r\n\t\t}\r\n\r\n\t\treturn key;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if event key is one or more of the selected named keys.\r\n\t *\r\n\t * @param ev   Keyboard event\r\n\t * @param key  Named key or array of keys\r\n\t * @return Is event key one of the list?\r\n\t */\r\n\tpublic isKey(ev: KeyboardEvent, key: string | string[]): boolean {\r\n\t\tlet eventKey = this.getEventKey(ev);\r\n\t\tif ($type.isString(key)) {\r\n\t\t\tkey = [key];\r\n\t\t}\r\n\t\treturn key.indexOf(eventKey) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if shift key was presset at the moment of the event.\r\n\t *\r\n\t * @param ev  Event object\r\n\t * @return Was shift pressed?\r\n\t */\r\n\tpublic shiftKey(ev: KeyboardEvent | MouseEvent): boolean {\r\n\t\treturn ev.shiftKey;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if ctrl key was presset at the moment of the event.\r\n\t *\r\n\t * @param ev  Event object\r\n\t * @return Was ctrl pressed?\r\n\t */\r\n\tpublic ctrlKey(ev: KeyboardEvent | MouseEvent): boolean {\r\n\t\treturn ev.ctrlKey;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if alt key was presset at the moment of the event\r\n\t * @param ev  Event object\r\n\t * @return Was alt pressed?\r\n\t */\r\n\tpublic altKey(ev: KeyboardEvent | MouseEvent): boolean {\r\n\t\treturn ev.altKey;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if meta key was presset at the moment of the event\r\n\t * @param ev  Event object\r\n\t * @return Was meta pressed?\r\n\t */\r\n\tpublic metaKey(ev: KeyboardEvent | MouseEvent): boolean {\r\n\t\treturn ev.metaKey;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A single [[Keyboard]] instance to be reused across all elements so that\r\n * they don't need to instantiate their own.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport let keyboard = new Keyboard();\r\n","/**\r\n * A collection of color-related functions\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * Define named colors for easy resolution to RGB.\r\n */\r\nlet namedColors = {\r\n\taliceblue: { r: 240, g: 248, b: 255 },\r\n\tantiquewhite: { r: 250, g: 235, b: 215 },\r\n\taqua: { r: 0, g: 255, b: 255 },\r\n\taquamarine: { r: 127, g: 255, b: 212 },\r\n\tazure: { r: 240, g: 255, b: 255 },\r\n\tbeige: { r: 245, g: 245, b: 220 },\r\n\tbisque: { r: 255, g: 228, b: 196 },\r\n\tblack: { r: 0, g: 0, b: 0 },\r\n\tblanchedalmond: { r: 255, g: 235, b: 205 },\r\n\tblue: { r: 0, g: 0, b: 255 },\r\n\tblueviolet: { r: 138, g: 43, b: 226 },\r\n\tbrown: { r: 165, g: 42, b: 42 },\r\n\tburlywood: { r: 222, g: 184, b: 135 },\r\n\tcadetblue: { r: 95, g: 158, b: 160 },\r\n\tchartreuse: { r: 127, g: 255, b: 0 },\r\n\tchocolate: { r: 210, g: 105, b: 30 },\r\n\tcoral: { r: 255, g: 127, b: 80 },\r\n\tcornflowerblue: { r: 100, g: 149, b: 237 },\r\n\tcornsilk: { r: 255, g: 248, b: 220 },\r\n\tcrimson: { r: 220, g: 20, b: 60 },\r\n\tcyan: { r: 0, g: 255, b: 255 },\r\n\tdarkblue: { r: 0, g: 0, b: 139 },\r\n\tdarkcyan: { r: 0, g: 139, b: 139 },\r\n\tdarkgoldenrod: { r: 184, g: 134, b: 11 },\r\n\tdarkgray: { r: 169, g: 169, b: 169 },\r\n\tdarkgrey: { r: 169, g: 169, b: 169 },\r\n\tdarkgreen: { r: 0, g: 100, b: 0 },\r\n\tdarkkhaki: { r: 189, g: 183, b: 107 },\r\n\tdarkmagenta: { r: 139, g: 0, b: 139 },\r\n\tdarkolivegreen: { r: 85, g: 107, b: 47 },\r\n\tdarkorange: { r: 255, g: 140, b: 0 },\r\n\tdarkorchid: { r: 153, g: 50, b: 204 },\r\n\tdarkred: { r: 139, g: 0, b: 0 },\r\n\tdarksalmon: { r: 233, g: 150, b: 122 },\r\n\tdarkseagreen: { r: 143, g: 188, b: 143 },\r\n\tdarkslateblue: { r: 72, g: 61, b: 139 },\r\n\tdarkslategray: { r: 47, g: 79, b: 79 },\r\n\tdarkslategrey: { r: 47, g: 79, b: 79 },\r\n\tdarkturquoise: { r: 0, g: 206, b: 209 },\r\n\tdarkviolet: { r: 148, g: 0, b: 211 },\r\n\tdeeppink: { r: 255, g: 20, b: 147 },\r\n\tdeepskyblue: { r: 0, g: 191, b: 255 },\r\n\tdimgray: { r: 105, g: 105, b: 105 },\r\n\tdimgrey: { r: 105, g: 105, b: 105 },\r\n\tdodgerblue: { r: 30, g: 144, b: 255 },\r\n\tfirebrick: { r: 178, g: 34, b: 34 },\r\n\tfloralwhite: { r: 255, g: 250, b: 240 },\r\n\tforestgreen: { r: 34, g: 139, b: 34 },\r\n\tfuchsia: { r: 255, g: 0, b: 255 },\r\n\tgainsboro: { r: 220, g: 220, b: 220 },\r\n\tghostwhite: { r: 248, g: 248, b: 255 },\r\n\tgold: { r: 255, g: 215, b: 0 },\r\n\tgoldenrod: { r: 218, g: 165, b: 32 },\r\n\tgray: { r: 128, g: 128, b: 128 },\r\n\tgrey: { r: 128, g: 128, b: 128 },\r\n\tgreen: { r: 0, g: 128, b: 0 },\r\n\tgreenyellow: { r: 173, g: 255, b: 47 },\r\n\thoneydew: { r: 240, g: 255, b: 240 },\r\n\thotpink: { r: 255, g: 105, b: 180 },\r\n\tindianred: { r: 205, g: 92, b: 92 },\r\n\tindigo: { r: 75, g: 0, b: 130 },\r\n\tivory: { r: 255, g: 255, b: 240 },\r\n\tkhaki: { r: 240, g: 230, b: 140 },\r\n\tlavender: { r: 230, g: 230, b: 250 },\r\n\tlavenderblush: { r: 255, g: 240, b: 245 },\r\n\tlawngreen: { r: 124, g: 252, b: 0 },\r\n\tlemonchiffon: { r: 255, g: 250, b: 205 },\r\n\tlightblue: { r: 173, g: 216, b: 230 },\r\n\tlightcoral: { r: 240, g: 128, b: 128 },\r\n\tlightcyan: { r: 224, g: 255, b: 255 },\r\n\tlightgoldenrodyellow: { r: 250, g: 250, b: 210 },\r\n\tlightgray: { r: 211, g: 211, b: 211 },\r\n\tlightgrey: { r: 211, g: 211, b: 211 },\r\n\tlightgreen: { r: 144, g: 238, b: 144 },\r\n\tlightpink: { r: 255, g: 182, b: 193 },\r\n\tlightsalmon: { r: 255, g: 160, b: 122 },\r\n\tlightseagreen: { r: 32, g: 178, b: 170 },\r\n\tlightskyblue: { r: 135, g: 206, b: 250 },\r\n\tlightslategray: { r: 119, g: 136, b: 153 },\r\n\tlightslategrey: { r: 119, g: 136, b: 153 },\r\n\tlightsteelblue: { r: 176, g: 196, b: 222 },\r\n\tlightyellow: { r: 255, g: 255, b: 224 },\r\n\tlime: { r: 0, g: 255, b: 0 },\r\n\tlimegreen: { r: 50, g: 205, b: 50 },\r\n\tlinen: { r: 250, g: 240, b: 230 },\r\n\tmagenta: { r: 255, g: 0, b: 255 },\r\n\tmaroon: { r: 128, g: 0, b: 0 },\r\n\tmediumaquamarine: { r: 102, g: 205, b: 170 },\r\n\tmediumblue: { r: 0, g: 0, b: 205 },\r\n\tmediumorchid: { r: 186, g: 85, b: 211 },\r\n\tmediumpurple: { r: 147, g: 112, b: 219 },\r\n\tmediumseagreen: { r: 60, g: 179, b: 113 },\r\n\tmediumslateblue: { r: 123, g: 104, b: 238 },\r\n\tmediumspringgreen: { r: 0, g: 250, b: 154 },\r\n\tmediumturquoise: { r: 72, g: 209, b: 204 },\r\n\tmediumvioletred: { r: 199, g: 21, b: 133 },\r\n\tmidnightblue: { r: 25, g: 25, b: 112 },\r\n\tmintcream: { r: 245, g: 255, b: 250 },\r\n\tmistyrose: { r: 255, g: 228, b: 225 },\r\n\tmoccasin: { r: 255, g: 228, b: 181 },\r\n\tnavajowhite: { r: 255, g: 222, b: 173 },\r\n\tnavy: { r: 0, g: 0, b: 128 },\r\n\toldlace: { r: 253, g: 245, b: 230 },\r\n\tolive: { r: 128, g: 128, b: 0 },\r\n\tolivedrab: { r: 107, g: 142, b: 35 },\r\n\torange: { r: 255, g: 165, b: 0 },\r\n\torangered: { r: 255, g: 69, b: 0 },\r\n\torchid: { r: 218, g: 112, b: 214 },\r\n\tpalegoldenrod: { r: 238, g: 232, b: 170 },\r\n\tpalegreen: { r: 152, g: 251, b: 152 },\r\n\tpaleturquoise: { r: 175, g: 238, b: 238 },\r\n\tpalevioletred: { r: 219, g: 112, b: 147 },\r\n\tpapayawhip: { r: 255, g: 239, b: 213 },\r\n\tpeachpuff: { r: 255, g: 218, b: 185 },\r\n\tperu: { r: 205, g: 133, b: 63 },\r\n\tpink: { r: 255, g: 192, b: 203 },\r\n\tplum: { r: 221, g: 160, b: 221 },\r\n\tpowderblue: { r: 176, g: 224, b: 230 },\r\n\tpurple: { r: 128, g: 0, b: 128 },\r\n\trebeccapurple: { r: 102, g: 51, b: 153 },\r\n\tred: { r: 255, g: 0, b: 0 },\r\n\trosybrown: { r: 188, g: 143, b: 143 },\r\n\troyalblue: { r: 65, g: 105, b: 225 },\r\n\tsaddlebrown: { r: 139, g: 69, b: 19 },\r\n\tsalmon: { r: 250, g: 128, b: 114 },\r\n\tsandybrown: { r: 244, g: 164, b: 96 },\r\n\tseagreen: { r: 46, g: 139, b: 87 },\r\n\tseashell: { r: 255, g: 245, b: 238 },\r\n\tsienna: { r: 160, g: 82, b: 45 },\r\n\tsilver: { r: 192, g: 192, b: 192 },\r\n\tskyblue: { r: 135, g: 206, b: 235 },\r\n\tslateblue: { r: 106, g: 90, b: 205 },\r\n\tslategray: { r: 112, g: 128, b: 144 },\r\n\tslategrey: { r: 112, g: 128, b: 144 },\r\n\tsnow: { r: 255, g: 250, b: 250 },\r\n\tspringgreen: { r: 0, g: 255, b: 127 },\r\n\tsteelblue: { r: 70, g: 130, b: 180 },\r\n\ttan: { r: 210, g: 180, b: 140 },\r\n\tteal: { r: 0, g: 128, b: 128 },\r\n\tthistle: { r: 216, g: 191, b: 216 },\r\n\ttomato: { r: 255, g: 99, b: 71 },\r\n\tturquoise: { r: 64, g: 224, b: 208 },\r\n\tviolet: { r: 238, g: 130, b: 238 },\r\n\twheat: { r: 245, g: 222, b: 179 },\r\n\twhite: { r: 255, g: 255, b: 255 },\r\n\twhitesmoke: { r: 245, g: 245, b: 245 },\r\n\tyellow: { r: 255, g: 255, b: 0 },\r\n\tyellowgreen: { r: 154, g: 205, b: 50 }\r\n};\r\n\r\n\r\n/**\r\n * Tries to resolve a named color into a hex color representation.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Color name\r\n * @return Color\r\n * @deprecated\r\n * @hidden\r\n */\r\n/*export function resolveNamedColor(value: string): Color {\r\n\treturn (<any>namedColors)[value] ? (<any>namedColors)[value] : undefined;\r\n}*/\r\n\r\n/**\r\n * Converts a proper color hex code (i.e. \"#FF5500\") or named color (i.e. \"red\")\r\n * into an {iRGB} object. If the code is not correctly formatted, an RGB of\r\n * black is returned.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Color code\r\n * @param alpha  Alpha (0-1)\r\n * @return RGB\r\n */\r\nexport function rgb(color: string, alpha?: number): iRGB {\r\n\r\n\t// Init return value\r\n\tlet rgb: $type.Optional<iRGB>;\r\n\r\n\t// Try resolving color format\r\n\r\n\t// Named color?\r\n\tif ((<any>namedColors)[color]) {\r\n\t\trgb = (<any>namedColors)[color];\r\n\t}\r\n\r\n\t// Hex code?\r\n\telse if (color.charAt(0) === \"#\") {\r\n\t\trgb = hexToRgb(color);\r\n\t}\r\n\r\n\t// rgb() format?\r\n\telse if (color.match(/^rgba?\\(/)) {\r\n\t\trgb = rgbaToRgb(color);\r\n\t}\r\n\r\n\t// Was not able to resolve?\r\n\tif (!rgb) {\r\n\t\trgb = { r: 0, g: 0, b: 0, a: 1 };\r\n\t}\r\n\r\n\t// Set alpha\r\n\tif ($type.hasValue(alpha)) {\r\n\t\trgb.a = alpha;\r\n\t}\r\n\r\n\treturn rgb;\r\n}\r\n\r\n/**\r\n * Converts a hex color code (i.e. \"#FF5500\") to an [[iRGB]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param hex  Hex color code\r\n * @return RGB\r\n */\r\nexport function hexToRgb(hex: string): $type.Optional<iRGB> {\r\n\t// Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n\tlet shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\thex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n\t\treturn r + r + g + g + b + b;\r\n\t});\r\n\r\n\tlet result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\treturn result ? {\r\n\t\tr: parseInt(result[1], 16),\r\n\t\tg: parseInt(result[2], 16),\r\n\t\tb: parseInt(result[3], 16)\r\n\t} : hexToRgbWithAlpha(hex);\r\n}\r\n\r\n/**\r\n * Converts a hex color code with alpha (i.e. \"#FF5500128\") to an [[iRGB]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param hex  Hex color code\r\n * @return RGB\r\n */\r\nexport function hexToRgbWithAlpha(hex: string): $type.Optional<iRGB> {\r\n\t// Expand shorthand form (e.g. \"03FA\") to full form (e.g. \"0033FFAA\")\r\n\tlet shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\thex = hex.replace(shorthandRegex, function(m, r, g, b, a) {\r\n\t\treturn r + r + g + g + b + b + a + a;\r\n\t});\r\n\r\n\tlet result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\treturn result ? {\r\n\t\tr: parseInt(result[1], 16),\r\n\t\tg: parseInt(result[2], 16),\r\n\t\tb: parseInt(result[3], 16),\r\n\t\ta: parseInt(result[4], 16) / 256\r\n\t} : undefined;\r\n}\r\n\r\n/**\r\n * Converts color strings in format like `rgb()` and `rgba()` to [[iRGB]].\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Color code\r\n * @return RGB\r\n */\r\nexport function rgbaToRgb(color: string): $type.Optional<iRGB> {\r\n\tcolor = color.replace(/[ ]/g, \"\");\r\n\r\n\t// Init\r\n\tlet matches: string[] | null = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n\r\n\t// Try rgb() format\r\n\tif (matches) {\r\n\t\tmatches.push(\"1\");\r\n\r\n\t} else {\r\n\t\tmatches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n\r\n\t\tif (!matches) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tr: parseInt(matches[1]),\r\n\t\tg: parseInt(matches[2]),\r\n\t\tb: parseInt(matches[3]),\r\n\t\ta: parseFloat(matches[4])\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts an [[iRGB]] object into a hex color code.\r\n *\r\n * @ignore Exclude from docs\r\n * @param rgb  RGB\r\n * @return Hex color code\r\n */\r\nexport function rgbToHex(rgb: iRGB): string {\r\n\treturn \"#\" + pad2(rgb.r.toString(16)) + pad2(rgb.g.toString(16)) + pad2(rgb.b.toString(16));\r\n}\r\n\r\n/**\r\n * Converts an [[iRGB]] object into its `rgb()` or `rgba()` representation.\r\n *\r\n * @ignore Exclude from docs\r\n * @param rgb  RGB\r\n * @return `rgba()` syntax\r\n */\r\nexport function rgbToRGBA(rgb: iRGB): string {\r\n\tif ($type.hasValue(rgb.a) && rgb.a !== 1) {\r\n\t\treturn \"rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",\" + rgb.a + \")\";\r\n\t}\r\n\telse {\r\n\t\treturn \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\";\r\n\t}\r\n}\r\n\r\n/**\r\n * Pads a 1-digit string with a zero.\r\n *\r\n * @ignore Exclude from docs\r\n * @param c  Input string\r\n * @return Padded string\r\n */\r\nexport function pad2(c: string): string {\r\n\treturn c.length == 1 ? \"0\" + c : \"\" + c;\r\n}\r\n\r\n/**\r\n * Returns an intermediate color between two colors based on the relative\r\n * position. Position needs to be in range between 0 and 1. Zero meaning the\r\n * resulting color will be closest to the first reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color1   First reference color\r\n * @param color2   Second reference color\r\n * @param percent  Relative position (0-1)\r\n * @return Interpolated color\r\n */\r\nexport function interpolate(rgb1: $type.Optional<iRGB>, rgb2: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\r\n\tpercent = $math.fitToRange(percent, 0, 1);\r\n\r\n\tif (rgb1) {\r\n\t\tif (rgb2) {\r\n\t\t\treturn {\r\n\t\t\t\tr: rgb1.r + Math.round((rgb2.r - rgb1.r) * percent),\r\n\t\t\t\tg: rgb1.g + Math.round((rgb2.g - rgb1.g) * percent),\r\n\t\t\t\tb: rgb1.b + Math.round((rgb2.b - rgb1.b) * percent),\r\n\t\t\t\ta: (rgb1.a || 1) + Math.round(((rgb2.a || 1) - (rgb1.a || 1)) * percent)\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\t\t\treturn rgb1;\r\n\t\t}\r\n\r\n\t} else if (rgb2) {\r\n\t\treturn rgb2;\r\n\r\n\t} else {\r\n\t\treturn rgb1;\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\r\n\tif (rgb) {\r\n\t\treturn {\r\n\t\t\tr: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n\t\t\tg: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n\t\t\tb: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n\t\t\ta: rgb.a\r\n\t\t};\r\n\r\n\t} else {\r\n\t\t// TODO is this correct ?\r\n\t\treturn rgb;\r\n\t}\r\n};\r\n\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value: number, percent: number): number {\r\n\tlet base = percent > 0 ? 255 - value : value;\r\n\treturn Math.round(base * percent);\r\n}\r\n\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\r\n\tif (rgb) {\r\n\t\tlet base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n\t\t//let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n\t\tlet step = getLightnessStep(base, percent);\r\n\t\treturn {\r\n\t\t\tr: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n\t\t\tg: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n\t\t\tb: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n\t\t\ta: rgb.a\r\n\t\t};\r\n\r\n\t} else {\r\n\t\t// TODO is this correct ?\r\n\t\treturn rgb;\r\n\t}\r\n};\r\n\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(value: number, percent: number): number {\r\n\tlet base = 255; //percent > 0 ? 255 - value : value;\r\n\treturn Math.round(base * percent);\r\n}\r\n\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @ignore Exclude from docs\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb: $type.Optional<iRGB>, saturation: number): $type.Optional<iRGB> {\r\n\tif (rgb == null || saturation == 1) {\r\n\t\treturn rgb;\r\n\t}\r\n\r\n\tlet hsl = rgbToHsl(rgb);\r\n\thsl.s = saturation;\r\n\treturn hslToRgb(hsl);\r\n}\r\n\r\n/*\r\n// not used\r\nexport function rgbToMatrix(rgb: iRGB): string {\r\n\tlet r = $type.toText($math.round((rgb.r || 0) / 255, 10));\r\n\tlet g = $type.toText($math.round((rgb.g || 0) / 255, 10));\r\n\tlet b = $type.toText($math.round((rgb.b || 0) / 255, 10));\r\n\tlet a = $type.toText(rgb.a || 1);\r\n\treturn\t      r + \" 0 0 0 0\" +\r\n\t\t\t\t\t\" 0 \" + g + \" 0 0 0\" +\r\n\t\t\t\t\t\" 0 0 \" + b + \" 0 0\" +\r\n\t\t\t\t\t\" 0 0 0 \" + a + \" 0\";\r\n}\r\n*/\r\n\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color: iHSL): iRGB {\r\n\tlet r, g, b;\r\n\tlet h = color.h;\r\n\tlet s = color.s;\r\n\tlet l = color.l;\r\n\r\n\tif (s == 0) {\r\n\t\tr = g = b = l; // achromatic\r\n\t} else {\r\n\t\tlet hue2rgb = function hue2rgb(p: number, q: number, t: number) {\r\n\t\t\tif (t < 0) { t += 1; }\r\n\t\t\tif (t > 1) { t -= 1; }\r\n\t\t\tif (t < 1 / 6) { return p + (q - p) * 6 * t; }\r\n\t\t\tif (t < 1 / 2) { return q; }\r\n\t\t\tif (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tlet q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n\t\tlet p = 2 * l - q;\r\n\t\tr = hue2rgb(p, q, h + 1 / 3);\r\n\t\tg = hue2rgb(p, q, h);\r\n\t\tb = hue2rgb(p, q, h - 1 / 3);\r\n\t}\r\n\r\n\treturn {\r\n\t\tr: Math.round(r * 255),\r\n\t\tg: Math.round(g * 255),\r\n\t\tb: Math.round(b * 255)\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color: iRGB): iHSL {\r\n\tlet r = color.r / 255;\r\n\tlet g = color.g / 255;\r\n\tlet b = color.b / 255;\r\n\tlet max = Math.max(r, g, b);\r\n\tlet min = Math.min(r, g, b);\r\n\tlet h = 0;\r\n\tlet s = 0;\r\n\tlet l = (max + min) / 2;\r\n\r\n\tif (max === min) {\r\n\t\th = s = 0; // achromatic\r\n\r\n\t} else {\r\n\t\tlet d = max - min;\r\n\r\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n\t\tswitch (max) {\r\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t\t\tcase g: h = (b - r) / d + 2; break;\r\n\t\t\tcase b: h = (r - g) / d + 4; break;\r\n\t\t}\r\n\r\n\t\th /= 6;\r\n\t}\r\n\r\n\treturn {\r\n\t\th: h,\r\n\t\ts: s,\r\n\t\tl: l\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts an RGB color value to HSV. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and v in the set [0, 1].\r\n *\r\n * @ignore Exclude from docs\r\n * @param   Number  r       The red color value\r\n * @param   Number  g       The green color value\r\n * @param   Number  b       The blue color value\r\n * @return  Array           The HSV representation\r\n */\r\nexport function rgbToHsv(color: iRGB): iHSV {\r\n\tlet r = color.r / 255;\r\n\tlet g = color.g / 255;\r\n\tlet b = color.b / 255;\r\n\tlet max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n\tlet h = 0;\r\n\tlet s = 0;\r\n\tlet v = max;\r\n\r\n\tlet d = max - min;\r\n\ts = max == 0 ? 0 : d / max;\r\n\r\n\tif (max == min) {\r\n\t\th = 0; // achromatic\r\n\r\n\t} else {\r\n\t\tswitch (max) {\r\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n\t\t\tcase g: h = (b - r) / d + 2; break;\r\n\t\t\tcase b: h = (r - g) / d + 4; break;\r\n\t\t}\r\n\t\th /= 6;\r\n\t}\r\n\r\n\treturn {\r\n\t\th: h,\r\n\t\ts: s,\r\n\t\tv: v\r\n\t};\r\n}\r\n\r\n/**\r\n * Converts an HSV color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n * Assumes h, s, and v are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * @ignore Exclude from docs\r\n * @param   Number  h       The hue\r\n * @param   Number  s       The saturation\r\n * @param   Number  v       The value\r\n * @return  Array           The RGB representation\r\n */\r\nexport function hsvToRgb(color: iHSV): iRGB {\r\n\tlet r = 0;\r\n\tlet g = 0;\r\n\tlet b = 0;\r\n\tlet h = color.h;\r\n\tlet s = color.s;\r\n\tlet v = color.v;\r\n\r\n\tlet i = Math.floor(h * 6);\r\n\tlet f = h * 6 - i;\r\n\tlet p = v * (1 - s);\r\n\tlet q = v * (1 - f * s);\r\n\tlet t = v * (1 - (1 - f) * s);\r\n\r\n\tswitch (i % 6) {\r\n\t\tcase 0:\r\n\t\t\tr = v;\r\n\t\t\tg = t;\r\n\t\t\tb = p;\r\n\t\t\tbreak;\r\n\t\tcase 1:\r\n\t\t\tr = q;\r\n\t\t\tg = v;\r\n\t\t\tb = p;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tr = p;\r\n\t\t\tg = v;\r\n\t\t\tb = t;\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tr = p;\r\n\t\t\tg = q;\r\n\t\t\tb = v;\r\n\t\t\tbreak;\r\n\t\tcase 4:\r\n\t\t\tr = t;\r\n\t\t\tg = p;\r\n\t\t\tb = v;\r\n\t\t\tbreak;\r\n\t\tcase 5:\r\n\t\t\tr = v;\r\n\t\t\tg = p;\r\n\t\t\tb = q;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn {\r\n\t\tr: Math.round(r * 255),\r\n\t\tg: Math.round(g * 255),\r\n\t\tb: Math.round(b * 255)\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color: iRGB): boolean {\r\n\treturn ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * COLOR CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an interface for an object that represents an RGB color.\r\n */\r\nexport interface iRGB {\r\n\tr: number;\r\n\tg: number;\r\n\tb: number;\r\n\ta?: number;\r\n}\r\n\r\n/**\r\n * Represents an interface for an object that represents an HSL color.\r\n */\r\nexport interface iHSL {\r\n\th: number;\r\n\ts: number;\r\n\tl: number;\r\n\ta?: number;\r\n}\r\n\r\n/**\r\n * Represents an interface for an object that represents an HSV color.\r\n */\r\nexport interface iHSV {\r\n\th: number;\r\n\ts: number;\r\n\tv: number;\r\n\ta?: number;\r\n}\r\n","/**\r\n * Functionality related to inertia\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { getInteraction } from \"./Interaction\";\r\nimport { InteractionObject, IInteractionObjectEvents } from \"./InteractionObject\";\r\nimport { Animation, IAnimatable, AnimationDisposer } from \"../utils/Animation\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport * as $type from \"../utils/Type\";\r\n\r\n/**\r\n * Defines a list of available inertia types.\r\n */\r\nexport type InertiaTypes = \"move\" | \"resize\";\r\n\r\n/**\r\n * A point of inertia is to simulate gradually drecreasing motion even after\r\n * actual interaction by user, that caused it, has already ended.\r\n *\r\n * [[Inertia]] object will continue triggering the same [[Sprite]] handlers\r\n * as if the interaction was still happening, gradually reducing\r\n * shift/angle/scale values until full stop.\r\n *\r\n * Basically, from the target element's point of view, while inertia is\r\n * playing, it is still being interacted with by user, albeit with a\r\n * decreasing speed.\r\n */\r\nexport class Inertia extends BaseObject implements IAnimatable {\r\n\r\n\t/**\r\n\t * Holds what type of inertia it is.\r\n\t */\r\n\tpublic type: InertiaTypes;\r\n\r\n\t/**\r\n\t * An element we're performing animation on.\r\n\t */\r\n\tpublic interaction: InteractionObject;\r\n\r\n\t/**\r\n\t * Starting pointer position. The position of pointer when we \"released\"\r\n\t * the element.\r\n\t */\r\n\tpublic startPoint: IPoint;\r\n\r\n\t/**\r\n\t * Current (simulated) pointer position.\r\n\t */\r\n\tpublic point: IPoint;\r\n\r\n\t/**\r\n\t * List of animations currently playing.\r\n\t */\r\n\tpublic animations: Array<Animation> = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(interaction: InteractionObject, type: InertiaTypes, point: IPoint, startPoint: IPoint) {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Inertia\";\r\n\r\n\t\tthis.interaction = interaction;\r\n\t\tthis.type = type;\r\n\t\tthis.point = point;\r\n\t\tthis.startPoint = startPoint;\r\n\r\n\t\t// Make animations disposable\r\n\t\tthis._disposers.push(new AnimationDisposer(this.animations));\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current X coordinate.\r\n\t *\r\n\t * Will trigger \"drag\" event for the target element.\r\n\t *\r\n\t * @param value X\r\n\t */\r\n\tpublic set x(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tthis.point.x = value;\r\n\t\t\tthis.handleMove();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current X coordinate.\r\n\t *\r\n\t * @return X\r\n\t */\r\n\tpublic get x(): number {\r\n\t\treturn this.point.x;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets current Y coordinate.\r\n\t *\r\n\t * Will trigger \"drag\" event for the target element.\r\n\t *\r\n\t * @param value Y\r\n\t */\r\n\tpublic set y(value: number) {\r\n\t\tif ($type.isNumber(value)) {\r\n\t\t\tthis.point.y = value;\r\n\t\t\tthis.handleMove();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current Y coordinate.\r\n\t *\r\n\t * @return Y\r\n\t */\r\n\tpublic get y(): number {\r\n\t\treturn this.point.y;\r\n\t}\r\n\r\n\t/**\r\n\t * Simulates dragging of element.\r\n\t */\r\n\tpublic handleMove() {\r\n\r\n\t\t// Prepare {InteractionEvent} object\r\n\t\tif (this.interaction.events.isEnabled(\"drag\")) {\r\n\t\t\tlet imev: AMEvent<InteractionObject, IInteractionObjectEvents>[\"drag\"] = {\r\n\t\t\t\ttype: \"drag\",\r\n\t\t\t\ttarget: this.interaction,\r\n\t\t\t\tshift: {\r\n\t\t\t\t\tx: this.x - this.startPoint.x,\r\n\t\t\t\t\ty: this.y - this.startPoint.y\r\n\t\t\t\t},\r\n\t\t\t\tstartPoint: this.startPoint,\r\n\t\t\t\tpoint: {\r\n\t\t\t\t\tx: this.x,\r\n\t\t\t\t\ty: this.y\r\n\t\t\t\t},\r\n\t\t\t\ttouch: false\r\n\t\t\t};\r\n\r\n\t\t\t// Call handler\r\n\t\t\tthis.interaction.events.dispatchImmediately(\"drag\", imev);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finishes up the inertia animation. (removes reference to this animation\r\n\t * object)\r\n\t */\r\n\tpublic done() {\r\n\r\n\t\t// Remove inertia animation from the object\r\n\t\tthis.interaction.inertias.removeKey(this.type);\r\n\r\n\t\t// Move ended\r\n\t\tif (this.type === \"move\") {\r\n\t\t\tgetInteraction().processDragStop(this.interaction);\r\n\t\t}\r\n\r\n\t\t// Destroy\r\n\t\tthis.dispose();\r\n\r\n\t}\r\n\r\n}\r\n","/**\r\n * Responsive functionality module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters } from \"../Sprite\";\r\nimport { SpriteState } from \"../SpriteState\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { List } from \"../utils/List\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines an interface for the responsive rule, i.e. what overrides need to\r\n * be applied when certain conditions are matched.\r\n *\r\n * @important\r\n */\r\nexport interface IResponsiveRule {\r\n\r\n\t/**\r\n\t * A function which determines if this rule is relevant to current\r\n\t * conditions.\r\n\t *\r\n\t * Whenever the chrt size changes, this function will be run to determine\r\n\t * whether this rule needs to be applied.\r\n\t */\r\n\trelevant(target: Container): boolean;\r\n\r\n\t/**\r\n\t * A function which creates and returns a [[SpriteState]] that needs to be\r\n\t * set whenever rule should be applied.\r\n\t *\r\n\t * This is run only once.\r\n\t *\r\n\t * Once state is created, it is added to the Sprite's available states and\r\n\t * applied as necessary.\r\n\t */\r\n\tstate(target: Sprite, stateId: string): Optional<SpriteState<ISpriteProperties, ISpriteAdapters>>;\r\n\r\n\t/**\r\n\t * ID of the rule.\r\n\t */\r\n\tid?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Responsive]].\r\n */\r\nexport interface IResponsiveEvents extends IBaseObjectEvents {\r\n\r\n\t/**\r\n\t * Invoked when a list of applicable rules for the current resolution\r\n\t * changes.\r\n\t */\r\n\truleschanged: {},\r\n\r\n\t/**\r\n\t * Invoked after each rule is applied to the actual element.\r\n\t */\r\n\truleapplied: {\r\n\r\n\t\t/**\r\n\t\t * A rule that was just applied.\r\n\t\t */\r\n\t\t\"rule\": IResponsiveRule\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[Responsive]] class.\r\n *\r\n * Includes both the [[Adapter]] definitions and properties.\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IResponsiveAdapters {\r\n\r\n\t/**\r\n\t * Are responsive features enabled?\r\n\t */\r\n\tenabled: boolean;\r\n\r\n\t/**\r\n\t * Use default rules?\r\n\t *\r\n\t * If this is set `false`, only user-defined rules will be applied.\r\n\t */\r\n\tuseDefault: boolean;\r\n\r\n\t/**\r\n\t * A list of user-defined rules.\r\n\t */\r\n\trules: List<IResponsiveRule>;\r\n\r\n\t/**\r\n\t * A list of default rules.\r\n\t */\r\n\tdefaultRules: List<IResponsiveRule>;\r\n\r\n\t/**\r\n\t * A list of **all** rules - user-defined and default combined.\r\n\t */\r\n\tallRules: List<IResponsiveRule>;\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Responsive is responsible for overriding certain properties when conditions\r\n * are met.\r\n *\r\n * This class is used to dynamically apply and change certain chart properties\r\n * based on the current values of properties.\r\n *\r\n * Mainly, this is used with [[Sprite]]'s dimensional properties, like\r\n * `pixelWidth` and `pixelHeight`. However, it can be used to dynamically\r\n * change any property, based on any other property's value.\r\n *\r\n * A default responsive rules are disabled.\r\n *\r\n * To enable, set `enabled = false`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n * ```JavaScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n *\r\n * @see {@link IResponsiveEvents} for a list of available events\r\n * @see {@link IResponsiveAdapters} for a list of available Adapters\r\n * @todo Add default rules\r\n * @todo Watch for rule modification\r\n * @important\r\n */\r\nexport class Responsive extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Holds a list of responsive rules organized by object type.\r\n\t */\r\n\tprotected _rules = new List<IResponsiveRule>();\r\n\r\n\t/**\r\n\t * Holds the list of the default responsive rules.\r\n\t * @deprecated\r\n\t */\r\n\t//protected _defaultRules = new List<IResponsiveRule>();\r\n\r\n\t/**\r\n\t * Holds the list of currently applied rules.\r\n\t */\r\n\tprotected _appliedRules: { [index: string]: boolean } = {};\r\n\r\n\t/**\r\n\t * Used to keep track of objects that have rules applied at the moment.\r\n\t */\r\n\tprotected _appliedTargets: string[] = [];\r\n\r\n\tprotected _timeout?: IDisposer;\r\n\r\n\t/**\r\n\t * Use default rules in addition to the user-defined ones?\r\n\t */\r\n\tprotected _useDefault = true;\r\n\r\n\t/**\r\n\t * A target object responsive rules apply to.\r\n\t */\r\n\tprotected _component: $type.Optional<Component>;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IResponsiveEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IResponsiveAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter = new Adapter<this, IResponsiveAdapters>(this);\r\n\r\n\t/**\r\n\t * Indicates of responsive rules application is enabled.\r\n\t */\r\n\tprotected _enabled = false;\r\n\r\n\t/**\r\n\t * Holds disposers for all events added by this class.\r\n\t */\r\n\tprotected _responsiveDisposers: Array<IDisposer> = [];\r\n\r\n\t/**\r\n\t * Collection of objects and state ids that do not have any properties set.\r\n\t */\r\n\tprivate _noStates: string[] = [];\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Responsive\";\r\n\r\n\t\t// Set up rules list events\r\n\t\tthis.rules.events.on(\"inserted\", () => { this.checkRules(); }, true);\r\n\t\tthis.rules.events.on(\"removed\", () => { this.checkRules(); }, true);\r\n\t\tthis._disposers.push(this.rules.events);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A target object that responsive rules will need to be applied to.\r\n\t *\r\n\t * @param value  Target object\r\n\t */\r\n\tpublic set component(value: $type.Optional<Component>) {\r\n\r\n\t\t// Check if it's the same\r\n\t\tif (value == this._component) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check if we already have a set up component and remove its events\r\n\t\tthis.disposeResponsiveHandlers();\r\n\r\n\t\t// Set\r\n\t\tthis._component = value;\r\n\r\n\t\t// Set up resize monitoring events\r\n\t\tthis._responsiveDisposers.push($type.getValue(this.component).events.on(\"sizechanged\", () => { this.checkRules(); }, this));\r\n\t\tthis._responsiveDisposers.push($type.getValue(this.component).events.once(\"datavalidated\", () => {\r\n\t\t\tif (this._component.isReady()) {\r\n\t\t\t\tthis.checkRules(true);\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\t// Enable resoponsive\r\n\t\tthis.enabled = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target object\r\n\t */\r\n\tpublic get component(): $type.Optional<Component> {\r\n\t\treturn this._component;\r\n\t}\r\n\r\n\t/**\r\n\t * Should responsive rules be checked against and applied?\r\n\t *\r\n\t * @default false\r\n\t * @param value  Apply responsive rules?\r\n\t */\r\n\tpublic set enabled(value: boolean) {\r\n\t\tif (this._enabled != value) {\r\n\t\t\tthis._enabled = value;\r\n\r\n\t\t\t// Run `applyRules` so that any currently applied rules can be reset\r\n\t\t\tthis.applyRules();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Apply responsive rules?\r\n\t */\r\n\tpublic get enabled(): boolean {\r\n\t\treturn this.adapter.apply(\"enabled\", this._enabled);\r\n\t}\r\n\r\n\t/**\r\n\t * Should default responsive rules be applied in addition to user-defined\r\n\t * ones.\r\n\t *\r\n\t * User-defined rules will take precedence over default rules whenever they\r\n\t * produce conflicting settings.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Use default rules?\r\n\t */\r\n\tpublic set useDefault(value: boolean) {\r\n\t\tif (this._useDefault != value) {\r\n\t\t\tthis._useDefault = value;\r\n\r\n\t\t\t// Run `applyRules` so that any currently applied rules can be reset\r\n\t\t\tthis.applyRules();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default rules?\r\n\t */\r\n\tpublic get useDefault(): boolean {\r\n\t\treturn this.adapter.apply(\"useDefault\", this._useDefault);\r\n\t}\r\n\r\n\t/**\r\n\t * User-defined responsive rules.\r\n\t *\r\n\t * User-defined rules will take precedence over default rules whenever they\r\n\t * produce conflicting settings.\r\n\t *\r\n\t * Use `allRules` to get all applicable rules including default and\r\n\t * user-defined ones.\r\n\t *\r\n\t * @param value  User-defined rules\r\n\t */\r\n\tpublic set rules(value: List<IResponsiveRule>) {\r\n\t\tthis._rules = value;\r\n\t\tthis._enabled = true;\r\n\t\tthis.applyRules();\r\n\t}\r\n\r\n\t/**\r\n\t * @return User-defined rules\r\n\t */\r\n\tpublic get rules(): List<IResponsiveRule> {\r\n\t\treturn this.adapter.apply(\"rules\", this._rules);\r\n\t}\r\n\r\n\t/**\r\n\t * Default responsive rules.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of responsive rules\r\n\t */\r\n\tpublic get defaultRules(): List<IResponsiveRule> {\r\n\t\treturn this.adapter.apply(\"defaultRules\", defaultRules);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all rules: default rules (if not disabled) combined with\r\n\t * user-defined ones.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of all applicable rules\r\n\t */\r\n\tpublic get allRules(): List<IResponsiveRule> {\r\n\r\n\t\t// Create empty list\r\n\t\tlet rules = new List<IResponsiveRule>();\r\n\r\n\t\t// Add default rules if not disabled\r\n\t\t// A code, requesting `allRules` must ensure loading of default rules\r\n\t\t// by calling `loadDefaultRules()`\r\n\t\tif (this.useDefault) {\r\n\t\t\trules.copyFrom(this.defaultRules);\r\n\t\t}\r\n\r\n\t\t// Add user-defined ones\r\n\t\trules.copyFrom(this.rules);\r\n\r\n\t\treturn this.adapter.apply(\"allRules\", rules);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if rule by the particular id currently applied.\r\n\t *\r\n\t * @param ruleId  Rule ID\r\n\t * @return Is currently applied?\r\n\t */\r\n\tprotected isApplied(ruleId: string): boolean {\r\n\t\tconst rule = this._appliedRules[ruleId];\r\n\t\treturn $type.hasValue(rule) ? rule : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks which responsive rules currently satisfy their conditions and\r\n\t * should be applied, or unapplied.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic checkRules(force: boolean = false): void {\r\n\r\n\t\t// Check if there are any rules\r\n\t\tlet rules = this.allRules;\r\n\t\tif (!rules || rules.length == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Init a list of rules to be applied\r\n\t\tlet rulesChanged: boolean = false;\r\n\r\n\t\tconst component = $type.getValue(this.component);\r\n\r\n\t\t// Do not perform rule application of target has no size\r\n\t\tif (component.pixelWidth == 0 || component.pixelHeight == 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check which rules match\r\n\t\t$iter.each(rules.iterator(), (rule) => {\r\n\r\n\t\t\t// Check if rule has an id\r\n\t\t\tif (!rule.id) {\r\n\t\t\t\trule.id = registry.getUniqueId();\r\n\t\t\t}\r\n\r\n\t\t\t// Init indicator if this rule should be applied\r\n\t\t\tlet apply = rule.relevant(component);\r\n\r\n\t\t\t// Let's check if this rule needs to be applied\r\n\t\t\tif ((apply && !this.isApplied(rule.id)) || (!apply && this.isApplied(rule.id))) {\r\n\t\t\t\trulesChanged = true;\r\n\t\t\t}\r\n\t\t\tthis._appliedRules[rule.id] = apply;\r\n\t\t});\r\n\r\n\t\tif (force) {\r\n\t\t\trulesChanged = true;\r\n\t\t}\r\n\r\n\t\t// Check if we need to re-apply the rules\r\n\t\tif (rulesChanged) {\r\n\r\n\t\t\tif (!this.component.isReady()) {\r\n\t\t\t\t// The chart is not yet ready (built)\r\n\t\t\t\t// We will hide the chart and delay application of rules\r\n\t\t\t\t// until \"ready\" event kicks in\r\n\t\t\t\t//component.hide(0);\r\n\t\t\t\tcomponent.hidden = true;\r\n\t\t\t\tcomponent.events.once(\"ready\", (ev) => {\r\n\t\t\t\t\tev.target.show(0);\r\n\t\t\t\t\tthis._applyRules();\r\n\t\t\t\t});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.dispatchImmediately(\"ruleschanged\");\r\n\t\t\tthis._applyRules();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected _applyRules(): void {\r\n\t\tif (this._timeout) {\r\n\t\t\tthis._timeout.dispose();\r\n\t\t}\r\n\t\tthis._timeout = this.setTimeout(() => {\r\n\t\t\tthis.applyRules();\r\n\t\t}, 10);\r\n\t}\r\n\r\n\t/**\r\n\t * Applies current rules to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param target Target object\r\n\t * @todo Better type check\r\n\t */\r\n\tpublic applyRules(target?: Container): void {\r\n\r\n\t\t// If no target supplied, we assume the top-level element\r\n\t\tconst newTarget = ($type.hasValue(target)\r\n\t\t\t? target\r\n\t\t\t: $type.getValue(this.component));\r\n\t\t// Check each rule\r\n\t\tlet defaultStateApplied = false;\r\n\t\tif (this.enabled) {\r\n\t\t\tlet isApplied = false;\r\n\t\t\t$iter.each(this.allRules.iterator(), (rule) => {\r\n\r\n\t\t\t\t// Get relevant state\r\n\t\t\t\tlet state = this.getState(rule, newTarget);\r\n\r\n\t\t\t\t// If there's a state, it means it needs to be applied\r\n\t\t\t\tif (state) {\r\n\r\n\t\t\t\t\t// Check if default state was already applied to this element.\r\n\t\t\t\t\t// We don't want to go resetting default states to ALL element,\r\n\t\t\t\t\t// if they don't have responsive states.\r\n\t\t\t\t\tif (!defaultStateApplied) {\r\n\t\t\t\t\t\t// Nope, reset states (instantly).\r\n\t\t\t\t\t\tif ($array.indexOf(this._appliedTargets, newTarget.uid) !== -1) {\r\n\t\t\t\t\t\t\t// But only if this element has any rules applied, otherwise no\r\n\t\t\t\t\t\t\t// point in setting current state\r\n\t\t\t\t\t\t\tnewTarget.setState(this.getDefaultState(newTarget), 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdefaultStateApplied = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Is this rule currently applied?\r\n\t\t\t\t\tif (this.isApplied($type.getValue(rule.id))) {\r\n\t\t\t\t\t\t// Yes. Apply the responsive state\r\n\t\t\t\t\t\tstate.transitionDuration = 0;\r\n\t\t\t\t\t\tthis.setTargetState(newTarget, state);\r\n\t\t\t\t\t\tthis.dispatchImmediately(\"ruleapplied\", {\r\n\t\t\t\t\t\t\trule: rule\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tisApplied = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (isApplied) {\r\n\t\t\t\t$array.replace(this._appliedTargets, newTarget.uid);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$array.remove(this._appliedTargets, newTarget.uid);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply rules to the children\r\n\t\tif (newTarget.children) {\r\n\t\t\t$iter.each(newTarget.children.iterator(), (child) => {\r\n\t\t\t\tthis.applyRules(child as Container);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a relative state for the rule/target, or `undefined` if no state is\r\n\t * needed.\r\n\t *\r\n\t * @param rule    [description]\r\n\t * @param target  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getState(rule: IResponsiveRule, target: any): Optional<SpriteState<any, any>> {\r\n\t\tlet stateId = \"responsive-\" + rule.id;\r\n\t\tlet tmpId = target.uid + \"_\" + stateId;\r\n\t\tif ($array.indexOf(this._noStates, tmpId) !== -1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (!target.states.hasKey(stateId)) {\r\n\t\t\tlet state = rule.state(target, stateId);\r\n\t\t\tif (!state) {\r\n\t\t\t\tthis._noStates.push(tmpId);\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn target.states.getKey(stateId);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns default responsive rule for the target.\r\n\t * \r\n\t * This rule will be used to \"reset\" to non-responsive values.\r\n\t * @param   target  Target Sprite\r\n\t * @return          State\r\n\t */\r\n\tprotected getDefaultState(target: any): SpriteState<any, any> {\r\n\t\tif (target.states.hasKey(\"responsive-default\")) {\r\n\t\t\treturn target.states.getKey(\"responsive-default\");\r\n\t\t}\r\n\t\treturn target.states.create(\"responsive-default\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets state on the target element and updates default state with the\r\n\t * overwritten values if needed.\r\n\t * \r\n\t * @param  target  Target\r\n\t * @param  state   State\r\n\t */\r\n\tprotected setTargetState(target: any, state: SpriteState<any, any>): void {\r\n\t\t// Update default state\r\n\t\tconst defaultState = this.getDefaultState(target);\r\n\t\t$object.each(state.properties, (key, val) => {\r\n\t\t\tif (!$type.hasValue(defaultState.properties[key])) {\r\n\t\t\t\tdefaultState.properties[key] = this.getValue(target, key);\r\n\t\t\t}\r\n\t\t});\r\n\t\ttarget.setState(state);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a value from an element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param target    Target object\r\n\t * @param property  Property\r\n\t * @return Property value\r\n\t */\r\n\tpublic getValue(target: any, property: string): any {\r\n\t\t// This is a bit hacky, first we check if the property exist.\r\n\t\t// If it doesn't we try accessing target's property directly\r\n\t\tlet value: any = target.getPropertyValue(property);\r\n\t\tif (!$type.hasValue(value) && $type.hasValue(target[property])) {\r\n\t\t\tvalue = target[property];\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes the object.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.disposeResponsiveHandlers();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes all event handlers.\r\n\t */\r\n\tprotected disposeResponsiveHandlers(): void {\r\n\t\tlet disposer = this._responsiveDisposers.pop();\r\n\t\twhile (disposer) {\r\n\t\t\tdisposer.dispose();\r\n\t\t\tdisposer = this._responsiveDisposers.pop();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * [defaultRules description]\r\n *\r\n * @todo description\r\n */\r\nexport let defaultRules = new List<IResponsiveRule>();\r\ndefaultRules.events.on(\"inserted\", (ev) => {\r\n\tev.newValue.id = registry.getUniqueId();\r\n});\r\n\r\n/**\r\n *\r\n * @todo description\r\n */\r\nexport class ResponsiveBreakpoints {\r\n\r\n\t// Named pixel breakpoints\r\n\tstatic XXS = 100;\r\n\tstatic XS = 200;\r\n\tstatic S = 300;\r\n\tstatic M = 400;\r\n\tstatic L = 600;\r\n\tstatic XL = 800;\r\n\tstatic XXL = 1000;\r\n\r\n\t// Breakpoint functions (for use in `relevant` clause of the responsive rules)\r\n\r\n\tstatic widthXXS(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XXS;\r\n\t}\r\n\r\n\tstatic widthXS(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XS;\r\n\t}\r\n\r\n\tstatic widthS(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.S;\r\n\t}\r\n\r\n\tstatic widthM(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.M;\r\n\t}\r\n\r\n\tstatic widthL(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.L;\r\n\t}\r\n\r\n\tstatic widthXL(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XL;\r\n\t}\r\n\r\n\tstatic widthXXL(container: Container): boolean {\r\n\t\treturn container.pixelWidth <= ResponsiveBreakpoints.XXL;\r\n\t}\r\n\r\n\r\n\tstatic heightXXS(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XXS;\r\n\t}\r\n\r\n\tstatic heightXS(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XS;\r\n\t}\r\n\r\n\tstatic heightS(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.S;\r\n\t}\r\n\r\n\tstatic heightM(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.M;\r\n\t}\r\n\r\n\tstatic heightL(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.L;\r\n\t}\r\n\r\n\tstatic heightXL(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XL;\r\n\t}\r\n\r\n\tstatic heightXXL(container: Container): boolean {\r\n\t\treturn container.pixelHeight <= ResponsiveBreakpoints.XXL;\r\n\t}\r\n\r\n\r\n\tstatic isXXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXS) && (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n\t}\r\n\r\n\tstatic isXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XS) && (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n\t}\r\n\r\n\tstatic isS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.S) && (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n\t}\r\n\r\n\tstatic isM(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.M) && (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n\t}\r\n\r\n\tstatic isL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.L) && (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n\t}\r\n\r\n\tstatic isXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XL) && (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n\t}\r\n\r\n\tstatic isXXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXL) && (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n\t}\r\n\r\n\r\n\tstatic maybeXXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXS) || (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n\t}\r\n\r\n\tstatic maybeXS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XS) || (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n\t}\r\n\r\n\tstatic maybeS(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.S) || (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n\t}\r\n\r\n\tstatic maybeM(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.M) || (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n\t}\r\n\r\n\tstatic maybeL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.L) || (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n\t}\r\n\r\n\tstatic maybeXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XL) || (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n\t}\r\n\r\n\tstatic maybeXXL(container: Container): boolean {\r\n\t\treturn (container.pixelWidth <= ResponsiveBreakpoints.XXL) || (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n\t}\r\n}\r\n"],"names":["dataLoader","DataLoader","adapter","Adapter","this","prototype","load","source","sources","Array","isArray","promises","$array","x","dispatchImmediately","$net","url","requestOptions","Promise","all","then","res","result","target","error","events","isEnabled","type","code","xhr","status","message","language","translate","processData","response","catch","getParserByType","contentType","parser","apply","CSVParser","JSONParser","getParserByData","data","isJSON","isCSV","log","messages","_i","arguments","length","options","verbose","console","__spread","warn","suppressWarnings","Modal","_super","_this","call","className","showCurtain","draggable","__extends","Popup","Label","isOversized","fill","InterfaceColorSet","getFor","wrap","truncate","fullWords","ellipsis","textAlign","textValign","layout","baseLineRatio","_positionPrecision","on","inited","handleMaxSize","once","handleValidate","applyTheme","afterDraw","validatePosition","setPaper","paper","changed","hardInvalidate","currentText","text","bbox","width","height","registry","availableWidth","availableHeight","invalidate","arrange","updateCurrentText","output","$utils","html","supportsForeignObject","$type","toString","populateString","dataItem","_adapterO","_currentFormat","_prevStatus","getLineBBox","lineInfo","element","node","parentNode","getBBox","draw","oldW","oldH","topParent","maxWidth","maxHeight","$math","pixelPaddingLeft","pixelPaddingRight","pixelPaddingTop","pixelPaddingBottom","rtl","_measuredWidth","_measuredHeight","lines","split","display","group","getAttr","removeAttr","textPathElement","removeChildren","resetBBox","currentHeight","currentFormat","i","line","chunks","getTextFormatter","chunk","ignoreFormatting","currentLineHeight","firstChunk","skipTextChunks","getLineInfo","textContent","getSVGLineElement","add","complex","style","translateStyleShortcuts","getSvgElement","Math","ceil","lineText","avgCharWidth","excessChars","addEllipsis","node_1","childNodes","e","node_2","floor","elementText","maxChars","removeChild","lastNode","lastChild","splitLines","lineText_1","shift","cleanUp","restOfLine","join","replace","c","splice","attr","paddingBottom","addLineInfo","tempElement","offset","removeElement","lineInfo_1","maybeHideOversized","measureFailed","pixelWidth","pixelHeight","alignSVGText","dispatch","hideUnused","setCache","fo","foreignObject","lineElement","getHTMLLineElement","appendChild","clientWidth","clientHeight","_bbox","y","overflow","setStyles","updateCenter","updateBackground","pathElement","appendDef","hideOversized","children","setAttribute","removeAttribute","getAttribute","addGroup","Object","defineProperty","_rtl","_topParent","value","div","document","createElement","innerHTML","wordWrap","whiteSpace","direction","color","selectable","resizable","swipeable","addStyle","removeStyle","index","initLineCache","getCache","getPropertyValue","setPropertyValue","dispose","uid","_disposers","push","attrNS","$dom","removeChildrenByTag","setFill","divs","getElementsByTagName","measureElement","undefined","setDataItem","_sourceDataItemEvents","MultiDisposer","parent","nonce","classid","btoa","defs","createElementNS","deepInvalidate","title","applyAccessibility","Container","registeredClasses","defaultRules","relevant","ResponsiveBreakpoints","heightXS","state","stateId","isBaseSprite","states","create","properties","disabled","_purposes","stroke","primaryButton","primaryButtonHover","primaryButtonDown","primaryButtonActive","primaryButtonText","primaryButtonStroke","secondaryButton","secondaryButtonHover","brighten","secondaryButtonDown","secondaryButtonActive","secondaryButtonText","secondaryButtonStroke","grid","background","alternativeBackground","alternativeText","disabledBackground","positive","negative","debug","purpose","setFor","BaseObject","linear","t","polyIn","pow","polyOut","polyInOut","polyOut3","cubicIn","cubicOut","cos","sin","sqrt","b1","b2","b3","b5","b6","b8","b0","bounceOut","tau","PI","period","s","asin","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","TypeError","String","__","constructor","__awaiter","thisArg","_arguments","P","generator","resolve","reject","fulfilled","step","next","rejected","done","__generator","body","f","_","label","sent","trys","ops","g","Iterator","verb","Symbol","iterator","n","v","op","pop","__values","o","m","__read","r","ar","concat","SuppressedError","STRING","NUMBER","DATE","DURATION","PLACEHOLDER","PLACEHOLDER2","DictionaryDisposer","dict","disposer","oldValue","$iter","a","Disposer","Dictionary","EventDispatcher","_dictionary","hasKey","key","$object","getKey","insertKey","Error","newValue","setKey","updateKey","fn","removeKey","insertKeyIfEmpty","ifEmpty","clear","copyFrom","_c","each","_a","_b","sortedIterator","$string","DictionaryTemplate","template","_template","isTemplate","clone","SpriteEventDispatcher","_interactionEvents","_dispatchSpriteEvent","ev","imev","_dispatchSpritePointEvent","spritePoint","point","svgPoint","getSvgPoint","_addInteractionObjectEvent","callback","context","shouldClone","interactions","CounterDisposer","increment","_on","info","disposers","clickable","togglable","trackable","wheelable","hoverable","focusable","TargetedEventDispatcher","DataParser","parse","numberFields","maybeToNumber","field","indexOf","dateFields","maybeToDate","dateFormatter","dateFormat","maybeToEmpty","emptyAs","DateFormatter","inputDateFormat","used","copyProperties","stripHash","exec","getBaseURI","isSafari","baseURI","loc","location","href","copy","isNotEmpty","relativeToValue","percent","full","getPixelRatio","window","devicePixelRatio","stringify","JSON","escapeForRgex","splitTextByCharCount","fullWordFallback","currentIndex","words","$strings","word","match","wordLength","reverseString","parts","RegExp","truncateWithEllipsis","trim","str","rtrim","ltrim","reverse","padString","len","char","getFormat","format","hints","toLowerCase","cleanFormat","stripTags","plainText","numberToString","Infinity","abs","parsed","digits","decimals","exponent","zeros","slice","anyToDate","date","Date","setMilliseconds","getMilliseconds","num","Number","anyToNumber","getTime","getYearDay","utc","start","getFullYear","diff","getTimezoneOffset","getWeek","_utc","UTC","getMonth","getDate","day","getUTCDay","setUTCDate","getUTCDate","firstDay","getUTCFullYear","getMonthWeek","firstWeek","currentWeek","getDayFromWeek","week","year","weekday","setUTCFullYear","getDay","get12Hours","hours","base","getTimeZone","long","savings","wotz","toLocaleString","wtz","timeZoneName","substr","getWeekYear","fitNumber","min","max","fitNumberRelative","gap","svgPointToSprite","sprite","sprites","sprite_1","angle","rotation","relativeX","pixelX","ex","relativeY","pixelY","ey","dx","dy","scale","spritePointToSvg","spritePointToSprite","toSprite","spriteRectToSvg","rect","p1","p2","documentPointToSvg","svgContainer","cssScale","getBoundingClientRect","left","top","documentPointToSprite","htmlContainer","spritePointToDocument","svgPointToDocument","cs","getComputedStyle","paddingX","parseFloat","paddingLeft","paddingRight","borderX","borderLeftWidth","borderRightWidth","paddingY","paddingTop","borderY","borderTopWidth","borderBottomWidth","urlRegexp","parseUrl","protocol","separator","authority","domain","port","path","query","hash","serializeUrl","isRelativeUrl","joinUrl","right","parsedLeft","parsedRight","leftPath","rightPath","isIE","MSInputMethodContext","documentMode","_disposed","_uid","getUniqueId","map","_id","_map","_delayedMap","addDelayedMap","property","id","delayedMap","processDelayedMap","list","target_1","item","themes","getCurrentThemes","theme","_themes","isDisposed","clearCache","clonedFrom","clones","removeValue","addDisposer","removeDispose","cloneId","newObject","_clones","List","object","_className","ttl","cache","set","get","setTimeout","delay","clearTimeout","setInterval","config","processConfig","raiseCriticalError","configKey","item_1","configValue","hasProperty","asIs","createClassInstance","processAdapters","processEvents","parent_1","asFunction","ListTemplate","OrderedListTemplate","SortedListTemplate","processListTemplate","processOrderedTemplate","templateValue","entryKey","entryValue","listItem","processDictionaryTemplate","processList","maybeColorOrPercent","values","processDictionary","Color","Percent","isReserved","configOrder","processingErrors","errors","_processingErrors","entry","priority","has","getConfigEntryType","hasIndex","getIndex","setIndex","insert","itemCount","extraCount","createEntryInstance","prop","BaseObjectEvents","_eventDispatcher","eventType","fromArray","array","toArray","iter","eachContinue","sort","args","go","push2","flatten","indexed","contains","matches","ListIterator","createNewItems","_create","reset","_listCopy","getFirst","returnItem","getLast","find","removeItem","SVGDefaults","opacity","strokeOpacity","strokeWidth","fillOpacity","tabindex","AMElement","_isDisposed","_x","_y","_rotationY","_rotationX","_rotation","_scale","removeNode","_transformString","transform","transfromString","rotateString","svgbbox","err","moveTo","attribute","attributes","attributeName","attributeValue","ns","setAttributeNS","getAttrNS","getAttributeNS","getStyle","addClass","name","removeClass","setClass","removeChildNodes","firstChild","Native","_targets","_observer","ResizeObserver","entries","addTarget","observe","box","removeTarget","unobserve","Raf","lastTime_1","loop_1","currentTime","now","newSize","size","_timer","requestAnimationFrame","cancelAnimationFrame","observer","ResizeSensor","_sensor","_element","$log","svgContainers","SVGContainer","htmlElement","ghost","autoResize","nonExportableSprites","_printing","initSensor","position","resizeSensor","measure","container","checkTransform","_container","_modal","openModal","closeModal","modal","content","readerTitle","open","close","_popups","popupTemplate","ListDisposer","openPopup","popup","popups","closeAllPopups","_readerAlertElement","zIndex","readerAlert","readerAlertElement","matrix","isNaN","HTMLElement","DataItem","_disabled","hasProperties","categories","dates","locations","workingLocations","_index","_visible","_hidden","_ignoreMinMax","hasChildren","isHiding","_valueAnimations","_locationAnimations","component","_animations","AnimationDisposer","hidden","setVisibility","__disabled","noChangeValues","visible","defaultState","hiddenState","event_1","show","duration","fields","animation_1","_hideDisposer","setWorkingValue","animation","isFinished","hide","toValue","animation_2","anim","getDuration","interpolationDuration","getValue","calculated","dataFields","getWorkingValue","realName","workingValue","getActualWorkingValue","setValue","currentValue","newDuration","event_2","handleDataItemValueChange","setCalculatedValue","event_3","handleDataItemCalculatedValueChange","animate","childObject","from","to","dummyData","interpolationEasing","handleInterpolationProgress","valueAnimation","stop","event_4","handleDataItemWorkingValueChange","setLocation","event_5","setWorkingLocation","workingLocation","locationAnimation","event_6","handleDataItemWorkingLocationChange","setDate","setProperty","event_7","handleDataItemPropertyChange","setCategory","dataContext","event_8","animationOptions","easing","Animation","event","event_9","hasValue","depth","_dataContext","addSprite","getProgressNumber","progress","getProgressPercent","getProgressColor","$colors","rgb","alpha","getHybridProperty","charAt","toUpperCase","_disposer","$ease","_loop","_pause","_delayTimeout","_time","_isFinished","animationsEnabled","pause","animations","id_1","_start","stopSameAnimations","system","requestFrame","_startTime","staticOptions","options_1","updateMethod","convertedFrom","applyStaticOptions","update","end","loop","count","resume","setProgress","kill","skipEvent","timeProgress","delayed","killed_1","newOptions","oldOptions","test","navigator","vendor","isInternetExplorer","userAgent","Validatable","_validateDisposer","validate","getType","castString","toBoolean","toNumber","isNumber","converted","isString","toText","isObject","toNumberOrPercent","isPercent","getValueDefault","defaultValue","isDate","formatter","TextFormatter","formatted","styles","escape","texts","unescape","getPlaceholder","wrapHtml","wrapSvg","styleSvgToHtml","getHtmlElement","cached","q","quotedBlocks","noFormatting","chunks2","i2","chunk2","isImage","rootStylesheet","SVGNS","XMLNS","XLINK","addEventListener","dom","listener","removeEventListener","getElement","el","getElementById","getElementsByClassName","classList","classes","currentClassName","filter","remove","setStyle","currentStyle","defaultView","blur","activeElement","input","focus","cursor","host","getShadowRoot","getRoot","owner","ownerDocument","eventTarget","composedPath","fixPixelPerfect","readFrame","left_1","round","top_1","writeFrame","StyleRule","selector","root","head","sheet","getStylesheet","cssRules","_rule","deleteRule","insertRule","appendStylesheet","selectorText","_setVendorPrefixName","styleId","StyleClass","ready","readyState","listener_1","findFont","font","parentElement","findFontSize","parent_2","isHidden","offsetParent","isElementInViewport","viewportTarget","targets","viewportRect","innerHeight","documentElement","innerWidth","Circle","setPercentProperty","pixelRadius","radius","Sprite","Ellipse","radiusY","Image","widthRatio","heightRatio","Line","x1","y1","x2","y2","pixelPerfect","delta","LinearGradient","positionToPoint","point1","point2","Polyline","_distance","shapeRendering","makePath","segments","points","$path","_realSegments","deltaAngle","totalDistance","distance","currentDistance","positionA","positionB","pointA","pointB","positionAB","midPoint","Polyarc","controlPointDistance","controlPointPosition","realPoints","distanceAB","cpDistance","controlPoint1","controlPoint2","stepCount","prevPoint","i_1","Morpher","morphable","_bboxes","morphDuration","morphEasing","morphToSingle","scaleRatio","morphToPolygon","toPoints","currentPoints","sortPoints","_morphFromPointsReal","_morphToPointsReal","normalizePoints","pointsA","pointsB","surfaceA","holeA","bboxA","middleX","middleY","addPoints","splitAt","newDistance","partA","partB","bbox1","bbox2","bboxes","surface","morphToCircle","commonBBox","hole","fromPoints","realRadius","startAngle","realAngle","pointOnCircle","hlen","mustHaveCount","addToSegmentCount","newPoints","point0","extraPoint","lastPoint","morphToRectangle","realWidth","realHeight","i_2","i_3","_morphProgress","currentArea","surfaceFrom","holeFrom","surfaceTo","holeTo","currentSurface","i_4","slen","currentPoint","currentHole","i_5","morphBack","Polygon","_currentPoints","segment","areaHole","areaArr","holeArr","pointsArr","area","areaAndHole","coords","pointsArr_1","bottom","h","setPath","_morpher","Polyspline","tensionX","tensionY","allPoints","first","last","closed_1","p0","p3","controlPointA","controlPointB","k","getClosestPointIndex","closest","extend","f0","f1","point_1","Slice","createChild","isMeasured","arc","pixelInnerRadius","cornerRadius","innerCornerRadius","shiftRadius","realFill","RadialGradient","updateGradient","realStroke","gradient","cx","cy","definedBBox","innerRect","outerRect","innerRadius","ix","iy","middleAngle","getTooltipX","getTooltipY","Preloader","interfaceColors","sliceContainer","backgroundSlice","progressSlice","horizontalCenter","verticalCenter","align","valign","contentAlign","contentValign","validateLayout","_started","interactionsEnabled","CloseButton","padding","showSystemTooltip","cursorOverStyle","MouseCursorStyle","pointer","bgc","downColor","bhs","bds","icon","w","invalidateLayout","applyInternalDefaults","Button","SwitchButton","tooltipY","setStateOnChildren","leftLabel","isActive","button","circle","p100","marginLeft","marginRight","as","switchButton","rightLabel","role","_leftLabel","_rightLabel","_switchButton","Slider","thumb","endGrip","startGrip","_isBusy","__start","Scrollbar","TextLink","Trapezoid","topSide","bottomSide","leftSide","rightSide","ts","bs","ls","rs","x0","y0","x3","y3","mt","mr","mb","ml","horizontalNeck","hn","verticalNeck","vn","Triangle","Tension","_tensionX","_tensionY","smooth","closed","wavedLine","waveLength","waveHeight","tension","adjustWaveLength","atan2","waveLengthX","waveLengthY","halfWaveCount","sign_1","Monotone","reversed","_reversed","_closed","_curve","t0","t1","NaN","temp","slope2","slope3","sign","h0","h1","s0","s1","MonotoneX","MonotoneY","Basis","x4","y4","pushCurve","pushPoint","WavedCircle","getPoints","$smoothing","circleLength","halfWaveHeight","halfWaveLength","angle1","angle2","WavedLine","WavedRectangle","p4","waveLengthH","waveHeightH","waveLengthV","waveHeightV","td","rd","bd","ld","wavedTop","wavedRight","wavedBottom","wavedLeft","setWavedSides","Rectangle","ZoomOutButton","PlayButton","playIcon","stopIcon","RoundedRectangle","activeState","transitionDuration","ColorModifier","modify","GradientModifier","lightnesses","brightnesses","opacities","offsets","_lightnesses","_brightnesses","_opacities","_offsets","lightness","brightness","lighten","addColor","LinearGradientModifier","Cone","topRadius","setElement","bodyFillModifier","fillModifier","visualProperties","radiusBase","orientation","LightenFilter","feColorMatrix","filterPrimitives","Filter","Rectangle3D","sideBack","sideBottom","sideLeft","sideRight","sideTop","sideFront","ah","bh","ch","dh","colorStr","toColor","hex","stops","filters","filter2","filter3","filter4","filter5","Slice3D","edge","toBack","sideA","sideB","edgeFill","endAngle","innerRadiusY","a0","c0","d0","edgePath","mangle","pp","toFront","RadialGradientModifier","LinePattern","_line","addElement","Pattern","CirclePattern","_circle","RectPattern","rectHeight","rectWidth","_rect","ColorizeFilter","intensity","applyFilter","ii","DesaturateFilter","saturation","BlurFilter","feGaussianBlur","FocusFilter","feFlood","feMorphology","feComposite","feBlend","setSprite","_sprite","PatternSet","_list","_currentStep","_startIndex","_currentPass","baseColor","getLinePattern","getRectPattern","getCirclePattern","thickness","strokeDashArray","pattern","strokeDasharray","outline","currentStep","generatePatterns","AmChartsLogo","Plugin","init","urlTarget","aColor","alternative","aGradient","aStroke","desaturateFilter","desaturateFilterHover","hoverState","classType","tmpContainer","visibility","svgDiv_1","Paper","container_1","append","moveHtmlContainer","relativeWidth","relativeHeight","invalidSprites","invalidDatas","invalidPositions","invalidLayouts","baseId","focusFilter","baseSprites","baseSpritesByUid","maskRectangle","previousWidth","previousHeight","loopTimer_1","autoDispose","tooltipContainer_1","tooltipContainer","tooltip","Tooltip","setBounds","preloader_1","preloader","hasLicense","logo_1","logo","numberFormatter","isStandaloneInstance","onlyShowOnViewport","queue","addToQueue","viewPortHandler","vpDisposer","disableType","queueHandler","removeFromQueue","nextSprite","enableType","showOnInit","invalidateLabels","Component","invalidateData","reinit","appear","classError","chart","Group","elementName","addToBack","insertBefore","hasChild","childNode","tag","_dispose","MutableValueDisposer","_value","_counter","PointedRectangle","cr","stemX","stemY","pointerX","pointerY","bwh","pointerBaseWidth","maxcr","crtl","crtr","crbr","crbl","lineT","lineR","lineB","lineL","d1","d2","arcTR","arcBR","arcBL","arcTL","PointedShape","_elements","patternUnits","backgroundFill","backgroundOpacity","patternElement","rotationX","rotationY","_paper","getGhostPaper","elements","keys","eachOrdered","ord","order","keysOrdered","merge","object1","object2","assign","copyAllProperties","minSide","cornerRadiusTopLeft","cornerRadiusTopRight","cornerRadiusBottomRight","cornerRadiusBottomLeft","tl","tr","bl","br","grab","grabbing","default","horizontalResize","verticalResize","notAllowed","empty","numbers","parsableNumbers","parsableDates","row","pointerLength","InteractionKeyboardObject","io","directionX","directionY","interaction","keyboardEvent","_startedOn","getInteraction","processDragStart","speed","getKeyboardOption","accelleration","accellerationDelay","shiftKey","ctrlKey","ms","accelleratedMs","accellerationFactor","handleTransformMove","processDragStop","rules","_IOs","_content","_title","_classPrefix","_defaultStyles","_showCurtain","_draggable","_align","_dynamicResize","_verticalAlign","_shift","_tempShift","_readerTitle","_closable","_cssLoaded","_fitTo","_sized","wrapper","curtain","positionElement","releasePointers","forceResize","margin","dynamicResize","images","image","complete","toStyle","verticalAlign","marginTop","setupDragging","header","unprepElement","off","createContentElement","getClassNames","wrapperClass","classPrefix","headerClass","titleClass","contentClass","insideClass","curtainClass","closeClass","classNames","disablePointers","defaultStyles","loadDefaultCSS","createCurtainElement","applyEvents","applyReaderSettings","_left","_right","_top","_bottom","prefix","fg","bg","abg","rgba","popupCSS","closable","keyboard","isKey","_spriteInteractionsEnabled","classPrefixRaw","_dataSources","_parseDataFrom","_dataDisposers","_currentDataSetId","_end","skipRangeEvent","rangeChangeDuration","rangeChangeEasing","parsingStepDuration","dataInvalid","rawDataInvalid","dataRangeInvalid","dataItemsInvalid","sequencedInterpolation","sequencedInterpolationDelay","dataValidationProgress","_addAllDataItems","_usesData","minZoomCount","maxZoomCount","_dataItems","createDataItem","handleDataItemAdded","handleDataItemRemoved","dataUsers","handleDataUserAdded","maxZoomDeclination","dataProvider","invalidateDataItems","processDataItem","hasSomeValues_1","fieldValue","fieldName","mainDataSet","rawDataItem","childDataItem","propertyFields","updateDataItem","dataContext_1","child","validateDataElements","endIndex","startIndex","dataItems","validateDataElement","addData","removeCount","skipRaw","removeData","dataUser","dataItem_1","addToInvalidComponents","invalidateDataUsers","invalidDataItems","invalidateDataRange","invalidDataRange","validateDataRange","_prevStartIndex","_prevEndIndex","rangeChangeUpdate","appendDataItems","sliceData","_workingStartIndex","_workingEndIndex","invalidateRawData","invalidRawDatas","validateRawData","disposeData","_endIndex","_dataSets","getDataItem","validateData","removeFromInvalidComponents","_data","counter","startTime","this_1","dataUserDataItem","appeared","stacked","_internalDefaultsApplied","validateDataItems","setData","getDataSource","DataSource","setDataSourceEvents","val","dataSourceDateFields","dataSourceNumberFields","loadData","populateDataSourceFields","targetList","ds","incremental","keepCount","updateCurrentData","_responsive","Responsive","zoom","range","instantly","declination","maxZoomFactor","_finalStart","_finalEnd","minZoomFactor","rangeChangeAnimation","zoomToIndexes","indexToPosition","removeFromInvalids","dataSets","setDataSet","_updateDataItemIndexes","bindDataField","invalidateProcessedData","resetProcessedRange","_dataUsers","_inited","getExporting","_export","_exportData","handleDataUpdated","arg","setDisabled","setShowOnInit","_showOnInitDisposer2","hideInitially","setBaseId","_baseId","_systemCheckIfValidate","separators","delimiter","skipRows","skipEmpty","useColumnNames","getDelimiterFromData","sep","columns","lineColums","csv","col","CSVToArray","cols","dataPoint","objPattern","arrData","arrMatches","strMatchedDelimiter","strMatchedValue","NumberFormatter","_negativeBase","_numberFormat","_outputFormat","_smallNumberThreshold","_forceLTR","_language","Language","precision","intlLocales","Intl","NumberFormat","parseFormat","details","zero","mod","active","applyFormat","forceLTR","translateEmpty","part","partFormat","mods","modSpacing","thousands","passive","interval","suffix","a_1","applyPrefix","bytePrefixes","a_2","smallNumberThreshold","smallNumberPrefixes","bigNumberPrefixes","ol","toPrecision","exp","toExponential","ints","ip","intsr","unshift","decs","prefixes","force","newvalue","applied","number","invalidateSprite","_intlLocales","_bigNumberPrefixes","_smallNumberPrefixes","_bytePrefixes","outputFormat","repeat","string","amount","random","chars","choice","any","eachReverse","shiftLeft","pushAll","found","length_1","move","toIndex","removeIndex","insertIndex","ind","getSortedIndex","ordering","pivot","findIndex","keepIf","keep","_bindings","_isTemplate","_isPath","_ready","_isHidden","isShowing","_isActive","_mask","_exporting","_exportable","invalid","positionInvalid","applyOnClones","_measuredWidthSelf","_measuredHeightSelf","maxLeft","maxRight","maxTop","maxBottom","maxLeftSelf","maxRightSelf","maxTopSelf","maxBottomSelf","_isDragged","_isResized","_internalDisabled","_updateDisabled","rollOutDelay","dragWhileResize","preventShow","cloneTooltip","_prevMeasuredWidth","_prevMeasuredHeight","_isMeasured","autoSetClassName","setClassName","_parent","addToInvalidSprites","beforeDraw","removeFromInvalidSprites","invalidatePosition","addToInvalidPositions","removeSVGAttribute","sizeChanged","prevGroupTransform","transformString","nonScaling","globalScale","showTooltipOn","updateTooltipPosition","removeFromInvalidPositions","_maskRectangle","_clipElement","applyFilters","applyMask","dispatchReady","hideTooltip","showTooltip","isReady","setState","handleGlobalScale","nonScalingStroke","updateFilterScale","plugins","configField","virtualParent","exportable","_tooltip","_showSystemTooltip","strokeModifier","_svgContainer","_interactionDisposer","_urlDisposer","_numberFormatter","_focusFilter","_filters","_alwaysShowDisposers","oldParent","_tooltipContainer","_dataItem","handleAlwaysShowTooltip","handleAlwaysShow","oldDisposers","oldDisposer","_virtualParent","appendDefs","filterElement","fill_1","stroke_1","_clipPath","_htmlContainer","parent_3","_titleElement","_descriptionElement","onAll","setSVGAttributes","strokeDashoffset","strokeLinecap","strokeLinejoin","setSVGAttribute","classNamePrefix","userClassName","uidAttr","updateClipPath","mask","createClipPath","width_1","height_1","filterUnits","appendPrimitives","removeClipPath","SVGPathElement","svgBBox","prevElementTransform","elementX","elementY","elementWidth","elementHeigth","measuredWidth","measuredHeight","pixelPerfectPrecision","positionPrecision","svg","createSVGMatrix","createSVGPoint","pt1","matrixTransform","pt2","pt3","pt4","isHover","tooltipText","tooltipHTML","moveValue","sortChildren","insertAfter","getRelativeX","getRelativeY","getPixelX","pixel","relative","getPixelY","isDragged","hitTest","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","_states","SpriteState","processState","transitionEasing","transitTo","applyCurrentState","isDown","downPointers","isFocused","transition","propValues","allValues","propertyName","finalValue","option","newFilters_1","stateFilter","newFilter","currentFilter","isInTransition","isInteractive","handleOver","isRealHover","handleOut","handleDown","handleUp","handleFocus","handleBlur","setActive","current","_background","_dateFormatter","_durationFormatter","durationFormatter","DurationFormatter","exporting","tags","getTagValue","tagName","reg","params","reg2","matches2","method","getTagValueFromObject","populateStringFrom","formatApplied","numberValue","dateValue","durationValue","encodeURIComponent","formatParts","formatterType","dataContext_2","dataContext2_1","propValue","globalAdapter","applyAll","setColorProperty","length_2","bind","bindToProperty","modifier","description","readerDescription","readerHidden","checked","readerChecked","controls","readerControls","live","readerLive","readerOrientation","valueNow","readerValueNow","valueText","readerValueText","labelledByIds","describedByIds","labelledBy","readerLabelledBy","describedBy","readerDescribedBy","titleElement","titleId","descriptionElement","descriptionId","keyboardOptions","mouseOptions","_interaction","contextMenuDisabled","inert","_tabindex","setEventDisposer","hasFocused","focusedElement","hoverOnFocus","inertiaOptions","applyCursorStyle","handleDragStart","handleDragMove","handleDragStop","isTouchProtected","touch","originalPosition","dragStart","dragStop","cancelled","hoverOptions","_outTimeout","targetSprite","keepTargetHover","handleOutReal","hitOptions","originalAngle","originalScale","handleToggle","urlHandler","baseSprite","swipeOptions","handleResize","svgPoint1","svgPoint2","svgMidPoint","parentPoint1","startPoint1","parentPoint2","startPoint2","spritePoint1","spritePoint2","spriteMidPoint","parentPoint","cursorOptions","overStyle","defaultStyle","applyCursorOverStyle","downStyle","pointerEvents","Export","modalPrefix","minX","maxX","minY","maxY","parentWidth","pixelMarginLeft","pixelMarginRight","setMaxWidth","prevWidth","prevHeight","parentHeight","pixelMarginTop","pixelMarginBottom","setMaxHeight","percentWidth","_pixelWidth","percentHeight","_relativeHeight","_pixelHeight","minWidth","minHeight","_relativeWidth","marginBottom","setStroke","showReal","_hideAnimation","_showHideDisposer","hideReal","currentSprite","hiddenState_1","getVisibility","tooltipDataItem","_tooltipDataItem","_tooltipColorSource","tooltipPosition","lastPointer","colorSource_1","tooltipColorSource_1","tooltipColorSource","getStrokeFromObject","getFillFromObject","animationDuration","autoTextColor","globalPoint","pointTooltipTo","showInViewport","pointTo","suppressErrors","getCursorStyle","cursorDowntyle","_showOnInitDisposer","_plugins","_systemUpdate","skippedSprites","_systemValidatePositions","_systemValidateLayouts","Cache","_storage","ownerStorage","cacheItem","touched","expired","pendingFrame","nextQueue","readQueue","writeQueue","idleQueue","fps","raf","frameLoop","pendFrame","whenIdle","triggerIdle","System","_isPaused","dummyCounter","_frameRequested","updateStepDuration","time","reportTime","msg","invalidData","validateLayouts","validatePositions","hasSkipped","checkIfValidate2","all0_1","softInvalidate","is","layoutInvalid","VERSION","setTimezone","timezone","timeZone","getTimezoneMinutes","setHours","getMinutes","ResizeButton","spriteValue","_listeners","_killed","_iterating","_enabled","hasListeners","hasListenersByType","killed","enable","disable","_removeListener","_removeExistingListener","_eachListener","_shouldDispatch","$async","groupName","implementation","hasFeature","ghostPaper","ghostDiv","ghostSvgContainer","_baseUnit","_unitValues","_unitAliases","baseUnit","durationFormat","dirs","absolute","tstamp","toTimeStamp","unit","toTimeUnit","maxValue","maxUnit","getValueUnit","durationFormats","currentUnit","_durationFormat","_durationFormats","_dateFormat","_inputDateFormat","timezoneMinutes","_firstDayOfWeek","months","monthsShort","weekdays","weekdaysShort","capitalize","applyTimezone","DateTimeFormat","timezoneOffset","setMinutes","$time","fullYear","month","minutes","seconds","milliseconds","timestamp","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getHours","getSeconds","translateFunc","firstDayOfWeek","tz","tzh","tzm","toISOString","toUTCString","parsedIndexes","resValues","indexAdjust","year3","year2","year1","getStringList","monthLong","monthShort","yearDay","weekdayLong","weekdayShort","am","hour12Base1","hourBase0","hour12Base0","hourBase1","minute","second","millisecond","millisecondDigits","zone","iso","regex","parseInt","resolveMonth","resolveShortMonth","hour","isAm","resolveTimezoneOffset","dir","isDefault","translateAll","_timezoneOffset","_timezone","_stops","gradientElement","fx","fy","gradientStop","_cx","_cy","_fx","_fy","_boundingRect","_pointTo","fitPointerToBounds","_verticalOrientation","fixDoc","dropShadow","DropShadowFilter","drawBackground","pointerOrientation","animationEasing","handleVisibility","createBackground","textX","textY","boundingRect","textW","textH","ignoreBounds","documentWidth","offsetWidth","offsetHeight","textWidth","textHeight","bgWidth","bgX","bgHeight","bgY","boundX1","boundX2","boundY1","boundY2","delayedPointTo","_pointToDisposer","_animation","rectangle","oldRect","_boundingContainer","updateBounds","boundingContainer","success","isBlob","responseType","XMLHttpRequest","onload","blob_1","blob","reader","FileReader","onerror","readAsText","getResponseHeader","responseText","withCredentials","requestHeaders","setRequestHeader","send","InteractionObject","InteractionObjectEventDispatcher","eventDisposers","replacedStyles","_clickable","_contextMenuDisabled","_hoverable","_trackable","_swipeable","_resizable","_wheelable","_inert","_isHover","_isHoverByTouch","_isDown","_isFocused","_isTouchProtected","_inertiaOptions","inertias","_hitOptions","_hoverOptions","_swipeOptions","_keyboardOptions","_mouseOptions","_cursorOptions","overObjects","isHoverByTouch","_overPointers","downObjects","_downPointers","focusedObject","prepElement","processClickable","processContextMenu","processHoverable","processTrackable","processDraggable","processSwipeable","processResizable","processWheelable","_focusable","processFocusable","_originalPosition","_originalScale","_originalAngle","trackedObjects","transformedObjects","unlockWheel","_lightColor","_darkColor","saturate","darkColor","lightColor","cacheId","isColor","castColor","pdfmakePromise","fontFamilySrcRegexp","getCssRules","loadStylesheet","doc","e_2","eachStylesheet","topUrl","rule","CSSRule","IMPORT_RULE","eachStylesheets","iframe","src","doc_1","contentDocument","styleSheets","_formatOptions","_extraSprites","_validateSprites","dataFieldsOrder","_dynamicDataFields","_removedObjects","_hiddenObjects","_objectsAlreadyHidden","_filePrefix","useWebFonts","useRetina","useSimplifiedExport","timeoutDelay","_exportRunning","_prevHasData","quality","fontSize","imageFormat","addURL","addColumnNames","indent","useLocale","addBOM","printMethod","formatOptions","_menu","menu","branch","unsupported","typeSupported","export","_disablePointers","_releasePointers","obj","supported","getFormatOptions","_hasData","print","_getFunction","getImage","getSVG","getPDF","getExcel","getCSV","getJSON","getHTML","getPrint","handleCustom","showPreloader","hideTimeout","_timeoutTimeout","showTimeout","hideNonExportableSprites","func","restoreNonExportableSprites","hidePreloader","download","filePrefix","callbackTarget","getFontFamilies","DOMURL","getDOMURL","blobs","FONT_FACE_RULE","cssText_1","cssText","urls","after","fullUrl","webFontFilter","msSaveOrOpenBlob","url_1","createObjectURL","readAsDataURL","e_3","includeExtras","prehidden","awaitValidSprites","simplifiedImageExport","canvas","getCanvas","addExtras","newCanvas","disposeCanvas","uri","toDataURL","getContentType","e_4","stack","getImageAdvanced","advanced","extraSprites","middleLeft_1","middleTop_1","middleWidth_1","middleHeight_1","extraRight_1","extraBottom_1","extraSprite","extra","getCanvasAdvanced","extraCanvas","extraWidth","extraHeight","crop","extras","getDisposableCanvas","ctx_1","getContext","backgroundColor","findBackgroundColor","fillStyle","fillRect","right_1","bottom_1","drawImage","pixelRatio","getAdjustedScale","ctx","fonts","imagesToDataURI","prepForeignObjects","normalizeSVG","serializeElement","Blob","loadNewImage","img","revokeObjectURL","restoreRemovedObjects","canvg","useCORS","ignoreDimensions","scaleWidth","scaleHeight","fromString","render","widthScale","heightScale","adjWidth","adjHeight","querySelectorAll","svgToDataURI","imageToDataURI","objects","temporarilyRemoveObject","keepTainted","charset","placeholder","crossOrigin","currentHref","onabort","self","URL","webkitURL","encodeURI","dimParams","styleParams","fos","$browser","XMLSerializer","serializeToString","addFont","paths","normal","vfs","bytes","bold","italics","bolditalics","_d","pdfmake","defaultMargins","pageSize","pageOrientation","pageMargins","extraMargin","alignment","fit","getPageSizeFit","getPDFData","table","extraFonts","createPdf","getDataUrl","dataFieldsOrder_1","dataRow","dataValue","convertToSpecialFormat","getPDFDataRow","ai","bi","headerRows","items","convertEmptyValue","margins","newMargins","fitSize","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","xlsx","XLSX","wbOptions","bookType","bookSST","sheetName","normalizeExcelSheetName","wb","SheetNames","Sheets","dataFieldsOrder_2","getExcelRow","utils","aoa_to_sheet","workbook","write","dataFieldsOrder_3","getCSVRow","forceQuotes","search","tableClass","dataFieldsOrder_4","getHTMLRow","headerRow","rowClass","charCodeAt","useTag","cellClass","sourceData","newValue_1","json","keepOriginal","isDateField","isDurationField","isNumberField","numberFormat","useTimestamps","fileName","msBlobDownloadSupport","decodeURIComponent","msSaveBlob","decoded","atob","charCode","Uint8Array","blobDownloadSupport","link_1","blob_2","url_2","click","url_3","linkDownloadSupport","link","legacyIE","showModal","idoc","execCommand","downloadSupport","printViaCSS","printViaIframe","scroll","scrollTop","originalTitle","clipPath","MSStream","contentWindow","currentColor","validateSprites","_dataFields","generateDataFields","hasData","_dateFields","_numberFields","_durationFields","durationFields","_backgroundColor","hideModal","_canvg","vfs_fonts","global","pdfMake","_pdfmake","_xlsx","setFormatOptions","ExportMenu","polyline","lineTo","minStep","minPolylineStep","cubicCurveTo","closePath","arcTo","l","pax","pay","ax","ay","crSin","cornerRadiusY","innerCornerRadiusY","crAngle","crAngleY","crInnerAngle","crInnerAngleY","mPoint","arcToPoint","sweepFlag","largeArcFlag","xAxisRotation","Boolean","spiralPoints","radiusStep","stepSize","degrees","HALFPI","RADIANS","DEGREES","toNumberRange","fitToRange","rounded","minValue","getDistance","getCubicCurveDistance","getPointOnCubicCurve","getScale","initialDistance","getMidPoint","getAngle","diffX","diffY","normalizeAngle","getCommonRectangle","rectangles","mt1","mt2","mt3","getCubicControlPointA","adjustTension","getCubicControlPointB","getArcRect","MAX_VALUE","bpoints","getArcPoint","fromAngle","toAngle","pt","isInRectangle","IndexedIterable","_array","backwards","ListGrouper","_getKey","_insert","_remove","_keys","_groups","_sort","index_1","disposeOnRemove","disposer_1","checkBounds","initial","_values","_sortQuicksort","low","high","_sortPartition","j","swap","value_a","value_b","setAll","newArray","oldArray","make","out","feOffset","operator","feMerge","updateScale","_requestOptions","_incremental","_incrementalParams","_keepCount","_updateCurrentData","lastLoad","disableCache","timestampUrl","_url","addUrlParams","incrementalParams","_parser","_reloadFrequency","_reloadDisposer","_reloadTimeout","reloadFrequency","commercialLicense","licenses","deferredDelay","disableHoverOnTransform","ColorSet","stepOptions","passOptions","minColors","minLightness","maxLightness","shuffle","reuse","generate","getReusableColor","tmpstep","curColor","hsl","hueStep","hue","hues","applyStepOptions","pass","OrderedList","findClosestIndex","closestValue","closestDifference","closestIndex","difference","SortedList","_ordering","iconPosition","downState","_icon","currentIcon","_label","_locale","en","_defaultLocale","defaultLocale","locale","getLocale","prompt","rest","translation","getTranslations","translateAny","setTranslationAny","translations","closeDelay","closeOnClick","_menuTag","_itemTag","_labelTag","_iconTag","_ignoreNextClose","_items","getMenuItemClass","createMenuElement","drawBranch","menuElement","getEventKey","_currentSelection","preventDefault","moveSelection","level","ascendants","createItemElement","createIconElement","createSvgElement","createLabelElement","readerLabel","getReaderLabel","typeClickable","submenu_1","getSubMenu","selectBranch","setFocus","delayUnselectBranch","local_level","submenu","submenuElement","hideBranch","menuTag","itemTag","labelTag","iconTag","DOMParser","parseFromString","hasSubMenu","newPrefix","colorSet","exportCSS","setBlur","closeTimeout","ascendant","unselectBranch","simple","newSelection","getPrevSibling","getNextSibling","getParentItem","getSiblings","siblings","prev","showBranch","_domEvents","_addDOMEvent","callback_1","_dispatchKeyboardEvent","Interaction","_globalEventsAdded","_pointerEvents","_usePointerEventsOnly","_useTouchEventsOnly","_addHoverEvents","_passiveSupported","_delayedEvents","pointers","pointerdown","pointerup","pointermove","pointercancel","pointerover","pointerout","matchMedia","fullFF","wheel","onmousewheel","passiveSupported","addGlobalEvents","handleGlobalPointerDown","handleGlobalPointerMove","handleGlobalPointerUp","relatedTarget","buttons","which","handleDocumentLeave","handleGlobalTouchStart","handleGlobalTouchMove","handleGlobalTouchEnd","handleGlobalKeyDown","handleGlobalKeyUp","processTouchable","handlePointerOut","handlePointerOver","processMovable","isGlobalElement","handleMouseWheel","lockWheel","handleFocusBlur","handleTouchDown","handlePointerDown","isPaused","getHitOption","disposerKey","ko","getPointer","getPointerPoint","addBreadCrumb","handleGlobalMove","processDelayed","preventTouchAction","defaultPrevented","handleGlobalUp","changedTouches","resetPointer","deltaX","deltaY","deltaMode","getMouseOption","WheelEvent","wheelDeltaX","wheelDeltaY","handleWheel","maybePreventDefault","handleHit","lastHit","lastHitPointer","soft","hoversPaused","shouldCancelHovers","areTransformed","moved","cancelAllHovers","overPointers","handleTrack","hasDelayedOut","old","behavior","getHoverOption","keepUntil","timeout","delayedEvent","stopInertia","applyCursorDownStyle","processResizeStart","sorted","pos","compareDocumentPosition","Node","DOCUMENT_POSITION_CONTAINED_BY","DOCUMENT_POSITION_CONTAINS","restoreCursorDownStyle","swiped","handleSwipe","handleInertia","processResizeStop","cancelable","lastEvent","swiping","handleTransform","skipCheck","startPoint","handleMoveInertia","handleResizeInertia","inertia","Inertia","ref","getTrailPoint","getInertiaOption","factor","lastUpEvent","pointer2","pointer1","singlePoint","nextPointer","pointer1Moved","dragStartEvents","pointer2Moved","handleTransformResize","pointerMoved","dragTarget","getDragPointer","lastDownEvent","getPointerId","identifier","pointerId","clientX","clientY","isPointerTouch","Touch","PointerEvent","pointerType","MouseEvent","track","swipeCanceled","lockDocument","unlockDocument","restoreAllStyles","lockElement","unlockElement","wheelLockEvent","isLocalElement","elementFromPoint","local","props","setTemporaryStyle","restoreStyle","getSwipeOption","setGlobalStyle","restoreGlobalStyle","tolerance","minTime","getShift","pointerExists","exists","logTouch","TouchEvent","except","Registry","loadedThemes","_uidCount","_placeholders","deferred","noBase","addToInvalidLayouts","removeFromInvalidLayouts","_childrenByLayout","_childrenDisposers","setStateOnSprites","_absoluteWidth","_absoluteHeight","_shouldBeReady","_tapToActivate","tapTimeout","handleChildAdded","handleChildRemoved","processChild","handleChildTransform","sortAndAdd","addChildren","_children","fixed_1","relative_1","calculateRelativeSize","totalRelativeWidth","totalRelativeHeight","zindexed","sortArray","idx","group_1","isCorrect","disposeChildren","processBackground","_availableWidth","_availableHeight","allValid","childMeasuredWidth","childMeasuredHeight","maxCellWidth","minCellWidth","columnCount","contentLeft","contentRight","contentTop","contentBottom","nextX","nextY","column","columnWidth","rowHeight","childrenCopy","reverseOrder","fixedWidthGrid","maxColumns","getColumnWidth","childMarginLeft","childMarginRight","childMarginTop","childMarginBottom","childWidth","childHeight","childLeft","childRight","childTop","childBottom","nextColumnWidth","noneBBox","measuredContentWidth","measuredContentHeight","dx_1","dy_1","mwa","mha","ddx","ddy","oldBBox","contentWidth","contentHeight","prevLeft","prevTop","prevBotttom","prevRight","fitsToBounds","deviation","_preloader","stateName","allReady_1","setTapToActivate","handleTapToActivate","initTapTimeout","handleTapToActivateDeactivation","_tapToActivateTimeout","tapToActivate","newContainer","svgDiv","_nonScaling","filterPrimitive","or","GlobalAdapter","_callbackId","_callbacks","$order","$number","addAll","scope","callbacks","enableKey","disableKey","_hasListenersByType","_previousStart","_previousEnd","_prevStart","_prevEnd","_skipRangeEvents","updateWhileMoving","updateThumb","dispatchRangeChange","hideGrips","updateSize","updateExtremes","handleBgHit","makeBusy","thumbX","_thumbAnimation","thumbY","makeUnbusy","_thumb","_unbusyTimeout","stopAnimations","_zoomAnimation","makeUnbusyReal","_usingGrip","dispatchEvents","fromValue","directionFlipped","flipped","fromName","toName","innerWidth_1","innerHeight_1","getPosition","__end","skipRangeEvents","fixRange","updateByOrientation","_startGrip","processGrip","_endGrip","handleGripDrag","cursorDownStyle","handleThumbPosition","handleDoubleClick","newStart","newEnd","zoomAnimation","innerWidth_2","innerHeight_2","_hideGrips","_overDisposer","_outDisposer","Grip","autoHideDelay","_autoHideTimeout","ChartDataItem","Chart","_legend","titles","chartAndLegendContainer","chartContainer","processTitle","updateReaderTitleReferences","fixLayout","legend","feedLegend","titleIds_1","setLegend","_dragGrip","grip_1","widthXS","widthXXS","heightXXS","Bullet","tooltipX","copyToLegendMarker","isXS","LegendDataItem","childrenCreated","label_1","labels","itemContainer","_valueLabel","valueLabel_1","valueLabels","_itemContainer","component_1","itemContainer_1","itemContainers","toggleDataItem","focusedItem","visibilitychanged","_marker","marker_1","markers","LegendSettings","createMarker","Legend","marker","disabledColor","valueLabel","handleScrollbar","scrollable","updateMasks","_handleWheelReal","scrollbar","legendDataItem","tempMaxWidth","legendSettings","createLegendMarker","useDefaultMarker","updateLegendValue","itemValueText","maxLabelWidth","maxValueLabelWidth","maxMarkerWidth","maxAdjustedLabelWidth","trueMaxWidth","_mouseWheelDisposer","colorOrig","SeriesDataItem","_bullets","bullets","Series","_showBullets","_tmin","_tmax","_smin","_smax","dataItemsByAxis","skipFocusThreshold","_itemReaderTextChanged","calculatePercent","usePercentHack","simplifiedProcessing","axisRanges","processAxisRange","minBulletDistance","mainContainer","bulletsContainer","_chart","positionBullet","bullet","processBullet","itemsFocusable","removeBullet","eachBullet","processValues","getFirstValue","getAbsoluteFirstValue","working","count_1","sum_1","absoluteSum_1","low_1","high_1","open_1","close_1","previous_1","first_1","absoluteFirst_1","startIndex_1","dataItem_2","prevValue","dataItem_3","ksum","zeroItem_1","dataItem_4","axisRange","updateTooltipBounds","shouldCreateBullet","bulletTemplate","disabledField","currentDataItem","readerText_1","itemReaderText","xField","yField","isDynamic","itemWidth","itemHeight","createMask","rangesContainer","contents","isRange","getAxisField","axis","showTooltipAtPosition","xPosition","yPosition","readerText","_itemReaderText","_legendDataItem","notRange","itemLabelText","labelText","_heatRules","heatRule","dataField_1","dataField","seriesDataItem_1","property_1","foundSprite","anySprite","anyChild","foundSprite_1","ruleTarget","propertyField","logarithmic","LOG10E","heatRules","listitem","maybeIndex","SerialChartDataItem","SerialChart","_exitDP","colors","seriesContainer","patterns","_series","createSeries","handleSeriesAdded","handleSeriesRemoved","series","di","handleSeriesAdded2","handleLegendSeriesAdded","hiddenInLegend","legendData_1","WordCloudSeriesDataItem","labelsContainer","WordCloudSeries","_adjustedFont","accuracy","minFontSize","maxFontSize","excludeWords","angles","rotationThreshold","minWordLength","randomness","_canvas","_ctx","_maskSprite","_spiral","_currentIndex","_processTimeout","_points","maskSprite","pictureWidth","pictureHeight","processItem","fontFace","smallerSize","initialFontSize","maxL","maxR","maxT","maxB","intersects","initialX","initialY","rect1","getImageData","radAngle","rotate","textBaseline","fontWeight","fillText","createLabel","_labels","updateData","getWords","isCapitalized","maxCount","lword","WordCloudDataItem","WordCloud","gradientUnits","Keyboard","keyCode","eventKey","altKey","metaKey","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","shorthandRegex","hexToRgbWithAlpha","hexToRgb","rgbaToRgb","rgbToHex","pad2","rgbToRGBA","interpolate","rgb1","rgb2","getLightnessStep","rgbToHsl","hslToRgb","hue2rgb","isLight","handleMove","_rules","_appliedRules","_appliedTargets","_useDefault","_responsiveDisposers","_noStates","checkRules","_component","disposeResponsiveHandlers","enabled","applyRules","useDefault","isApplied","ruleId","allRules","rulesChanged","_applyRules","_timeout","newTarget","defaultStateApplied","isApplied_1","getState","getDefaultState","setTargetState","tmpId","XXS","XS","widthS","S","widthM","M","widthL","L","widthXL","XL","widthXXL","XXL","heightS","heightM","heightL","heightXL","heightXXL","isXXS","isS","isM","isL","isXL","isXXL","maybeXXS","maybeXS","maybeS","maybeM","maybeL","maybeXL","maybeXXL"],"sourceRoot":""}