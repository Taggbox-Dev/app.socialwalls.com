{"version":3,"file":"static/js/5999.d64f4807.chunk.js","mappings":"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","sources":["app/Display/analytics-new/content/components/leaderBoard.js"],"sourcesContent":["import React, { Suspense, useState } from \"react\";\nimport { Card, CardBody, Table } from \"react-bootstrap\";\nimport ConnectButton from \"../../layout/common/connectButton\";\nimport AuthorInfo from \"./authorInfo\";\nimport NoData from \"../../layout/common/noData\";\nimport { getwallRecordMostActiveUsersMore } from \"../../../../../actions/analyticsNew\";\nimport SectionHeading from \"../../layout/common/sectionHeading\";\nimport MultiPostMedia from \"../../layout/common/multiPostMedia\";\nimport PopupModal from \"../../layout/common/popup/popupModal\";\nimport { getwallRecordMostActiveUsersMoreDashboad } from \"../../../../../actions/display/dashboardActions\";\nimport { kFormatter } from \"../../../../../utils\";\nconst LeaderbordSkeleton = React.lazy(() =>\n  import(\"../../layout/skeleton/leaderbordSkeleton\")\n);\n\nconst AuthorpostsPopup = React.lazy(() =>\n  import(\"../../layout/popup/authorpostsPopup\")\n);\n\n const LeaderBoard = (props) => {\n\n  const { leaderBoard, loader, selectedWallFeed, isDashboard, isTrial } = props;\n  const [show, setShow] = useState(false)\n\n  const handlePopup = event => {  \n    setShow(event)\n  }\n\n\n  return (\n   <>\n    <Card className={`sw-card-custom gutter-b card-shadow mb-5 ${isDashboard ? 'h-100' : 'an-leaderBoard-height'} mb-0`}>\n      <SectionHeading title={'Leaderboard'} isTrial={isTrial} total={leaderBoard && Object.keys(leaderBoard).length ? leaderBoard.total : 0} selectedWallFeed={selectedWallFeed} handlePopup={handlePopup} />\n      <CardBody className=\"py-5 px-0\">\n        <Table responsive>\n          <thead>\n            <tr>\n              <th style={{ width: \"10%\" }}>\n                S No.\n              </th>\n              <th style={{ width: \"25%\" }}>\n                Name\n              </th>\n              <th style={{ width: \"15%\" }}>\n                Posts\n              </th>\n              <th style={{ width: \"20%\" }}>\n                Recent Posts\n              </th>\n              <th style={{ width: \"15%\" }}></th>\n            </tr>\n          </thead>\n          <tbody>\n\n\n            { loader ? <Suspense fallback={<></>}> <LeaderbordSkeleton isDashboard={isDashboard}/> </Suspense> : leaderBoard && Object.keys(leaderBoard).length\n              ? leaderBoard.data.map((data,index) => {\n                  return (\n                    <tr className=\"border-top\">\n                      <td>\n                        <strong>{index+1}.</strong>\n                      </td>\n                      <td> \n                        <AuthorInfo \n                            picture={data.image} \n                            authorUsername={data.author.username} \n                            authorName={data.author.name} \n                            isIcon={data.network.icon} \n                            link={data.links}  \n                            networkId={data.network.id} \n                          />\n                      </td>\n                      <td>\n                        <strong>{kFormatter(Math.round(data.postCount))}</strong>\n                      </td>\n                      <td>\n                        <MultiPostMedia isDashboard={isDashboard} postsData={data.postsData} /> \n                      </td>\n                      <td>\n                        <ConnectButton link={data.links} network={data.network.id}/>\n                      </td>\n                    </tr>\n                  );\n                })\n              : \n              <>\n              <NoData status={1} col={5}/>\n              </>\n             }\n          </tbody>\n        </Table>\n      </CardBody>\n     </Card>\n\n   {leaderBoard && Object.keys(leaderBoard).length && leaderBoard.total>5 ? \n    <PopupModal size={'xl'} showHide={show} handlePopup={handlePopup} title={'Leader Board'}>\n      <Suspense fallback={<></>}>\n         <AuthorpostsPopup total={leaderBoard.total}  hideFollwers={1} moreData={isDashboard ? getwallRecordMostActiveUsersMoreDashboad : getwallRecordMostActiveUsersMore} {...props} />\n       </Suspense>  \n    </PopupModal> : null }\n    </>    \n  );\n};\n\nexport default React.memo(LeaderBoard);"],"names":["LeaderbordSkeleton","React","AuthorpostsPopup","LeaderBoard","props","leaderBoard","loader","selectedWallFeed","isDashboard","isTrial","show","setShow","useState","handlePopup","event","_jsxs","_Fragment","children","Card","className","_jsx","SectionHeading","title","total","Object","keys","length","CardBody","Table","responsive","style","width","Suspense","fallback","data","map","index","AuthorInfo","picture","image","authorUsername","author","username","authorName","name","isIcon","network","icon","link","links","networkId","id","kFormatter","Math","round","postCount","MultiPostMedia","postsData","ConnectButton","NoData","status","col","PopupModal","size","showHide","hideFollwers","moreData","getwallRecordMostActiveUsersMoreDashboad","getwallRecordMostActiveUsersMore"],"sourceRoot":""}