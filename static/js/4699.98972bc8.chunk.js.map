{"version":3,"file":"static/js/4699.98972bc8.chunk.js","mappings":"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","sources":["app/Layouts/Main/Analytics/layout/common/filterModeration.js","app/Layouts/Main/Analytics/content/components/assetsLanguage.js","app/Layouts/Main/Analytics/layout/common/sectionHeading.js","app/Layouts/Main/Analytics/layout/common/noData.js","app/Layouts/Main/Analytics/layout/skeleton/assetsbySkeleton.js"],"sourcesContent":["import moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst FilterModeration = (props) => {\n\n  const { children, dateFilter, selectedWallFeed, link, isClass } = props  \n\n  return (\n     <Link className={`${isClass ? isClass : `mb-4 last-child-mb-0 d-block`}`} to={selectedWallFeed?.length ? `/moderation/index/${localStorage.getItem('wallId')}?${link}${dateFilter ? `/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}` : ''}${dateFilter ? `/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}` : ``}` : `#`}>\n        {children}\n    </Link>\n  );\n}\n\nexport default FilterModeration\n","import React, { useEffect, useState } from \"react\";\nimport { Card, CardBody } from \"react-bootstrap\";\nimport { getFlagCode, hideLangFilter, kFormatter } from \"../../../../../../utils\";\nimport AssetsbySkeleton from \"../../layout/skeleton/assetsbySkeleton\";\nimport NoData from \"../../layout/common/noData\";\nimport FilterModeration from \"../../layout/common/filterModeration\";\nimport SectionHeading from \"../../layout/common/sectionHeading\";\n\nconst AssetsLanguage = (props) => {\n\n  const { getFlags, loader, selectedWallFeed, postbyLanguage } = props;\n  \n  const [getLanguage, setgetLanguage]= useState()\n\n    const languageTags=()=>{\n\n      const feedList = selectedWallFeed && Object.keys(selectedWallFeed).length > 0 ? selectedWallFeed.map(item => item.id) : [];\n          let langs = postbyLanguage;\n          let result = [];\n\n          if(langs && langs.length > 0){\n              langs = langs.filter((lang) => {\n                if(getFlagCode(lang.language,getFlags)){\n                  if(feedList.length){\n                     if(hideLangFilter(feedList, lang.feedId,1)) return lang;\n                       }else{\n                    return lang;\n                   }\n                }  \n              }).sort((a, b) => b.count - a.count);;\n              langs.splice(6).sort((a, b) => b.count - a.count).forEach(lang => {\n                  if(lang.language != \"\"){\n                      result.push(lang.language);\n                  }\n              });\n \n              setgetLanguage(langs)\n          }\n      }\n \n\n  useEffect(() => {\n    selectedWallFeed && languageTags()\n  }, []);\n\n  \n  return (\n    <Card className=\"sw-card-custom gutter-b card-shadow mb-4\">\n      <SectionHeading  section={2}  title={'Top Languages'} />\n      <CardBody className=\"p-5\">  \n        <div className=\"mx-height-345\">\n        { loader ? <AssetsbySkeleton/> : getLanguage && Object.keys(getLanguage).length\n          ? getLanguage.map((data,index) => {\n              return (\n                <FilterModeration selectedWallFeed={selectedWallFeed} link={`language=${data.language}`}>\n                <div className=\"px-3 py-2 border rounded\">\n                  <div className=\"d-flex align-items-center justify-content-between\">\n                    <div className=\"d-flex align-items-center me-10\">\n                      <div className=\"rounded me-3 d-flex\">\n                        <div className={`iti-flag ${getFlagCode(data.language,getFlags)}`}></div> \n                      </div>\n                      <div className=\"\">\n                        <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name text-capitalize\">\n                           { data.language }\n                        </p>\n                      </div>                 \n                    </div>\n                    <p className=\"text-dark count-tag border font-weight-boldest m-0\">\n                     { kFormatter(Math.round(data.count)) }\n                    </p>\n                  </div>\n                  </div>\n                  </FilterModeration>  \n                );\n              })\n            : <NoData/>}\n        </div>\n         \n        </CardBody>\n      </Card>\n  );\n};\n\nexport default React.memo(AssetsLanguage);\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\nimport { baseUrl } from \"../../../../../../utils\";\n\nconst SectionHeading = (props) => {\n\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin, isDashboard,isTrial } = props\n\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\n\n  return (\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-3' : section==3 ? 'p-0 pb-3' : 'px-3 pt-3 border-0 pb-0'}`}>\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\n        <h6 className={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : 'm-0'} `}>\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\n         { !isTrial && ((total > 5) || moreData) ? ( <Button variant=\"link\" className=\"p-0\" onClick={() => handlePopup(true)} > See More </Button> ) : null\n        }\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nexport default SectionHeading;\n","import React from \"react\";\nimport { baseUrl } from \"../../../../../../utils\";\n\nconst GetData = () => {\n  return (\n    <div className=\"placeholder-image py-10 d-flex flex-column justify-content-center\">\n      <div className=\"mb-3 text-center\">\n        <img\n          className=\"img-fluid graph-bg\"\n          src={baseUrl(`dashboard/analytic/image-placeholder.svg`)}\n          width={\"80px\"}\n          height={\"80px\"}\n        />\n      </div>\n      <div className=\"\">\n        <h5 className=\"text-gray-dark text-center\">No Data Available</h5>\n      </div>\n    </div>\n  );\n};\n\nconst NoData = (props) => {\n\n  return props.status ? (\n    <tr>\n      <td colSpan={props.col}>\n        <GetData />\n      </td>\n    </tr>\n  ) : (\n    <GetData />\n  );\n};\n\nexport default React.memo(NoData);\n","    import React from \"react\";\n\n    const AssetsbySkeleton = () => {\n    return (\n        [1,2,3,4,5].map(()=>{\n            return(\n        <div className=\"d-flex p-6 border rounded mb-4\">\n        <div className=\"d-flex align-items-center m_grid_author w-100\">\n          <div className=\"sk_line sk_line_height_16 sk_line_10 m-0 me-3 rounded\"></div>\n          <div className=\"w-50\">\n              <h3 className=\"sk_line sk_line_height_16 sk_line_90 m-0\"></h3>\n          </div>\n        </div>\n        <div className=\"sk_line sk_line_10 sk_line_height_16 m-0\"></div>\n    </div>)})\n    );\n    };\n\n    export default React.memo(AssetsbySkeleton);\n"],"names":["props","children","dateFilter","selectedWallFeed","link","isClass","_jsx","Link","className","to","length","localStorage","getItem","moment","startDate","format","endDate","AssetsLanguage","getFlags","loader","postbyLanguage","getLanguage","setgetLanguage","useState","useEffect","languageTags","feedList","Object","keys","map","item","id","langs","result","filter","lang","getFlagCode","language","hideLangFilter","feedId","sort","a","b","count","splice","forEach","push","_jsxs","Card","SectionHeading","section","title","CardBody","AssetsbySkeleton","data","index","FilterModeration","kFormatter","Math","round","NoData","React","cardTitleCss","icon","iconFull","moreData","total","handlePopup","headingMargin","isDashboard","isTrial","CardHeader","CardTitle","src","baseUrl","height","width","Button","variant","onClick","GetData","status","colSpan","col"],"sourceRoot":""}