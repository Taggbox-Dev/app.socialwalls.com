{"version":3,"file":"static/js/6622.098447a3.chunk.js","mappings":"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","sources":["app/Layouts/Main/Analytics/layout/skeleton/imageSkeleton.js","app/Layouts/Main/Analytics/layout/common/graph/assetsTypeCountChart.js","app/Layouts/Main/Analytics/content/components/posttypeCount.js","app/Layouts/Main/Analytics/layout/common/filterModeration.js","app/Layouts/Main/Analytics/layout/common/sectionHeading.js"],"sourcesContent":["import React from \"react\";\nimport { baseUrl } from \"../../../../../../utils\";\n\nconst ImageSkeleton = (props) => {\n  return (\n    <div className=\"py-1 text-center\" style={{ backgroundImage: `url(${baseUrl(`dashboard/analytic/content-analytis-5.svg`)})` }}></div>\n  );\n};\n\nexport default React.memo(ImageSkeleton)","import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { kFormatter, PREPEND_ZERO } from \"../../../../../../../utils\";\nimport FilterModeration from \"../filterModeration\";\nclass AssetsTypeCountChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: [1, 1, 1],\n      options: {\n        dataLabels: {\n          enabled: false,\n        },\n        legend: {\n          show: false,\n        },\n        stroke: {\n          curve: \"smooth\",\n        },\n        colors: [\"#F8B861\", \"#546FED\", \"#EF45B1\"],\n        plotOptions: {\n          pie: {\n            donut: {\n              stroke: 0,\n              legend: {\n                show: false,\n              },\n              labels: {\n                show: true,\n                total: {\n                  label: \"Loading...\",\n                  showAlways: true,\n                  show: true,\n                },\n                value: {\n                  show: false,\n                },\n              },\n            },\n          },\n        },\n        chart: {\n          type: \"donut\",\n          animations: {\n            enabled: true,\n            easing: \"easeinout\",\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 2000,\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350,\n            },\n          },\n        },\n        labels: [  \"Video\",\"Image\",\"Text\"],\n      },\n      imagePost: 0,\n      videoPost: 0,\n      textPost: 0,\n      selectedCollection: [],\n    };\n  }\n\n  componentDidMount() {\n    this.onLoadAnalyticGraph();\n  }\n\n  onLoadAnalyticGraph = (data) => {\n    const { postTypeCount } = this.props;\n\n    const postCount = [];\n    const responseData = {\n      total_assets: {\n        video: postTypeCount[0].data[0],\n        image: postTypeCount[0].data[1],\n        text: postTypeCount[0].data[2],\n      },\n    };\n\n\n    Object.keys(responseData.total_assets).map((item) => {\n      postCount.push(responseData.total_assets[item]);\n      this.setState({\n        videoPost: responseData.total_assets[\"video\"],\n        imagePost: responseData.total_assets[\"image\"],\n        textPost: responseData.total_assets[\"text\"],\n      });\n    });\n\n    this.setState({\n      series: postCount,\n      options: {\n        plotOptions: {\n          pie: {\n            donut: {\n              labels: {\n                show: true,\n                total: {\n                  label: \"Total Post\",\n                  showAlways: true,\n                  show: true,\n                },\n                value: {\n                  show: true,\n                },\n              },\n            },\n          },\n        },\n      },\n    });\n  };\n\n  render() {\n    const { options, series, imagePost, textPost, videoPost } = this.state;\n    const { dateFilter, selectedWallFeed } = this.props\n \n    return (\n      <>\n        <ReactApexChart\n          options={options}\n          series={series}\n          type=\"donut\"\n          className=\"assetsType w-100 m-auto\"\n          style={{ maxWidth: 340 }}\n        />\n        <div\n          className=\"count-box-main d-flex justify-content-center w-100 m-auto mt-4\">\n         { imagePost ? \n        <FilterModeration isClass={'count-box-card'} dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`media=With Image`}>\n          <div>\n            <div\n              className=\"count-box blue text-center\"\n              style={{ borderTop: \"6px solid #546FED\" }}\n            >\n              <p className=\"fs-6 fw-bold mb-2 text-dark\">Images</p>\n              <span className=\"text-gray-800 fw-bolder text-dark fs-4\">\n                { kFormatter(PREPEND_ZERO(imagePost))}\n              </span>\n            </div>\n          </div></FilterModeration> : null }\n\n          { videoPost ?   \n\n        <FilterModeration isClass={'count-box-card'} dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`media=With Video`}> \n          <div>\n            <div\n              className=\"count-box yellow text-center\"\n              style={{ borderTop: \"6px solid #F8B861\" }}\n            >\n              <p className=\"fs-6 fw-bold mb-2 text-dark\">Videos</p>\n              <span className=\"text-gray-800 text-dark fw-bolder fs-4\">\n                { kFormatter(PREPEND_ZERO(videoPost))}\n              </span>\n            </div>\n          </div></FilterModeration> : null }\n\n        { textPost ?   \n         <FilterModeration isClass={'count-box-card'} dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`media=Text Only`}> \n          <div>\n            <div\n              className=\"count-box pink text-center text-dark\"\n              style={{ borderTop: \"6px solid #EF45B1\" }}\n            >\n              <p className=\"fs-6 fw-bold mb-2\">Texts</p>\n              <span className=\"text-gray-800 fw-bolder fs-4 text-dark\">\n                { kFormatter(PREPEND_ZERO(textPost))}\n              </span>\n            </div>\n          </div> </FilterModeration> : null }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AssetsTypeCountChart;\n","  import { Card, CardBody } from \"react-bootstrap\";\n  import AssetsTypeCountChart from \"../../layout/common/graph/assetsTypeCountChart\";\n  import React from \"react\";\n  import ImageSkeleton from \"../../layout/skeleton/imageSkeleton\";\n  import SectionHeading from \"../../layout/common/sectionHeading\";\n\n  const PosttypeCount = (props) => {\n    const { postTypeCount, loader } = props;\n\n    return (\n      <Card className=\"sw-card-custom gutter-b card-shadow mb-4\">\n        <SectionHeading  section={2}  title={'Post Type Count'} />\n        <CardBody className=\"p-5\">\n          {loader ? (\n            <ImageSkeleton img={\"post-count\"} />\n          ) : postTypeCount && Object.keys(postTypeCount).length ? (\n            <AssetsTypeCountChart key={loader} {...props} />\n          ) : null}\n        </CardBody>\n      </Card>\n    );\n  };\n\n  export default React.memo(PosttypeCount);\n","import moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst FilterModeration = (props) => {\n\n  const { children, dateFilter, selectedWallFeed, link, isClass } = props  \n\n  return (\n     <Link className={`${isClass ? isClass : `mb-4 last-child-mb-0 d-block`}`} to={selectedWallFeed?.length ? `/moderation/index/${localStorage.getItem('wallId')}?${link}${dateFilter ? `/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}` : ''}${dateFilter ? `/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}` : ``}` : `#`}>\n        {children}\n    </Link>\n  );\n}\n\nexport default FilterModeration\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\nimport { baseUrl } from \"../../../../../../utils\";\n\nconst SectionHeading = (props) => {\n\n  const { title, section, cardTitleCss, icon, iconFull, selectedWallFeed, moreData, total, handlePopup, headingMargin, isDashboard,isTrial } = props\n\n  // && selectedWallFeed && Object.keys(selectedWallFeed).length\n\n  return (\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-3' : section==3 ? 'p-0 pb-3' : 'px-3 pt-3 border-0 pb-0'}`}>\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\n        <h6 className={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : 'm-0'} `}>\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\n         { !isTrial && ((total > 5) || moreData) ? ( <Button variant=\"link\" className=\"p-0\" onClick={() => handlePopup(true)} > See More </Button> ) : null\n        }\n      </CardTitle>\n    </CardHeader>\n  );\n};\n\nexport default SectionHeading;\n"],"names":["ImageSkeleton","props","_jsx","className","style","backgroundImage","baseUrl","React","AssetsTypeCountChart","Component","constructor","super","onLoadAnalyticGraph","data","postTypeCount","this","postCount","responseData","total_assets","video","image","text","Object","keys","map","item","push","setState","videoPost","imagePost","textPost","series","options","plotOptions","pie","donut","labels","show","total","label","showAlways","value","state","dataLabels","enabled","legend","stroke","curve","colors","chart","type","animations","easing","speed","animateGradually","delay","dynamicAnimation","selectedCollection","componentDidMount","render","dateFilter","selectedWallFeed","_jsxs","_Fragment","children","ReactApexChart","maxWidth","FilterModeration","isClass","link","borderTop","kFormatter","PREPEND_ZERO","PosttypeCount","loader","Card","SectionHeading","section","title","CardBody","img","length","Link","to","localStorage","getItem","moment","startDate","format","endDate","cardTitleCss","icon","iconFull","moreData","handlePopup","headingMargin","isDashboard","isTrial","CardHeader","CardTitle","src","height","width","Button","variant","onClick"],"sourceRoot":""}