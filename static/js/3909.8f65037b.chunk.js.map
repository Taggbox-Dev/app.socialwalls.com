{"version":3,"file":"static/js/3909.8f65037b.chunk.js","mappings":"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","sources":["app/Layouts/Main/Analytics/layout/common/percentDifference.js","app/Layouts/Main/Dashboard/components/common/slideSection.js","app/Layouts/Main/Analytics/layout/common/networkIcon.js","app/Layouts/Main/Dashboard/components/skeleton/wallsSkeleton.js","app/Layouts/Main/Dashboard/components/createdWalls.js"],"sourcesContent":["import React from \"react\";\nimport { kFormatter } from \"../../../../../../utils\";\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"../../../../../CommonComponents/AssetsHelper\";\nconst PercentDifference = (props) => {\n\n    const diff = Math.abs(props.difference)\n\n\n    return (<OverlayTrigger placement=\"top\" overlay={<Tooltip>% change compared to the last 30 days</Tooltip>}>\n        <span className={`score-count text-${props.flag == 1 ? \"success\" : \"danger\"} d-flex align-items-center ms-2`} >\n            {props.flag == 1 ? (\n                <span><FontAwesomeIcon type={'solid'} icon={'caret-up'} iconClass={'fs-6 text-success me-1'} /></span>\n            ) : (\n                <span><FontAwesomeIcon type={'solid'} icon={'caret-down'} iconClass={'fs-6 text-danger me-1'} /></span>\n            )}\n\n            {`${kFormatter(Math.round(diff))}%`}\n        </span></OverlayTrigger>\n    )\n};\n\nexport default React.memo(PercentDifference);\n","import React, { useEffect, useState } from \"react\";\nimport { Splide, SplideTrack } from \"@splidejs/react-splide\";\nimport \"../../../Analytics/assets/css/slide.scss\";\nimport \"@splidejs/react-splide/css\";\nimport { FontAwesomeIcon } from \"../../../../../CommonComponents/AssetsHelper\";\nimport { Button } from \"react-bootstrap\";\n\nconst CreatedWalls = ({ setactiveWall, section, totalRecord, splideRef, children, }) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [perPage, setPerPage] = useState(); // Default perPage count\n\n\n  useEffect(() => {\n\n    if (section && setactiveWall) {\n      const splideInstance = splideRef.current.splide;\n\n      //   const handleResize = () => setPerPage(splideInstance.options.perPage);\n\n      // Attach the resize event listener\n      // splideInstance.on('resize', handleResize);\n      // Set the initial perPage value\n      setPerPage(splideInstance.options.perPage);\n\n      splideInstance.on(\"click\", (e) => {\n        if(section==1) splideRef.current.splide.go(e.index); // Move to the clicked slide\n      });\n\n      splideRef.current?.splide.on(\"move\", (newIndex) => {\n\n          if(section==1){\n            manageSlider(newIndex);\n            setactiveWall(newIndex);\n        }\n          setCurrentSlide(newIndex);\n        });\n\n      if (section==1 && (!splideRef.current || totalRecord <= 1)) {\n        manageSlider();\n        setactiveWall(1);\n      }\n    } else {\n      splideRef.current?.splide.on(\"move\", (newIndex) => {\n        setactiveWall(newIndex);\n      });\n    }\n  }, []);\n\n  const manageSlider = (index = null) => {\n    const totalList = totalRecord * 2;\n    const newIndexCondition = totalRecord - 1;\n\n    const toggleDisplay = (displayStyle) => {\n      const slideWalls = document.getElementsByClassName(`splide__slide_walls`);\n\n      for (let i = totalRecord + 1; i <= totalList; i++) {\n        if (slideWalls && slideWalls.length) {\n          let updateKey = totalRecord - 1;\n          let elementNew =\n            slideWalls[i + updateKey] &&\n            document.getElementById(slideWalls[i + updateKey].id);\n          if (elementNew) elementNew.style.display = displayStyle;\n        }\n      }\n    };\n\n    if (index === newIndexCondition || index == null) {\n      if (index == null) {\n        const Ispreview = document.getElementsByClassName(`is-prev`);\n        const splideListUl = document.getElementsByClassName(`splide__list_ul`);\n        const Isnext = document.getElementsByClassName(`is-next`);\n\n        if (Ispreview.length) Ispreview[0].style.display = \"none\";\n        if (Isnext.length) Isnext[0].style.display = \"none\";\n        if (splideListUl)\n          splideListUl[0].querySelector(\"ul\").style.transform = \"translateX(0)\";\n      } else {\n        toggleDisplay(\"none\");\n      }\n    } else {\n      toggleDisplay(\"block\");\n    }\n  };\n\n  const createBreakpointSettings = (perPage, isWall, clones, postCount) => ({ perPage, clones: clones, autoplay: isWall && postCount > perPage, drag: totalPost > 1 && postCount > perPage, loop: postCount > perPage, arrows: postCount > perPage, });\n\n  const totalPost = totalRecord || 0;\n  const canSlide = totalPost > 3;\n  const perPagePost = canSlide ? 3 : totalPost;\n\n  const settings = {\n    start: 0,\n    type: section == 1 ? \"loop\" : \"slide\",\n    //rewind: true,\n    speed: 1000,\n    perMove: 1,\n    loop: false,\n    lazyLoad: 'nearby',\n    interval: 5000,\n    drag: totalPost > 1 ? true : false,\n    //clones: 1,\n    perPage: section == 1 ? 0 : totalRecord > 3 ? 3 : totalRecord,\n    autoWidth: section == 1 ? true : false,\n    gap: section == 1 ? 15 : -15,\n    autoplay: section == 1 ? false : true,\n    pagination: false,\n    arrows: section === 1 ? totalRecord !== 1 : true,\n    fixedHeight: true,\n    breakpoints: {\n      0: createBreakpointSettings(1, 1, perPagePost, totalPost),\n      579: createBreakpointSettings(1, 1, perPagePost, totalPost),\n      1300: createBreakpointSettings(section == 1 ? 1 : 2, 1, 0, totalPost),\n      2200: createBreakpointSettings(section == 1 ? 1 : 3, section == 1 ? 0 : 1, 0, totalPost),\n    },\n  };\n\n  return (\n    <Splide className={section ? \"splide__list_ul\" : \"\"} ref={splideRef} hasTrack={false} options={settings} >\n      <SplideTrack>{children}</SplideTrack>\n\n      <div className=\"splide__arrows splide__arrows--ltr tb_g_h_arrow_wrapper_\" role=\"navigation\" aria-label=\"Slider Navigation Wrapper\" >\n        <div role=\"navigation\" className=\"tb_g_h_arrow splide__arrow splide__arrow--prev tb_g_h_arrow_left__ tb__icon tb-arrow-left-alt\" aria-labelledby=\"Navigation Previous Slide\" >\n          {\" \"}\n          <Button variant=\"\" disabled={currentSlide === 0}>\n            <FontAwesomeIcon type={'solid'} icon={'chevron-left'}/>\n          </Button>\n        </div>\n        <div role=\"navigation\" className=\"tb_g_h_arrow splide__arrow splide__arrow--next tb_g_h_arrow_right__ tb__icon tb-arrow-right-alt\" aria-labelledby=\"Navigation Next Slide\" >\n          {\" \"}\n          <Button variant=\"\" disabled={currentSlide === totalRecord - (section == 1 ? 1 : perPage)}> \n            <FontAwesomeIcon type={'solid'} icon={'chevron-right'}/>\n            {\" \"}\n          </Button>\n        </div>\n      </div>\n    </Splide>\n  );\n};\n\nexport default CreatedWalls;","import React from \"react\";\nimport { FontAwesomeIcon } from \"../../../../../CommonComponents/AssetsHelper\";\n\nconst NetworkIcon = (props) => { \n  return (\n    <> \n    <FontAwesomeIcon icon={props?.icon.includes(\"twitter\") ? 'x-twitter' : props?.icon?.replace('fa-','')} iconClass={`${props?.icon == 'fa-rss' ? \"\" : 'fa-brands fab'} ${props.isDashboard ? props.isDashboard : ''}`} /> \n    </>\n  );\n};\n\nexport default React.memo(NetworkIcon);\n","import React from \"react\";\n\nconst Network = () => {\n  return (\n    <div className=\"d-flex align-items-center flex-grow-1 mb-3\">\n      <div className=\"symbol symbol-45 symbol-light me-2 social_user_img\">\n        <span className=\"sk_img\"></span>\n      </div>\n      <div className=\"d-flex text-left flex-column conn_user_info w-25\">\n        <div className=\"sk_line sk_line_height_12\"></div>\n      </div>\n    </div>\n  );\n};\n\nconst Action = () => {\n  return <div className=\"sk_line sk_line_height_28 me-2\"></div>;\n};\n\nconst WallsSkeleton = () => {\n  return (\n    <div className=\"d-flex align-items-center flex-wrap justify-content-between\">\n      {[1, 2].map(() => {\n        return (\n          <div className=\"col-6 px-2\">\n            <div className=\"ex-graphmin-height w-100\">\n              <div className=\"ex-recentwbox d-block p-4\">\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <div className=\"ex-recentwright w-100 mb-3\">\n                      <div\n                        className=\"sk_rect btn-min-w sk_img_thumb\"\n                        style={{ paddingBottom: \"55%\" }}\n                      ></div>\n                    </div>\n                  </div>\n                  <div className=\"col-6\">\n                    <div className=\"w-100\">\n                      <div className=\"ex-recentwleft w-50\">\n                        <div className=\"sk_line sk_line_height_12\"></div>\n                        <div className=\"sk_line sk_line_80 sk_line_height_8\"></div>\n                      </div>\n                      <div className=\"mt-5\">\n                        <Network />\n                        <Network />\n                        <Network />\n                      </div>\n                      <div className=\"ex-recentwright d-flex w-100\">\n                        <Action />\n                        <Action />\n                        <Action />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default React.memo(WallsSkeleton);\n","import React, { useRef, useState } from \"react\";\nimport { Button, Card, CardBody, Dropdown } from \"react-bootstrap\";\nimport { SplideSlide } from \"@splidejs/react-splide\";\nimport SlideSection from \"./common/slideSection\";\nimport NetworkIcon from \"../../Analytics/layout/common/networkIcon\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { getWidgetWallData } from \"../../../../../actions/wallDataAction\";\nimport { shallowEqual, useDispatch } from \"react-redux\";\nimport { toggleAddFeedsSection_D } from \"../../../../../actions/showDisplayModalAction\";\nimport { openCreateNewWallPopup } from \"../../../../../actions/wallsAction\";\nimport DropdownComponet from \"../../Walls/Component/modal/Dropdown\";\nimport WallsSkeleton from \"./skeleton/wallsSkeleton\";\nimport HoverVideoPlayer from \"react-hover-video-player\";\nimport { baseUrl, kFormatter } from \"../../../../../utils\";\nimport CreateWall from \"./common/createWall\";\nimport { useSelector } from \"react-redux\";\nimport PercentDifference from \"../../Analytics/layout/common/percentDifference\";\nimport { getWallFeeds } from \"../../../../../actions/analyticsAction\";\nimport { FontAwesomeIcon } from \"../../../../CommonComponents/AssetsHelper\";\n\nconst CreatedWalls = (props) => {\n  const { allWalllist, loader } = props;\n  const { userData } = useSelector(\n    (state) => ({\n      wallReducer: state.wallReducer,\n      userData: state.authenticated.userData,\n    }),\n    shallowEqual\n  );\n\n  const splideRef = useRef(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [upgrade, setUpgrade] = React.useState(false);\n  const [modalData, setModalData] = React.useState({\n    profanity: 0,\n    modalShow: false,\n    name: \"\",\n    url: \"\",\n    wall_id: null,\n    autoUpdate: 1,\n    rename_status: 0,\n    callbackWall: 0,\n  });\n\n  const [activeWall, setactiveWall] = useState(0);\n  const { user, UserPlan } = props.userData;\n\n  const callbackWall = (status) => { };\n\n  const handleCategoryClick = (startIndex) => {\n    if (splideRef.current) splideRef.current.splide.go(startIndex); // Move to the specific slide\n  };\n\n  const displayWindowOpen = (wallId) => {\n    dispatch(getWidgetWallData(user.ownerId, wallId));\n    dispatch(getWallFeeds(user.ownerId));\n    navigate(`/wall/preview/${wallId}`);\n  };\n\n\n  const nevigationRedirect = (activeIndex, wallId = 0, nevigation = 0, feedId = 0) => {\n    if (allWalllist.length != 1 && !activeIndex) return;\n    switch (nevigation) {\n      case 1:\n        navigate(`/moderation/index/${wallId}`);\n        localStorage.setItem(\"wallId\", wallId);\n        dispatch(getWidgetWallData(user?.ownerId, wallId));\n        break;\n\n      case 2:\n        const analyticPath = ![58].includes(UserPlan?.planId) ? \"/analytic/\" : \"analytic/\";\n        navigate(`${analyticPath}${wallId}`);\n        dispatch(getWidgetWallData(user?.ownerId, wallId));\n        break;\n\n      case 3:\n        displayWindowOpen(wallId);\n        break;\n\n      case 4:\n        if (feedId?.length < 1) dispatch(toggleAddFeedsSection_D(true, `/wall/index/${wallId}`, navigate));\n        else dispatch(toggleAddFeedsSection_D(false, `/wall/index/${wallId}`, navigate));\n        dispatch(getWidgetWallData(user?.ownerId, wallId));\n        break;\n\n      case 5:\n        if (feedId?.length < 1) dispatch(toggleAddFeedsSection_D(true));\n        dispatch(getWidgetWallData(user?.ownerId, wallId));\n        navigate(`/wall/index/${wallId}`);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const clickToUpdateState = (data) => (event) => {\n    dispatch(openCreateNewWallPopup(false));\n    const widgetCount =\n      allWalllist && allWalllist.length ? allWalllist.length : 0;\n    if (widgetCount < userData.UserRule.walls || data.rename_status == 1)\n      setModalData(data);\n    else setUpgrade(true);\n  };\n\n  return (\n    <div className=\"created-walls-section mb-4\">\n      <Card className=\"p-0 card-custom card-stretch\">\n        {(allWalllist?.length || loader) ? (\n          <>\n            <Card.Header className=\"p-3\">\n              <div className=\"m-0 d-flex align-items-center justify-content-between card-title h5 w-100\">\n                <h6 className=\"card-label font-weight-bolder m-0 \">\n                  My Walls\n                </h6>\n                {!loader ? (\n                  <div className=\"\">\n                    <Link to={\"/walls\"} className=\"text-secondary font-size-base\">\n                      View All\n                    </Link>\n                  </div>\n                ) : null}\n              </div>\n            </Card.Header>\n\n            <CardBody className=\"p-3\">\n              {loader ? (\n                <WallsSkeleton />\n              ) : (\n                <>\n                  <div className=\"row mb-4 \">\n                    <div className=\"col-sm-8\">\n                      <div className=\"custom-pagination\">\n                        {Object.keys(allWalllist).length &&\n                          allWalllist.map((e, index) => (\n                            <Button variant={`${activeWall == index || Object.keys(allWalllist).length == 1 ? \"primary\" : \"outline-dark\"}`} className={`me-2 mb-sm-0 mb-1 text-ellipsis text-capitalize mx-w-200 ${activeWall == index || Object.keys(allWalllist).length == 1 ? \"h-38\" : \"\"}`} key={index} onClick={() => { handleCategoryClick(index); setactiveWall(index); }}>\n                              {e.name}\n                            </Button>\n                          ))}\n                      </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n                      <div className=\"custom_primary_secondary d-flex justify-content-end\">\n                        <CreateWall modalData={modalData} widgetWallsData={allWalllist} upgrade={upgrade} clickToUpdateState={clickToUpdateState} setUpgrade={setUpgrade} setupdateWall={\"\"} setModalData={setModalData} isCollaboratorRole={JSON.parse(localStorage.getItem(\"isCollaborator\"))} />\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Splide Slider */}\n\n                  <SlideSection\n                    section={1}\n                    totalRecord={allWalllist.length}\n                    splideRef={splideRef}\n                    setactiveWall={setactiveWall}>\n                    {allWalllist.map((e, index) => {\n                      const activewallIndex = activeWall === index\n                      return (\n                        <SplideSlide data-feedList={e.feedList} data-wallId={e.id} className={`splide__slide_walls`} key={index}>\n                          <div key={activeWall + index} className={`created-walls-card h-100 splide__slide-${index}`}>\n                            <div className={`created-walls-card-inner h-100 p-3 ${(activeWall === index || allWalllist.length == 1) ? 'overlay-hide' : ''}`}>\n                              <div className=\"row\">\n                                <div className=\"col-md-6 nevigation-wall\">\n                                  <div className=\"wall_cont_wrap innter_wall_cont_wrap_ cursor-pointer created-walls-card-img p-0\">\n                                    <Button variant=\"\" onClick={() => nevigationRedirect(activewallIndex, e.id, 4, e.feedList)}\n                                      className=\"card card-custom overlay shadow-none overflow-hidden rounded-0\">\n                                      {(activeWall === index || allWalllist.length == 1) ? (\n                                        <>\n                                          <video className=\"tb_post_modal_video w-100 h-100 mx-h-470\" muted autoPlay={true}\n                                            data-type=\"video\" data-load={0} loop playsinline=\"playsinline\" webkit-playsinline\n                                            src={`${baseUrl(`theme-media/theme-video/${e.signageTheme}.mp4?v=45445`)}`}\n                                            style={{ paddingTop: \"-10px\",}}\n                                          ></video>  <img role=\"img\" src={`${baseUrl(`theme-media/theme-thumb/${e.signageTheme}.png`\n                                            )}`} height={260} width={\"100%\"}/>\n                                        </>\n                                      ) : (\n                                        <>\n                                          <HoverVideoPlayer className=\"position-absolute h-100\"\n                                            videoSrc={`${baseUrl(`theme-media/theme-video/${e.signageTheme}.mp4?v=454`)}`} width={391}\n                                            height={300} style={{width: \"100%\", paddingTop: \"-10px\"}}\n                                          /> <img role=\"img\" src={`${baseUrl(`theme-media/theme-thumb/${e.signageTheme}.png`)}`} height={260} width={\"100%\"}/>\n                                        </>\n                                      )}\n                                      <div className=\"overlay-layer\">\n                                        <FontAwesomeIcon type={'solid'} icon={'circle-play'} iconClass={'fs-1 rounded-circle bg-white lh-30px'} />\n                                      </div>\n                                    </Button>\n                                  </div>\n                                </div>\n                                <div className=\"col-md-6\">\n                                  <div className=\"mt-3 d-flex flex-column justify-content-between h-100\">\n                                    <div className=\"wall_section-2\">\n                                      <div className=\"d-flex justify-content-between mb-3\">\n                                        <div className=\"wall-section-title me-3\">\n                                          <Button type=\"submit\" variant=\"\" className=\"p-0 border-0\" onClick={() => (activeWall === index || allWalllist.length == 1) ? nevigationRedirect(activewallIndex, e.id, 4, e.feedList) : {}}>\n                                            <div className=\"text-start\">\n                                              <h5 className=\"mb-2 text-capitalize nevigation-wall\">\n                                                {e.name}\n                                                {e.activeScreen ? (\n                                                  <span className=\"status_active\"></span>\n                                                ) : null}\n                                              </h5>\n                                              <p className=\"text-secondary text-capitalize m-0\">\n                                                {`${e.themeName} : ${e.themeLayout}`}\n                                              </p>\n                                            </div>\n                                          </Button>\n                                        </div>\n                                        <div className=\"\">\n                                          <p className=\"text-secondary font-weight-bold font-size-h6 m-0 d-flex text-nowrap\">\n                                            Posts: {kFormatter(Math.round(e.totalPostCount))}\n                                            {e.difference ? <PercentDifference difference={e.difference} flag={e.flagColor} /> : null}\n                                          </p>\n                                        </div>\n                                      </div>\n                                      {e.feedList &&\n                                        Object.keys(e.feedList).length ? (\n                                        <div className=\"created-walls-network mb-4\">\n                                          <ul className=\"p-0 m-0\">\n                                            {e.feedList.map((fdata, key) => {\n                                              return (\n                                                <li className=\"d-flex align-items-center mb-3\">\n                                                  <NetworkIcon isDashboard={\"me-2 text-center text-white\"} icon={fdata.socialIcon} />\n                                                  {fdata.name.replace(/<i[^>]*>(.*?)<\\/i>/g, '')}\n                                                </li>\n                                              );\n                                            })}\n                                          </ul>\n                                        </div>\n                                      ) : null}\n                                    </div>\n\n                                    <div className=\"d-flex align-items-center justify-content-end mb-3\">\n                                      <div className=\"created-walls-report d-flex align-items-center flex-wrap\">\n                                        <Button variant=\"light\" onClick={() => nevigationRedirect(activewallIndex, e.id, 1)}\n                                        className=\"f-center btn-hover-primary me-2 mb-md-0 mb-2 border-0 text-dark\">\n                                          <FontAwesomeIcon type={'regular'} icon={'check-to-slot'} iconClass={'me-2 fs-5'} />{\" \"} Moderate\n                                        </Button>\n                                        <Button variant=\"light\" onClick={() =>nevigationRedirect(activewallIndex, e.id, 2)}\n                                          className=\"f-center btn-hover-primary text-dark me-2 mb-md-0 mb-2 border-0\">\n                                          <FontAwesomeIcon type={'light'} icon={'chart-simple'} iconClass={'me-2 fs-5'} />{\" \"} Analytics\n                                        </Button>\n                                        <Button variant=\"light\" onClick={() => nevigationRedirect(activewallIndex, e.id, 3)} className=\"f-center btn-hover-primary text-dark me-2 mb-md-0 mb-2 border-0\">\n                                          <FontAwesomeIcon type={'regular'} icon={'display'} iconClass={'me-2 fs-5'} />{\" \"} Display\n                                          </Button>\n\n                                          <Button variant=\"light\" onClick={() => (activeWall === index || allWalllist.length == 1) ? nevigationRedirect(activewallIndex, e.id, 5, e.feedList) : {}} className=\"f-center btn-hover-primary text-dark me-2 mb-md-0 mb-2 border-0\">\n                                            <FontAwesomeIcon type={'regular'} icon={'pen-to-square'} iconClass={'me-2 fs-5'} />{\" \"} Edit\n                                          </Button>\n                                      </div>\n\n                                      <div className=\"card-toolbar ms-2\">\n                                        <Dropdown onClick={() => nevigationRedirect(activewallIndex)} align={\"end\"}>\n                                          <Dropdown.Toggle variant=\"link\" className=\"btn-after-none\">\n                                            <FontAwesomeIcon type={'regular'} icon={'ellipsis-vertical'} iconClass={'fs-5'} />\n                                          </Dropdown.Toggle>\n                                          <Dropdown.Menu\n                                            style={{ width: 175 }}\n                                          >\n                                            <DropdownComponet\n                                              callbackWall={callbackWall}\n                                              props={{\n                                                wallsData: e,\n                                                clickToUpdateState:\n                                                  clickToUpdateState,\n                                              }}\n                                              clickToUpdateState={\n                                                clickToUpdateState\n                                              }\n                                              ownerId={user.ownerId}\n                                              userData={props.userData}\n                                            />\n                                          </Dropdown.Menu>\n                                        </Dropdown>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </SplideSlide>\n                      );\n                    })}\n                  </SlideSection>\n                </>\n              )}\n            </CardBody>\n          </>\n        ) : (\n          <div className=\"col-12\">\n            <div className=\"d-flex justify-content-center w-100\">\n              <Button variant=\"\"\n                onClick={() =>\n                  clickToUpdateState({\n                    modalShow: true,\n                    wall_id: null,\n                    autoUpdate: 1,\n                    callbackWall: 1,\n                  })\n                }\n                className=\"d-flex flex-wrap flex-column align-content-center add_card_button create-new-wall cursor-pointer px-5 w-100\">\n                <CreateWall\n                  firstWall={1}\n                  widgetWallsData={allWalllist}\n                  modalData={modalData}\n                  upgrade={upgrade}\n                  clickToUpdateState={clickToUpdateState}\n                  setUpgrade={setUpgrade}\n                  setupdateWall={\"\"}\n                  setModalData={setModalData}\n                  isCollaboratorRole={JSON.parse(\n                    localStorage.getItem(\"isCollaborator\")\n                  )}\n                />\n              </Button>\n            </div>\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default React.memo(CreatedWalls);"],"names":["PercentDifference","props","diff","Math","abs","difference","_jsx","OverlayTrigger","placement","overlay","Tooltip","children","_jsxs","className","flag","FontAwesomeIcon","type","icon","iconClass","kFormatter","round","React","_ref","setactiveWall","section","totalRecord","splideRef","currentSlide","setCurrentSlide","useState","perPage","setPerPage","useEffect","_splideRef$current","splideInstance","current","splide","options","on","e","go","index","newIndex","manageSlider","_splideRef$current2","arguments","length","undefined","totalList","toggleDisplay","displayStyle","slideWalls","document","getElementsByClassName","i","updateKey","elementNew","getElementById","id","style","display","Ispreview","splideListUl","Isnext","querySelector","transform","createBreakpointSettings","isWall","clones","postCount","autoplay","drag","totalPost","loop","arrows","perPagePost","settings","start","speed","perMove","lazyLoad","interval","autoWidth","gap","pagination","fixedHeight","breakpoints","Splide","ref","hasTrack","SplideTrack","role","Button","variant","disabled","NetworkIcon","_props$icon","_Fragment","includes","replace","isDashboard","Network","Action","WallsSkeleton","map","paddingBottom","CreatedWalls","allWalllist","loader","userData","useSelector","state","wallReducer","authenticated","shallowEqual","useRef","dispatch","useDispatch","navigate","useNavigate","upgrade","setUpgrade","modalData","setModalData","profanity","modalShow","name","url","wall_id","autoUpdate","rename_status","callbackWall","activeWall","user","UserPlan","status","nevigationRedirect","activeIndex","wallId","nevigation","feedId","localStorage","setItem","getWidgetWallData","ownerId","analyticPath","planId","getWallFeeds","displayWindowOpen","toggleAddFeedsSection_D","clickToUpdateState","data","event","openCreateNewWallPopup","UserRule","walls","Card","Header","Link","to","CardBody","Object","keys","onClick","startIndex","CreateWall","widgetWallsData","setupdateWall","isCollaboratorRole","JSON","parse","getItem","SlideSection","activewallIndex","SplideSlide","feedList","muted","autoPlay","playsinline","src","baseUrl","signageTheme","paddingTop","height","width","HoverVideoPlayer","videoSrc","activeScreen","themeName","themeLayout","totalPostCount","flagColor","fdata","key","socialIcon","Dropdown","align","Toggle","Menu","DropdownComponet","wallsData","firstWall"],"sourceRoot":""}