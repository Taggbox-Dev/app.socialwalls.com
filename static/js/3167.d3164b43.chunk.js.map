{"version":3,"file":"static/js/3167.d3164b43.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/skeleton/trueSenseSkeleton.js","app/Display/analytics-new/content/components/trueSense.js","app/Display/analytics-new/layout/common/filterModeration.js","app/Display/analytics-new/layout/common/sectionHeading.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst List = () => {\r\n  return (\r\n    <div class=\"col-sm-6 col-md-6 col-xxl-12 mb-5\">\r\n      <div class=\"card card-custom card-stretch home-widget-section p-6\">\r\n        <div class=\"sk_loader_\">\r\n          <div class=\"wall_progress\">\r\n            <p class=\"sk_line sk_line_height_10 sk_line_80 mb-7\"></p>\r\n            <h3 class=\"sk_line sk_line_40 sk_line_height_26 mb-5\"></h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TrueSenseSkeleton = () => {\r\n  return (\r\n    <div class=\"row\">\r\n      <List />\r\n      <List />\r\n      <List />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(TrueSenseSkeleton);\r\n","  import React from \"react\";\r\n  import { Card, CardBody } from \"react-bootstrap\";\r\n  import TrueSenseSkeleton from \"../../layout/skeleton/trueSenseSkeleton\";\r\n  import FilterModeration from \"../../layout/common/filterModeration\";\r\n  import SectionHeading from \"../../layout/common/sectionHeading\";\r\nimport { kFormatter } from \"../../../../../utils\";\r\n\r\n  const TrueSense = (props) => {\r\n  const { truSense, loader, dateFilter, selectedWallFeed } = props;\r\n\r\n  return (\r\n    <>\r\n      <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n        <SectionHeading  section={2} icon={'ai'} title={'TruSense Recommendation'} />\r\n        <CardBody className=\"p-5\">\r\n           {loader ? <TrueSenseSkeleton/>\r\n            : truSense && Object.keys(truSense).length\r\n            ? truSense.map((data,key) => { \r\n                return (\r\n                  <FilterModeration dateFilter={dateFilter} selectedWallFeed={selectedWallFeed} link={`recommendation=${data.name}`}>\r\n                    <div className=\"p-6 border rounded\">\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <div className=\"d-flex align-items-start me-2 w-100\">\r\n                          <div className=\"border rounded p-2 me-4\">\r\n                            <span className={`bulits ${key==0 ? 'bg-success' : key==1 ? 'bg-warning' : 'bg-danger' }  d-block rounded-circle`}></span>\r\n                          </div>\r\n                          <div className=\"\">\r\n                            <p className=\"text-dark mb-0 font-weight-boldest overflow-hidden text-nowrap text-ellipsis author_name font-size-lg\">\r\n                              { data.name }\r\n                            </p>\r\n                            <p className=\"text-dark mb-0\">\r\n                              {data.details}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <p className=\"font-weight-boldest text-dark display-6 m-0\">\r\n                          { loader ? 0 :  kFormatter(data.count)}\r\n                        </p>\r\n                      </div>\r\n                   </div>\r\n                 </FilterModeration>  \r\n                );\r\n              })\r\n            : null}\r\n            \r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\n  export default React.memo(TrueSense);\r\n","import moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilterModeration = (props) => {\r\n\r\n  const { children, dateFilter, selectedWallFeed, link, isClass } = props  \r\n\r\n  return (\r\n    <Link className={`${isClass ? isClass : `mb-4 last-child-mb-0 d-block`}`} to={selectedWallFeed.length ? `/moderation/index/${localStorage.getItem('wallId')}?${link}${dateFilter ? `/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}` : ''}${dateFilter ? `/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}` : ``}` : `#`}>\r\n        {children}\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default FilterModeration\r\n","import { Button, CardHeader, CardTitle } from \"react-bootstrap\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst SectionHeading = (props) => {\r\n\r\n  const { title, section, cardTitleCss, icon, iconFull, moreData, total, handlePopup, headingMargin, isDashboard, isTrial } = props\r\n \r\n  return (\r\n    <CardHeader className={`${section==1 ? 'p-0 border-0' : section==2 ? 'p-5' : section==3 ? 'p-0 pb-3' : 'px-5 pt-5 border-0 pb-0'}`}>\r\n      <CardTitle className={cardTitleCss ? cardTitleCss : `mb-0 d-flex align-items-center justify-content-between ${isDashboard ? isDashboard : \"\"}`}>\r\n        <h6 class={`card-label font-weight-bolder ${!headingMargin ? 'm-0' : ''} `}>\r\n         { icon ? <img src={baseUrl(`dashboard/analytic/${icon}.svg`)}  height={\"20px\"} width={\"20px\"} /> : null }\r\n         { iconFull ? <img src={iconFull}  height={\"20px\"} width={\"20px\"} />  : null }   {title}</h6>\r\n         { !isTrial && ((total > 5) || moreData) ? (\r\n          <Button\r\n            variant=\"link\"\r\n            className=\"p-0\"\r\n            onClick={() => handlePopup(true)}\r\n          >\r\n            See More\r\n          </Button>\r\n        ) : null\r\n        }\r\n      </CardTitle>\r\n    </CardHeader>\r\n  );\r\n};\r\n\r\nexport default SectionHeading;\r\n"],"names":["List","_jsx","class","children","_jsxs","TrueSenseSkeleton","React","TrueSense","props","truSense","loader","dateFilter","selectedWallFeed","_Fragment","Card","className","SectionHeading","section","icon","title","CardBody","Object","keys","length","map","data","key","FilterModeration","link","name","details","kFormatter","count","isClass","Link","to","localStorage","getItem","moment","startDate","format","endDate","cardTitleCss","iconFull","moreData","total","handlePopup","headingMargin","isDashboard","isTrial","CardHeader","CardTitle","src","baseUrl","height","width","Button","variant","onClick"],"sourceRoot":""}