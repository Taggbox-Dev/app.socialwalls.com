{"version":3,"file":"static/js/9386.2837bae9.chunk.js","mappings":"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","sources":["app/Display/analytics-new/layout/common/assetsTypeCountChart.js","app/Display/analytics-new/components/content/posttypeCount.js","app/Display/analytics-new/layout/skeleton/imageSkeleton.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { PREPEND_ZERO } from \"../../../../../utils\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nclass AssetsTypeCountChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [1, 1, 1],\r\n      options: {\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        legend: {\r\n          show: false,\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n        },\r\n        colors: [\"#F8B861\", \"#546FED\", \"#EF45B1\"],\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              stroke: 0,\r\n              legend: {\r\n                show: false,\r\n              },\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  label: \"Loading...\",\r\n                  showAlways: true,\r\n                  show: true,\r\n                },\r\n                value: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        chart: {\r\n          type: \"donut\",\r\n          animations: {\r\n            enabled: true,\r\n            easing: \"easeinout\",\r\n            speed: 800,\r\n            animateGradually: {\r\n              enabled: true,\r\n              delay: 2000,\r\n            },\r\n            dynamicAnimation: {\r\n              enabled: true,\r\n              speed: 350,\r\n            },\r\n          },\r\n        },\r\n        labels: [  \"Video\",\"Image\",\"Text\"],\r\n      },\r\n      imagePost: 0,\r\n      videoPost: 0,\r\n      textPost: 0,\r\n      selectedCollection: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onLoadAnalyticGraph();\r\n  }\r\n\r\n  onLoadAnalyticGraph = (data) => {\r\n    const { postTypeCount } = this.props;\r\n\r\n    const postCount = [];\r\n    const responseData = {\r\n      total_assets: {\r\n        video: postTypeCount[0].data[0],\r\n        image: postTypeCount[0].data[1],\r\n        text: postTypeCount[0].data[2],\r\n      },\r\n    };\r\n\r\n\r\n    Object.keys(responseData.total_assets).map((item) => {\r\n      postCount.push(responseData.total_assets[item]);\r\n      this.setState({\r\n        videoPost: responseData.total_assets[\"video\"],\r\n        imagePost: responseData.total_assets[\"image\"],\r\n        textPost: responseData.total_assets[\"text\"],\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      series: postCount,\r\n      options: {\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              labels: {\r\n                show: true,\r\n                total: {\r\n                  label: \"Total Post\",\r\n                  showAlways: true,\r\n                  show: true,\r\n                },\r\n                value: {\r\n                  show: true,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { options, series, imagePost, textPost, videoPost } = this.state;\r\n    const { dateFilter } = this.props\r\n \r\n    return (\r\n      <>\r\n        <ReactApexChart\r\n          options={options}\r\n          series={series}\r\n          type=\"donut\"\r\n          className=\"assetsType w-100 m-auto\"\r\n          style={{ maxWidth: 340 }}\r\n        />\r\n        <div\r\n          className=\"count-box-main d-flex justify-content-center w-100 m-auto mt-4\">\r\n         { imagePost ? \r\n        <Link className=\"count-box-card\" to={`/moderation/index/${localStorage.getItem('wallId')}?media=With Image/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}`}>   \r\n          <div>\r\n            <div\r\n              className=\"count-box blue text-center\"\r\n              style={{ borderTop: \"6px solid #546FED\" }}\r\n            >\r\n              <p className=\"fs-6 fw-bold mb-2 text-dark\">Images</p>\r\n              <span className=\"text-gray-800 fw-bolder text-dark fs-4\">\r\n                {PREPEND_ZERO(imagePost)}\r\n              </span>\r\n            </div>\r\n          </div></Link> : null }\r\n\r\n          { videoPost ?   \r\n         <Link className=\"count-box-card\" to={`/moderation/index/${localStorage.getItem('wallId')}?media=With Video/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}`}> \r\n          <div>\r\n            <div\r\n              className=\"count-box yellow text-center\"\r\n              style={{ borderTop: \"6px solid #F8B861\" }}\r\n            >\r\n              <p className=\"fs-6 fw-bold mb-2 text-dark\">Videos</p>\r\n              <span className=\"text-gray-800 text-dark fw-bolder fs-4\">\r\n                {PREPEND_ZERO(videoPost)}\r\n              </span>\r\n            </div>\r\n          </div></Link> : null }\r\n\r\n        { textPost ?   \r\n         <Link className=\"count-box-card\" to={`/moderation/index/${localStorage.getItem('wallId')}?media=Text Only/${moment(dateFilter.startDate).format(\"YYYY-MM-DD\")}/${moment(dateFilter.endDate).format(\"YYYY-MM-DD\")}`}> \r\n          <div>\r\n            <div\r\n              className=\"count-box pink text-center text-dark\"\r\n              style={{ borderTop: \"6px solid #EF45B1\" }}\r\n            >\r\n              <p className=\"fs-6 fw-bold mb-2\">Texts</p>\r\n              <span className=\"text-gray-800 fw-bolder fs-4 text-dark\">\r\n                {PREPEND_ZERO(textPost)}\r\n              </span>\r\n            </div>\r\n          </div> </Link> : null }\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssetsTypeCountChart;\r\n","  import { Card, CardBody, CardHeader } from \"react-bootstrap\";\r\n  import AssetsTypeCountChart from \"../../layout/common/assetsTypeCountChart\";\r\n  import React from \"react\";\r\n  import ImageSkeleton from \"../../layout/skeleton/imageSkeleton\";\r\n\r\n  const PosttypeCount = (props) => {\r\n    const { postTypeCount, loader } = props;\r\n\r\n    return (\r\n      <Card className=\"sw-card-custom gutter-b card-shadow mb-5\">\r\n        <CardHeader className=\"p-5\">\r\n          <h6 class=\"card-label font-weight-bolder m-0\"> Post Type Count</h6>\r\n        </CardHeader>\r\n        <CardBody className=\"p-5\">\r\n          {loader ? (\r\n            <ImageSkeleton img={\"post-count\"} />\r\n          ) : postTypeCount && Object.keys(postTypeCount).length ? (\r\n            <AssetsTypeCountChart key={loader} {...props} />\r\n          ) : null}\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  export default React.memo(PosttypeCount);\r\n","import React from \"react\";\r\nimport { baseUrl } from \"../../../../../utils\";\r\n\r\nconst ImageSkeleton = (props) => {\r\n  return (\r\n    <div className=\"py-1 text-center\">\r\n      <img className=\"img-fluid\" src={baseUrl(`dashboard/analytic/content-analytis-${props.img}.svg`)} width={\"100%\"} height={\"403px\"}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ImageSkeleton)"],"names":["AssetsTypeCountChart","Component","constructor","props","super","onLoadAnalyticGraph","data","postTypeCount","this","postCount","responseData","total_assets","video","image","text","Object","keys","map","item","push","setState","videoPost","imagePost","textPost","series","options","plotOptions","pie","donut","labels","show","total","label","showAlways","value","state","dataLabels","enabled","legend","stroke","curve","colors","chart","type","animations","easing","speed","animateGradually","delay","dynamicAnimation","selectedCollection","componentDidMount","render","dateFilter","_jsxs","_Fragment","children","_jsx","ReactApexChart","className","style","maxWidth","Link","to","localStorage","getItem","moment","startDate","format","endDate","borderTop","PREPEND_ZERO","PosttypeCount","loader","Card","CardHeader","class","CardBody","ImageSkeleton","img","length","React","src","baseUrl","width","height"],"sourceRoot":""}