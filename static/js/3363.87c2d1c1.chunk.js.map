{"version":3,"file":"static/js/3363.87c2d1c1.chunk.js","mappings":"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","sources":["app/Layouts/Main/Dashboard/components/common/topFilter.js","app/Layouts/Main/Dashboard/components/leaderboardDashboard.js","app/Layouts/Main/Analytics/layout/common/WallList.js"],"sourcesContent":["import moment from \"moment\";\nimport React from \"react\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport { FontAwesomeIcon } from \"../../../../../CommonComponents/AssetsHelper\";\n\nconst TopFilter = (props) => {\n    const { startDate, endDate, filterDashbord } = props;\n\n    return (\n        <div className=\"bookCall-datepicker cursor-pointer\">\n            <DateRangePicker\n                startDate={startDate}\n                endDate={endDate}\n                initialSettings={{\n                    locale: { format: \"DD-MM-YYYY\", separator: \"-\" },\n                    maxDate: moment().endOf(\"month\").format(\"DD-MM-YYYY\"),\n                    showDropdowns: false,\n                    startDate: startDate,\n                    endDate: endDate,\n                    ranges: {\n                        Today: [moment().format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\"),],\n                        Yesterday: [moment().subtract(1, \"days\").format(\"DD-MM-YYYY\"), moment().subtract(1, \"days\").format(\"DD-MM-YYYY\"),],\n                        \"Last 7 Days\": [moment().subtract(6, \"days\").format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\"),],\n                        \"Last 30 Days\": [moment().subtract(30, \"days\").format(\"DD-MM-YYYY\"), moment().format(\"DD-MM-YYYY\"),],\n                        \"Last Month\": [moment().subtract(1, \"month\").startOf(\"month\").format(\"DD-MM-YYYY\"), moment().subtract(1, \"month\").endOf(\"month\").format(\"DD-MM-YYYY\"),],\n                    },\n                }}\n                onCallback={filterDashbord}\n            >\n                <div className=\"d-flex align-items-center dashboard_dataRange dateRange\">\n                    <FontAwesomeIcon type={'regular'} icon={'calendar-week'} iconClass={''} />\n                    <div className=\"d-flex align-items-center db_dateRange ms-2\">\n                        <div className=\"db_date\"> {moment(startDate, \"DD-MM-YYYY\").format(\"ll\")} </div>\n                        <span>-</span>\n                        <div className=\"db_date\"> {moment(endDate, \"DD-MM-YYYY\").format(\"ll\")}{\" \"} </div>\n                        <FontAwesomeIcon type={'solid'} icon={'angle-down'} iconClass={'fs-6 ms-1'} />\n                    </div>\n                </div>\n            </DateRangePicker>\n        </div>\n    );\n};\n\nexport default React.memo(TopFilter);\n","import React, { Suspense, useState } from \"react\";\nimport WallList from \"../../Analytics/layout/common/WallList\";\nimport TopFilter from \"./common/topFilter\";\nimport { Button, Card, CardBody, CardHeader, CardTitle, Table } from \"react-bootstrap\";\n\nconst LeaderBoard = React.lazy(() => import(\"../../Analytics/content/components/leaderBoard\"));\n\nconst LeaderboardDashboard = (props) => {\n  const { loader, leaderBoard, nevigationRedirect, isFeeds } = props;\n  const [showMore, setShowMore] = useState(false)\n  const isgetData = leaderBoard?.data?.length > 0;\n\n  return (\n    <div className={`mb-4 col-lg-${isgetData ? '7' : '7'}`}>\n      <div className=\"home_leaderBoard h-100\">\n        <div className=\"p-0 card-custom  h-90 card h-100\">\n          <CardHeader className=\"px-3 pt-3 border-0 pb-0 w-100 d-flex align-items-center flex-wrap justify-content-between CustomLeaderboardHeader\">\n            <CardTitle>\n              <h6 className=\"card-label font-weight-bolder\">Leaderboard</h6>\n              {leaderBoard?.data?.length > 4 ? <Button variant=\"link\" className=\"p-0 ms-2 d-none\" onClick={() => setShowMore(true)}> See More </Button> : ''}\n            </CardTitle>\n\n            <div className=\"leaderboard-filter d-flex align-items-center flex-wrap\">\n              <WallList {...props} />\n              <div className=\"date-filter ms-2\">\n                <TopFilter {...props} />\n              </div>\n              {leaderBoard?.data?.length > 4 ? <Button variant=\"link\" className=\"p-0 ms-2\" onClick={() => setShowMore(true)}> See More </Button> : ''}\n            </div>\n\n          </CardHeader>\n          {isgetData || loader ?\n            <Suspense fallback={\"\"}>\n              <LeaderBoard isDashboard={1} loader={loader} selectedWallFeed={[]} leaderBoard={leaderBoard} {...props} showMore={showMore} hideShowMore={() => setShowMore(false)} />\n            </Suspense>\n            : isFeeds ? <div className=\"p-10 card-body\">\n              <div className=\"not_connected_err not_connected_err_new flex-center overlay-layer d-flex flex-column flex-center h-100\">\n                <p className=\"text-dark w-70 text-center font-size-h6\">\n                Oops! Couldn't find the content in the given fields. Try changing the date or selecting a different wall.\n                </p>\n              </div>\n            </div> : <div className=\"p-10 card-body\">\n              <div className=\"not_connected_err not_connected_err_new flex-center overlay-layer d-flex flex-column flex-center h-100\">\n                <p className=\"text-dark w-70 text-center font-size-h6\">\n                  Create a feed and discover the most active audience creating content for your event through\n                </p>\n                <div className=\"not_conne_overlay d-flex flex-column flex-center\">\n                  <a onClick={() => nevigationRedirect()} className=\"btn btn-primary\" href=\"#\" > Add Feed </a>\n                </div>\n              </div>\n            </div>}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(LeaderboardDashboard);\n","import React, { useState, useEffect } from 'react';\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport ReactHtmlParser from 'react-html-parser';\nimport { getWallIDs } from '../../../../../../utils';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nconst WallList = ({WallFilterDashbord }) => {\n    const [Walls, setWalls] = useState([]);\n    const [selectedWall, setSelectedWall] = useState([]);\n    const { dashboarddata } = useSelector( (state) => state.dashboardDisplayReducer, shallowEqual );\n\n    const updateWallList = () => {\n        const wallArray = dashboarddata?.allWalllist?.map((wall) => ({ label: ReactHtmlParser(wall?.name), value: wall?.id, feeds:wall?.feedList?.length})) || [];\n        setWalls(wallArray);\n        setSelectedWall(wallArray);\n        changeFeedsFilters(wallArray);\n    };\n\n    useEffect(() => {\n        updateWallList();\n    }, [dashboarddata?.allWalllist]);\n\n    const changeFeedsFilters = (event) => {\n        if (event.length > 0) {\n            const WallIDs = getWallIDs(event);\n            const isFeeds = event.some(value => value.feeds > 0); \n            setSelectedWall(event);\n            WallFilterDashbord(WallIDs, isFeeds);\n        }\n    };\n\n    return (<ReactMultiSelectCheckboxes options={Walls} onChange={changeFeedsFilters} value={selectedWall} classNamePrefix=\"check-feed\" />)\n};\n \n export default WallList"],"names":["TopFilter","props","startDate","endDate","filterDashbord","_jsx","className","children","DateRangePicker","initialSettings","locale","format","separator","maxDate","moment","endOf","showDropdowns","ranges","Today","Yesterday","subtract","startOf","onCallback","_jsxs","FontAwesomeIcon","type","icon","iconClass","React","LeaderBoard","LeaderboardDashboard","_leaderBoard$data","_leaderBoard$data2","_leaderBoard$data3","loader","leaderBoard","nevigationRedirect","isFeeds","showMore","setShowMore","useState","isgetData","data","length","CardHeader","CardTitle","Button","variant","onClick","WallList","Suspense","fallback","isDashboard","selectedWallFeed","hideShowMore","href","_ref","WallFilterDashbord","Walls","setWalls","selectedWall","setSelectedWall","dashboarddata","useSelector","state","dashboardDisplayReducer","shallowEqual","useEffect","updateWallList","_dashboarddata$allWal","wallArray","allWalllist","map","wall","_wall$feedList","label","ReactHtmlParser","name","value","id","feeds","feedList","changeFeedsFilters","event","WallIDs","getWallIDs","some","ReactMultiSelectCheckboxes","options","onChange","classNamePrefix"],"sourceRoot":""}